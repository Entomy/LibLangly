### YamlMime:XRefMap
sorted: true
references:
- uid: Collectathon
  name: Collectathon
  href: api/Collectathon.html
  commentId: N:Collectathon
  fullName: Collectathon
  nameWithType: Collectathon
- uid: Collectathon.Arrays
  name: Collectathon.Arrays
  href: api/Collectathon.Arrays.html
  commentId: N:Collectathon.Arrays
  fullName: Collectathon.Arrays
  nameWithType: Collectathon.Arrays
- uid: Collectathon.Arrays.BoundedArray`1
  name: BoundedArray<TElement>
  href: api/Collectathon.Arrays.BoundedArray-1.html
  commentId: T:Collectathon.Arrays.BoundedArray`1
  name.vb: BoundedArray(Of TElement)
  fullName: Collectathon.Arrays.BoundedArray<TElement>
  fullName.vb: Collectathon.Arrays.BoundedArray(Of TElement)
  nameWithType: BoundedArray<TElement>
  nameWithType.vb: BoundedArray(Of TElement)
- uid: Collectathon.Arrays.BoundedArray`1.#ctor(`0[])
  name: BoundedArray(TElement[])
  href: api/Collectathon.Arrays.BoundedArray-1.html#Collectathon_Arrays_BoundedArray_1__ctor__0___
  commentId: M:Collectathon.Arrays.BoundedArray`1.#ctor(`0[])
  name.vb: BoundedArray(TElement())
  fullName: Collectathon.Arrays.BoundedArray<TElement>.BoundedArray(TElement[])
  fullName.vb: Collectathon.Arrays.BoundedArray(Of TElement).BoundedArray(TElement())
  nameWithType: BoundedArray<TElement>.BoundedArray(TElement[])
  nameWithType.vb: BoundedArray(Of TElement).BoundedArray(TElement())
- uid: Collectathon.Arrays.BoundedArray`1.#ctor(nint)
  name: BoundedArray(nint)
  href: api/Collectathon.Arrays.BoundedArray-1.html#Collectathon_Arrays_BoundedArray_1__ctor_nint_
  commentId: M:Collectathon.Arrays.BoundedArray`1.#ctor(nint)
  fullName: Collectathon.Arrays.BoundedArray<TElement>.BoundedArray(nint)
  fullName.vb: Collectathon.Arrays.BoundedArray(Of TElement).BoundedArray(nint)
  nameWithType: BoundedArray<TElement>.BoundedArray(nint)
  nameWithType.vb: BoundedArray(Of TElement).BoundedArray(nint)
- uid: Collectathon.Arrays.BoundedArray`1.#ctor(nint,Collectathon.Filters)
  name: BoundedArray(nint, Filters)
  href: api/Collectathon.Arrays.BoundedArray-1.html#Collectathon_Arrays_BoundedArray_1__ctor_nint_Collectathon_Filters_
  commentId: M:Collectathon.Arrays.BoundedArray`1.#ctor(nint,Collectathon.Filters)
  fullName: Collectathon.Arrays.BoundedArray<TElement>.BoundedArray(nint, Collectathon.Filters)
  fullName.vb: Collectathon.Arrays.BoundedArray(Of TElement).BoundedArray(nint, Collectathon.Filters)
  nameWithType: BoundedArray<TElement>.BoundedArray(nint, Filters)
  nameWithType.vb: BoundedArray(Of TElement).BoundedArray(nint, Filters)
- uid: Collectathon.Arrays.BoundedArray`1.#ctor*
  name: BoundedArray
  href: api/Collectathon.Arrays.BoundedArray-1.html#Collectathon_Arrays_BoundedArray_1__ctor_
  commentId: Overload:Collectathon.Arrays.BoundedArray`1.#ctor
  isSpec: "True"
  fullName: Collectathon.Arrays.BoundedArray<TElement>.BoundedArray
  fullName.vb: Collectathon.Arrays.BoundedArray(Of TElement).BoundedArray
  nameWithType: BoundedArray<TElement>.BoundedArray
  nameWithType.vb: BoundedArray(Of TElement).BoundedArray
- uid: Collectathon.Arrays.BoundedArray`1.Insert(nint,`0)
  name: Insert(nint, TElement)
  href: api/Collectathon.Arrays.BoundedArray-1.html#Collectathon_Arrays_BoundedArray_1_Insert_nint__0_
  commentId: M:Collectathon.Arrays.BoundedArray`1.Insert(nint,`0)
  fullName: Collectathon.Arrays.BoundedArray<TElement>.Insert(nint, TElement)
  fullName.vb: Collectathon.Arrays.BoundedArray(Of TElement).Insert(nint, TElement)
  nameWithType: BoundedArray<TElement>.Insert(nint, TElement)
  nameWithType.vb: BoundedArray(Of TElement).Insert(nint, TElement)
- uid: Collectathon.Arrays.BoundedArray`1.Insert(nint,System.ReadOnlySpan{`0})
  name: Insert(nint, ReadOnlySpan<TElement>)
  href: api/Collectathon.Arrays.BoundedArray-1.html#Collectathon_Arrays_BoundedArray_1_Insert_nint_System_ReadOnlySpan__0__
  commentId: M:Collectathon.Arrays.BoundedArray`1.Insert(nint,System.ReadOnlySpan{`0})
  name.vb: Insert(nint, ReadOnlySpan(Of TElement))
  fullName: Collectathon.Arrays.BoundedArray<TElement>.Insert(nint, System.ReadOnlySpan<TElement>)
  fullName.vb: Collectathon.Arrays.BoundedArray(Of TElement).Insert(nint, System.ReadOnlySpan(Of TElement))
  nameWithType: BoundedArray<TElement>.Insert(nint, ReadOnlySpan<TElement>)
  nameWithType.vb: BoundedArray(Of TElement).Insert(nint, ReadOnlySpan(Of TElement))
- uid: Collectathon.Arrays.BoundedArray`1.Insert*
  name: Insert
  href: api/Collectathon.Arrays.BoundedArray-1.html#Collectathon_Arrays_BoundedArray_1_Insert_
  commentId: Overload:Collectathon.Arrays.BoundedArray`1.Insert
  isSpec: "True"
  fullName: Collectathon.Arrays.BoundedArray<TElement>.Insert
  fullName.vb: Collectathon.Arrays.BoundedArray(Of TElement).Insert
  nameWithType: BoundedArray<TElement>.Insert
  nameWithType.vb: BoundedArray(Of TElement).Insert
- uid: Collectathon.Arrays.BoundedArray`1.op_Implicit(`0[])~Collectathon.Arrays.BoundedArray{`0}
  name: Implicit(TElement[] to BoundedArray<TElement>)
  href: api/Collectathon.Arrays.BoundedArray-1.html#Collectathon_Arrays_BoundedArray_1_op_Implicit__0____Collectathon_Arrays_BoundedArray__0_
  commentId: M:Collectathon.Arrays.BoundedArray`1.op_Implicit(`0[])~Collectathon.Arrays.BoundedArray{`0}
  name.vb: Widening(TElement() to BoundedArray(Of TElement))
  fullName: Collectathon.Arrays.BoundedArray<TElement>.Implicit(TElement[] to Collectathon.Arrays.BoundedArray<TElement>)
  fullName.vb: Collectathon.Arrays.BoundedArray(Of TElement).Widening(TElement() to Collectathon.Arrays.BoundedArray(Of TElement))
  nameWithType: BoundedArray<TElement>.Implicit(TElement[] to BoundedArray<TElement>)
  nameWithType.vb: BoundedArray(Of TElement).Widening(TElement() to BoundedArray(Of TElement))
- uid: Collectathon.Arrays.BoundedArray`1.op_Implicit*
  name: Implicit
  href: api/Collectathon.Arrays.BoundedArray-1.html#Collectathon_Arrays_BoundedArray_1_op_Implicit_
  commentId: Overload:Collectathon.Arrays.BoundedArray`1.op_Implicit
  isSpec: "True"
  name.vb: Widening
  fullName: Collectathon.Arrays.BoundedArray<TElement>.Implicit
  fullName.vb: Collectathon.Arrays.BoundedArray(Of TElement).Widening
  nameWithType: BoundedArray<TElement>.Implicit
  nameWithType.vb: BoundedArray(Of TElement).Widening
- uid: Collectathon.Arrays.BoundedArray`1.Postpend(`0)
  name: Postpend(TElement)
  href: api/Collectathon.Arrays.BoundedArray-1.html#Collectathon_Arrays_BoundedArray_1_Postpend__0_
  commentId: M:Collectathon.Arrays.BoundedArray`1.Postpend(`0)
  fullName: Collectathon.Arrays.BoundedArray<TElement>.Postpend(TElement)
  fullName.vb: Collectathon.Arrays.BoundedArray(Of TElement).Postpend(TElement)
  nameWithType: BoundedArray<TElement>.Postpend(TElement)
  nameWithType.vb: BoundedArray(Of TElement).Postpend(TElement)
- uid: Collectathon.Arrays.BoundedArray`1.Postpend(System.ReadOnlySpan{`0})
  name: Postpend(ReadOnlySpan<TElement>)
  href: api/Collectathon.Arrays.BoundedArray-1.html#Collectathon_Arrays_BoundedArray_1_Postpend_System_ReadOnlySpan__0__
  commentId: M:Collectathon.Arrays.BoundedArray`1.Postpend(System.ReadOnlySpan{`0})
  name.vb: Postpend(ReadOnlySpan(Of TElement))
  fullName: Collectathon.Arrays.BoundedArray<TElement>.Postpend(System.ReadOnlySpan<TElement>)
  fullName.vb: Collectathon.Arrays.BoundedArray(Of TElement).Postpend(System.ReadOnlySpan(Of TElement))
  nameWithType: BoundedArray<TElement>.Postpend(ReadOnlySpan<TElement>)
  nameWithType.vb: BoundedArray(Of TElement).Postpend(ReadOnlySpan(Of TElement))
- uid: Collectathon.Arrays.BoundedArray`1.Postpend*
  name: Postpend
  href: api/Collectathon.Arrays.BoundedArray-1.html#Collectathon_Arrays_BoundedArray_1_Postpend_
  commentId: Overload:Collectathon.Arrays.BoundedArray`1.Postpend
  isSpec: "True"
  fullName: Collectathon.Arrays.BoundedArray<TElement>.Postpend
  fullName.vb: Collectathon.Arrays.BoundedArray(Of TElement).Postpend
  nameWithType: BoundedArray<TElement>.Postpend
  nameWithType.vb: BoundedArray(Of TElement).Postpend
- uid: Collectathon.Arrays.BoundedArray`1.Prepend(`0)
  name: Prepend(TElement)
  href: api/Collectathon.Arrays.BoundedArray-1.html#Collectathon_Arrays_BoundedArray_1_Prepend__0_
  commentId: M:Collectathon.Arrays.BoundedArray`1.Prepend(`0)
  fullName: Collectathon.Arrays.BoundedArray<TElement>.Prepend(TElement)
  fullName.vb: Collectathon.Arrays.BoundedArray(Of TElement).Prepend(TElement)
  nameWithType: BoundedArray<TElement>.Prepend(TElement)
  nameWithType.vb: BoundedArray(Of TElement).Prepend(TElement)
- uid: Collectathon.Arrays.BoundedArray`1.Prepend(System.ReadOnlySpan{`0})
  name: Prepend(ReadOnlySpan<TElement>)
  href: api/Collectathon.Arrays.BoundedArray-1.html#Collectathon_Arrays_BoundedArray_1_Prepend_System_ReadOnlySpan__0__
  commentId: M:Collectathon.Arrays.BoundedArray`1.Prepend(System.ReadOnlySpan{`0})
  name.vb: Prepend(ReadOnlySpan(Of TElement))
  fullName: Collectathon.Arrays.BoundedArray<TElement>.Prepend(System.ReadOnlySpan<TElement>)
  fullName.vb: Collectathon.Arrays.BoundedArray(Of TElement).Prepend(System.ReadOnlySpan(Of TElement))
  nameWithType: BoundedArray<TElement>.Prepend(ReadOnlySpan<TElement>)
  nameWithType.vb: BoundedArray(Of TElement).Prepend(ReadOnlySpan(Of TElement))
- uid: Collectathon.Arrays.BoundedArray`1.Prepend*
  name: Prepend
  href: api/Collectathon.Arrays.BoundedArray-1.html#Collectathon_Arrays_BoundedArray_1_Prepend_
  commentId: Overload:Collectathon.Arrays.BoundedArray`1.Prepend
  isSpec: "True"
  fullName: Collectathon.Arrays.BoundedArray<TElement>.Prepend
  fullName.vb: Collectathon.Arrays.BoundedArray(Of TElement).Prepend
  nameWithType: BoundedArray<TElement>.Prepend
  nameWithType.vb: BoundedArray(Of TElement).Prepend
- uid: Collectathon.Arrays.BoundedArray`2
  name: BoundedArray<TIndex, TElement>
  href: api/Collectathon.Arrays.BoundedArray-2.html
  commentId: T:Collectathon.Arrays.BoundedArray`2
  name.vb: BoundedArray(Of TIndex, TElement)
  fullName: Collectathon.Arrays.BoundedArray<TIndex, TElement>
  fullName.vb: Collectathon.Arrays.BoundedArray(Of TIndex, TElement)
  nameWithType: BoundedArray<TIndex, TElement>
  nameWithType.vb: BoundedArray(Of TIndex, TElement)
- uid: Collectathon.Arrays.BoundedArray`2.#ctor
  name: BoundedArray()
  href: api/Collectathon.Arrays.BoundedArray-2.html#Collectathon_Arrays_BoundedArray_2__ctor
  commentId: M:Collectathon.Arrays.BoundedArray`2.#ctor
  fullName: Collectathon.Arrays.BoundedArray<TIndex, TElement>.BoundedArray()
  fullName.vb: Collectathon.Arrays.BoundedArray(Of TIndex, TElement).BoundedArray()
  nameWithType: BoundedArray<TIndex, TElement>.BoundedArray()
  nameWithType.vb: BoundedArray(Of TIndex, TElement).BoundedArray()
- uid: Collectathon.Arrays.BoundedArray`2.#ctor(nint)
  name: BoundedArray(nint)
  href: api/Collectathon.Arrays.BoundedArray-2.html#Collectathon_Arrays_BoundedArray_2__ctor_nint_
  commentId: M:Collectathon.Arrays.BoundedArray`2.#ctor(nint)
  fullName: Collectathon.Arrays.BoundedArray<TIndex, TElement>.BoundedArray(nint)
  fullName.vb: Collectathon.Arrays.BoundedArray(Of TIndex, TElement).BoundedArray(nint)
  nameWithType: BoundedArray<TIndex, TElement>.BoundedArray(nint)
  nameWithType.vb: BoundedArray(Of TIndex, TElement).BoundedArray(nint)
- uid: Collectathon.Arrays.BoundedArray`2.#ctor(System.ValueTuple{`0,`1}[])
  name: BoundedArray((TIndex, TElement)[])
  href: api/Collectathon.Arrays.BoundedArray-2.html#Collectathon_Arrays_BoundedArray_2__ctor_System_ValueTuple__0__1____
  commentId: M:Collectathon.Arrays.BoundedArray`2.#ctor(System.ValueTuple{`0,`1}[])
  name.vb: BoundedArray((TIndex, TElement)())
  fullName: Collectathon.Arrays.BoundedArray<TIndex, TElement>.BoundedArray(System.ValueTuple<TIndex, TElement>[])
  fullName.vb: Collectathon.Arrays.BoundedArray(Of TIndex, TElement).BoundedArray(System.ValueTuple(Of TIndex, TElement)())
  nameWithType: BoundedArray<TIndex, TElement>.BoundedArray((TIndex, TElement)[])
  nameWithType.vb: BoundedArray(Of TIndex, TElement).BoundedArray((TIndex, TElement)())
- uid: Collectathon.Arrays.BoundedArray`2.#ctor*
  name: BoundedArray
  href: api/Collectathon.Arrays.BoundedArray-2.html#Collectathon_Arrays_BoundedArray_2__ctor_
  commentId: Overload:Collectathon.Arrays.BoundedArray`2.#ctor
  isSpec: "True"
  fullName: Collectathon.Arrays.BoundedArray<TIndex, TElement>.BoundedArray
  fullName.vb: Collectathon.Arrays.BoundedArray(Of TIndex, TElement).BoundedArray
  nameWithType: BoundedArray<TIndex, TElement>.BoundedArray
  nameWithType.vb: BoundedArray(Of TIndex, TElement).BoundedArray
- uid: Collectathon.Arrays.BoundedArray`2.Add(`0,`1)
  name: Add(TIndex, TElement)
  href: api/Collectathon.Arrays.BoundedArray-2.html#Collectathon_Arrays_BoundedArray_2_Add__0__1_
  commentId: M:Collectathon.Arrays.BoundedArray`2.Add(`0,`1)
  fullName: Collectathon.Arrays.BoundedArray<TIndex, TElement>.Add(TIndex, TElement)
  fullName.vb: Collectathon.Arrays.BoundedArray(Of TIndex, TElement).Add(TIndex, TElement)
  nameWithType: BoundedArray<TIndex, TElement>.Add(TIndex, TElement)
  nameWithType.vb: BoundedArray(Of TIndex, TElement).Add(TIndex, TElement)
- uid: Collectathon.Arrays.BoundedArray`2.Add*
  name: Add
  href: api/Collectathon.Arrays.BoundedArray-2.html#Collectathon_Arrays_BoundedArray_2_Add_
  commentId: Overload:Collectathon.Arrays.BoundedArray`2.Add
  isSpec: "True"
  fullName: Collectathon.Arrays.BoundedArray<TIndex, TElement>.Add
  fullName.vb: Collectathon.Arrays.BoundedArray(Of TIndex, TElement).Add
  nameWithType: BoundedArray<TIndex, TElement>.Add
  nameWithType.vb: BoundedArray(Of TIndex, TElement).Add
- uid: Collectathon.Arrays.BoundedArray`2.op_Implicit(System.ValueTuple{`0,`1}[])~Collectathon.Arrays.BoundedArray{`0,`1}
  name: Implicit((TIndex, TElement)[] to BoundedArray<TIndex, TElement>)
  href: api/Collectathon.Arrays.BoundedArray-2.html#Collectathon_Arrays_BoundedArray_2_op_Implicit_System_ValueTuple__0__1_____Collectathon_Arrays_BoundedArray__0__1_
  commentId: M:Collectathon.Arrays.BoundedArray`2.op_Implicit(System.ValueTuple{`0,`1}[])~Collectathon.Arrays.BoundedArray{`0,`1}
  name.vb: Widening((TIndex, TElement)() to BoundedArray(Of TIndex, TElement))
  fullName: Collectathon.Arrays.BoundedArray<TIndex, TElement>.Implicit(System.ValueTuple<TIndex, TElement>[] to Collectathon.Arrays.BoundedArray<TIndex, TElement>)
  fullName.vb: Collectathon.Arrays.BoundedArray(Of TIndex, TElement).Widening(System.ValueTuple(Of TIndex, TElement)() to Collectathon.Arrays.BoundedArray(Of TIndex, TElement))
  nameWithType: BoundedArray<TIndex, TElement>.Implicit((TIndex, TElement)[] to BoundedArray<TIndex, TElement>)
  nameWithType.vb: BoundedArray(Of TIndex, TElement).Widening((TIndex, TElement)() to BoundedArray(Of TIndex, TElement))
- uid: Collectathon.Arrays.BoundedArray`2.op_Implicit*
  name: Implicit
  href: api/Collectathon.Arrays.BoundedArray-2.html#Collectathon_Arrays_BoundedArray_2_op_Implicit_
  commentId: Overload:Collectathon.Arrays.BoundedArray`2.op_Implicit
  isSpec: "True"
  name.vb: Widening
  fullName: Collectathon.Arrays.BoundedArray<TIndex, TElement>.Implicit
  fullName.vb: Collectathon.Arrays.BoundedArray(Of TIndex, TElement).Widening
  nameWithType: BoundedArray<TIndex, TElement>.Implicit
  nameWithType.vb: BoundedArray(Of TIndex, TElement).Widening
- uid: Collectathon.Arrays.DynamicArray`1
  name: DynamicArray<TElement>
  href: api/Collectathon.Arrays.DynamicArray-1.html
  commentId: T:Collectathon.Arrays.DynamicArray`1
  name.vb: DynamicArray(Of TElement)
  fullName: Collectathon.Arrays.DynamicArray<TElement>
  fullName.vb: Collectathon.Arrays.DynamicArray(Of TElement)
  nameWithType: DynamicArray<TElement>
  nameWithType.vb: DynamicArray(Of TElement)
- uid: Collectathon.Arrays.DynamicArray`1.#ctor
  name: DynamicArray()
  href: api/Collectathon.Arrays.DynamicArray-1.html#Collectathon_Arrays_DynamicArray_1__ctor
  commentId: M:Collectathon.Arrays.DynamicArray`1.#ctor
  fullName: Collectathon.Arrays.DynamicArray<TElement>.DynamicArray()
  fullName.vb: Collectathon.Arrays.DynamicArray(Of TElement).DynamicArray()
  nameWithType: DynamicArray<TElement>.DynamicArray()
  nameWithType.vb: DynamicArray(Of TElement).DynamicArray()
- uid: Collectathon.Arrays.DynamicArray`1.#ctor(`0[])
  name: DynamicArray(TElement[])
  href: api/Collectathon.Arrays.DynamicArray-1.html#Collectathon_Arrays_DynamicArray_1__ctor__0___
  commentId: M:Collectathon.Arrays.DynamicArray`1.#ctor(`0[])
  name.vb: DynamicArray(TElement())
  fullName: Collectathon.Arrays.DynamicArray<TElement>.DynamicArray(TElement[])
  fullName.vb: Collectathon.Arrays.DynamicArray(Of TElement).DynamicArray(TElement())
  nameWithType: DynamicArray<TElement>.DynamicArray(TElement[])
  nameWithType.vb: DynamicArray(Of TElement).DynamicArray(TElement())
- uid: Collectathon.Arrays.DynamicArray`1.#ctor(nint)
  name: DynamicArray(nint)
  href: api/Collectathon.Arrays.DynamicArray-1.html#Collectathon_Arrays_DynamicArray_1__ctor_nint_
  commentId: M:Collectathon.Arrays.DynamicArray`1.#ctor(nint)
  fullName: Collectathon.Arrays.DynamicArray<TElement>.DynamicArray(nint)
  fullName.vb: Collectathon.Arrays.DynamicArray(Of TElement).DynamicArray(nint)
  nameWithType: DynamicArray<TElement>.DynamicArray(nint)
  nameWithType.vb: DynamicArray(Of TElement).DynamicArray(nint)
- uid: Collectathon.Arrays.DynamicArray`1.#ctor(nint,Collectathon.Filters)
  name: DynamicArray(nint, Filters)
  href: api/Collectathon.Arrays.DynamicArray-1.html#Collectathon_Arrays_DynamicArray_1__ctor_nint_Collectathon_Filters_
  commentId: M:Collectathon.Arrays.DynamicArray`1.#ctor(nint,Collectathon.Filters)
  fullName: Collectathon.Arrays.DynamicArray<TElement>.DynamicArray(nint, Collectathon.Filters)
  fullName.vb: Collectathon.Arrays.DynamicArray(Of TElement).DynamicArray(nint, Collectathon.Filters)
  nameWithType: DynamicArray<TElement>.DynamicArray(nint, Filters)
  nameWithType.vb: DynamicArray(Of TElement).DynamicArray(nint, Filters)
- uid: Collectathon.Arrays.DynamicArray`1.#ctor*
  name: DynamicArray
  href: api/Collectathon.Arrays.DynamicArray-1.html#Collectathon_Arrays_DynamicArray_1__ctor_
  commentId: Overload:Collectathon.Arrays.DynamicArray`1.#ctor
  isSpec: "True"
  fullName: Collectathon.Arrays.DynamicArray<TElement>.DynamicArray
  fullName.vb: Collectathon.Arrays.DynamicArray(Of TElement).DynamicArray
  nameWithType: DynamicArray<TElement>.DynamicArray
  nameWithType.vb: DynamicArray(Of TElement).DynamicArray
- uid: Collectathon.Arrays.DynamicArray`1.Capacity
  name: Capacity
  href: api/Collectathon.Arrays.DynamicArray-1.html#Collectathon_Arrays_DynamicArray_1_Capacity
  commentId: P:Collectathon.Arrays.DynamicArray`1.Capacity
  fullName: Collectathon.Arrays.DynamicArray<TElement>.Capacity
  fullName.vb: Collectathon.Arrays.DynamicArray(Of TElement).Capacity
  nameWithType: DynamicArray<TElement>.Capacity
  nameWithType.vb: DynamicArray(Of TElement).Capacity
- uid: Collectathon.Arrays.DynamicArray`1.Capacity*
  name: Capacity
  href: api/Collectathon.Arrays.DynamicArray-1.html#Collectathon_Arrays_DynamicArray_1_Capacity_
  commentId: Overload:Collectathon.Arrays.DynamicArray`1.Capacity
  isSpec: "True"
  fullName: Collectathon.Arrays.DynamicArray<TElement>.Capacity
  fullName.vb: Collectathon.Arrays.DynamicArray(Of TElement).Capacity
  nameWithType: DynamicArray<TElement>.Capacity
  nameWithType.vb: DynamicArray(Of TElement).Capacity
- uid: Collectathon.Arrays.DynamicArray`1.Insert(nint,`0)
  name: Insert(nint, TElement)
  href: api/Collectathon.Arrays.DynamicArray-1.html#Collectathon_Arrays_DynamicArray_1_Insert_nint__0_
  commentId: M:Collectathon.Arrays.DynamicArray`1.Insert(nint,`0)
  fullName: Collectathon.Arrays.DynamicArray<TElement>.Insert(nint, TElement)
  fullName.vb: Collectathon.Arrays.DynamicArray(Of TElement).Insert(nint, TElement)
  nameWithType: DynamicArray<TElement>.Insert(nint, TElement)
  nameWithType.vb: DynamicArray(Of TElement).Insert(nint, TElement)
- uid: Collectathon.Arrays.DynamicArray`1.Insert(nint,System.ReadOnlySpan{`0})
  name: Insert(nint, ReadOnlySpan<TElement>)
  href: api/Collectathon.Arrays.DynamicArray-1.html#Collectathon_Arrays_DynamicArray_1_Insert_nint_System_ReadOnlySpan__0__
  commentId: M:Collectathon.Arrays.DynamicArray`1.Insert(nint,System.ReadOnlySpan{`0})
  name.vb: Insert(nint, ReadOnlySpan(Of TElement))
  fullName: Collectathon.Arrays.DynamicArray<TElement>.Insert(nint, System.ReadOnlySpan<TElement>)
  fullName.vb: Collectathon.Arrays.DynamicArray(Of TElement).Insert(nint, System.ReadOnlySpan(Of TElement))
  nameWithType: DynamicArray<TElement>.Insert(nint, ReadOnlySpan<TElement>)
  nameWithType.vb: DynamicArray(Of TElement).Insert(nint, ReadOnlySpan(Of TElement))
- uid: Collectathon.Arrays.DynamicArray`1.Insert*
  name: Insert
  href: api/Collectathon.Arrays.DynamicArray-1.html#Collectathon_Arrays_DynamicArray_1_Insert_
  commentId: Overload:Collectathon.Arrays.DynamicArray`1.Insert
  isSpec: "True"
  fullName: Collectathon.Arrays.DynamicArray<TElement>.Insert
  fullName.vb: Collectathon.Arrays.DynamicArray(Of TElement).Insert
  nameWithType: DynamicArray<TElement>.Insert
  nameWithType.vb: DynamicArray(Of TElement).Insert
- uid: Collectathon.Arrays.DynamicArray`1.op_Implicit(`0[])~Collectathon.Arrays.DynamicArray{`0}
  name: Implicit(TElement[] to DynamicArray<TElement>)
  href: api/Collectathon.Arrays.DynamicArray-1.html#Collectathon_Arrays_DynamicArray_1_op_Implicit__0____Collectathon_Arrays_DynamicArray__0_
  commentId: M:Collectathon.Arrays.DynamicArray`1.op_Implicit(`0[])~Collectathon.Arrays.DynamicArray{`0}
  name.vb: Widening(TElement() to DynamicArray(Of TElement))
  fullName: Collectathon.Arrays.DynamicArray<TElement>.Implicit(TElement[] to Collectathon.Arrays.DynamicArray<TElement>)
  fullName.vb: Collectathon.Arrays.DynamicArray(Of TElement).Widening(TElement() to Collectathon.Arrays.DynamicArray(Of TElement))
  nameWithType: DynamicArray<TElement>.Implicit(TElement[] to DynamicArray<TElement>)
  nameWithType.vb: DynamicArray(Of TElement).Widening(TElement() to DynamicArray(Of TElement))
- uid: Collectathon.Arrays.DynamicArray`1.op_Implicit*
  name: Implicit
  href: api/Collectathon.Arrays.DynamicArray-1.html#Collectathon_Arrays_DynamicArray_1_op_Implicit_
  commentId: Overload:Collectathon.Arrays.DynamicArray`1.op_Implicit
  isSpec: "True"
  name.vb: Widening
  fullName: Collectathon.Arrays.DynamicArray<TElement>.Implicit
  fullName.vb: Collectathon.Arrays.DynamicArray(Of TElement).Widening
  nameWithType: DynamicArray<TElement>.Implicit
  nameWithType.vb: DynamicArray(Of TElement).Widening
- uid: Collectathon.Arrays.DynamicArray`1.Postpend(`0)
  name: Postpend(TElement)
  href: api/Collectathon.Arrays.DynamicArray-1.html#Collectathon_Arrays_DynamicArray_1_Postpend__0_
  commentId: M:Collectathon.Arrays.DynamicArray`1.Postpend(`0)
  fullName: Collectathon.Arrays.DynamicArray<TElement>.Postpend(TElement)
  fullName.vb: Collectathon.Arrays.DynamicArray(Of TElement).Postpend(TElement)
  nameWithType: DynamicArray<TElement>.Postpend(TElement)
  nameWithType.vb: DynamicArray(Of TElement).Postpend(TElement)
- uid: Collectathon.Arrays.DynamicArray`1.Postpend(System.ReadOnlySpan{`0})
  name: Postpend(ReadOnlySpan<TElement>)
  href: api/Collectathon.Arrays.DynamicArray-1.html#Collectathon_Arrays_DynamicArray_1_Postpend_System_ReadOnlySpan__0__
  commentId: M:Collectathon.Arrays.DynamicArray`1.Postpend(System.ReadOnlySpan{`0})
  name.vb: Postpend(ReadOnlySpan(Of TElement))
  fullName: Collectathon.Arrays.DynamicArray<TElement>.Postpend(System.ReadOnlySpan<TElement>)
  fullName.vb: Collectathon.Arrays.DynamicArray(Of TElement).Postpend(System.ReadOnlySpan(Of TElement))
  nameWithType: DynamicArray<TElement>.Postpend(ReadOnlySpan<TElement>)
  nameWithType.vb: DynamicArray(Of TElement).Postpend(ReadOnlySpan(Of TElement))
- uid: Collectathon.Arrays.DynamicArray`1.Postpend*
  name: Postpend
  href: api/Collectathon.Arrays.DynamicArray-1.html#Collectathon_Arrays_DynamicArray_1_Postpend_
  commentId: Overload:Collectathon.Arrays.DynamicArray`1.Postpend
  isSpec: "True"
  fullName: Collectathon.Arrays.DynamicArray<TElement>.Postpend
  fullName.vb: Collectathon.Arrays.DynamicArray(Of TElement).Postpend
  nameWithType: DynamicArray<TElement>.Postpend
  nameWithType.vb: DynamicArray(Of TElement).Postpend
- uid: Collectathon.Arrays.DynamicArray`1.Prepend(`0)
  name: Prepend(TElement)
  href: api/Collectathon.Arrays.DynamicArray-1.html#Collectathon_Arrays_DynamicArray_1_Prepend__0_
  commentId: M:Collectathon.Arrays.DynamicArray`1.Prepend(`0)
  fullName: Collectathon.Arrays.DynamicArray<TElement>.Prepend(TElement)
  fullName.vb: Collectathon.Arrays.DynamicArray(Of TElement).Prepend(TElement)
  nameWithType: DynamicArray<TElement>.Prepend(TElement)
  nameWithType.vb: DynamicArray(Of TElement).Prepend(TElement)
- uid: Collectathon.Arrays.DynamicArray`1.Prepend(System.ReadOnlySpan{`0})
  name: Prepend(ReadOnlySpan<TElement>)
  href: api/Collectathon.Arrays.DynamicArray-1.html#Collectathon_Arrays_DynamicArray_1_Prepend_System_ReadOnlySpan__0__
  commentId: M:Collectathon.Arrays.DynamicArray`1.Prepend(System.ReadOnlySpan{`0})
  name.vb: Prepend(ReadOnlySpan(Of TElement))
  fullName: Collectathon.Arrays.DynamicArray<TElement>.Prepend(System.ReadOnlySpan<TElement>)
  fullName.vb: Collectathon.Arrays.DynamicArray(Of TElement).Prepend(System.ReadOnlySpan(Of TElement))
  nameWithType: DynamicArray<TElement>.Prepend(ReadOnlySpan<TElement>)
  nameWithType.vb: DynamicArray(Of TElement).Prepend(ReadOnlySpan(Of TElement))
- uid: Collectathon.Arrays.DynamicArray`1.Prepend*
  name: Prepend
  href: api/Collectathon.Arrays.DynamicArray-1.html#Collectathon_Arrays_DynamicArray_1_Prepend_
  commentId: Overload:Collectathon.Arrays.DynamicArray`1.Prepend
  isSpec: "True"
  fullName: Collectathon.Arrays.DynamicArray<TElement>.Prepend
  fullName.vb: Collectathon.Arrays.DynamicArray(Of TElement).Prepend
  nameWithType: DynamicArray<TElement>.Prepend
  nameWithType.vb: DynamicArray(Of TElement).Prepend
- uid: Collectathon.Arrays.DynamicArray`1.Resize(nint)
  name: Resize(nint)
  href: api/Collectathon.Arrays.DynamicArray-1.html#Collectathon_Arrays_DynamicArray_1_Resize_nint_
  commentId: M:Collectathon.Arrays.DynamicArray`1.Resize(nint)
  fullName: Collectathon.Arrays.DynamicArray<TElement>.Resize(nint)
  fullName.vb: Collectathon.Arrays.DynamicArray(Of TElement).Resize(nint)
  nameWithType: DynamicArray<TElement>.Resize(nint)
  nameWithType.vb: DynamicArray(Of TElement).Resize(nint)
- uid: Collectathon.Arrays.DynamicArray`1.Resize*
  name: Resize
  href: api/Collectathon.Arrays.DynamicArray-1.html#Collectathon_Arrays_DynamicArray_1_Resize_
  commentId: Overload:Collectathon.Arrays.DynamicArray`1.Resize
  isSpec: "True"
  fullName: Collectathon.Arrays.DynamicArray<TElement>.Resize
  fullName.vb: Collectathon.Arrays.DynamicArray(Of TElement).Resize
  nameWithType: DynamicArray<TElement>.Resize
  nameWithType.vb: DynamicArray(Of TElement).Resize
- uid: Collectathon.Arrays.DynamicArray`2
  name: DynamicArray<TIndex, TElement>
  href: api/Collectathon.Arrays.DynamicArray-2.html
  commentId: T:Collectathon.Arrays.DynamicArray`2
  name.vb: DynamicArray(Of TIndex, TElement)
  fullName: Collectathon.Arrays.DynamicArray<TIndex, TElement>
  fullName.vb: Collectathon.Arrays.DynamicArray(Of TIndex, TElement)
  nameWithType: DynamicArray<TIndex, TElement>
  nameWithType.vb: DynamicArray(Of TIndex, TElement)
- uid: Collectathon.Arrays.DynamicArray`2.#ctor
  name: DynamicArray()
  href: api/Collectathon.Arrays.DynamicArray-2.html#Collectathon_Arrays_DynamicArray_2__ctor
  commentId: M:Collectathon.Arrays.DynamicArray`2.#ctor
  fullName: Collectathon.Arrays.DynamicArray<TIndex, TElement>.DynamicArray()
  fullName.vb: Collectathon.Arrays.DynamicArray(Of TIndex, TElement).DynamicArray()
  nameWithType: DynamicArray<TIndex, TElement>.DynamicArray()
  nameWithType.vb: DynamicArray(Of TIndex, TElement).DynamicArray()
- uid: Collectathon.Arrays.DynamicArray`2.#ctor(nint)
  name: DynamicArray(nint)
  href: api/Collectathon.Arrays.DynamicArray-2.html#Collectathon_Arrays_DynamicArray_2__ctor_nint_
  commentId: M:Collectathon.Arrays.DynamicArray`2.#ctor(nint)
  fullName: Collectathon.Arrays.DynamicArray<TIndex, TElement>.DynamicArray(nint)
  fullName.vb: Collectathon.Arrays.DynamicArray(Of TIndex, TElement).DynamicArray(nint)
  nameWithType: DynamicArray<TIndex, TElement>.DynamicArray(nint)
  nameWithType.vb: DynamicArray(Of TIndex, TElement).DynamicArray(nint)
- uid: Collectathon.Arrays.DynamicArray`2.#ctor(System.ValueTuple{`0,`1}[])
  name: DynamicArray((TIndex, TElement)[])
  href: api/Collectathon.Arrays.DynamicArray-2.html#Collectathon_Arrays_DynamicArray_2__ctor_System_ValueTuple__0__1____
  commentId: M:Collectathon.Arrays.DynamicArray`2.#ctor(System.ValueTuple{`0,`1}[])
  name.vb: DynamicArray((TIndex, TElement)())
  fullName: Collectathon.Arrays.DynamicArray<TIndex, TElement>.DynamicArray(System.ValueTuple<TIndex, TElement>[])
  fullName.vb: Collectathon.Arrays.DynamicArray(Of TIndex, TElement).DynamicArray(System.ValueTuple(Of TIndex, TElement)())
  nameWithType: DynamicArray<TIndex, TElement>.DynamicArray((TIndex, TElement)[])
  nameWithType.vb: DynamicArray(Of TIndex, TElement).DynamicArray((TIndex, TElement)())
- uid: Collectathon.Arrays.DynamicArray`2.#ctor*
  name: DynamicArray
  href: api/Collectathon.Arrays.DynamicArray-2.html#Collectathon_Arrays_DynamicArray_2__ctor_
  commentId: Overload:Collectathon.Arrays.DynamicArray`2.#ctor
  isSpec: "True"
  fullName: Collectathon.Arrays.DynamicArray<TIndex, TElement>.DynamicArray
  fullName.vb: Collectathon.Arrays.DynamicArray(Of TIndex, TElement).DynamicArray
  nameWithType: DynamicArray<TIndex, TElement>.DynamicArray
  nameWithType.vb: DynamicArray(Of TIndex, TElement).DynamicArray
- uid: Collectathon.Arrays.DynamicArray`2.Add(`0,`1)
  name: Add(TIndex, TElement)
  href: api/Collectathon.Arrays.DynamicArray-2.html#Collectathon_Arrays_DynamicArray_2_Add__0__1_
  commentId: M:Collectathon.Arrays.DynamicArray`2.Add(`0,`1)
  fullName: Collectathon.Arrays.DynamicArray<TIndex, TElement>.Add(TIndex, TElement)
  fullName.vb: Collectathon.Arrays.DynamicArray(Of TIndex, TElement).Add(TIndex, TElement)
  nameWithType: DynamicArray<TIndex, TElement>.Add(TIndex, TElement)
  nameWithType.vb: DynamicArray(Of TIndex, TElement).Add(TIndex, TElement)
- uid: Collectathon.Arrays.DynamicArray`2.Add*
  name: Add
  href: api/Collectathon.Arrays.DynamicArray-2.html#Collectathon_Arrays_DynamicArray_2_Add_
  commentId: Overload:Collectathon.Arrays.DynamicArray`2.Add
  isSpec: "True"
  fullName: Collectathon.Arrays.DynamicArray<TIndex, TElement>.Add
  fullName.vb: Collectathon.Arrays.DynamicArray(Of TIndex, TElement).Add
  nameWithType: DynamicArray<TIndex, TElement>.Add
  nameWithType.vb: DynamicArray(Of TIndex, TElement).Add
- uid: Collectathon.Arrays.DynamicArray`2.Capacity
  name: Capacity
  href: api/Collectathon.Arrays.DynamicArray-2.html#Collectathon_Arrays_DynamicArray_2_Capacity
  commentId: P:Collectathon.Arrays.DynamicArray`2.Capacity
  fullName: Collectathon.Arrays.DynamicArray<TIndex, TElement>.Capacity
  fullName.vb: Collectathon.Arrays.DynamicArray(Of TIndex, TElement).Capacity
  nameWithType: DynamicArray<TIndex, TElement>.Capacity
  nameWithType.vb: DynamicArray(Of TIndex, TElement).Capacity
- uid: Collectathon.Arrays.DynamicArray`2.Capacity*
  name: Capacity
  href: api/Collectathon.Arrays.DynamicArray-2.html#Collectathon_Arrays_DynamicArray_2_Capacity_
  commentId: Overload:Collectathon.Arrays.DynamicArray`2.Capacity
  isSpec: "True"
  fullName: Collectathon.Arrays.DynamicArray<TIndex, TElement>.Capacity
  fullName.vb: Collectathon.Arrays.DynamicArray(Of TIndex, TElement).Capacity
  nameWithType: DynamicArray<TIndex, TElement>.Capacity
  nameWithType.vb: DynamicArray(Of TIndex, TElement).Capacity
- uid: Collectathon.Arrays.DynamicArray`2.op_Implicit(System.ValueTuple{`0,`1}[])~Collectathon.Arrays.DynamicArray{`0,`1}
  name: Implicit((TIndex, TElement)[] to DynamicArray<TIndex, TElement>)
  href: api/Collectathon.Arrays.DynamicArray-2.html#Collectathon_Arrays_DynamicArray_2_op_Implicit_System_ValueTuple__0__1_____Collectathon_Arrays_DynamicArray__0__1_
  commentId: M:Collectathon.Arrays.DynamicArray`2.op_Implicit(System.ValueTuple{`0,`1}[])~Collectathon.Arrays.DynamicArray{`0,`1}
  name.vb: Widening((TIndex, TElement)() to DynamicArray(Of TIndex, TElement))
  fullName: Collectathon.Arrays.DynamicArray<TIndex, TElement>.Implicit(System.ValueTuple<TIndex, TElement>[] to Collectathon.Arrays.DynamicArray<TIndex, TElement>)
  fullName.vb: Collectathon.Arrays.DynamicArray(Of TIndex, TElement).Widening(System.ValueTuple(Of TIndex, TElement)() to Collectathon.Arrays.DynamicArray(Of TIndex, TElement))
  nameWithType: DynamicArray<TIndex, TElement>.Implicit((TIndex, TElement)[] to DynamicArray<TIndex, TElement>)
  nameWithType.vb: DynamicArray(Of TIndex, TElement).Widening((TIndex, TElement)() to DynamicArray(Of TIndex, TElement))
- uid: Collectathon.Arrays.DynamicArray`2.op_Implicit*
  name: Implicit
  href: api/Collectathon.Arrays.DynamicArray-2.html#Collectathon_Arrays_DynamicArray_2_op_Implicit_
  commentId: Overload:Collectathon.Arrays.DynamicArray`2.op_Implicit
  isSpec: "True"
  name.vb: Widening
  fullName: Collectathon.Arrays.DynamicArray<TIndex, TElement>.Implicit
  fullName.vb: Collectathon.Arrays.DynamicArray(Of TIndex, TElement).Widening
  nameWithType: DynamicArray<TIndex, TElement>.Implicit
  nameWithType.vb: DynamicArray(Of TIndex, TElement).Widening
- uid: Collectathon.Arrays.DynamicArray`2.Resize(nint)
  name: Resize(nint)
  href: api/Collectathon.Arrays.DynamicArray-2.html#Collectathon_Arrays_DynamicArray_2_Resize_nint_
  commentId: M:Collectathon.Arrays.DynamicArray`2.Resize(nint)
  fullName: Collectathon.Arrays.DynamicArray<TIndex, TElement>.Resize(nint)
  fullName.vb: Collectathon.Arrays.DynamicArray(Of TIndex, TElement).Resize(nint)
  nameWithType: DynamicArray<TIndex, TElement>.Resize(nint)
  nameWithType.vb: DynamicArray(Of TIndex, TElement).Resize(nint)
- uid: Collectathon.Arrays.DynamicArray`2.Resize*
  name: Resize
  href: api/Collectathon.Arrays.DynamicArray-2.html#Collectathon_Arrays_DynamicArray_2_Resize_
  commentId: Overload:Collectathon.Arrays.DynamicArray`2.Resize
  isSpec: "True"
  fullName: Collectathon.Arrays.DynamicArray<TIndex, TElement>.Resize
  fullName.vb: Collectathon.Arrays.DynamicArray(Of TIndex, TElement).Resize
  nameWithType: DynamicArray<TIndex, TElement>.Resize
  nameWithType.vb: DynamicArray(Of TIndex, TElement).Resize
- uid: Collectathon.Arrays.FlexibleArray`2
  name: FlexibleArray<TElement, TSelf>
  href: api/Collectathon.Arrays.FlexibleArray-2.html
  commentId: T:Collectathon.Arrays.FlexibleArray`2
  name.vb: FlexibleArray(Of TElement, TSelf)
  fullName: Collectathon.Arrays.FlexibleArray<TElement, TSelf>
  fullName.vb: Collectathon.Arrays.FlexibleArray(Of TElement, TSelf)
  nameWithType: FlexibleArray<TElement, TSelf>
  nameWithType.vb: FlexibleArray(Of TElement, TSelf)
- uid: Collectathon.Arrays.FlexibleArray`2.#ctor(`0[],nint,Collectathon.Filter{nint,`0})
  name: FlexibleArray(TElement[], nint, Filter<nint, TElement>)
  href: api/Collectathon.Arrays.FlexibleArray-2.html#Collectathon_Arrays_FlexibleArray_2__ctor__0___nint_Collectathon_Filter_nint__0__
  commentId: M:Collectathon.Arrays.FlexibleArray`2.#ctor(`0[],nint,Collectathon.Filter{nint,`0})
  name.vb: FlexibleArray(TElement(), nint, Filter(Of nint, TElement))
  fullName: Collectathon.Arrays.FlexibleArray<TElement, TSelf>.FlexibleArray(TElement[], nint, Collectathon.Filter<nint, TElement>)
  fullName.vb: Collectathon.Arrays.FlexibleArray(Of TElement, TSelf).FlexibleArray(TElement(), nint, Collectathon.Filter(Of nint, TElement))
  nameWithType: FlexibleArray<TElement, TSelf>.FlexibleArray(TElement[], nint, Filter<nint, TElement>)
  nameWithType.vb: FlexibleArray(Of TElement, TSelf).FlexibleArray(TElement(), nint, Filter(Of nint, TElement))
- uid: Collectathon.Arrays.FlexibleArray`2.#ctor(`0[],nint,Collectathon.Filters)
  name: FlexibleArray(TElement[], nint, Filters)
  href: api/Collectathon.Arrays.FlexibleArray-2.html#Collectathon_Arrays_FlexibleArray_2__ctor__0___nint_Collectathon_Filters_
  commentId: M:Collectathon.Arrays.FlexibleArray`2.#ctor(`0[],nint,Collectathon.Filters)
  name.vb: FlexibleArray(TElement(), nint, Filters)
  fullName: Collectathon.Arrays.FlexibleArray<TElement, TSelf>.FlexibleArray(TElement[], nint, Collectathon.Filters)
  fullName.vb: Collectathon.Arrays.FlexibleArray(Of TElement, TSelf).FlexibleArray(TElement(), nint, Collectathon.Filters)
  nameWithType: FlexibleArray<TElement, TSelf>.FlexibleArray(TElement[], nint, Filters)
  nameWithType.vb: FlexibleArray(Of TElement, TSelf).FlexibleArray(TElement(), nint, Filters)
- uid: Collectathon.Arrays.FlexibleArray`2.#ctor(nint,nint,Collectathon.Filters)
  name: FlexibleArray(nint, nint, Filters)
  href: api/Collectathon.Arrays.FlexibleArray-2.html#Collectathon_Arrays_FlexibleArray_2__ctor_nint_nint_Collectathon_Filters_
  commentId: M:Collectathon.Arrays.FlexibleArray`2.#ctor(nint,nint,Collectathon.Filters)
  fullName: Collectathon.Arrays.FlexibleArray<TElement, TSelf>.FlexibleArray(nint, nint, Collectathon.Filters)
  fullName.vb: Collectathon.Arrays.FlexibleArray(Of TElement, TSelf).FlexibleArray(nint, nint, Collectathon.Filters)
  nameWithType: FlexibleArray<TElement, TSelf>.FlexibleArray(nint, nint, Filters)
  nameWithType.vb: FlexibleArray(Of TElement, TSelf).FlexibleArray(nint, nint, Filters)
- uid: Collectathon.Arrays.FlexibleArray`2.#ctor*
  name: FlexibleArray
  href: api/Collectathon.Arrays.FlexibleArray-2.html#Collectathon_Arrays_FlexibleArray_2__ctor_
  commentId: Overload:Collectathon.Arrays.FlexibleArray`2.#ctor
  isSpec: "True"
  fullName: Collectathon.Arrays.FlexibleArray<TElement, TSelf>.FlexibleArray
  fullName.vb: Collectathon.Arrays.FlexibleArray(Of TElement, TSelf).FlexibleArray
  nameWithType: FlexibleArray<TElement, TSelf>.FlexibleArray
  nameWithType.vb: FlexibleArray(Of TElement, TSelf).FlexibleArray
- uid: Collectathon.Arrays.FlexibleArray`2.Add(`0)
  name: Add(TElement)
  href: api/Collectathon.Arrays.FlexibleArray-2.html#Collectathon_Arrays_FlexibleArray_2_Add__0_
  commentId: M:Collectathon.Arrays.FlexibleArray`2.Add(`0)
  fullName: Collectathon.Arrays.FlexibleArray<TElement, TSelf>.Add(TElement)
  fullName.vb: Collectathon.Arrays.FlexibleArray(Of TElement, TSelf).Add(TElement)
  nameWithType: FlexibleArray<TElement, TSelf>.Add(TElement)
  nameWithType.vb: FlexibleArray(Of TElement, TSelf).Add(TElement)
- uid: Collectathon.Arrays.FlexibleArray`2.Add(`0[])
  name: Add(TElement[])
  href: api/Collectathon.Arrays.FlexibleArray-2.html#Collectathon_Arrays_FlexibleArray_2_Add__0___
  commentId: M:Collectathon.Arrays.FlexibleArray`2.Add(`0[])
  name.vb: Add(TElement())
  fullName: Collectathon.Arrays.FlexibleArray<TElement, TSelf>.Add(TElement[])
  fullName.vb: Collectathon.Arrays.FlexibleArray(Of TElement, TSelf).Add(TElement())
  nameWithType: FlexibleArray<TElement, TSelf>.Add(TElement[])
  nameWithType.vb: FlexibleArray(Of TElement, TSelf).Add(TElement())
- uid: Collectathon.Arrays.FlexibleArray`2.Add(System.Memory{`0})
  name: Add(Memory<TElement>)
  href: api/Collectathon.Arrays.FlexibleArray-2.html#Collectathon_Arrays_FlexibleArray_2_Add_System_Memory__0__
  commentId: M:Collectathon.Arrays.FlexibleArray`2.Add(System.Memory{`0})
  name.vb: Add(Memory(Of TElement))
  fullName: Collectathon.Arrays.FlexibleArray<TElement, TSelf>.Add(System.Memory<TElement>)
  fullName.vb: Collectathon.Arrays.FlexibleArray(Of TElement, TSelf).Add(System.Memory(Of TElement))
  nameWithType: FlexibleArray<TElement, TSelf>.Add(Memory<TElement>)
  nameWithType.vb: FlexibleArray(Of TElement, TSelf).Add(Memory(Of TElement))
- uid: Collectathon.Arrays.FlexibleArray`2.Add(System.ReadOnlyMemory{`0})
  name: Add(ReadOnlyMemory<TElement>)
  href: api/Collectathon.Arrays.FlexibleArray-2.html#Collectathon_Arrays_FlexibleArray_2_Add_System_ReadOnlyMemory__0__
  commentId: M:Collectathon.Arrays.FlexibleArray`2.Add(System.ReadOnlyMemory{`0})
  name.vb: Add(ReadOnlyMemory(Of TElement))
  fullName: Collectathon.Arrays.FlexibleArray<TElement, TSelf>.Add(System.ReadOnlyMemory<TElement>)
  fullName.vb: Collectathon.Arrays.FlexibleArray(Of TElement, TSelf).Add(System.ReadOnlyMemory(Of TElement))
  nameWithType: FlexibleArray<TElement, TSelf>.Add(ReadOnlyMemory<TElement>)
  nameWithType.vb: FlexibleArray(Of TElement, TSelf).Add(ReadOnlyMemory(Of TElement))
- uid: Collectathon.Arrays.FlexibleArray`2.Add(System.ReadOnlySpan{`0})
  name: Add(ReadOnlySpan<TElement>)
  href: api/Collectathon.Arrays.FlexibleArray-2.html#Collectathon_Arrays_FlexibleArray_2_Add_System_ReadOnlySpan__0__
  commentId: M:Collectathon.Arrays.FlexibleArray`2.Add(System.ReadOnlySpan{`0})
  name.vb: Add(ReadOnlySpan(Of TElement))
  fullName: Collectathon.Arrays.FlexibleArray<TElement, TSelf>.Add(System.ReadOnlySpan<TElement>)
  fullName.vb: Collectathon.Arrays.FlexibleArray(Of TElement, TSelf).Add(System.ReadOnlySpan(Of TElement))
  nameWithType: FlexibleArray<TElement, TSelf>.Add(ReadOnlySpan<TElement>)
  nameWithType.vb: FlexibleArray(Of TElement, TSelf).Add(ReadOnlySpan(Of TElement))
- uid: Collectathon.Arrays.FlexibleArray`2.Add(System.Span{`0})
  name: Add(Span<TElement>)
  href: api/Collectathon.Arrays.FlexibleArray-2.html#Collectathon_Arrays_FlexibleArray_2_Add_System_Span__0__
  commentId: M:Collectathon.Arrays.FlexibleArray`2.Add(System.Span{`0})
  name.vb: Add(Span(Of TElement))
  fullName: Collectathon.Arrays.FlexibleArray<TElement, TSelf>.Add(System.Span<TElement>)
  fullName.vb: Collectathon.Arrays.FlexibleArray(Of TElement, TSelf).Add(System.Span(Of TElement))
  nameWithType: FlexibleArray<TElement, TSelf>.Add(Span<TElement>)
  nameWithType.vb: FlexibleArray(Of TElement, TSelf).Add(Span(Of TElement))
- uid: Collectathon.Arrays.FlexibleArray`2.Add*
  name: Add
  href: api/Collectathon.Arrays.FlexibleArray-2.html#Collectathon_Arrays_FlexibleArray_2_Add_
  commentId: Overload:Collectathon.Arrays.FlexibleArray`2.Add
  isSpec: "True"
  fullName: Collectathon.Arrays.FlexibleArray<TElement, TSelf>.Add
  fullName.vb: Collectathon.Arrays.FlexibleArray(Of TElement, TSelf).Add
  nameWithType: FlexibleArray<TElement, TSelf>.Add
  nameWithType.vb: FlexibleArray(Of TElement, TSelf).Add
- uid: Collectathon.Arrays.FlexibleArray`2.Capacity
  name: Capacity
  href: api/Collectathon.Arrays.FlexibleArray-2.html#Collectathon_Arrays_FlexibleArray_2_Capacity
  commentId: P:Collectathon.Arrays.FlexibleArray`2.Capacity
  fullName: Collectathon.Arrays.FlexibleArray<TElement, TSelf>.Capacity
  fullName.vb: Collectathon.Arrays.FlexibleArray(Of TElement, TSelf).Capacity
  nameWithType: FlexibleArray<TElement, TSelf>.Capacity
  nameWithType.vb: FlexibleArray(Of TElement, TSelf).Capacity
- uid: Collectathon.Arrays.FlexibleArray`2.Capacity*
  name: Capacity
  href: api/Collectathon.Arrays.FlexibleArray-2.html#Collectathon_Arrays_FlexibleArray_2_Capacity_
  commentId: Overload:Collectathon.Arrays.FlexibleArray`2.Capacity
  isSpec: "True"
  fullName: Collectathon.Arrays.FlexibleArray<TElement, TSelf>.Capacity
  fullName.vb: Collectathon.Arrays.FlexibleArray(Of TElement, TSelf).Capacity
  nameWithType: FlexibleArray<TElement, TSelf>.Capacity
  nameWithType.vb: FlexibleArray(Of TElement, TSelf).Capacity
- uid: Collectathon.Arrays.FlexibleArray`2.Clear
  name: Clear()
  href: api/Collectathon.Arrays.FlexibleArray-2.html#Collectathon_Arrays_FlexibleArray_2_Clear
  commentId: M:Collectathon.Arrays.FlexibleArray`2.Clear
  fullName: Collectathon.Arrays.FlexibleArray<TElement, TSelf>.Clear()
  fullName.vb: Collectathon.Arrays.FlexibleArray(Of TElement, TSelf).Clear()
  nameWithType: FlexibleArray<TElement, TSelf>.Clear()
  nameWithType.vb: FlexibleArray(Of TElement, TSelf).Clear()
- uid: Collectathon.Arrays.FlexibleArray`2.Clear*
  name: Clear
  href: api/Collectathon.Arrays.FlexibleArray-2.html#Collectathon_Arrays_FlexibleArray_2_Clear_
  commentId: Overload:Collectathon.Arrays.FlexibleArray`2.Clear
  isSpec: "True"
  fullName: Collectathon.Arrays.FlexibleArray<TElement, TSelf>.Clear
  fullName.vb: Collectathon.Arrays.FlexibleArray(Of TElement, TSelf).Clear
  nameWithType: FlexibleArray<TElement, TSelf>.Clear
  nameWithType.vb: FlexibleArray(Of TElement, TSelf).Clear
- uid: Collectathon.Arrays.FlexibleArray`2.Contains(`0)
  name: Contains(TElement)
  href: api/Collectathon.Arrays.FlexibleArray-2.html#Collectathon_Arrays_FlexibleArray_2_Contains__0_
  commentId: M:Collectathon.Arrays.FlexibleArray`2.Contains(`0)
  fullName: Collectathon.Arrays.FlexibleArray<TElement, TSelf>.Contains(TElement)
  fullName.vb: Collectathon.Arrays.FlexibleArray(Of TElement, TSelf).Contains(TElement)
  nameWithType: FlexibleArray<TElement, TSelf>.Contains(TElement)
  nameWithType.vb: FlexibleArray(Of TElement, TSelf).Contains(TElement)
- uid: Collectathon.Arrays.FlexibleArray`2.Contains*
  name: Contains
  href: api/Collectathon.Arrays.FlexibleArray-2.html#Collectathon_Arrays_FlexibleArray_2_Contains_
  commentId: Overload:Collectathon.Arrays.FlexibleArray`2.Contains
  isSpec: "True"
  fullName: Collectathon.Arrays.FlexibleArray<TElement, TSelf>.Contains
  fullName.vb: Collectathon.Arrays.FlexibleArray(Of TElement, TSelf).Contains
  nameWithType: FlexibleArray<TElement, TSelf>.Contains
  nameWithType.vb: FlexibleArray(Of TElement, TSelf).Contains
- uid: Collectathon.Arrays.FlexibleArray`2.Count
  name: Count
  href: api/Collectathon.Arrays.FlexibleArray-2.html#Collectathon_Arrays_FlexibleArray_2_Count
  commentId: P:Collectathon.Arrays.FlexibleArray`2.Count
  fullName: Collectathon.Arrays.FlexibleArray<TElement, TSelf>.Count
  fullName.vb: Collectathon.Arrays.FlexibleArray(Of TElement, TSelf).Count
  nameWithType: FlexibleArray<TElement, TSelf>.Count
  nameWithType.vb: FlexibleArray(Of TElement, TSelf).Count
- uid: Collectathon.Arrays.FlexibleArray`2.Count*
  name: Count
  href: api/Collectathon.Arrays.FlexibleArray-2.html#Collectathon_Arrays_FlexibleArray_2_Count_
  commentId: Overload:Collectathon.Arrays.FlexibleArray`2.Count
  isSpec: "True"
  fullName: Collectathon.Arrays.FlexibleArray<TElement, TSelf>.Count
  fullName.vb: Collectathon.Arrays.FlexibleArray(Of TElement, TSelf).Count
  nameWithType: FlexibleArray<TElement, TSelf>.Count
  nameWithType.vb: FlexibleArray(Of TElement, TSelf).Count
- uid: Collectathon.Arrays.FlexibleArray`2.Enumerator
  name: FlexibleArray<TElement, TSelf>.Enumerator
  href: api/Collectathon.Arrays.FlexibleArray-2.Enumerator.html
  commentId: T:Collectathon.Arrays.FlexibleArray`2.Enumerator
  name.vb: FlexibleArray(Of TElement, TSelf).Enumerator
  fullName: Collectathon.Arrays.FlexibleArray<TElement, TSelf>.Enumerator
  fullName.vb: Collectathon.Arrays.FlexibleArray(Of TElement, TSelf).Enumerator
  nameWithType: FlexibleArray<TElement, TSelf>.Enumerator
  nameWithType.vb: FlexibleArray(Of TElement, TSelf).Enumerator
- uid: Collectathon.Arrays.FlexibleArray`2.Enumerator.#ctor(`1)
  name: Enumerator(TSelf)
  href: api/Collectathon.Arrays.FlexibleArray-2.Enumerator.html#Collectathon_Arrays_FlexibleArray_2_Enumerator__ctor__1_
  commentId: M:Collectathon.Arrays.FlexibleArray`2.Enumerator.#ctor(`1)
  fullName: Collectathon.Arrays.FlexibleArray<TElement, TSelf>.Enumerator.Enumerator(TSelf)
  fullName.vb: Collectathon.Arrays.FlexibleArray(Of TElement, TSelf).Enumerator.Enumerator(TSelf)
  nameWithType: FlexibleArray<TElement, TSelf>.Enumerator.Enumerator(TSelf)
  nameWithType.vb: FlexibleArray(Of TElement, TSelf).Enumerator.Enumerator(TSelf)
- uid: Collectathon.Arrays.FlexibleArray`2.Enumerator.#ctor(System.Memory{`0},nint)
  name: Enumerator(Memory<TElement>, nint)
  href: api/Collectathon.Arrays.FlexibleArray-2.Enumerator.html#Collectathon_Arrays_FlexibleArray_2_Enumerator__ctor_System_Memory__0__nint_
  commentId: M:Collectathon.Arrays.FlexibleArray`2.Enumerator.#ctor(System.Memory{`0},nint)
  name.vb: Enumerator(Memory(Of TElement), nint)
  fullName: Collectathon.Arrays.FlexibleArray<TElement, TSelf>.Enumerator.Enumerator(System.Memory<TElement>, nint)
  fullName.vb: Collectathon.Arrays.FlexibleArray(Of TElement, TSelf).Enumerator.Enumerator(System.Memory(Of TElement), nint)
  nameWithType: FlexibleArray<TElement, TSelf>.Enumerator.Enumerator(Memory<TElement>, nint)
  nameWithType.vb: FlexibleArray(Of TElement, TSelf).Enumerator.Enumerator(Memory(Of TElement), nint)
- uid: Collectathon.Arrays.FlexibleArray`2.Enumerator.#ctor*
  name: Enumerator
  href: api/Collectathon.Arrays.FlexibleArray-2.Enumerator.html#Collectathon_Arrays_FlexibleArray_2_Enumerator__ctor_
  commentId: Overload:Collectathon.Arrays.FlexibleArray`2.Enumerator.#ctor
  isSpec: "True"
  fullName: Collectathon.Arrays.FlexibleArray<TElement, TSelf>.Enumerator.Enumerator
  fullName.vb: Collectathon.Arrays.FlexibleArray(Of TElement, TSelf).Enumerator.Enumerator
  nameWithType: FlexibleArray<TElement, TSelf>.Enumerator.Enumerator
  nameWithType.vb: FlexibleArray(Of TElement, TSelf).Enumerator.Enumerator
- uid: Collectathon.Arrays.FlexibleArray`2.Enumerator.Count
  name: Count
  href: api/Collectathon.Arrays.FlexibleArray-2.Enumerator.html#Collectathon_Arrays_FlexibleArray_2_Enumerator_Count
  commentId: P:Collectathon.Arrays.FlexibleArray`2.Enumerator.Count
  fullName: Collectathon.Arrays.FlexibleArray<TElement, TSelf>.Enumerator.Count
  fullName.vb: Collectathon.Arrays.FlexibleArray(Of TElement, TSelf).Enumerator.Count
  nameWithType: FlexibleArray<TElement, TSelf>.Enumerator.Count
  nameWithType.vb: FlexibleArray(Of TElement, TSelf).Enumerator.Count
- uid: Collectathon.Arrays.FlexibleArray`2.Enumerator.Count*
  name: Count
  href: api/Collectathon.Arrays.FlexibleArray-2.Enumerator.html#Collectathon_Arrays_FlexibleArray_2_Enumerator_Count_
  commentId: Overload:Collectathon.Arrays.FlexibleArray`2.Enumerator.Count
  isSpec: "True"
  fullName: Collectathon.Arrays.FlexibleArray<TElement, TSelf>.Enumerator.Count
  fullName.vb: Collectathon.Arrays.FlexibleArray(Of TElement, TSelf).Enumerator.Count
  nameWithType: FlexibleArray<TElement, TSelf>.Enumerator.Count
  nameWithType.vb: FlexibleArray(Of TElement, TSelf).Enumerator.Count
- uid: Collectathon.Arrays.FlexibleArray`2.Enumerator.Current
  name: Current
  href: api/Collectathon.Arrays.FlexibleArray-2.Enumerator.html#Collectathon_Arrays_FlexibleArray_2_Enumerator_Current
  commentId: P:Collectathon.Arrays.FlexibleArray`2.Enumerator.Current
  fullName: Collectathon.Arrays.FlexibleArray<TElement, TSelf>.Enumerator.Current
  fullName.vb: Collectathon.Arrays.FlexibleArray(Of TElement, TSelf).Enumerator.Current
  nameWithType: FlexibleArray<TElement, TSelf>.Enumerator.Current
  nameWithType.vb: FlexibleArray(Of TElement, TSelf).Enumerator.Current
- uid: Collectathon.Arrays.FlexibleArray`2.Enumerator.Current*
  name: Current
  href: api/Collectathon.Arrays.FlexibleArray-2.Enumerator.html#Collectathon_Arrays_FlexibleArray_2_Enumerator_Current_
  commentId: Overload:Collectathon.Arrays.FlexibleArray`2.Enumerator.Current
  isSpec: "True"
  fullName: Collectathon.Arrays.FlexibleArray<TElement, TSelf>.Enumerator.Current
  fullName.vb: Collectathon.Arrays.FlexibleArray(Of TElement, TSelf).Enumerator.Current
  nameWithType: FlexibleArray<TElement, TSelf>.Enumerator.Current
  nameWithType.vb: FlexibleArray(Of TElement, TSelf).Enumerator.Current
- uid: Collectathon.Arrays.FlexibleArray`2.Enumerator.Equals(Collectathon.Arrays.FlexibleArray{`0,`1}.Enumerator)
  name: Equals(FlexibleArray<TElement, TSelf>.Enumerator)
  href: api/Collectathon.Arrays.FlexibleArray-2.Enumerator.html#Collectathon_Arrays_FlexibleArray_2_Enumerator_Equals_Collectathon_Arrays_FlexibleArray__0__1__Enumerator_
  commentId: M:Collectathon.Arrays.FlexibleArray`2.Enumerator.Equals(Collectathon.Arrays.FlexibleArray{`0,`1}.Enumerator)
  name.vb: Equals(FlexibleArray(Of TElement, TSelf).Enumerator)
  fullName: Collectathon.Arrays.FlexibleArray<TElement, TSelf>.Enumerator.Equals(Collectathon.Arrays.FlexibleArray<TElement, TSelf>.Enumerator)
  fullName.vb: Collectathon.Arrays.FlexibleArray(Of TElement, TSelf).Enumerator.Equals(Collectathon.Arrays.FlexibleArray(Of TElement, TSelf).Enumerator)
  nameWithType: FlexibleArray<TElement, TSelf>.Enumerator.Equals(FlexibleArray<TElement, TSelf>.Enumerator)
  nameWithType.vb: FlexibleArray(Of TElement, TSelf).Enumerator.Equals(FlexibleArray(Of TElement, TSelf).Enumerator)
- uid: Collectathon.Arrays.FlexibleArray`2.Enumerator.Equals(System.Object)
  name: Equals(Object)
  href: api/Collectathon.Arrays.FlexibleArray-2.Enumerator.html#Collectathon_Arrays_FlexibleArray_2_Enumerator_Equals_System_Object_
  commentId: M:Collectathon.Arrays.FlexibleArray`2.Enumerator.Equals(System.Object)
  fullName: Collectathon.Arrays.FlexibleArray<TElement, TSelf>.Enumerator.Equals(System.Object)
  fullName.vb: Collectathon.Arrays.FlexibleArray(Of TElement, TSelf).Enumerator.Equals(System.Object)
  nameWithType: FlexibleArray<TElement, TSelf>.Enumerator.Equals(Object)
  nameWithType.vb: FlexibleArray(Of TElement, TSelf).Enumerator.Equals(Object)
- uid: Collectathon.Arrays.FlexibleArray`2.Enumerator.Equals*
  name: Equals
  href: api/Collectathon.Arrays.FlexibleArray-2.Enumerator.html#Collectathon_Arrays_FlexibleArray_2_Enumerator_Equals_
  commentId: Overload:Collectathon.Arrays.FlexibleArray`2.Enumerator.Equals
  isSpec: "True"
  fullName: Collectathon.Arrays.FlexibleArray<TElement, TSelf>.Enumerator.Equals
  fullName.vb: Collectathon.Arrays.FlexibleArray(Of TElement, TSelf).Enumerator.Equals
  nameWithType: FlexibleArray<TElement, TSelf>.Enumerator.Equals
  nameWithType.vb: FlexibleArray(Of TElement, TSelf).Enumerator.Equals
- uid: Collectathon.Arrays.FlexibleArray`2.Enumerator.MoveNext
  name: MoveNext()
  href: api/Collectathon.Arrays.FlexibleArray-2.Enumerator.html#Collectathon_Arrays_FlexibleArray_2_Enumerator_MoveNext
  commentId: M:Collectathon.Arrays.FlexibleArray`2.Enumerator.MoveNext
  fullName: Collectathon.Arrays.FlexibleArray<TElement, TSelf>.Enumerator.MoveNext()
  fullName.vb: Collectathon.Arrays.FlexibleArray(Of TElement, TSelf).Enumerator.MoveNext()
  nameWithType: FlexibleArray<TElement, TSelf>.Enumerator.MoveNext()
  nameWithType.vb: FlexibleArray(Of TElement, TSelf).Enumerator.MoveNext()
- uid: Collectathon.Arrays.FlexibleArray`2.Enumerator.MoveNext*
  name: MoveNext
  href: api/Collectathon.Arrays.FlexibleArray-2.Enumerator.html#Collectathon_Arrays_FlexibleArray_2_Enumerator_MoveNext_
  commentId: Overload:Collectathon.Arrays.FlexibleArray`2.Enumerator.MoveNext
  isSpec: "True"
  fullName: Collectathon.Arrays.FlexibleArray<TElement, TSelf>.Enumerator.MoveNext
  fullName.vb: Collectathon.Arrays.FlexibleArray(Of TElement, TSelf).Enumerator.MoveNext
  nameWithType: FlexibleArray<TElement, TSelf>.Enumerator.MoveNext
  nameWithType.vb: FlexibleArray(Of TElement, TSelf).Enumerator.MoveNext
- uid: Collectathon.Arrays.FlexibleArray`2.Enumerator.op_Equality(Collectathon.Arrays.FlexibleArray{`0,`1}.Enumerator,Collectathon.Arrays.FlexibleArray{`0,`1}.Enumerator)
  name: Equality(FlexibleArray<TElement, TSelf>.Enumerator, FlexibleArray<TElement, TSelf>.Enumerator)
  href: api/Collectathon.Arrays.FlexibleArray-2.Enumerator.html#Collectathon_Arrays_FlexibleArray_2_Enumerator_op_Equality_Collectathon_Arrays_FlexibleArray__0__1__Enumerator_Collectathon_Arrays_FlexibleArray__0__1__Enumerator_
  commentId: M:Collectathon.Arrays.FlexibleArray`2.Enumerator.op_Equality(Collectathon.Arrays.FlexibleArray{`0,`1}.Enumerator,Collectathon.Arrays.FlexibleArray{`0,`1}.Enumerator)
  name.vb: Equality(FlexibleArray(Of TElement, TSelf).Enumerator, FlexibleArray(Of TElement, TSelf).Enumerator)
  fullName: Collectathon.Arrays.FlexibleArray<TElement, TSelf>.Enumerator.Equality(Collectathon.Arrays.FlexibleArray<TElement, TSelf>.Enumerator, Collectathon.Arrays.FlexibleArray<TElement, TSelf>.Enumerator)
  fullName.vb: Collectathon.Arrays.FlexibleArray(Of TElement, TSelf).Enumerator.Equality(Collectathon.Arrays.FlexibleArray(Of TElement, TSelf).Enumerator, Collectathon.Arrays.FlexibleArray(Of TElement, TSelf).Enumerator)
  nameWithType: FlexibleArray<TElement, TSelf>.Enumerator.Equality(FlexibleArray<TElement, TSelf>.Enumerator, FlexibleArray<TElement, TSelf>.Enumerator)
  nameWithType.vb: FlexibleArray(Of TElement, TSelf).Enumerator.Equality(FlexibleArray(Of TElement, TSelf).Enumerator, FlexibleArray(Of TElement, TSelf).Enumerator)
- uid: Collectathon.Arrays.FlexibleArray`2.Enumerator.op_Equality*
  name: Equality
  href: api/Collectathon.Arrays.FlexibleArray-2.Enumerator.html#Collectathon_Arrays_FlexibleArray_2_Enumerator_op_Equality_
  commentId: Overload:Collectathon.Arrays.FlexibleArray`2.Enumerator.op_Equality
  isSpec: "True"
  fullName: Collectathon.Arrays.FlexibleArray<TElement, TSelf>.Enumerator.Equality
  fullName.vb: Collectathon.Arrays.FlexibleArray(Of TElement, TSelf).Enumerator.Equality
  nameWithType: FlexibleArray<TElement, TSelf>.Enumerator.Equality
  nameWithType.vb: FlexibleArray(Of TElement, TSelf).Enumerator.Equality
- uid: Collectathon.Arrays.FlexibleArray`2.Enumerator.op_Inequality(Collectathon.Arrays.FlexibleArray{`0,`1}.Enumerator,Collectathon.Arrays.FlexibleArray{`0,`1}.Enumerator)
  name: Inequality(FlexibleArray<TElement, TSelf>.Enumerator, FlexibleArray<TElement, TSelf>.Enumerator)
  href: api/Collectathon.Arrays.FlexibleArray-2.Enumerator.html#Collectathon_Arrays_FlexibleArray_2_Enumerator_op_Inequality_Collectathon_Arrays_FlexibleArray__0__1__Enumerator_Collectathon_Arrays_FlexibleArray__0__1__Enumerator_
  commentId: M:Collectathon.Arrays.FlexibleArray`2.Enumerator.op_Inequality(Collectathon.Arrays.FlexibleArray{`0,`1}.Enumerator,Collectathon.Arrays.FlexibleArray{`0,`1}.Enumerator)
  name.vb: Inequality(FlexibleArray(Of TElement, TSelf).Enumerator, FlexibleArray(Of TElement, TSelf).Enumerator)
  fullName: Collectathon.Arrays.FlexibleArray<TElement, TSelf>.Enumerator.Inequality(Collectathon.Arrays.FlexibleArray<TElement, TSelf>.Enumerator, Collectathon.Arrays.FlexibleArray<TElement, TSelf>.Enumerator)
  fullName.vb: Collectathon.Arrays.FlexibleArray(Of TElement, TSelf).Enumerator.Inequality(Collectathon.Arrays.FlexibleArray(Of TElement, TSelf).Enumerator, Collectathon.Arrays.FlexibleArray(Of TElement, TSelf).Enumerator)
  nameWithType: FlexibleArray<TElement, TSelf>.Enumerator.Inequality(FlexibleArray<TElement, TSelf>.Enumerator, FlexibleArray<TElement, TSelf>.Enumerator)
  nameWithType.vb: FlexibleArray(Of TElement, TSelf).Enumerator.Inequality(FlexibleArray(Of TElement, TSelf).Enumerator, FlexibleArray(Of TElement, TSelf).Enumerator)
- uid: Collectathon.Arrays.FlexibleArray`2.Enumerator.op_Inequality*
  name: Inequality
  href: api/Collectathon.Arrays.FlexibleArray-2.Enumerator.html#Collectathon_Arrays_FlexibleArray_2_Enumerator_op_Inequality_
  commentId: Overload:Collectathon.Arrays.FlexibleArray`2.Enumerator.op_Inequality
  isSpec: "True"
  fullName: Collectathon.Arrays.FlexibleArray<TElement, TSelf>.Enumerator.Inequality
  fullName.vb: Collectathon.Arrays.FlexibleArray(Of TElement, TSelf).Enumerator.Inequality
  nameWithType: FlexibleArray<TElement, TSelf>.Enumerator.Inequality
  nameWithType.vb: FlexibleArray(Of TElement, TSelf).Enumerator.Inequality
- uid: Collectathon.Arrays.FlexibleArray`2.Enumerator.Reset
  name: Reset()
  href: api/Collectathon.Arrays.FlexibleArray-2.Enumerator.html#Collectathon_Arrays_FlexibleArray_2_Enumerator_Reset
  commentId: M:Collectathon.Arrays.FlexibleArray`2.Enumerator.Reset
  fullName: Collectathon.Arrays.FlexibleArray<TElement, TSelf>.Enumerator.Reset()
  fullName.vb: Collectathon.Arrays.FlexibleArray(Of TElement, TSelf).Enumerator.Reset()
  nameWithType: FlexibleArray<TElement, TSelf>.Enumerator.Reset()
  nameWithType.vb: FlexibleArray(Of TElement, TSelf).Enumerator.Reset()
- uid: Collectathon.Arrays.FlexibleArray`2.Enumerator.Reset*
  name: Reset
  href: api/Collectathon.Arrays.FlexibleArray-2.Enumerator.html#Collectathon_Arrays_FlexibleArray_2_Enumerator_Reset_
  commentId: Overload:Collectathon.Arrays.FlexibleArray`2.Enumerator.Reset
  isSpec: "True"
  fullName: Collectathon.Arrays.FlexibleArray<TElement, TSelf>.Enumerator.Reset
  fullName.vb: Collectathon.Arrays.FlexibleArray(Of TElement, TSelf).Enumerator.Reset
  nameWithType: FlexibleArray<TElement, TSelf>.Enumerator.Reset
  nameWithType.vb: FlexibleArray(Of TElement, TSelf).Enumerator.Reset
- uid: Collectathon.Arrays.FlexibleArray`2.Enumerator.System#Collections#IEnumerator#Current
  name: IEnumerator.Current
  href: api/Collectathon.Arrays.FlexibleArray-2.Enumerator.html#Collectathon_Arrays_FlexibleArray_2_Enumerator_System_Collections_IEnumerator_Current
  commentId: P:Collectathon.Arrays.FlexibleArray`2.Enumerator.System#Collections#IEnumerator#Current
  name.vb: System.Collections.IEnumerator.Current
  fullName: Collectathon.Arrays.FlexibleArray<TElement, TSelf>.Enumerator.System.Collections.IEnumerator.Current
  fullName.vb: Collectathon.Arrays.FlexibleArray(Of TElement, TSelf).Enumerator.System.Collections.IEnumerator.Current
  nameWithType: FlexibleArray<TElement, TSelf>.Enumerator.IEnumerator.Current
  nameWithType.vb: FlexibleArray(Of TElement, TSelf).Enumerator.System.Collections.IEnumerator.Current
- uid: Collectathon.Arrays.FlexibleArray`2.Enumerator.System#Collections#IEnumerator#Current*
  name: IEnumerator.Current
  href: api/Collectathon.Arrays.FlexibleArray-2.Enumerator.html#Collectathon_Arrays_FlexibleArray_2_Enumerator_System_Collections_IEnumerator_Current_
  commentId: Overload:Collectathon.Arrays.FlexibleArray`2.Enumerator.System#Collections#IEnumerator#Current
  isSpec: "True"
  name.vb: System.Collections.IEnumerator.Current
  fullName: Collectathon.Arrays.FlexibleArray<TElement, TSelf>.Enumerator.System.Collections.IEnumerator.Current
  fullName.vb: Collectathon.Arrays.FlexibleArray(Of TElement, TSelf).Enumerator.System.Collections.IEnumerator.Current
  nameWithType: FlexibleArray<TElement, TSelf>.Enumerator.IEnumerator.Current
  nameWithType.vb: FlexibleArray(Of TElement, TSelf).Enumerator.System.Collections.IEnumerator.Current
- uid: Collectathon.Arrays.FlexibleArray`2.Enumerator.ToString
  name: ToString()
  href: api/Collectathon.Arrays.FlexibleArray-2.Enumerator.html#Collectathon_Arrays_FlexibleArray_2_Enumerator_ToString
  commentId: M:Collectathon.Arrays.FlexibleArray`2.Enumerator.ToString
  fullName: Collectathon.Arrays.FlexibleArray<TElement, TSelf>.Enumerator.ToString()
  fullName.vb: Collectathon.Arrays.FlexibleArray(Of TElement, TSelf).Enumerator.ToString()
  nameWithType: FlexibleArray<TElement, TSelf>.Enumerator.ToString()
  nameWithType.vb: FlexibleArray(Of TElement, TSelf).Enumerator.ToString()
- uid: Collectathon.Arrays.FlexibleArray`2.Enumerator.ToString(nint)
  name: ToString(nint)
  href: api/Collectathon.Arrays.FlexibleArray-2.Enumerator.html#Collectathon_Arrays_FlexibleArray_2_Enumerator_ToString_nint_
  commentId: M:Collectathon.Arrays.FlexibleArray`2.Enumerator.ToString(nint)
  fullName: Collectathon.Arrays.FlexibleArray<TElement, TSelf>.Enumerator.ToString(nint)
  fullName.vb: Collectathon.Arrays.FlexibleArray(Of TElement, TSelf).Enumerator.ToString(nint)
  nameWithType: FlexibleArray<TElement, TSelf>.Enumerator.ToString(nint)
  nameWithType.vb: FlexibleArray(Of TElement, TSelf).Enumerator.ToString(nint)
- uid: Collectathon.Arrays.FlexibleArray`2.Enumerator.ToString*
  name: ToString
  href: api/Collectathon.Arrays.FlexibleArray-2.Enumerator.html#Collectathon_Arrays_FlexibleArray_2_Enumerator_ToString_
  commentId: Overload:Collectathon.Arrays.FlexibleArray`2.Enumerator.ToString
  isSpec: "True"
  fullName: Collectathon.Arrays.FlexibleArray<TElement, TSelf>.Enumerator.ToString
  fullName.vb: Collectathon.Arrays.FlexibleArray(Of TElement, TSelf).Enumerator.ToString
  nameWithType: FlexibleArray<TElement, TSelf>.Enumerator.ToString
  nameWithType.vb: FlexibleArray(Of TElement, TSelf).Enumerator.ToString
- uid: Collectathon.Arrays.FlexibleArray`2.Equals(`1)
  name: Equals(TSelf)
  href: api/Collectathon.Arrays.FlexibleArray-2.html#Collectathon_Arrays_FlexibleArray_2_Equals__1_
  commentId: M:Collectathon.Arrays.FlexibleArray`2.Equals(`1)
  fullName: Collectathon.Arrays.FlexibleArray<TElement, TSelf>.Equals(TSelf)
  fullName.vb: Collectathon.Arrays.FlexibleArray(Of TElement, TSelf).Equals(TSelf)
  nameWithType: FlexibleArray<TElement, TSelf>.Equals(TSelf)
  nameWithType.vb: FlexibleArray(Of TElement, TSelf).Equals(TSelf)
- uid: Collectathon.Arrays.FlexibleArray`2.Equals(Collectathon.Arrays.FlexibleArray{`0,`1})
  name: Equals(FlexibleArray<TElement, TSelf>)
  href: api/Collectathon.Arrays.FlexibleArray-2.html#Collectathon_Arrays_FlexibleArray_2_Equals_Collectathon_Arrays_FlexibleArray__0__1__
  commentId: M:Collectathon.Arrays.FlexibleArray`2.Equals(Collectathon.Arrays.FlexibleArray{`0,`1})
  name.vb: Equals(FlexibleArray(Of TElement, TSelf))
  fullName: Collectathon.Arrays.FlexibleArray<TElement, TSelf>.Equals(Collectathon.Arrays.FlexibleArray<TElement, TSelf>)
  fullName.vb: Collectathon.Arrays.FlexibleArray(Of TElement, TSelf).Equals(Collectathon.Arrays.FlexibleArray(Of TElement, TSelf))
  nameWithType: FlexibleArray<TElement, TSelf>.Equals(FlexibleArray<TElement, TSelf>)
  nameWithType.vb: FlexibleArray(Of TElement, TSelf).Equals(FlexibleArray(Of TElement, TSelf))
- uid: Collectathon.Arrays.FlexibleArray`2.Equals(System.Collections.Generic.IEnumerable{`0})
  name: Equals(IEnumerable<TElement>)
  href: api/Collectathon.Arrays.FlexibleArray-2.html#Collectathon_Arrays_FlexibleArray_2_Equals_System_Collections_Generic_IEnumerable__0__
  commentId: M:Collectathon.Arrays.FlexibleArray`2.Equals(System.Collections.Generic.IEnumerable{`0})
  name.vb: Equals(IEnumerable(Of TElement))
  fullName: Collectathon.Arrays.FlexibleArray<TElement, TSelf>.Equals(System.Collections.Generic.IEnumerable<TElement>)
  fullName.vb: Collectathon.Arrays.FlexibleArray(Of TElement, TSelf).Equals(System.Collections.Generic.IEnumerable(Of TElement))
  nameWithType: FlexibleArray<TElement, TSelf>.Equals(IEnumerable<TElement>)
  nameWithType.vb: FlexibleArray(Of TElement, TSelf).Equals(IEnumerable(Of TElement))
- uid: Collectathon.Arrays.FlexibleArray`2.Equals(System.Object)
  name: Equals(Object)
  href: api/Collectathon.Arrays.FlexibleArray-2.html#Collectathon_Arrays_FlexibleArray_2_Equals_System_Object_
  commentId: M:Collectathon.Arrays.FlexibleArray`2.Equals(System.Object)
  fullName: Collectathon.Arrays.FlexibleArray<TElement, TSelf>.Equals(System.Object)
  fullName.vb: Collectathon.Arrays.FlexibleArray(Of TElement, TSelf).Equals(System.Object)
  nameWithType: FlexibleArray<TElement, TSelf>.Equals(Object)
  nameWithType.vb: FlexibleArray(Of TElement, TSelf).Equals(Object)
- uid: Collectathon.Arrays.FlexibleArray`2.Equals*
  name: Equals
  href: api/Collectathon.Arrays.FlexibleArray-2.html#Collectathon_Arrays_FlexibleArray_2_Equals_
  commentId: Overload:Collectathon.Arrays.FlexibleArray`2.Equals
  isSpec: "True"
  fullName: Collectathon.Arrays.FlexibleArray<TElement, TSelf>.Equals
  fullName.vb: Collectathon.Arrays.FlexibleArray(Of TElement, TSelf).Equals
  nameWithType: FlexibleArray<TElement, TSelf>.Equals
  nameWithType.vb: FlexibleArray(Of TElement, TSelf).Equals
- uid: Collectathon.Arrays.FlexibleArray`2.Filter
  name: Filter
  href: api/Collectathon.Arrays.FlexibleArray-2.html#Collectathon_Arrays_FlexibleArray_2_Filter
  commentId: F:Collectathon.Arrays.FlexibleArray`2.Filter
  fullName: Collectathon.Arrays.FlexibleArray<TElement, TSelf>.Filter
  fullName.vb: Collectathon.Arrays.FlexibleArray(Of TElement, TSelf).Filter
  nameWithType: FlexibleArray<TElement, TSelf>.Filter
  nameWithType.vb: FlexibleArray(Of TElement, TSelf).Filter
- uid: Collectathon.Arrays.FlexibleArray`2.GetEnumerator
  name: GetEnumerator()
  href: api/Collectathon.Arrays.FlexibleArray-2.html#Collectathon_Arrays_FlexibleArray_2_GetEnumerator
  commentId: M:Collectathon.Arrays.FlexibleArray`2.GetEnumerator
  fullName: Collectathon.Arrays.FlexibleArray<TElement, TSelf>.GetEnumerator()
  fullName.vb: Collectathon.Arrays.FlexibleArray(Of TElement, TSelf).GetEnumerator()
  nameWithType: FlexibleArray<TElement, TSelf>.GetEnumerator()
  nameWithType.vb: FlexibleArray(Of TElement, TSelf).GetEnumerator()
- uid: Collectathon.Arrays.FlexibleArray`2.GetEnumerator*
  name: GetEnumerator
  href: api/Collectathon.Arrays.FlexibleArray-2.html#Collectathon_Arrays_FlexibleArray_2_GetEnumerator_
  commentId: Overload:Collectathon.Arrays.FlexibleArray`2.GetEnumerator
  isSpec: "True"
  fullName: Collectathon.Arrays.FlexibleArray<TElement, TSelf>.GetEnumerator
  fullName.vb: Collectathon.Arrays.FlexibleArray(Of TElement, TSelf).GetEnumerator
  nameWithType: FlexibleArray<TElement, TSelf>.GetEnumerator
  nameWithType.vb: FlexibleArray(Of TElement, TSelf).GetEnumerator
- uid: Collectathon.Arrays.FlexibleArray`2.GetHashCode
  name: GetHashCode()
  href: api/Collectathon.Arrays.FlexibleArray-2.html#Collectathon_Arrays_FlexibleArray_2_GetHashCode
  commentId: M:Collectathon.Arrays.FlexibleArray`2.GetHashCode
  fullName: Collectathon.Arrays.FlexibleArray<TElement, TSelf>.GetHashCode()
  fullName.vb: Collectathon.Arrays.FlexibleArray(Of TElement, TSelf).GetHashCode()
  nameWithType: FlexibleArray<TElement, TSelf>.GetHashCode()
  nameWithType.vb: FlexibleArray(Of TElement, TSelf).GetHashCode()
- uid: Collectathon.Arrays.FlexibleArray`2.GetHashCode*
  name: GetHashCode
  href: api/Collectathon.Arrays.FlexibleArray-2.html#Collectathon_Arrays_FlexibleArray_2_GetHashCode_
  commentId: Overload:Collectathon.Arrays.FlexibleArray`2.GetHashCode
  isSpec: "True"
  fullName: Collectathon.Arrays.FlexibleArray<TElement, TSelf>.GetHashCode
  fullName.vb: Collectathon.Arrays.FlexibleArray(Of TElement, TSelf).GetHashCode
  nameWithType: FlexibleArray<TElement, TSelf>.GetHashCode
  nameWithType.vb: FlexibleArray(Of TElement, TSelf).GetHashCode
- uid: Collectathon.Arrays.FlexibleArray`2.Insert(nint,`0)
  name: Insert(nint, TElement)
  href: api/Collectathon.Arrays.FlexibleArray-2.html#Collectathon_Arrays_FlexibleArray_2_Insert_nint__0_
  commentId: M:Collectathon.Arrays.FlexibleArray`2.Insert(nint,`0)
  fullName: Collectathon.Arrays.FlexibleArray<TElement, TSelf>.Insert(nint, TElement)
  fullName.vb: Collectathon.Arrays.FlexibleArray(Of TElement, TSelf).Insert(nint, TElement)
  nameWithType: FlexibleArray<TElement, TSelf>.Insert(nint, TElement)
  nameWithType.vb: FlexibleArray(Of TElement, TSelf).Insert(nint, TElement)
- uid: Collectathon.Arrays.FlexibleArray`2.Insert(nint,`0[])
  name: Insert(nint, TElement[])
  href: api/Collectathon.Arrays.FlexibleArray-2.html#Collectathon_Arrays_FlexibleArray_2_Insert_nint__0___
  commentId: M:Collectathon.Arrays.FlexibleArray`2.Insert(nint,`0[])
  name.vb: Insert(nint, TElement())
  fullName: Collectathon.Arrays.FlexibleArray<TElement, TSelf>.Insert(nint, TElement[])
  fullName.vb: Collectathon.Arrays.FlexibleArray(Of TElement, TSelf).Insert(nint, TElement())
  nameWithType: FlexibleArray<TElement, TSelf>.Insert(nint, TElement[])
  nameWithType.vb: FlexibleArray(Of TElement, TSelf).Insert(nint, TElement())
- uid: Collectathon.Arrays.FlexibleArray`2.Insert(nint,System.Memory{`0})
  name: Insert(nint, Memory<TElement>)
  href: api/Collectathon.Arrays.FlexibleArray-2.html#Collectathon_Arrays_FlexibleArray_2_Insert_nint_System_Memory__0__
  commentId: M:Collectathon.Arrays.FlexibleArray`2.Insert(nint,System.Memory{`0})
  name.vb: Insert(nint, Memory(Of TElement))
  fullName: Collectathon.Arrays.FlexibleArray<TElement, TSelf>.Insert(nint, System.Memory<TElement>)
  fullName.vb: Collectathon.Arrays.FlexibleArray(Of TElement, TSelf).Insert(nint, System.Memory(Of TElement))
  nameWithType: FlexibleArray<TElement, TSelf>.Insert(nint, Memory<TElement>)
  nameWithType.vb: FlexibleArray(Of TElement, TSelf).Insert(nint, Memory(Of TElement))
- uid: Collectathon.Arrays.FlexibleArray`2.Insert(nint,System.ReadOnlyMemory{`0})
  name: Insert(nint, ReadOnlyMemory<TElement>)
  href: api/Collectathon.Arrays.FlexibleArray-2.html#Collectathon_Arrays_FlexibleArray_2_Insert_nint_System_ReadOnlyMemory__0__
  commentId: M:Collectathon.Arrays.FlexibleArray`2.Insert(nint,System.ReadOnlyMemory{`0})
  name.vb: Insert(nint, ReadOnlyMemory(Of TElement))
  fullName: Collectathon.Arrays.FlexibleArray<TElement, TSelf>.Insert(nint, System.ReadOnlyMemory<TElement>)
  fullName.vb: Collectathon.Arrays.FlexibleArray(Of TElement, TSelf).Insert(nint, System.ReadOnlyMemory(Of TElement))
  nameWithType: FlexibleArray<TElement, TSelf>.Insert(nint, ReadOnlyMemory<TElement>)
  nameWithType.vb: FlexibleArray(Of TElement, TSelf).Insert(nint, ReadOnlyMemory(Of TElement))
- uid: Collectathon.Arrays.FlexibleArray`2.Insert(nint,System.ReadOnlySpan{`0})
  name: Insert(nint, ReadOnlySpan<TElement>)
  href: api/Collectathon.Arrays.FlexibleArray-2.html#Collectathon_Arrays_FlexibleArray_2_Insert_nint_System_ReadOnlySpan__0__
  commentId: M:Collectathon.Arrays.FlexibleArray`2.Insert(nint,System.ReadOnlySpan{`0})
  name.vb: Insert(nint, ReadOnlySpan(Of TElement))
  fullName: Collectathon.Arrays.FlexibleArray<TElement, TSelf>.Insert(nint, System.ReadOnlySpan<TElement>)
  fullName.vb: Collectathon.Arrays.FlexibleArray(Of TElement, TSelf).Insert(nint, System.ReadOnlySpan(Of TElement))
  nameWithType: FlexibleArray<TElement, TSelf>.Insert(nint, ReadOnlySpan<TElement>)
  nameWithType.vb: FlexibleArray(Of TElement, TSelf).Insert(nint, ReadOnlySpan(Of TElement))
- uid: Collectathon.Arrays.FlexibleArray`2.Insert(nint,System.Span{`0})
  name: Insert(nint, Span<TElement>)
  href: api/Collectathon.Arrays.FlexibleArray-2.html#Collectathon_Arrays_FlexibleArray_2_Insert_nint_System_Span__0__
  commentId: M:Collectathon.Arrays.FlexibleArray`2.Insert(nint,System.Span{`0})
  name.vb: Insert(nint, Span(Of TElement))
  fullName: Collectathon.Arrays.FlexibleArray<TElement, TSelf>.Insert(nint, System.Span<TElement>)
  fullName.vb: Collectathon.Arrays.FlexibleArray(Of TElement, TSelf).Insert(nint, System.Span(Of TElement))
  nameWithType: FlexibleArray<TElement, TSelf>.Insert(nint, Span<TElement>)
  nameWithType.vb: FlexibleArray(Of TElement, TSelf).Insert(nint, Span(Of TElement))
- uid: Collectathon.Arrays.FlexibleArray`2.Insert*
  name: Insert
  href: api/Collectathon.Arrays.FlexibleArray-2.html#Collectathon_Arrays_FlexibleArray_2_Insert_
  commentId: Overload:Collectathon.Arrays.FlexibleArray`2.Insert
  isSpec: "True"
  fullName: Collectathon.Arrays.FlexibleArray<TElement, TSelf>.Insert
  fullName.vb: Collectathon.Arrays.FlexibleArray(Of TElement, TSelf).Insert
  nameWithType: FlexibleArray<TElement, TSelf>.Insert
  nameWithType.vb: FlexibleArray(Of TElement, TSelf).Insert
- uid: Collectathon.Arrays.FlexibleArray`2.Item(nint)
  name: Item[nint]
  href: api/Collectathon.Arrays.FlexibleArray-2.html#Collectathon_Arrays_FlexibleArray_2_Item_nint_
  commentId: P:Collectathon.Arrays.FlexibleArray`2.Item(nint)
  name.vb: Item(nint)
  fullName: Collectathon.Arrays.FlexibleArray<TElement, TSelf>.Item[nint]
  fullName.vb: Collectathon.Arrays.FlexibleArray(Of TElement, TSelf).Item(nint)
  nameWithType: FlexibleArray<TElement, TSelf>.Item[nint]
  nameWithType.vb: FlexibleArray(Of TElement, TSelf).Item(nint)
- uid: Collectathon.Arrays.FlexibleArray`2.Item*
  name: Item
  href: api/Collectathon.Arrays.FlexibleArray-2.html#Collectathon_Arrays_FlexibleArray_2_Item_
  commentId: Overload:Collectathon.Arrays.FlexibleArray`2.Item
  isSpec: "True"
  fullName: Collectathon.Arrays.FlexibleArray<TElement, TSelf>.Item
  fullName.vb: Collectathon.Arrays.FlexibleArray(Of TElement, TSelf).Item
  nameWithType: FlexibleArray<TElement, TSelf>.Item
  nameWithType.vb: FlexibleArray(Of TElement, TSelf).Item
- uid: Collectathon.Arrays.FlexibleArray`2.Memory
  name: Memory
  href: api/Collectathon.Arrays.FlexibleArray-2.html#Collectathon_Arrays_FlexibleArray_2_Memory
  commentId: F:Collectathon.Arrays.FlexibleArray`2.Memory
  fullName: Collectathon.Arrays.FlexibleArray<TElement, TSelf>.Memory
  fullName.vb: Collectathon.Arrays.FlexibleArray(Of TElement, TSelf).Memory
  nameWithType: FlexibleArray<TElement, TSelf>.Memory
  nameWithType.vb: FlexibleArray(Of TElement, TSelf).Memory
- uid: Collectathon.Arrays.FlexibleArray`2.op_LeftShift(Collectathon.Arrays.FlexibleArray{`0,`1},System.Int32)
  name: LeftShift(FlexibleArray<TElement, TSelf>, Int32)
  href: api/Collectathon.Arrays.FlexibleArray-2.html#Collectathon_Arrays_FlexibleArray_2_op_LeftShift_Collectathon_Arrays_FlexibleArray__0__1__System_Int32_
  commentId: M:Collectathon.Arrays.FlexibleArray`2.op_LeftShift(Collectathon.Arrays.FlexibleArray{`0,`1},System.Int32)
  name.vb: LeftShift(FlexibleArray(Of TElement, TSelf), Int32)
  fullName: Collectathon.Arrays.FlexibleArray<TElement, TSelf>.LeftShift(Collectathon.Arrays.FlexibleArray<TElement, TSelf>, System.Int32)
  fullName.vb: Collectathon.Arrays.FlexibleArray(Of TElement, TSelf).LeftShift(Collectathon.Arrays.FlexibleArray(Of TElement, TSelf), System.Int32)
  nameWithType: FlexibleArray<TElement, TSelf>.LeftShift(FlexibleArray<TElement, TSelf>, Int32)
  nameWithType.vb: FlexibleArray(Of TElement, TSelf).LeftShift(FlexibleArray(Of TElement, TSelf), Int32)
- uid: Collectathon.Arrays.FlexibleArray`2.op_LeftShift*
  name: LeftShift
  href: api/Collectathon.Arrays.FlexibleArray-2.html#Collectathon_Arrays_FlexibleArray_2_op_LeftShift_
  commentId: Overload:Collectathon.Arrays.FlexibleArray`2.op_LeftShift
  isSpec: "True"
  fullName: Collectathon.Arrays.FlexibleArray<TElement, TSelf>.LeftShift
  fullName.vb: Collectathon.Arrays.FlexibleArray(Of TElement, TSelf).LeftShift
  nameWithType: FlexibleArray<TElement, TSelf>.LeftShift
  nameWithType.vb: FlexibleArray(Of TElement, TSelf).LeftShift
- uid: Collectathon.Arrays.FlexibleArray`2.op_RightShift(Collectathon.Arrays.FlexibleArray{`0,`1},System.Int32)
  name: RightShift(FlexibleArray<TElement, TSelf>, Int32)
  href: api/Collectathon.Arrays.FlexibleArray-2.html#Collectathon_Arrays_FlexibleArray_2_op_RightShift_Collectathon_Arrays_FlexibleArray__0__1__System_Int32_
  commentId: M:Collectathon.Arrays.FlexibleArray`2.op_RightShift(Collectathon.Arrays.FlexibleArray{`0,`1},System.Int32)
  name.vb: RightShift(FlexibleArray(Of TElement, TSelf), Int32)
  fullName: Collectathon.Arrays.FlexibleArray<TElement, TSelf>.RightShift(Collectathon.Arrays.FlexibleArray<TElement, TSelf>, System.Int32)
  fullName.vb: Collectathon.Arrays.FlexibleArray(Of TElement, TSelf).RightShift(Collectathon.Arrays.FlexibleArray(Of TElement, TSelf), System.Int32)
  nameWithType: FlexibleArray<TElement, TSelf>.RightShift(FlexibleArray<TElement, TSelf>, Int32)
  nameWithType.vb: FlexibleArray(Of TElement, TSelf).RightShift(FlexibleArray(Of TElement, TSelf), Int32)
- uid: Collectathon.Arrays.FlexibleArray`2.op_RightShift*
  name: RightShift
  href: api/Collectathon.Arrays.FlexibleArray-2.html#Collectathon_Arrays_FlexibleArray_2_op_RightShift_
  commentId: Overload:Collectathon.Arrays.FlexibleArray`2.op_RightShift
  isSpec: "True"
  fullName: Collectathon.Arrays.FlexibleArray<TElement, TSelf>.RightShift
  fullName.vb: Collectathon.Arrays.FlexibleArray(Of TElement, TSelf).RightShift
  nameWithType: FlexibleArray<TElement, TSelf>.RightShift
  nameWithType.vb: FlexibleArray(Of TElement, TSelf).RightShift
- uid: Collectathon.Arrays.FlexibleArray`2.Postpend(`0)
  name: Postpend(TElement)
  href: api/Collectathon.Arrays.FlexibleArray-2.html#Collectathon_Arrays_FlexibleArray_2_Postpend__0_
  commentId: M:Collectathon.Arrays.FlexibleArray`2.Postpend(`0)
  fullName: Collectathon.Arrays.FlexibleArray<TElement, TSelf>.Postpend(TElement)
  fullName.vb: Collectathon.Arrays.FlexibleArray(Of TElement, TSelf).Postpend(TElement)
  nameWithType: FlexibleArray<TElement, TSelf>.Postpend(TElement)
  nameWithType.vb: FlexibleArray(Of TElement, TSelf).Postpend(TElement)
- uid: Collectathon.Arrays.FlexibleArray`2.Postpend(`0[])
  name: Postpend(TElement[])
  href: api/Collectathon.Arrays.FlexibleArray-2.html#Collectathon_Arrays_FlexibleArray_2_Postpend__0___
  commentId: M:Collectathon.Arrays.FlexibleArray`2.Postpend(`0[])
  name.vb: Postpend(TElement())
  fullName: Collectathon.Arrays.FlexibleArray<TElement, TSelf>.Postpend(TElement[])
  fullName.vb: Collectathon.Arrays.FlexibleArray(Of TElement, TSelf).Postpend(TElement())
  nameWithType: FlexibleArray<TElement, TSelf>.Postpend(TElement[])
  nameWithType.vb: FlexibleArray(Of TElement, TSelf).Postpend(TElement())
- uid: Collectathon.Arrays.FlexibleArray`2.Postpend(System.Memory{`0})
  name: Postpend(Memory<TElement>)
  href: api/Collectathon.Arrays.FlexibleArray-2.html#Collectathon_Arrays_FlexibleArray_2_Postpend_System_Memory__0__
  commentId: M:Collectathon.Arrays.FlexibleArray`2.Postpend(System.Memory{`0})
  name.vb: Postpend(Memory(Of TElement))
  fullName: Collectathon.Arrays.FlexibleArray<TElement, TSelf>.Postpend(System.Memory<TElement>)
  fullName.vb: Collectathon.Arrays.FlexibleArray(Of TElement, TSelf).Postpend(System.Memory(Of TElement))
  nameWithType: FlexibleArray<TElement, TSelf>.Postpend(Memory<TElement>)
  nameWithType.vb: FlexibleArray(Of TElement, TSelf).Postpend(Memory(Of TElement))
- uid: Collectathon.Arrays.FlexibleArray`2.Postpend(System.ReadOnlyMemory{`0})
  name: Postpend(ReadOnlyMemory<TElement>)
  href: api/Collectathon.Arrays.FlexibleArray-2.html#Collectathon_Arrays_FlexibleArray_2_Postpend_System_ReadOnlyMemory__0__
  commentId: M:Collectathon.Arrays.FlexibleArray`2.Postpend(System.ReadOnlyMemory{`0})
  name.vb: Postpend(ReadOnlyMemory(Of TElement))
  fullName: Collectathon.Arrays.FlexibleArray<TElement, TSelf>.Postpend(System.ReadOnlyMemory<TElement>)
  fullName.vb: Collectathon.Arrays.FlexibleArray(Of TElement, TSelf).Postpend(System.ReadOnlyMemory(Of TElement))
  nameWithType: FlexibleArray<TElement, TSelf>.Postpend(ReadOnlyMemory<TElement>)
  nameWithType.vb: FlexibleArray(Of TElement, TSelf).Postpend(ReadOnlyMemory(Of TElement))
- uid: Collectathon.Arrays.FlexibleArray`2.Postpend(System.ReadOnlySpan{`0})
  name: Postpend(ReadOnlySpan<TElement>)
  href: api/Collectathon.Arrays.FlexibleArray-2.html#Collectathon_Arrays_FlexibleArray_2_Postpend_System_ReadOnlySpan__0__
  commentId: M:Collectathon.Arrays.FlexibleArray`2.Postpend(System.ReadOnlySpan{`0})
  name.vb: Postpend(ReadOnlySpan(Of TElement))
  fullName: Collectathon.Arrays.FlexibleArray<TElement, TSelf>.Postpend(System.ReadOnlySpan<TElement>)
  fullName.vb: Collectathon.Arrays.FlexibleArray(Of TElement, TSelf).Postpend(System.ReadOnlySpan(Of TElement))
  nameWithType: FlexibleArray<TElement, TSelf>.Postpend(ReadOnlySpan<TElement>)
  nameWithType.vb: FlexibleArray(Of TElement, TSelf).Postpend(ReadOnlySpan(Of TElement))
- uid: Collectathon.Arrays.FlexibleArray`2.Postpend(System.Span{`0})
  name: Postpend(Span<TElement>)
  href: api/Collectathon.Arrays.FlexibleArray-2.html#Collectathon_Arrays_FlexibleArray_2_Postpend_System_Span__0__
  commentId: M:Collectathon.Arrays.FlexibleArray`2.Postpend(System.Span{`0})
  name.vb: Postpend(Span(Of TElement))
  fullName: Collectathon.Arrays.FlexibleArray<TElement, TSelf>.Postpend(System.Span<TElement>)
  fullName.vb: Collectathon.Arrays.FlexibleArray(Of TElement, TSelf).Postpend(System.Span(Of TElement))
  nameWithType: FlexibleArray<TElement, TSelf>.Postpend(Span<TElement>)
  nameWithType.vb: FlexibleArray(Of TElement, TSelf).Postpend(Span(Of TElement))
- uid: Collectathon.Arrays.FlexibleArray`2.Postpend*
  name: Postpend
  href: api/Collectathon.Arrays.FlexibleArray-2.html#Collectathon_Arrays_FlexibleArray_2_Postpend_
  commentId: Overload:Collectathon.Arrays.FlexibleArray`2.Postpend
  isSpec: "True"
  fullName: Collectathon.Arrays.FlexibleArray<TElement, TSelf>.Postpend
  fullName.vb: Collectathon.Arrays.FlexibleArray(Of TElement, TSelf).Postpend
  nameWithType: FlexibleArray<TElement, TSelf>.Postpend
  nameWithType.vb: FlexibleArray(Of TElement, TSelf).Postpend
- uid: Collectathon.Arrays.FlexibleArray`2.Prepend(`0)
  name: Prepend(TElement)
  href: api/Collectathon.Arrays.FlexibleArray-2.html#Collectathon_Arrays_FlexibleArray_2_Prepend__0_
  commentId: M:Collectathon.Arrays.FlexibleArray`2.Prepend(`0)
  fullName: Collectathon.Arrays.FlexibleArray<TElement, TSelf>.Prepend(TElement)
  fullName.vb: Collectathon.Arrays.FlexibleArray(Of TElement, TSelf).Prepend(TElement)
  nameWithType: FlexibleArray<TElement, TSelf>.Prepend(TElement)
  nameWithType.vb: FlexibleArray(Of TElement, TSelf).Prepend(TElement)
- uid: Collectathon.Arrays.FlexibleArray`2.Prepend(`0[])
  name: Prepend(TElement[])
  href: api/Collectathon.Arrays.FlexibleArray-2.html#Collectathon_Arrays_FlexibleArray_2_Prepend__0___
  commentId: M:Collectathon.Arrays.FlexibleArray`2.Prepend(`0[])
  name.vb: Prepend(TElement())
  fullName: Collectathon.Arrays.FlexibleArray<TElement, TSelf>.Prepend(TElement[])
  fullName.vb: Collectathon.Arrays.FlexibleArray(Of TElement, TSelf).Prepend(TElement())
  nameWithType: FlexibleArray<TElement, TSelf>.Prepend(TElement[])
  nameWithType.vb: FlexibleArray(Of TElement, TSelf).Prepend(TElement())
- uid: Collectathon.Arrays.FlexibleArray`2.Prepend(System.Memory{`0})
  name: Prepend(Memory<TElement>)
  href: api/Collectathon.Arrays.FlexibleArray-2.html#Collectathon_Arrays_FlexibleArray_2_Prepend_System_Memory__0__
  commentId: M:Collectathon.Arrays.FlexibleArray`2.Prepend(System.Memory{`0})
  name.vb: Prepend(Memory(Of TElement))
  fullName: Collectathon.Arrays.FlexibleArray<TElement, TSelf>.Prepend(System.Memory<TElement>)
  fullName.vb: Collectathon.Arrays.FlexibleArray(Of TElement, TSelf).Prepend(System.Memory(Of TElement))
  nameWithType: FlexibleArray<TElement, TSelf>.Prepend(Memory<TElement>)
  nameWithType.vb: FlexibleArray(Of TElement, TSelf).Prepend(Memory(Of TElement))
- uid: Collectathon.Arrays.FlexibleArray`2.Prepend(System.ReadOnlyMemory{`0})
  name: Prepend(ReadOnlyMemory<TElement>)
  href: api/Collectathon.Arrays.FlexibleArray-2.html#Collectathon_Arrays_FlexibleArray_2_Prepend_System_ReadOnlyMemory__0__
  commentId: M:Collectathon.Arrays.FlexibleArray`2.Prepend(System.ReadOnlyMemory{`0})
  name.vb: Prepend(ReadOnlyMemory(Of TElement))
  fullName: Collectathon.Arrays.FlexibleArray<TElement, TSelf>.Prepend(System.ReadOnlyMemory<TElement>)
  fullName.vb: Collectathon.Arrays.FlexibleArray(Of TElement, TSelf).Prepend(System.ReadOnlyMemory(Of TElement))
  nameWithType: FlexibleArray<TElement, TSelf>.Prepend(ReadOnlyMemory<TElement>)
  nameWithType.vb: FlexibleArray(Of TElement, TSelf).Prepend(ReadOnlyMemory(Of TElement))
- uid: Collectathon.Arrays.FlexibleArray`2.Prepend(System.ReadOnlySpan{`0})
  name: Prepend(ReadOnlySpan<TElement>)
  href: api/Collectathon.Arrays.FlexibleArray-2.html#Collectathon_Arrays_FlexibleArray_2_Prepend_System_ReadOnlySpan__0__
  commentId: M:Collectathon.Arrays.FlexibleArray`2.Prepend(System.ReadOnlySpan{`0})
  name.vb: Prepend(ReadOnlySpan(Of TElement))
  fullName: Collectathon.Arrays.FlexibleArray<TElement, TSelf>.Prepend(System.ReadOnlySpan<TElement>)
  fullName.vb: Collectathon.Arrays.FlexibleArray(Of TElement, TSelf).Prepend(System.ReadOnlySpan(Of TElement))
  nameWithType: FlexibleArray<TElement, TSelf>.Prepend(ReadOnlySpan<TElement>)
  nameWithType.vb: FlexibleArray(Of TElement, TSelf).Prepend(ReadOnlySpan(Of TElement))
- uid: Collectathon.Arrays.FlexibleArray`2.Prepend(System.Span{`0})
  name: Prepend(Span<TElement>)
  href: api/Collectathon.Arrays.FlexibleArray-2.html#Collectathon_Arrays_FlexibleArray_2_Prepend_System_Span__0__
  commentId: M:Collectathon.Arrays.FlexibleArray`2.Prepend(System.Span{`0})
  name.vb: Prepend(Span(Of TElement))
  fullName: Collectathon.Arrays.FlexibleArray<TElement, TSelf>.Prepend(System.Span<TElement>)
  fullName.vb: Collectathon.Arrays.FlexibleArray(Of TElement, TSelf).Prepend(System.Span(Of TElement))
  nameWithType: FlexibleArray<TElement, TSelf>.Prepend(Span<TElement>)
  nameWithType.vb: FlexibleArray(Of TElement, TSelf).Prepend(Span(Of TElement))
- uid: Collectathon.Arrays.FlexibleArray`2.Prepend*
  name: Prepend
  href: api/Collectathon.Arrays.FlexibleArray-2.html#Collectathon_Arrays_FlexibleArray_2_Prepend_
  commentId: Overload:Collectathon.Arrays.FlexibleArray`2.Prepend
  isSpec: "True"
  fullName: Collectathon.Arrays.FlexibleArray<TElement, TSelf>.Prepend
  fullName.vb: Collectathon.Arrays.FlexibleArray(Of TElement, TSelf).Prepend
  nameWithType: FlexibleArray<TElement, TSelf>.Prepend
  nameWithType.vb: FlexibleArray(Of TElement, TSelf).Prepend
- uid: Collectathon.Arrays.FlexibleArray`2.Remove(`0)
  name: Remove(TElement)
  href: api/Collectathon.Arrays.FlexibleArray-2.html#Collectathon_Arrays_FlexibleArray_2_Remove__0_
  commentId: M:Collectathon.Arrays.FlexibleArray`2.Remove(`0)
  fullName: Collectathon.Arrays.FlexibleArray<TElement, TSelf>.Remove(TElement)
  fullName.vb: Collectathon.Arrays.FlexibleArray(Of TElement, TSelf).Remove(TElement)
  nameWithType: FlexibleArray<TElement, TSelf>.Remove(TElement)
  nameWithType.vb: FlexibleArray(Of TElement, TSelf).Remove(TElement)
- uid: Collectathon.Arrays.FlexibleArray`2.Remove*
  name: Remove
  href: api/Collectathon.Arrays.FlexibleArray-2.html#Collectathon_Arrays_FlexibleArray_2_Remove_
  commentId: Overload:Collectathon.Arrays.FlexibleArray`2.Remove
  isSpec: "True"
  fullName: Collectathon.Arrays.FlexibleArray<TElement, TSelf>.Remove
  fullName.vb: Collectathon.Arrays.FlexibleArray(Of TElement, TSelf).Remove
  nameWithType: FlexibleArray<TElement, TSelf>.Remove
  nameWithType.vb: FlexibleArray(Of TElement, TSelf).Remove
- uid: Collectathon.Arrays.FlexibleArray`2.RemoveFirst(`0)
  name: RemoveFirst(TElement)
  href: api/Collectathon.Arrays.FlexibleArray-2.html#Collectathon_Arrays_FlexibleArray_2_RemoveFirst__0_
  commentId: M:Collectathon.Arrays.FlexibleArray`2.RemoveFirst(`0)
  fullName: Collectathon.Arrays.FlexibleArray<TElement, TSelf>.RemoveFirst(TElement)
  fullName.vb: Collectathon.Arrays.FlexibleArray(Of TElement, TSelf).RemoveFirst(TElement)
  nameWithType: FlexibleArray<TElement, TSelf>.RemoveFirst(TElement)
  nameWithType.vb: FlexibleArray(Of TElement, TSelf).RemoveFirst(TElement)
- uid: Collectathon.Arrays.FlexibleArray`2.RemoveFirst*
  name: RemoveFirst
  href: api/Collectathon.Arrays.FlexibleArray-2.html#Collectathon_Arrays_FlexibleArray_2_RemoveFirst_
  commentId: Overload:Collectathon.Arrays.FlexibleArray`2.RemoveFirst
  isSpec: "True"
  fullName: Collectathon.Arrays.FlexibleArray<TElement, TSelf>.RemoveFirst
  fullName.vb: Collectathon.Arrays.FlexibleArray(Of TElement, TSelf).RemoveFirst
  nameWithType: FlexibleArray<TElement, TSelf>.RemoveFirst
  nameWithType.vb: FlexibleArray(Of TElement, TSelf).RemoveFirst
- uid: Collectathon.Arrays.FlexibleArray`2.RemoveLast(`0)
  name: RemoveLast(TElement)
  href: api/Collectathon.Arrays.FlexibleArray-2.html#Collectathon_Arrays_FlexibleArray_2_RemoveLast__0_
  commentId: M:Collectathon.Arrays.FlexibleArray`2.RemoveLast(`0)
  fullName: Collectathon.Arrays.FlexibleArray<TElement, TSelf>.RemoveLast(TElement)
  fullName.vb: Collectathon.Arrays.FlexibleArray(Of TElement, TSelf).RemoveLast(TElement)
  nameWithType: FlexibleArray<TElement, TSelf>.RemoveLast(TElement)
  nameWithType.vb: FlexibleArray(Of TElement, TSelf).RemoveLast(TElement)
- uid: Collectathon.Arrays.FlexibleArray`2.RemoveLast*
  name: RemoveLast
  href: api/Collectathon.Arrays.FlexibleArray-2.html#Collectathon_Arrays_FlexibleArray_2_RemoveLast_
  commentId: Overload:Collectathon.Arrays.FlexibleArray`2.RemoveLast
  isSpec: "True"
  fullName: Collectathon.Arrays.FlexibleArray<TElement, TSelf>.RemoveLast
  fullName.vb: Collectathon.Arrays.FlexibleArray(Of TElement, TSelf).RemoveLast
  nameWithType: FlexibleArray<TElement, TSelf>.RemoveLast
  nameWithType.vb: FlexibleArray(Of TElement, TSelf).RemoveLast
- uid: Collectathon.Arrays.FlexibleArray`2.Replace(`0,`0)
  name: Replace(TElement, TElement)
  href: api/Collectathon.Arrays.FlexibleArray-2.html#Collectathon_Arrays_FlexibleArray_2_Replace__0__0_
  commentId: M:Collectathon.Arrays.FlexibleArray`2.Replace(`0,`0)
  fullName: Collectathon.Arrays.FlexibleArray<TElement, TSelf>.Replace(TElement, TElement)
  fullName.vb: Collectathon.Arrays.FlexibleArray(Of TElement, TSelf).Replace(TElement, TElement)
  nameWithType: FlexibleArray<TElement, TSelf>.Replace(TElement, TElement)
  nameWithType.vb: FlexibleArray(Of TElement, TSelf).Replace(TElement, TElement)
- uid: Collectathon.Arrays.FlexibleArray`2.Replace*
  name: Replace
  href: api/Collectathon.Arrays.FlexibleArray-2.html#Collectathon_Arrays_FlexibleArray_2_Replace_
  commentId: Overload:Collectathon.Arrays.FlexibleArray`2.Replace
  isSpec: "True"
  fullName: Collectathon.Arrays.FlexibleArray<TElement, TSelf>.Replace
  fullName.vb: Collectathon.Arrays.FlexibleArray(Of TElement, TSelf).Replace
  nameWithType: FlexibleArray<TElement, TSelf>.Replace
  nameWithType.vb: FlexibleArray(Of TElement, TSelf).Replace
- uid: Collectathon.Arrays.FlexibleArray`2.ShiftLeft
  name: ShiftLeft()
  href: api/Collectathon.Arrays.FlexibleArray-2.html#Collectathon_Arrays_FlexibleArray_2_ShiftLeft
  commentId: M:Collectathon.Arrays.FlexibleArray`2.ShiftLeft
  fullName: Collectathon.Arrays.FlexibleArray<TElement, TSelf>.ShiftLeft()
  fullName.vb: Collectathon.Arrays.FlexibleArray(Of TElement, TSelf).ShiftLeft()
  nameWithType: FlexibleArray<TElement, TSelf>.ShiftLeft()
  nameWithType.vb: FlexibleArray(Of TElement, TSelf).ShiftLeft()
- uid: Collectathon.Arrays.FlexibleArray`2.ShiftLeft(nint)
  name: ShiftLeft(nint)
  href: api/Collectathon.Arrays.FlexibleArray-2.html#Collectathon_Arrays_FlexibleArray_2_ShiftLeft_nint_
  commentId: M:Collectathon.Arrays.FlexibleArray`2.ShiftLeft(nint)
  fullName: Collectathon.Arrays.FlexibleArray<TElement, TSelf>.ShiftLeft(nint)
  fullName.vb: Collectathon.Arrays.FlexibleArray(Of TElement, TSelf).ShiftLeft(nint)
  nameWithType: FlexibleArray<TElement, TSelf>.ShiftLeft(nint)
  nameWithType.vb: FlexibleArray(Of TElement, TSelf).ShiftLeft(nint)
- uid: Collectathon.Arrays.FlexibleArray`2.ShiftLeft*
  name: ShiftLeft
  href: api/Collectathon.Arrays.FlexibleArray-2.html#Collectathon_Arrays_FlexibleArray_2_ShiftLeft_
  commentId: Overload:Collectathon.Arrays.FlexibleArray`2.ShiftLeft
  isSpec: "True"
  fullName: Collectathon.Arrays.FlexibleArray<TElement, TSelf>.ShiftLeft
  fullName.vb: Collectathon.Arrays.FlexibleArray(Of TElement, TSelf).ShiftLeft
  nameWithType: FlexibleArray<TElement, TSelf>.ShiftLeft
  nameWithType.vb: FlexibleArray(Of TElement, TSelf).ShiftLeft
- uid: Collectathon.Arrays.FlexibleArray`2.ShiftRight
  name: ShiftRight()
  href: api/Collectathon.Arrays.FlexibleArray-2.html#Collectathon_Arrays_FlexibleArray_2_ShiftRight
  commentId: M:Collectathon.Arrays.FlexibleArray`2.ShiftRight
  fullName: Collectathon.Arrays.FlexibleArray<TElement, TSelf>.ShiftRight()
  fullName.vb: Collectathon.Arrays.FlexibleArray(Of TElement, TSelf).ShiftRight()
  nameWithType: FlexibleArray<TElement, TSelf>.ShiftRight()
  nameWithType.vb: FlexibleArray(Of TElement, TSelf).ShiftRight()
- uid: Collectathon.Arrays.FlexibleArray`2.ShiftRight(nint)
  name: ShiftRight(nint)
  href: api/Collectathon.Arrays.FlexibleArray-2.html#Collectathon_Arrays_FlexibleArray_2_ShiftRight_nint_
  commentId: M:Collectathon.Arrays.FlexibleArray`2.ShiftRight(nint)
  fullName: Collectathon.Arrays.FlexibleArray<TElement, TSelf>.ShiftRight(nint)
  fullName.vb: Collectathon.Arrays.FlexibleArray(Of TElement, TSelf).ShiftRight(nint)
  nameWithType: FlexibleArray<TElement, TSelf>.ShiftRight(nint)
  nameWithType.vb: FlexibleArray(Of TElement, TSelf).ShiftRight(nint)
- uid: Collectathon.Arrays.FlexibleArray`2.ShiftRight*
  name: ShiftRight
  href: api/Collectathon.Arrays.FlexibleArray-2.html#Collectathon_Arrays_FlexibleArray_2_ShiftRight_
  commentId: Overload:Collectathon.Arrays.FlexibleArray`2.ShiftRight
  isSpec: "True"
  fullName: Collectathon.Arrays.FlexibleArray<TElement, TSelf>.ShiftRight
  fullName.vb: Collectathon.Arrays.FlexibleArray(Of TElement, TSelf).ShiftRight
  nameWithType: FlexibleArray<TElement, TSelf>.ShiftRight
  nameWithType.vb: FlexibleArray(Of TElement, TSelf).ShiftRight
- uid: Collectathon.Arrays.FlexibleArray`2.Slice
  name: Slice()
  href: api/Collectathon.Arrays.FlexibleArray-2.html#Collectathon_Arrays_FlexibleArray_2_Slice
  commentId: M:Collectathon.Arrays.FlexibleArray`2.Slice
  fullName: Collectathon.Arrays.FlexibleArray<TElement, TSelf>.Slice()
  fullName.vb: Collectathon.Arrays.FlexibleArray(Of TElement, TSelf).Slice()
  nameWithType: FlexibleArray<TElement, TSelf>.Slice()
  nameWithType.vb: FlexibleArray(Of TElement, TSelf).Slice()
- uid: Collectathon.Arrays.FlexibleArray`2.Slice(nint)
  name: Slice(nint)
  href: api/Collectathon.Arrays.FlexibleArray-2.html#Collectathon_Arrays_FlexibleArray_2_Slice_nint_
  commentId: M:Collectathon.Arrays.FlexibleArray`2.Slice(nint)
  fullName: Collectathon.Arrays.FlexibleArray<TElement, TSelf>.Slice(nint)
  fullName.vb: Collectathon.Arrays.FlexibleArray(Of TElement, TSelf).Slice(nint)
  nameWithType: FlexibleArray<TElement, TSelf>.Slice(nint)
  nameWithType.vb: FlexibleArray(Of TElement, TSelf).Slice(nint)
- uid: Collectathon.Arrays.FlexibleArray`2.Slice(nint,nint)
  name: Slice(nint, nint)
  href: api/Collectathon.Arrays.FlexibleArray-2.html#Collectathon_Arrays_FlexibleArray_2_Slice_nint_nint_
  commentId: M:Collectathon.Arrays.FlexibleArray`2.Slice(nint,nint)
  fullName: Collectathon.Arrays.FlexibleArray<TElement, TSelf>.Slice(nint, nint)
  fullName.vb: Collectathon.Arrays.FlexibleArray(Of TElement, TSelf).Slice(nint, nint)
  nameWithType: FlexibleArray<TElement, TSelf>.Slice(nint, nint)
  nameWithType.vb: FlexibleArray(Of TElement, TSelf).Slice(nint, nint)
- uid: Collectathon.Arrays.FlexibleArray`2.Slice*
  name: Slice
  href: api/Collectathon.Arrays.FlexibleArray-2.html#Collectathon_Arrays_FlexibleArray_2_Slice_
  commentId: Overload:Collectathon.Arrays.FlexibleArray`2.Slice
  isSpec: "True"
  fullName: Collectathon.Arrays.FlexibleArray<TElement, TSelf>.Slice
  fullName.vb: Collectathon.Arrays.FlexibleArray(Of TElement, TSelf).Slice
  nameWithType: FlexibleArray<TElement, TSelf>.Slice
  nameWithType.vb: FlexibleArray(Of TElement, TSelf).Slice
- uid: Collectathon.Arrays.FlexibleArray`2.System#Collections#Generic#IEnumerable{TElement}#GetEnumerator
  name: IEnumerable<TElement>.GetEnumerator()
  href: api/Collectathon.Arrays.FlexibleArray-2.html#Collectathon_Arrays_FlexibleArray_2_System_Collections_Generic_IEnumerable_TElement__GetEnumerator
  commentId: M:Collectathon.Arrays.FlexibleArray`2.System#Collections#Generic#IEnumerable{TElement}#GetEnumerator
  name.vb: System.Collections.Generic.IEnumerable<TElement>.GetEnumerator()
  fullName: Collectathon.Arrays.FlexibleArray<TElement, TSelf>.System.Collections.Generic.IEnumerable<TElement>.GetEnumerator()
  fullName.vb: Collectathon.Arrays.FlexibleArray(Of TElement, TSelf).System.Collections.Generic.IEnumerable<TElement>.GetEnumerator()
  nameWithType: FlexibleArray<TElement, TSelf>.IEnumerable<TElement>.GetEnumerator()
  nameWithType.vb: FlexibleArray(Of TElement, TSelf).System.Collections.Generic.IEnumerable<TElement>.GetEnumerator()
- uid: Collectathon.Arrays.FlexibleArray`2.System#Collections#Generic#IEnumerable{TElement}#GetEnumerator*
  name: IEnumerable<TElement>.GetEnumerator
  href: api/Collectathon.Arrays.FlexibleArray-2.html#Collectathon_Arrays_FlexibleArray_2_System_Collections_Generic_IEnumerable_TElement__GetEnumerator_
  commentId: Overload:Collectathon.Arrays.FlexibleArray`2.System#Collections#Generic#IEnumerable{TElement}#GetEnumerator
  isSpec: "True"
  name.vb: System.Collections.Generic.IEnumerable<TElement>.GetEnumerator
  fullName: Collectathon.Arrays.FlexibleArray<TElement, TSelf>.System.Collections.Generic.IEnumerable<TElement>.GetEnumerator
  fullName.vb: Collectathon.Arrays.FlexibleArray(Of TElement, TSelf).System.Collections.Generic.IEnumerable<TElement>.GetEnumerator
  nameWithType: FlexibleArray<TElement, TSelf>.IEnumerable<TElement>.GetEnumerator
  nameWithType.vb: FlexibleArray(Of TElement, TSelf).System.Collections.Generic.IEnumerable<TElement>.GetEnumerator
- uid: Collectathon.Arrays.FlexibleArray`2.System#Collections#IEnumerable#GetEnumerator
  name: IEnumerable.GetEnumerator()
  href: api/Collectathon.Arrays.FlexibleArray-2.html#Collectathon_Arrays_FlexibleArray_2_System_Collections_IEnumerable_GetEnumerator
  commentId: M:Collectathon.Arrays.FlexibleArray`2.System#Collections#IEnumerable#GetEnumerator
  name.vb: System.Collections.IEnumerable.GetEnumerator()
  fullName: Collectathon.Arrays.FlexibleArray<TElement, TSelf>.System.Collections.IEnumerable.GetEnumerator()
  fullName.vb: Collectathon.Arrays.FlexibleArray(Of TElement, TSelf).System.Collections.IEnumerable.GetEnumerator()
  nameWithType: FlexibleArray<TElement, TSelf>.IEnumerable.GetEnumerator()
  nameWithType.vb: FlexibleArray(Of TElement, TSelf).System.Collections.IEnumerable.GetEnumerator()
- uid: Collectathon.Arrays.FlexibleArray`2.System#Collections#IEnumerable#GetEnumerator*
  name: IEnumerable.GetEnumerator
  href: api/Collectathon.Arrays.FlexibleArray-2.html#Collectathon_Arrays_FlexibleArray_2_System_Collections_IEnumerable_GetEnumerator_
  commentId: Overload:Collectathon.Arrays.FlexibleArray`2.System#Collections#IEnumerable#GetEnumerator
  isSpec: "True"
  name.vb: System.Collections.IEnumerable.GetEnumerator
  fullName: Collectathon.Arrays.FlexibleArray<TElement, TSelf>.System.Collections.IEnumerable.GetEnumerator
  fullName.vb: Collectathon.Arrays.FlexibleArray(Of TElement, TSelf).System.Collections.IEnumerable.GetEnumerator
  nameWithType: FlexibleArray<TElement, TSelf>.IEnumerable.GetEnumerator
  nameWithType.vb: FlexibleArray(Of TElement, TSelf).System.Collections.IEnumerable.GetEnumerator
- uid: Collectathon.Arrays.FlexibleArray`2.ToString
  name: ToString()
  href: api/Collectathon.Arrays.FlexibleArray-2.html#Collectathon_Arrays_FlexibleArray_2_ToString
  commentId: M:Collectathon.Arrays.FlexibleArray`2.ToString
  fullName: Collectathon.Arrays.FlexibleArray<TElement, TSelf>.ToString()
  fullName.vb: Collectathon.Arrays.FlexibleArray(Of TElement, TSelf).ToString()
  nameWithType: FlexibleArray<TElement, TSelf>.ToString()
  nameWithType.vb: FlexibleArray(Of TElement, TSelf).ToString()
- uid: Collectathon.Arrays.FlexibleArray`2.ToString(nint)
  name: ToString(nint)
  href: api/Collectathon.Arrays.FlexibleArray-2.html#Collectathon_Arrays_FlexibleArray_2_ToString_nint_
  commentId: M:Collectathon.Arrays.FlexibleArray`2.ToString(nint)
  fullName: Collectathon.Arrays.FlexibleArray<TElement, TSelf>.ToString(nint)
  fullName.vb: Collectathon.Arrays.FlexibleArray(Of TElement, TSelf).ToString(nint)
  nameWithType: FlexibleArray<TElement, TSelf>.ToString(nint)
  nameWithType.vb: FlexibleArray(Of TElement, TSelf).ToString(nint)
- uid: Collectathon.Arrays.FlexibleArray`2.ToString*
  name: ToString
  href: api/Collectathon.Arrays.FlexibleArray-2.html#Collectathon_Arrays_FlexibleArray_2_ToString_
  commentId: Overload:Collectathon.Arrays.FlexibleArray`2.ToString
  isSpec: "True"
  fullName: Collectathon.Arrays.FlexibleArray<TElement, TSelf>.ToString
  fullName.vb: Collectathon.Arrays.FlexibleArray(Of TElement, TSelf).ToString
  nameWithType: FlexibleArray<TElement, TSelf>.ToString
  nameWithType.vb: FlexibleArray(Of TElement, TSelf).ToString
- uid: Collectathon.Arrays.FlexibleArray`3
  name: FlexibleArray<TIndex, TElement, TSelf>
  href: api/Collectathon.Arrays.FlexibleArray-3.html
  commentId: T:Collectathon.Arrays.FlexibleArray`3
  name.vb: FlexibleArray(Of TIndex, TElement, TSelf)
  fullName: Collectathon.Arrays.FlexibleArray<TIndex, TElement, TSelf>
  fullName.vb: Collectathon.Arrays.FlexibleArray(Of TIndex, TElement, TSelf)
  nameWithType: FlexibleArray<TIndex, TElement, TSelf>
  nameWithType.vb: FlexibleArray(Of TIndex, TElement, TSelf)
- uid: Collectathon.Arrays.FlexibleArray`3.#ctor(nint,nint)
  name: FlexibleArray(nint, nint)
  href: api/Collectathon.Arrays.FlexibleArray-3.html#Collectathon_Arrays_FlexibleArray_3__ctor_nint_nint_
  commentId: M:Collectathon.Arrays.FlexibleArray`3.#ctor(nint,nint)
  fullName: Collectathon.Arrays.FlexibleArray<TIndex, TElement, TSelf>.FlexibleArray(nint, nint)
  fullName.vb: Collectathon.Arrays.FlexibleArray(Of TIndex, TElement, TSelf).FlexibleArray(nint, nint)
  nameWithType: FlexibleArray<TIndex, TElement, TSelf>.FlexibleArray(nint, nint)
  nameWithType.vb: FlexibleArray(Of TIndex, TElement, TSelf).FlexibleArray(nint, nint)
- uid: Collectathon.Arrays.FlexibleArray`3.#ctor(System.ValueTuple{`0,`1}[],nint)
  name: FlexibleArray((TIndex, TElement)[], nint)
  href: api/Collectathon.Arrays.FlexibleArray-3.html#Collectathon_Arrays_FlexibleArray_3__ctor_System_ValueTuple__0__1____nint_
  commentId: M:Collectathon.Arrays.FlexibleArray`3.#ctor(System.ValueTuple{`0,`1}[],nint)
  name.vb: FlexibleArray((TIndex, TElement)(), nint)
  fullName: Collectathon.Arrays.FlexibleArray<TIndex, TElement, TSelf>.FlexibleArray(System.ValueTuple<TIndex, TElement>[], nint)
  fullName.vb: Collectathon.Arrays.FlexibleArray(Of TIndex, TElement, TSelf).FlexibleArray(System.ValueTuple(Of TIndex, TElement)(), nint)
  nameWithType: FlexibleArray<TIndex, TElement, TSelf>.FlexibleArray((TIndex, TElement)[], nint)
  nameWithType.vb: FlexibleArray(Of TIndex, TElement, TSelf).FlexibleArray((TIndex, TElement)(), nint)
- uid: Collectathon.Arrays.FlexibleArray`3.#ctor*
  name: FlexibleArray
  href: api/Collectathon.Arrays.FlexibleArray-3.html#Collectathon_Arrays_FlexibleArray_3__ctor_
  commentId: Overload:Collectathon.Arrays.FlexibleArray`3.#ctor
  isSpec: "True"
  fullName: Collectathon.Arrays.FlexibleArray<TIndex, TElement, TSelf>.FlexibleArray
  fullName.vb: Collectathon.Arrays.FlexibleArray(Of TIndex, TElement, TSelf).FlexibleArray
  nameWithType: FlexibleArray<TIndex, TElement, TSelf>.FlexibleArray
  nameWithType.vb: FlexibleArray(Of TIndex, TElement, TSelf).FlexibleArray
- uid: Collectathon.Arrays.FlexibleArray`3.Add(`0,`1)
  name: Add(TIndex, TElement)
  href: api/Collectathon.Arrays.FlexibleArray-3.html#Collectathon_Arrays_FlexibleArray_3_Add__0__1_
  commentId: M:Collectathon.Arrays.FlexibleArray`3.Add(`0,`1)
  fullName: Collectathon.Arrays.FlexibleArray<TIndex, TElement, TSelf>.Add(TIndex, TElement)
  fullName.vb: Collectathon.Arrays.FlexibleArray(Of TIndex, TElement, TSelf).Add(TIndex, TElement)
  nameWithType: FlexibleArray<TIndex, TElement, TSelf>.Add(TIndex, TElement)
  nameWithType.vb: FlexibleArray(Of TIndex, TElement, TSelf).Add(TIndex, TElement)
- uid: Collectathon.Arrays.FlexibleArray`3.Add*
  name: Add
  href: api/Collectathon.Arrays.FlexibleArray-3.html#Collectathon_Arrays_FlexibleArray_3_Add_
  commentId: Overload:Collectathon.Arrays.FlexibleArray`3.Add
  isSpec: "True"
  fullName: Collectathon.Arrays.FlexibleArray<TIndex, TElement, TSelf>.Add
  fullName.vb: Collectathon.Arrays.FlexibleArray(Of TIndex, TElement, TSelf).Add
  nameWithType: FlexibleArray<TIndex, TElement, TSelf>.Add
  nameWithType.vb: FlexibleArray(Of TIndex, TElement, TSelf).Add
- uid: Collectathon.Arrays.FlexibleArray`3.Capacity
  name: Capacity
  href: api/Collectathon.Arrays.FlexibleArray-3.html#Collectathon_Arrays_FlexibleArray_3_Capacity
  commentId: P:Collectathon.Arrays.FlexibleArray`3.Capacity
  fullName: Collectathon.Arrays.FlexibleArray<TIndex, TElement, TSelf>.Capacity
  fullName.vb: Collectathon.Arrays.FlexibleArray(Of TIndex, TElement, TSelf).Capacity
  nameWithType: FlexibleArray<TIndex, TElement, TSelf>.Capacity
  nameWithType.vb: FlexibleArray(Of TIndex, TElement, TSelf).Capacity
- uid: Collectathon.Arrays.FlexibleArray`3.Capacity*
  name: Capacity
  href: api/Collectathon.Arrays.FlexibleArray-3.html#Collectathon_Arrays_FlexibleArray_3_Capacity_
  commentId: Overload:Collectathon.Arrays.FlexibleArray`3.Capacity
  isSpec: "True"
  fullName: Collectathon.Arrays.FlexibleArray<TIndex, TElement, TSelf>.Capacity
  fullName.vb: Collectathon.Arrays.FlexibleArray(Of TIndex, TElement, TSelf).Capacity
  nameWithType: FlexibleArray<TIndex, TElement, TSelf>.Capacity
  nameWithType.vb: FlexibleArray(Of TIndex, TElement, TSelf).Capacity
- uid: Collectathon.Arrays.FlexibleArray`3.Clear
  name: Clear()
  href: api/Collectathon.Arrays.FlexibleArray-3.html#Collectathon_Arrays_FlexibleArray_3_Clear
  commentId: M:Collectathon.Arrays.FlexibleArray`3.Clear
  fullName: Collectathon.Arrays.FlexibleArray<TIndex, TElement, TSelf>.Clear()
  fullName.vb: Collectathon.Arrays.FlexibleArray(Of TIndex, TElement, TSelf).Clear()
  nameWithType: FlexibleArray<TIndex, TElement, TSelf>.Clear()
  nameWithType.vb: FlexibleArray(Of TIndex, TElement, TSelf).Clear()
- uid: Collectathon.Arrays.FlexibleArray`3.Clear*
  name: Clear
  href: api/Collectathon.Arrays.FlexibleArray-3.html#Collectathon_Arrays_FlexibleArray_3_Clear_
  commentId: Overload:Collectathon.Arrays.FlexibleArray`3.Clear
  isSpec: "True"
  fullName: Collectathon.Arrays.FlexibleArray<TIndex, TElement, TSelf>.Clear
  fullName.vb: Collectathon.Arrays.FlexibleArray(Of TIndex, TElement, TSelf).Clear
  nameWithType: FlexibleArray<TIndex, TElement, TSelf>.Clear
  nameWithType.vb: FlexibleArray(Of TIndex, TElement, TSelf).Clear
- uid: Collectathon.Arrays.FlexibleArray`3.Count
  name: Count
  href: api/Collectathon.Arrays.FlexibleArray-3.html#Collectathon_Arrays_FlexibleArray_3_Count
  commentId: P:Collectathon.Arrays.FlexibleArray`3.Count
  fullName: Collectathon.Arrays.FlexibleArray<TIndex, TElement, TSelf>.Count
  fullName.vb: Collectathon.Arrays.FlexibleArray(Of TIndex, TElement, TSelf).Count
  nameWithType: FlexibleArray<TIndex, TElement, TSelf>.Count
  nameWithType.vb: FlexibleArray(Of TIndex, TElement, TSelf).Count
- uid: Collectathon.Arrays.FlexibleArray`3.Count*
  name: Count
  href: api/Collectathon.Arrays.FlexibleArray-3.html#Collectathon_Arrays_FlexibleArray_3_Count_
  commentId: Overload:Collectathon.Arrays.FlexibleArray`3.Count
  isSpec: "True"
  fullName: Collectathon.Arrays.FlexibleArray<TIndex, TElement, TSelf>.Count
  fullName.vb: Collectathon.Arrays.FlexibleArray(Of TIndex, TElement, TSelf).Count
  nameWithType: FlexibleArray<TIndex, TElement, TSelf>.Count
  nameWithType.vb: FlexibleArray(Of TIndex, TElement, TSelf).Count
- uid: Collectathon.Arrays.FlexibleArray`3.Entries
  name: Entries
  href: api/Collectathon.Arrays.FlexibleArray-3.html#Collectathon_Arrays_FlexibleArray_3_Entries
  commentId: F:Collectathon.Arrays.FlexibleArray`3.Entries
  fullName: Collectathon.Arrays.FlexibleArray<TIndex, TElement, TSelf>.Entries
  fullName.vb: Collectathon.Arrays.FlexibleArray(Of TIndex, TElement, TSelf).Entries
  nameWithType: FlexibleArray<TIndex, TElement, TSelf>.Entries
  nameWithType.vb: FlexibleArray(Of TIndex, TElement, TSelf).Entries
- uid: Collectathon.Arrays.FlexibleArray`3.Enumerator
  name: FlexibleArray<TIndex, TElement, TSelf>.Enumerator
  href: api/Collectathon.Arrays.FlexibleArray-3.Enumerator.html
  commentId: T:Collectathon.Arrays.FlexibleArray`3.Enumerator
  name.vb: FlexibleArray(Of TIndex, TElement, TSelf).Enumerator
  fullName: Collectathon.Arrays.FlexibleArray<TIndex, TElement, TSelf>.Enumerator
  fullName.vb: Collectathon.Arrays.FlexibleArray(Of TIndex, TElement, TSelf).Enumerator
  nameWithType: FlexibleArray<TIndex, TElement, TSelf>.Enumerator
  nameWithType.vb: FlexibleArray(Of TIndex, TElement, TSelf).Enumerator
- uid: Collectathon.Arrays.FlexibleArray`3.Enumerator.#ctor(`2)
  name: Enumerator(TSelf)
  href: api/Collectathon.Arrays.FlexibleArray-3.Enumerator.html#Collectathon_Arrays_FlexibleArray_3_Enumerator__ctor__2_
  commentId: M:Collectathon.Arrays.FlexibleArray`3.Enumerator.#ctor(`2)
  fullName: Collectathon.Arrays.FlexibleArray<TIndex, TElement, TSelf>.Enumerator.Enumerator(TSelf)
  fullName.vb: Collectathon.Arrays.FlexibleArray(Of TIndex, TElement, TSelf).Enumerator.Enumerator(TSelf)
  nameWithType: FlexibleArray<TIndex, TElement, TSelf>.Enumerator.Enumerator(TSelf)
  nameWithType.vb: FlexibleArray(Of TIndex, TElement, TSelf).Enumerator.Enumerator(TSelf)
- uid: Collectathon.Arrays.FlexibleArray`3.Enumerator.#ctor(System.Memory{System.ValueTuple{`0,`1}},nint)
  name: Enumerator(Memory<(TIndex, TElement)>, nint)
  href: api/Collectathon.Arrays.FlexibleArray-3.Enumerator.html#Collectathon_Arrays_FlexibleArray_3_Enumerator__ctor_System_Memory_System_ValueTuple__0__1___nint_
  commentId: M:Collectathon.Arrays.FlexibleArray`3.Enumerator.#ctor(System.Memory{System.ValueTuple{`0,`1}},nint)
  name.vb: Enumerator(Memory(Of (TIndex, TElement)), nint)
  fullName: Collectathon.Arrays.FlexibleArray<TIndex, TElement, TSelf>.Enumerator.Enumerator(System.Memory<System.ValueTuple<TIndex, TElement>>, nint)
  fullName.vb: Collectathon.Arrays.FlexibleArray(Of TIndex, TElement, TSelf).Enumerator.Enumerator(System.Memory(Of System.ValueTuple(Of TIndex, TElement)), nint)
  nameWithType: FlexibleArray<TIndex, TElement, TSelf>.Enumerator.Enumerator(Memory<(TIndex, TElement)>, nint)
  nameWithType.vb: FlexibleArray(Of TIndex, TElement, TSelf).Enumerator.Enumerator(Memory(Of (TIndex, TElement)), nint)
- uid: Collectathon.Arrays.FlexibleArray`3.Enumerator.#ctor*
  name: Enumerator
  href: api/Collectathon.Arrays.FlexibleArray-3.Enumerator.html#Collectathon_Arrays_FlexibleArray_3_Enumerator__ctor_
  commentId: Overload:Collectathon.Arrays.FlexibleArray`3.Enumerator.#ctor
  isSpec: "True"
  fullName: Collectathon.Arrays.FlexibleArray<TIndex, TElement, TSelf>.Enumerator.Enumerator
  fullName.vb: Collectathon.Arrays.FlexibleArray(Of TIndex, TElement, TSelf).Enumerator.Enumerator
  nameWithType: FlexibleArray<TIndex, TElement, TSelf>.Enumerator.Enumerator
  nameWithType.vb: FlexibleArray(Of TIndex, TElement, TSelf).Enumerator.Enumerator
- uid: Collectathon.Arrays.FlexibleArray`3.Enumerator.Count
  name: Count
  href: api/Collectathon.Arrays.FlexibleArray-3.Enumerator.html#Collectathon_Arrays_FlexibleArray_3_Enumerator_Count
  commentId: P:Collectathon.Arrays.FlexibleArray`3.Enumerator.Count
  fullName: Collectathon.Arrays.FlexibleArray<TIndex, TElement, TSelf>.Enumerator.Count
  fullName.vb: Collectathon.Arrays.FlexibleArray(Of TIndex, TElement, TSelf).Enumerator.Count
  nameWithType: FlexibleArray<TIndex, TElement, TSelf>.Enumerator.Count
  nameWithType.vb: FlexibleArray(Of TIndex, TElement, TSelf).Enumerator.Count
- uid: Collectathon.Arrays.FlexibleArray`3.Enumerator.Count*
  name: Count
  href: api/Collectathon.Arrays.FlexibleArray-3.Enumerator.html#Collectathon_Arrays_FlexibleArray_3_Enumerator_Count_
  commentId: Overload:Collectathon.Arrays.FlexibleArray`3.Enumerator.Count
  isSpec: "True"
  fullName: Collectathon.Arrays.FlexibleArray<TIndex, TElement, TSelf>.Enumerator.Count
  fullName.vb: Collectathon.Arrays.FlexibleArray(Of TIndex, TElement, TSelf).Enumerator.Count
  nameWithType: FlexibleArray<TIndex, TElement, TSelf>.Enumerator.Count
  nameWithType.vb: FlexibleArray(Of TIndex, TElement, TSelf).Enumerator.Count
- uid: Collectathon.Arrays.FlexibleArray`3.Enumerator.Current
  name: Current
  href: api/Collectathon.Arrays.FlexibleArray-3.Enumerator.html#Collectathon_Arrays_FlexibleArray_3_Enumerator_Current
  commentId: P:Collectathon.Arrays.FlexibleArray`3.Enumerator.Current
  fullName: Collectathon.Arrays.FlexibleArray<TIndex, TElement, TSelf>.Enumerator.Current
  fullName.vb: Collectathon.Arrays.FlexibleArray(Of TIndex, TElement, TSelf).Enumerator.Current
  nameWithType: FlexibleArray<TIndex, TElement, TSelf>.Enumerator.Current
  nameWithType.vb: FlexibleArray(Of TIndex, TElement, TSelf).Enumerator.Current
- uid: Collectathon.Arrays.FlexibleArray`3.Enumerator.Current*
  name: Current
  href: api/Collectathon.Arrays.FlexibleArray-3.Enumerator.html#Collectathon_Arrays_FlexibleArray_3_Enumerator_Current_
  commentId: Overload:Collectathon.Arrays.FlexibleArray`3.Enumerator.Current
  isSpec: "True"
  fullName: Collectathon.Arrays.FlexibleArray<TIndex, TElement, TSelf>.Enumerator.Current
  fullName.vb: Collectathon.Arrays.FlexibleArray(Of TIndex, TElement, TSelf).Enumerator.Current
  nameWithType: FlexibleArray<TIndex, TElement, TSelf>.Enumerator.Current
  nameWithType.vb: FlexibleArray(Of TIndex, TElement, TSelf).Enumerator.Current
- uid: Collectathon.Arrays.FlexibleArray`3.Enumerator.Equals(Collectathon.Arrays.FlexibleArray{`0,`1,`2}.Enumerator)
  name: Equals(FlexibleArray<TIndex, TElement, TSelf>.Enumerator)
  href: api/Collectathon.Arrays.FlexibleArray-3.Enumerator.html#Collectathon_Arrays_FlexibleArray_3_Enumerator_Equals_Collectathon_Arrays_FlexibleArray__0__1__2__Enumerator_
  commentId: M:Collectathon.Arrays.FlexibleArray`3.Enumerator.Equals(Collectathon.Arrays.FlexibleArray{`0,`1,`2}.Enumerator)
  name.vb: Equals(FlexibleArray(Of TIndex, TElement, TSelf).Enumerator)
  fullName: Collectathon.Arrays.FlexibleArray<TIndex, TElement, TSelf>.Enumerator.Equals(Collectathon.Arrays.FlexibleArray<TIndex, TElement, TSelf>.Enumerator)
  fullName.vb: Collectathon.Arrays.FlexibleArray(Of TIndex, TElement, TSelf).Enumerator.Equals(Collectathon.Arrays.FlexibleArray(Of TIndex, TElement, TSelf).Enumerator)
  nameWithType: FlexibleArray<TIndex, TElement, TSelf>.Enumerator.Equals(FlexibleArray<TIndex, TElement, TSelf>.Enumerator)
  nameWithType.vb: FlexibleArray(Of TIndex, TElement, TSelf).Enumerator.Equals(FlexibleArray(Of TIndex, TElement, TSelf).Enumerator)
- uid: Collectathon.Arrays.FlexibleArray`3.Enumerator.Equals(System.Object)
  name: Equals(Object)
  href: api/Collectathon.Arrays.FlexibleArray-3.Enumerator.html#Collectathon_Arrays_FlexibleArray_3_Enumerator_Equals_System_Object_
  commentId: M:Collectathon.Arrays.FlexibleArray`3.Enumerator.Equals(System.Object)
  fullName: Collectathon.Arrays.FlexibleArray<TIndex, TElement, TSelf>.Enumerator.Equals(System.Object)
  fullName.vb: Collectathon.Arrays.FlexibleArray(Of TIndex, TElement, TSelf).Enumerator.Equals(System.Object)
  nameWithType: FlexibleArray<TIndex, TElement, TSelf>.Enumerator.Equals(Object)
  nameWithType.vb: FlexibleArray(Of TIndex, TElement, TSelf).Enumerator.Equals(Object)
- uid: Collectathon.Arrays.FlexibleArray`3.Enumerator.Equals*
  name: Equals
  href: api/Collectathon.Arrays.FlexibleArray-3.Enumerator.html#Collectathon_Arrays_FlexibleArray_3_Enumerator_Equals_
  commentId: Overload:Collectathon.Arrays.FlexibleArray`3.Enumerator.Equals
  isSpec: "True"
  fullName: Collectathon.Arrays.FlexibleArray<TIndex, TElement, TSelf>.Enumerator.Equals
  fullName.vb: Collectathon.Arrays.FlexibleArray(Of TIndex, TElement, TSelf).Enumerator.Equals
  nameWithType: FlexibleArray<TIndex, TElement, TSelf>.Enumerator.Equals
  nameWithType.vb: FlexibleArray(Of TIndex, TElement, TSelf).Enumerator.Equals
- uid: Collectathon.Arrays.FlexibleArray`3.Enumerator.MoveNext
  name: MoveNext()
  href: api/Collectathon.Arrays.FlexibleArray-3.Enumerator.html#Collectathon_Arrays_FlexibleArray_3_Enumerator_MoveNext
  commentId: M:Collectathon.Arrays.FlexibleArray`3.Enumerator.MoveNext
  fullName: Collectathon.Arrays.FlexibleArray<TIndex, TElement, TSelf>.Enumerator.MoveNext()
  fullName.vb: Collectathon.Arrays.FlexibleArray(Of TIndex, TElement, TSelf).Enumerator.MoveNext()
  nameWithType: FlexibleArray<TIndex, TElement, TSelf>.Enumerator.MoveNext()
  nameWithType.vb: FlexibleArray(Of TIndex, TElement, TSelf).Enumerator.MoveNext()
- uid: Collectathon.Arrays.FlexibleArray`3.Enumerator.MoveNext*
  name: MoveNext
  href: api/Collectathon.Arrays.FlexibleArray-3.Enumerator.html#Collectathon_Arrays_FlexibleArray_3_Enumerator_MoveNext_
  commentId: Overload:Collectathon.Arrays.FlexibleArray`3.Enumerator.MoveNext
  isSpec: "True"
  fullName: Collectathon.Arrays.FlexibleArray<TIndex, TElement, TSelf>.Enumerator.MoveNext
  fullName.vb: Collectathon.Arrays.FlexibleArray(Of TIndex, TElement, TSelf).Enumerator.MoveNext
  nameWithType: FlexibleArray<TIndex, TElement, TSelf>.Enumerator.MoveNext
  nameWithType.vb: FlexibleArray(Of TIndex, TElement, TSelf).Enumerator.MoveNext
- uid: Collectathon.Arrays.FlexibleArray`3.Enumerator.op_Equality(Collectathon.Arrays.FlexibleArray{`0,`1,`2}.Enumerator,Collectathon.Arrays.FlexibleArray{`0,`1,`2}.Enumerator)
  name: Equality(FlexibleArray<TIndex, TElement, TSelf>.Enumerator, FlexibleArray<TIndex, TElement, TSelf>.Enumerator)
  href: api/Collectathon.Arrays.FlexibleArray-3.Enumerator.html#Collectathon_Arrays_FlexibleArray_3_Enumerator_op_Equality_Collectathon_Arrays_FlexibleArray__0__1__2__Enumerator_Collectathon_Arrays_FlexibleArray__0__1__2__Enumerator_
  commentId: M:Collectathon.Arrays.FlexibleArray`3.Enumerator.op_Equality(Collectathon.Arrays.FlexibleArray{`0,`1,`2}.Enumerator,Collectathon.Arrays.FlexibleArray{`0,`1,`2}.Enumerator)
  name.vb: Equality(FlexibleArray(Of TIndex, TElement, TSelf).Enumerator, FlexibleArray(Of TIndex, TElement, TSelf).Enumerator)
  fullName: Collectathon.Arrays.FlexibleArray<TIndex, TElement, TSelf>.Enumerator.Equality(Collectathon.Arrays.FlexibleArray<TIndex, TElement, TSelf>.Enumerator, Collectathon.Arrays.FlexibleArray<TIndex, TElement, TSelf>.Enumerator)
  fullName.vb: Collectathon.Arrays.FlexibleArray(Of TIndex, TElement, TSelf).Enumerator.Equality(Collectathon.Arrays.FlexibleArray(Of TIndex, TElement, TSelf).Enumerator, Collectathon.Arrays.FlexibleArray(Of TIndex, TElement, TSelf).Enumerator)
  nameWithType: FlexibleArray<TIndex, TElement, TSelf>.Enumerator.Equality(FlexibleArray<TIndex, TElement, TSelf>.Enumerator, FlexibleArray<TIndex, TElement, TSelf>.Enumerator)
  nameWithType.vb: FlexibleArray(Of TIndex, TElement, TSelf).Enumerator.Equality(FlexibleArray(Of TIndex, TElement, TSelf).Enumerator, FlexibleArray(Of TIndex, TElement, TSelf).Enumerator)
- uid: Collectathon.Arrays.FlexibleArray`3.Enumerator.op_Equality*
  name: Equality
  href: api/Collectathon.Arrays.FlexibleArray-3.Enumerator.html#Collectathon_Arrays_FlexibleArray_3_Enumerator_op_Equality_
  commentId: Overload:Collectathon.Arrays.FlexibleArray`3.Enumerator.op_Equality
  isSpec: "True"
  fullName: Collectathon.Arrays.FlexibleArray<TIndex, TElement, TSelf>.Enumerator.Equality
  fullName.vb: Collectathon.Arrays.FlexibleArray(Of TIndex, TElement, TSelf).Enumerator.Equality
  nameWithType: FlexibleArray<TIndex, TElement, TSelf>.Enumerator.Equality
  nameWithType.vb: FlexibleArray(Of TIndex, TElement, TSelf).Enumerator.Equality
- uid: Collectathon.Arrays.FlexibleArray`3.Enumerator.op_Inequality(Collectathon.Arrays.FlexibleArray{`0,`1,`2}.Enumerator,Collectathon.Arrays.FlexibleArray{`0,`1,`2}.Enumerator)
  name: Inequality(FlexibleArray<TIndex, TElement, TSelf>.Enumerator, FlexibleArray<TIndex, TElement, TSelf>.Enumerator)
  href: api/Collectathon.Arrays.FlexibleArray-3.Enumerator.html#Collectathon_Arrays_FlexibleArray_3_Enumerator_op_Inequality_Collectathon_Arrays_FlexibleArray__0__1__2__Enumerator_Collectathon_Arrays_FlexibleArray__0__1__2__Enumerator_
  commentId: M:Collectathon.Arrays.FlexibleArray`3.Enumerator.op_Inequality(Collectathon.Arrays.FlexibleArray{`0,`1,`2}.Enumerator,Collectathon.Arrays.FlexibleArray{`0,`1,`2}.Enumerator)
  name.vb: Inequality(FlexibleArray(Of TIndex, TElement, TSelf).Enumerator, FlexibleArray(Of TIndex, TElement, TSelf).Enumerator)
  fullName: Collectathon.Arrays.FlexibleArray<TIndex, TElement, TSelf>.Enumerator.Inequality(Collectathon.Arrays.FlexibleArray<TIndex, TElement, TSelf>.Enumerator, Collectathon.Arrays.FlexibleArray<TIndex, TElement, TSelf>.Enumerator)
  fullName.vb: Collectathon.Arrays.FlexibleArray(Of TIndex, TElement, TSelf).Enumerator.Inequality(Collectathon.Arrays.FlexibleArray(Of TIndex, TElement, TSelf).Enumerator, Collectathon.Arrays.FlexibleArray(Of TIndex, TElement, TSelf).Enumerator)
  nameWithType: FlexibleArray<TIndex, TElement, TSelf>.Enumerator.Inequality(FlexibleArray<TIndex, TElement, TSelf>.Enumerator, FlexibleArray<TIndex, TElement, TSelf>.Enumerator)
  nameWithType.vb: FlexibleArray(Of TIndex, TElement, TSelf).Enumerator.Inequality(FlexibleArray(Of TIndex, TElement, TSelf).Enumerator, FlexibleArray(Of TIndex, TElement, TSelf).Enumerator)
- uid: Collectathon.Arrays.FlexibleArray`3.Enumerator.op_Inequality*
  name: Inequality
  href: api/Collectathon.Arrays.FlexibleArray-3.Enumerator.html#Collectathon_Arrays_FlexibleArray_3_Enumerator_op_Inequality_
  commentId: Overload:Collectathon.Arrays.FlexibleArray`3.Enumerator.op_Inequality
  isSpec: "True"
  fullName: Collectathon.Arrays.FlexibleArray<TIndex, TElement, TSelf>.Enumerator.Inequality
  fullName.vb: Collectathon.Arrays.FlexibleArray(Of TIndex, TElement, TSelf).Enumerator.Inequality
  nameWithType: FlexibleArray<TIndex, TElement, TSelf>.Enumerator.Inequality
  nameWithType.vb: FlexibleArray(Of TIndex, TElement, TSelf).Enumerator.Inequality
- uid: Collectathon.Arrays.FlexibleArray`3.Enumerator.Reset
  name: Reset()
  href: api/Collectathon.Arrays.FlexibleArray-3.Enumerator.html#Collectathon_Arrays_FlexibleArray_3_Enumerator_Reset
  commentId: M:Collectathon.Arrays.FlexibleArray`3.Enumerator.Reset
  fullName: Collectathon.Arrays.FlexibleArray<TIndex, TElement, TSelf>.Enumerator.Reset()
  fullName.vb: Collectathon.Arrays.FlexibleArray(Of TIndex, TElement, TSelf).Enumerator.Reset()
  nameWithType: FlexibleArray<TIndex, TElement, TSelf>.Enumerator.Reset()
  nameWithType.vb: FlexibleArray(Of TIndex, TElement, TSelf).Enumerator.Reset()
- uid: Collectathon.Arrays.FlexibleArray`3.Enumerator.Reset*
  name: Reset
  href: api/Collectathon.Arrays.FlexibleArray-3.Enumerator.html#Collectathon_Arrays_FlexibleArray_3_Enumerator_Reset_
  commentId: Overload:Collectathon.Arrays.FlexibleArray`3.Enumerator.Reset
  isSpec: "True"
  fullName: Collectathon.Arrays.FlexibleArray<TIndex, TElement, TSelf>.Enumerator.Reset
  fullName.vb: Collectathon.Arrays.FlexibleArray(Of TIndex, TElement, TSelf).Enumerator.Reset
  nameWithType: FlexibleArray<TIndex, TElement, TSelf>.Enumerator.Reset
  nameWithType.vb: FlexibleArray(Of TIndex, TElement, TSelf).Enumerator.Reset
- uid: Collectathon.Arrays.FlexibleArray`3.Enumerator.System#Collections#IEnumerator#Current
  name: IEnumerator.Current
  href: api/Collectathon.Arrays.FlexibleArray-3.Enumerator.html#Collectathon_Arrays_FlexibleArray_3_Enumerator_System_Collections_IEnumerator_Current
  commentId: P:Collectathon.Arrays.FlexibleArray`3.Enumerator.System#Collections#IEnumerator#Current
  name.vb: System.Collections.IEnumerator.Current
  fullName: Collectathon.Arrays.FlexibleArray<TIndex, TElement, TSelf>.Enumerator.System.Collections.IEnumerator.Current
  fullName.vb: Collectathon.Arrays.FlexibleArray(Of TIndex, TElement, TSelf).Enumerator.System.Collections.IEnumerator.Current
  nameWithType: FlexibleArray<TIndex, TElement, TSelf>.Enumerator.IEnumerator.Current
  nameWithType.vb: FlexibleArray(Of TIndex, TElement, TSelf).Enumerator.System.Collections.IEnumerator.Current
- uid: Collectathon.Arrays.FlexibleArray`3.Enumerator.System#Collections#IEnumerator#Current*
  name: IEnumerator.Current
  href: api/Collectathon.Arrays.FlexibleArray-3.Enumerator.html#Collectathon_Arrays_FlexibleArray_3_Enumerator_System_Collections_IEnumerator_Current_
  commentId: Overload:Collectathon.Arrays.FlexibleArray`3.Enumerator.System#Collections#IEnumerator#Current
  isSpec: "True"
  name.vb: System.Collections.IEnumerator.Current
  fullName: Collectathon.Arrays.FlexibleArray<TIndex, TElement, TSelf>.Enumerator.System.Collections.IEnumerator.Current
  fullName.vb: Collectathon.Arrays.FlexibleArray(Of TIndex, TElement, TSelf).Enumerator.System.Collections.IEnumerator.Current
  nameWithType: FlexibleArray<TIndex, TElement, TSelf>.Enumerator.IEnumerator.Current
  nameWithType.vb: FlexibleArray(Of TIndex, TElement, TSelf).Enumerator.System.Collections.IEnumerator.Current
- uid: Collectathon.Arrays.FlexibleArray`3.GetEnumerator
  name: GetEnumerator()
  href: api/Collectathon.Arrays.FlexibleArray-3.html#Collectathon_Arrays_FlexibleArray_3_GetEnumerator
  commentId: M:Collectathon.Arrays.FlexibleArray`3.GetEnumerator
  fullName: Collectathon.Arrays.FlexibleArray<TIndex, TElement, TSelf>.GetEnumerator()
  fullName.vb: Collectathon.Arrays.FlexibleArray(Of TIndex, TElement, TSelf).GetEnumerator()
  nameWithType: FlexibleArray<TIndex, TElement, TSelf>.GetEnumerator()
  nameWithType.vb: FlexibleArray(Of TIndex, TElement, TSelf).GetEnumerator()
- uid: Collectathon.Arrays.FlexibleArray`3.GetEnumerator*
  name: GetEnumerator
  href: api/Collectathon.Arrays.FlexibleArray-3.html#Collectathon_Arrays_FlexibleArray_3_GetEnumerator_
  commentId: Overload:Collectathon.Arrays.FlexibleArray`3.GetEnumerator
  isSpec: "True"
  fullName: Collectathon.Arrays.FlexibleArray<TIndex, TElement, TSelf>.GetEnumerator
  fullName.vb: Collectathon.Arrays.FlexibleArray(Of TIndex, TElement, TSelf).GetEnumerator
  nameWithType: FlexibleArray<TIndex, TElement, TSelf>.GetEnumerator
  nameWithType.vb: FlexibleArray(Of TIndex, TElement, TSelf).GetEnumerator
- uid: Collectathon.Arrays.FlexibleArray`3.GetHashCode
  name: GetHashCode()
  href: api/Collectathon.Arrays.FlexibleArray-3.html#Collectathon_Arrays_FlexibleArray_3_GetHashCode
  commentId: M:Collectathon.Arrays.FlexibleArray`3.GetHashCode
  fullName: Collectathon.Arrays.FlexibleArray<TIndex, TElement, TSelf>.GetHashCode()
  fullName.vb: Collectathon.Arrays.FlexibleArray(Of TIndex, TElement, TSelf).GetHashCode()
  nameWithType: FlexibleArray<TIndex, TElement, TSelf>.GetHashCode()
  nameWithType.vb: FlexibleArray(Of TIndex, TElement, TSelf).GetHashCode()
- uid: Collectathon.Arrays.FlexibleArray`3.GetHashCode*
  name: GetHashCode
  href: api/Collectathon.Arrays.FlexibleArray-3.html#Collectathon_Arrays_FlexibleArray_3_GetHashCode_
  commentId: Overload:Collectathon.Arrays.FlexibleArray`3.GetHashCode
  isSpec: "True"
  fullName: Collectathon.Arrays.FlexibleArray<TIndex, TElement, TSelf>.GetHashCode
  fullName.vb: Collectathon.Arrays.FlexibleArray(Of TIndex, TElement, TSelf).GetHashCode
  nameWithType: FlexibleArray<TIndex, TElement, TSelf>.GetHashCode
  nameWithType.vb: FlexibleArray(Of TIndex, TElement, TSelf).GetHashCode
- uid: Collectathon.Arrays.FlexibleArray`3.Insert(`0,`1)
  name: Insert(TIndex, TElement)
  href: api/Collectathon.Arrays.FlexibleArray-3.html#Collectathon_Arrays_FlexibleArray_3_Insert__0__1_
  commentId: M:Collectathon.Arrays.FlexibleArray`3.Insert(`0,`1)
  fullName: Collectathon.Arrays.FlexibleArray<TIndex, TElement, TSelf>.Insert(TIndex, TElement)
  fullName.vb: Collectathon.Arrays.FlexibleArray(Of TIndex, TElement, TSelf).Insert(TIndex, TElement)
  nameWithType: FlexibleArray<TIndex, TElement, TSelf>.Insert(TIndex, TElement)
  nameWithType.vb: FlexibleArray(Of TIndex, TElement, TSelf).Insert(TIndex, TElement)
- uid: Collectathon.Arrays.FlexibleArray`3.Insert*
  name: Insert
  href: api/Collectathon.Arrays.FlexibleArray-3.html#Collectathon_Arrays_FlexibleArray_3_Insert_
  commentId: Overload:Collectathon.Arrays.FlexibleArray`3.Insert
  isSpec: "True"
  fullName: Collectathon.Arrays.FlexibleArray<TIndex, TElement, TSelf>.Insert
  fullName.vb: Collectathon.Arrays.FlexibleArray(Of TIndex, TElement, TSelf).Insert
  nameWithType: FlexibleArray<TIndex, TElement, TSelf>.Insert
  nameWithType.vb: FlexibleArray(Of TIndex, TElement, TSelf).Insert
- uid: Collectathon.Arrays.FlexibleArray`3.Item(`0)
  name: Item[TIndex]
  href: api/Collectathon.Arrays.FlexibleArray-3.html#Collectathon_Arrays_FlexibleArray_3_Item__0_
  commentId: P:Collectathon.Arrays.FlexibleArray`3.Item(`0)
  name.vb: Item(TIndex)
  fullName: Collectathon.Arrays.FlexibleArray<TIndex, TElement, TSelf>.Item[TIndex]
  fullName.vb: Collectathon.Arrays.FlexibleArray(Of TIndex, TElement, TSelf).Item(TIndex)
  nameWithType: FlexibleArray<TIndex, TElement, TSelf>.Item[TIndex]
  nameWithType.vb: FlexibleArray(Of TIndex, TElement, TSelf).Item(TIndex)
- uid: Collectathon.Arrays.FlexibleArray`3.Item*
  name: Item
  href: api/Collectathon.Arrays.FlexibleArray-3.html#Collectathon_Arrays_FlexibleArray_3_Item_
  commentId: Overload:Collectathon.Arrays.FlexibleArray`3.Item
  isSpec: "True"
  fullName: Collectathon.Arrays.FlexibleArray<TIndex, TElement, TSelf>.Item
  fullName.vb: Collectathon.Arrays.FlexibleArray(Of TIndex, TElement, TSelf).Item
  nameWithType: FlexibleArray<TIndex, TElement, TSelf>.Item
  nameWithType.vb: FlexibleArray(Of TIndex, TElement, TSelf).Item
- uid: Collectathon.Arrays.FlexibleArray`3.System#Collections#Generic#IEnumerable{(TIndexIndex,TElementElement)}#GetEnumerator
  name: IEnumerable<(TIndex Index, TElement Element)>.GetEnumerator()
  href: api/Collectathon.Arrays.FlexibleArray-3.html#Collectathon_Arrays_FlexibleArray_3_System_Collections_Generic_IEnumerable__TIndexIndex_TElementElement___GetEnumerator
  commentId: M:Collectathon.Arrays.FlexibleArray`3.System#Collections#Generic#IEnumerable{(TIndexIndex,TElementElement)}#GetEnumerator
  name.vb: System.Collections.Generic.IEnumerable<(TIndexIndex,TElementElement)>.GetEnumerator()
  fullName: Collectathon.Arrays.FlexibleArray<TIndex, TElement, TSelf>.System.Collections.Generic.IEnumerable<System.ValueTuple<TIndex, TElement>>.GetEnumerator()
  fullName.vb: Collectathon.Arrays.FlexibleArray(Of TIndex, TElement, TSelf).System.Collections.Generic.IEnumerable<(TIndexIndex,TElementElement)>.GetEnumerator()
  nameWithType: FlexibleArray<TIndex, TElement, TSelf>.IEnumerable<(TIndex Index, TElement Element)>.GetEnumerator()
  nameWithType.vb: FlexibleArray(Of TIndex, TElement, TSelf).System.Collections.Generic.IEnumerable<(TIndexIndex,TElementElement)>.GetEnumerator()
- uid: Collectathon.Arrays.FlexibleArray`3.System#Collections#Generic#IEnumerable{*
  name: IEnumerable<(TIndex Index, TElement Element)>.GetEnumerator
  href: api/Collectathon.Arrays.FlexibleArray-3.html#Collectathon_Arrays_FlexibleArray_3_System_Collections_Generic_IEnumerable__
  commentId: Overload:Collectathon.Arrays.FlexibleArray`3.System#Collections#Generic#IEnumerable{
  isSpec: "True"
  name.vb: System.Collections.Generic.IEnumerable<(TIndexIndex,TElementElement)>.GetEnumerator
  fullName: Collectathon.Arrays.FlexibleArray<TIndex, TElement, TSelf>.System.Collections.Generic.IEnumerable<System.ValueTuple<TIndex, TElement>>.GetEnumerator
  fullName.vb: Collectathon.Arrays.FlexibleArray(Of TIndex, TElement, TSelf).System.Collections.Generic.IEnumerable<(TIndexIndex,TElementElement)>.GetEnumerator
  nameWithType: FlexibleArray<TIndex, TElement, TSelf>.IEnumerable<(TIndex Index, TElement Element)>.GetEnumerator
  nameWithType.vb: FlexibleArray(Of TIndex, TElement, TSelf).System.Collections.Generic.IEnumerable<(TIndexIndex,TElementElement)>.GetEnumerator
- uid: Collectathon.Arrays.FlexibleArray`3.System#Collections#IEnumerable#GetEnumerator
  name: IEnumerable.GetEnumerator()
  href: api/Collectathon.Arrays.FlexibleArray-3.html#Collectathon_Arrays_FlexibleArray_3_System_Collections_IEnumerable_GetEnumerator
  commentId: M:Collectathon.Arrays.FlexibleArray`3.System#Collections#IEnumerable#GetEnumerator
  name.vb: System.Collections.IEnumerable.GetEnumerator()
  fullName: Collectathon.Arrays.FlexibleArray<TIndex, TElement, TSelf>.System.Collections.IEnumerable.GetEnumerator()
  fullName.vb: Collectathon.Arrays.FlexibleArray(Of TIndex, TElement, TSelf).System.Collections.IEnumerable.GetEnumerator()
  nameWithType: FlexibleArray<TIndex, TElement, TSelf>.IEnumerable.GetEnumerator()
  nameWithType.vb: FlexibleArray(Of TIndex, TElement, TSelf).System.Collections.IEnumerable.GetEnumerator()
- uid: Collectathon.Arrays.FlexibleArray`3.System#Collections#IEnumerable#GetEnumerator*
  name: IEnumerable.GetEnumerator
  href: api/Collectathon.Arrays.FlexibleArray-3.html#Collectathon_Arrays_FlexibleArray_3_System_Collections_IEnumerable_GetEnumerator_
  commentId: Overload:Collectathon.Arrays.FlexibleArray`3.System#Collections#IEnumerable#GetEnumerator
  isSpec: "True"
  name.vb: System.Collections.IEnumerable.GetEnumerator
  fullName: Collectathon.Arrays.FlexibleArray<TIndex, TElement, TSelf>.System.Collections.IEnumerable.GetEnumerator
  fullName.vb: Collectathon.Arrays.FlexibleArray(Of TIndex, TElement, TSelf).System.Collections.IEnumerable.GetEnumerator
  nameWithType: FlexibleArray<TIndex, TElement, TSelf>.IEnumerable.GetEnumerator
  nameWithType.vb: FlexibleArray(Of TIndex, TElement, TSelf).System.Collections.IEnumerable.GetEnumerator
- uid: Collectathon.Arrays.FlexibleArray`3.ToString
  name: ToString()
  href: api/Collectathon.Arrays.FlexibleArray-3.html#Collectathon_Arrays_FlexibleArray_3_ToString
  commentId: M:Collectathon.Arrays.FlexibleArray`3.ToString
  fullName: Collectathon.Arrays.FlexibleArray<TIndex, TElement, TSelf>.ToString()
  fullName.vb: Collectathon.Arrays.FlexibleArray(Of TIndex, TElement, TSelf).ToString()
  nameWithType: FlexibleArray<TIndex, TElement, TSelf>.ToString()
  nameWithType.vb: FlexibleArray(Of TIndex, TElement, TSelf).ToString()
- uid: Collectathon.Arrays.FlexibleArray`3.ToString(nint)
  name: ToString(nint)
  href: api/Collectathon.Arrays.FlexibleArray-3.html#Collectathon_Arrays_FlexibleArray_3_ToString_nint_
  commentId: M:Collectathon.Arrays.FlexibleArray`3.ToString(nint)
  fullName: Collectathon.Arrays.FlexibleArray<TIndex, TElement, TSelf>.ToString(nint)
  fullName.vb: Collectathon.Arrays.FlexibleArray(Of TIndex, TElement, TSelf).ToString(nint)
  nameWithType: FlexibleArray<TIndex, TElement, TSelf>.ToString(nint)
  nameWithType.vb: FlexibleArray(Of TIndex, TElement, TSelf).ToString(nint)
- uid: Collectathon.Arrays.FlexibleArray`3.ToString*
  name: ToString
  href: api/Collectathon.Arrays.FlexibleArray-3.html#Collectathon_Arrays_FlexibleArray_3_ToString_
  commentId: Overload:Collectathon.Arrays.FlexibleArray`3.ToString
  isSpec: "True"
  fullName: Collectathon.Arrays.FlexibleArray<TIndex, TElement, TSelf>.ToString
  fullName.vb: Collectathon.Arrays.FlexibleArray(Of TIndex, TElement, TSelf).ToString
  nameWithType: FlexibleArray<TIndex, TElement, TSelf>.ToString
  nameWithType.vb: FlexibleArray(Of TIndex, TElement, TSelf).ToString
- uid: Collectathon.Filter`2
  name: Filter<TIndex, TElement>
  href: api/Collectathon.Filter-2.html
  commentId: T:Collectathon.Filter`2
  name.vb: Filter(Of TIndex, TElement)
  fullName: Collectathon.Filter<TIndex, TElement>
  fullName.vb: Collectathon.Filter(Of TIndex, TElement)
  nameWithType: Filter<TIndex, TElement>
  nameWithType.vb: Filter(Of TIndex, TElement)
- uid: Collectathon.Filter`2.#ctor
  name: Filter()
  href: api/Collectathon.Filter-2.html#Collectathon_Filter_2__ctor
  commentId: M:Collectathon.Filter`2.#ctor
  fullName: Collectathon.Filter<TIndex, TElement>.Filter()
  fullName.vb: Collectathon.Filter(Of TIndex, TElement).Filter()
  nameWithType: Filter<TIndex, TElement>.Filter()
  nameWithType.vb: Filter(Of TIndex, TElement).Filter()
- uid: Collectathon.Filter`2.#ctor*
  name: Filter
  href: api/Collectathon.Filter-2.html#Collectathon_Filter_2__ctor_
  commentId: Overload:Collectathon.Filter`2.#ctor
  isSpec: "True"
  fullName: Collectathon.Filter<TIndex, TElement>.Filter
  fullName.vb: Collectathon.Filter(Of TIndex, TElement).Filter
  nameWithType: Filter<TIndex, TElement>.Filter
  nameWithType.vb: Filter(Of TIndex, TElement).Filter
- uid: Collectathon.Filter`2.Create(Collectathon.Filters)
  name: Create(Filters)
  href: api/Collectathon.Filter-2.html#Collectathon_Filter_2_Create_Collectathon_Filters_
  commentId: M:Collectathon.Filter`2.Create(Collectathon.Filters)
  fullName: Collectathon.Filter<TIndex, TElement>.Create(Collectathon.Filters)
  fullName.vb: Collectathon.Filter(Of TIndex, TElement).Create(Collectathon.Filters)
  nameWithType: Filter<TIndex, TElement>.Create(Filters)
  nameWithType.vb: Filter(Of TIndex, TElement).Create(Filters)
- uid: Collectathon.Filter`2.Create*
  name: Create
  href: api/Collectathon.Filter-2.html#Collectathon_Filter_2_Create_
  commentId: Overload:Collectathon.Filter`2.Create
  isSpec: "True"
  fullName: Collectathon.Filter<TIndex, TElement>.Create
  fullName.vb: Collectathon.Filter(Of TIndex, TElement).Create
  nameWithType: Filter<TIndex, TElement>.Create
  nameWithType.vb: Filter(Of TIndex, TElement).Create
- uid: Collectathon.Filter`2.Index(`0)
  name: Index(TIndex)
  href: api/Collectathon.Filter-2.html#Collectathon_Filter_2_Index__0_
  commentId: M:Collectathon.Filter`2.Index(`0)
  fullName: Collectathon.Filter<TIndex, TElement>.Index(TIndex)
  fullName.vb: Collectathon.Filter(Of TIndex, TElement).Index(TIndex)
  nameWithType: Filter<TIndex, TElement>.Index(TIndex)
  nameWithType.vb: Filter(Of TIndex, TElement).Index(TIndex)
- uid: Collectathon.Filter`2.Index*
  name: Index
  href: api/Collectathon.Filter-2.html#Collectathon_Filter_2_Index_
  commentId: Overload:Collectathon.Filter`2.Index
  isSpec: "True"
  fullName: Collectathon.Filter<TIndex, TElement>.Index
  fullName.vb: Collectathon.Filter(Of TIndex, TElement).Index
  nameWithType: Filter<TIndex, TElement>.Index
  nameWithType.vb: Filter(Of TIndex, TElement).Index
- uid: Collectathon.Filter`2.IndexOutOfBounds(System.Traits.IIndex{`0,`1},`0,`1)
  name: IndexOutOfBounds(IIndex<TIndex, TElement>, TIndex, TElement)
  href: api/Collectathon.Filter-2.html#Collectathon_Filter_2_IndexOutOfBounds_System_Traits_IIndex__0__1___0__1_
  commentId: M:Collectathon.Filter`2.IndexOutOfBounds(System.Traits.IIndex{`0,`1},`0,`1)
  name.vb: IndexOutOfBounds(IIndex(Of TIndex, TElement), TIndex, TElement)
  fullName: Collectathon.Filter<TIndex, TElement>.IndexOutOfBounds(System.Traits.IIndex<TIndex, TElement>, TIndex, TElement)
  fullName.vb: Collectathon.Filter(Of TIndex, TElement).IndexOutOfBounds(System.Traits.IIndex(Of TIndex, TElement), TIndex, TElement)
  nameWithType: Filter<TIndex, TElement>.IndexOutOfBounds(IIndex<TIndex, TElement>, TIndex, TElement)
  nameWithType.vb: Filter(Of TIndex, TElement).IndexOutOfBounds(IIndex(Of TIndex, TElement), TIndex, TElement)
- uid: Collectathon.Filter`2.IndexOutOfBounds(System.Traits.IIndexReadOnly{`0,`1},`0)
  name: IndexOutOfBounds(IIndexReadOnly<TIndex, TElement>, TIndex)
  href: api/Collectathon.Filter-2.html#Collectathon_Filter_2_IndexOutOfBounds_System_Traits_IIndexReadOnly__0__1___0_
  commentId: M:Collectathon.Filter`2.IndexOutOfBounds(System.Traits.IIndexReadOnly{`0,`1},`0)
  name.vb: IndexOutOfBounds(IIndexReadOnly(Of TIndex, TElement), TIndex)
  fullName: Collectathon.Filter<TIndex, TElement>.IndexOutOfBounds(System.Traits.IIndexReadOnly<TIndex, TElement>, TIndex)
  fullName.vb: Collectathon.Filter(Of TIndex, TElement).IndexOutOfBounds(System.Traits.IIndexReadOnly(Of TIndex, TElement), TIndex)
  nameWithType: Filter<TIndex, TElement>.IndexOutOfBounds(IIndexReadOnly<TIndex, TElement>, TIndex)
  nameWithType.vb: Filter(Of TIndex, TElement).IndexOutOfBounds(IIndexReadOnly(Of TIndex, TElement), TIndex)
- uid: Collectathon.Filter`2.IndexOutOfBounds(System.Traits.IIndexRef{`0,`1},`0)
  name: IndexOutOfBounds(IIndexRef<TIndex, TElement>, TIndex)
  href: api/Collectathon.Filter-2.html#Collectathon_Filter_2_IndexOutOfBounds_System_Traits_IIndexRef__0__1___0_
  commentId: M:Collectathon.Filter`2.IndexOutOfBounds(System.Traits.IIndexRef{`0,`1},`0)
  name.vb: IndexOutOfBounds(IIndexRef(Of TIndex, TElement), TIndex)
  fullName: Collectathon.Filter<TIndex, TElement>.IndexOutOfBounds(System.Traits.IIndexRef<TIndex, TElement>, TIndex)
  fullName.vb: Collectathon.Filter(Of TIndex, TElement).IndexOutOfBounds(System.Traits.IIndexRef(Of TIndex, TElement), TIndex)
  nameWithType: Filter<TIndex, TElement>.IndexOutOfBounds(IIndexRef<TIndex, TElement>, TIndex)
  nameWithType.vb: Filter(Of TIndex, TElement).IndexOutOfBounds(IIndexRef(Of TIndex, TElement), TIndex)
- uid: Collectathon.Filter`2.IndexOutOfBounds(System.Traits.IIndexRefReadOnly{`0,`1},`0)
  name: IndexOutOfBounds(IIndexRefReadOnly<TIndex, TElement>, TIndex)
  href: api/Collectathon.Filter-2.html#Collectathon_Filter_2_IndexOutOfBounds_System_Traits_IIndexRefReadOnly__0__1___0_
  commentId: M:Collectathon.Filter`2.IndexOutOfBounds(System.Traits.IIndexRefReadOnly{`0,`1},`0)
  name.vb: IndexOutOfBounds(IIndexRefReadOnly(Of TIndex, TElement), TIndex)
  fullName: Collectathon.Filter<TIndex, TElement>.IndexOutOfBounds(System.Traits.IIndexRefReadOnly<TIndex, TElement>, TIndex)
  fullName.vb: Collectathon.Filter(Of TIndex, TElement).IndexOutOfBounds(System.Traits.IIndexRefReadOnly(Of TIndex, TElement), TIndex)
  nameWithType: Filter<TIndex, TElement>.IndexOutOfBounds(IIndexRefReadOnly<TIndex, TElement>, TIndex)
  nameWithType.vb: Filter(Of TIndex, TElement).IndexOutOfBounds(IIndexRefReadOnly(Of TIndex, TElement), TIndex)
- uid: Collectathon.Filter`2.IndexOutOfBounds*
  name: IndexOutOfBounds
  href: api/Collectathon.Filter-2.html#Collectathon_Filter_2_IndexOutOfBounds_
  commentId: Overload:Collectathon.Filter`2.IndexOutOfBounds
  isSpec: "True"
  fullName: Collectathon.Filter<TIndex, TElement>.IndexOutOfBounds
  fullName.vb: Collectathon.Filter(Of TIndex, TElement).IndexOutOfBounds
  nameWithType: Filter<TIndex, TElement>.IndexOutOfBounds
  nameWithType.vb: Filter(Of TIndex, TElement).IndexOutOfBounds
- uid: Collectathon.Filters
  name: Filters
  href: api/Collectathon.Filters.html
  commentId: T:Collectathon.Filters
  fullName: Collectathon.Filters
  nameWithType: Filters
- uid: Collectathon.Filters.None
  name: None
  href: api/Collectathon.Filters.html#Collectathon_Filters_None
  commentId: F:Collectathon.Filters.None
  fullName: Collectathon.Filters.None
  nameWithType: Filters.None
- uid: Collectathon.Filters.Sparse
  name: Sparse
  href: api/Collectathon.Filters.html#Collectathon_Filters_Sparse
  commentId: F:Collectathon.Filters.Sparse
  fullName: Collectathon.Filters.Sparse
  nameWithType: Filters.Sparse
- uid: Collectathon.Lists
  name: Collectathon.Lists
  href: api/Collectathon.Lists.html
  commentId: N:Collectathon.Lists
  fullName: Collectathon.Lists
  nameWithType: Collectathon.Lists
- uid: Collectathon.Lists.List`4
  name: List<TElement, TNode, TSelf, TEnumerator>
  href: api/Collectathon.Lists.List-4.html
  commentId: T:Collectathon.Lists.List`4
  name.vb: List(Of TElement, TNode, TSelf, TEnumerator)
  fullName: Collectathon.Lists.List<TElement, TNode, TSelf, TEnumerator>
  fullName.vb: Collectathon.Lists.List(Of TElement, TNode, TSelf, TEnumerator)
  nameWithType: List<TElement, TNode, TSelf, TEnumerator>
  nameWithType.vb: List(Of TElement, TNode, TSelf, TEnumerator)
- uid: Collectathon.Lists.List`4.#ctor(Collectathon.Filter{nint,`0})
  name: List(Filter<nint, TElement>)
  href: api/Collectathon.Lists.List-4.html#Collectathon_Lists_List_4__ctor_Collectathon_Filter_nint__0__
  commentId: M:Collectathon.Lists.List`4.#ctor(Collectathon.Filter{nint,`0})
  name.vb: List(Filter(Of nint, TElement))
  fullName: Collectathon.Lists.List<TElement, TNode, TSelf, TEnumerator>.List(Collectathon.Filter<nint, TElement>)
  fullName.vb: Collectathon.Lists.List(Of TElement, TNode, TSelf, TEnumerator).List(Collectathon.Filter(Of nint, TElement))
  nameWithType: List<TElement, TNode, TSelf, TEnumerator>.List(Filter<nint, TElement>)
  nameWithType.vb: List(Of TElement, TNode, TSelf, TEnumerator).List(Filter(Of nint, TElement))
- uid: Collectathon.Lists.List`4.#ctor(Collectathon.Filters)
  name: List(Filters)
  href: api/Collectathon.Lists.List-4.html#Collectathon_Lists_List_4__ctor_Collectathon_Filters_
  commentId: M:Collectathon.Lists.List`4.#ctor(Collectathon.Filters)
  fullName: Collectathon.Lists.List<TElement, TNode, TSelf, TEnumerator>.List(Collectathon.Filters)
  fullName.vb: Collectathon.Lists.List(Of TElement, TNode, TSelf, TEnumerator).List(Collectathon.Filters)
  nameWithType: List<TElement, TNode, TSelf, TEnumerator>.List(Filters)
  nameWithType.vb: List(Of TElement, TNode, TSelf, TEnumerator).List(Filters)
- uid: Collectathon.Lists.List`4.#ctor*
  name: List
  href: api/Collectathon.Lists.List-4.html#Collectathon_Lists_List_4__ctor_
  commentId: Overload:Collectathon.Lists.List`4.#ctor
  isSpec: "True"
  fullName: Collectathon.Lists.List<TElement, TNode, TSelf, TEnumerator>.List
  fullName.vb: Collectathon.Lists.List(Of TElement, TNode, TSelf, TEnumerator).List
  nameWithType: List<TElement, TNode, TSelf, TEnumerator>.List
  nameWithType.vb: List(Of TElement, TNode, TSelf, TEnumerator).List
- uid: Collectathon.Lists.List`4.Add(`0)
  name: Add(TElement)
  href: api/Collectathon.Lists.List-4.html#Collectathon_Lists_List_4_Add__0_
  commentId: M:Collectathon.Lists.List`4.Add(`0)
  fullName: Collectathon.Lists.List<TElement, TNode, TSelf, TEnumerator>.Add(TElement)
  fullName.vb: Collectathon.Lists.List(Of TElement, TNode, TSelf, TEnumerator).Add(TElement)
  nameWithType: List<TElement, TNode, TSelf, TEnumerator>.Add(TElement)
  nameWithType.vb: List(Of TElement, TNode, TSelf, TEnumerator).Add(TElement)
- uid: Collectathon.Lists.List`4.Add*
  name: Add
  href: api/Collectathon.Lists.List-4.html#Collectathon_Lists_List_4_Add_
  commentId: Overload:Collectathon.Lists.List`4.Add
  isSpec: "True"
  fullName: Collectathon.Lists.List<TElement, TNode, TSelf, TEnumerator>.Add
  fullName.vb: Collectathon.Lists.List(Of TElement, TNode, TSelf, TEnumerator).Add
  nameWithType: List<TElement, TNode, TSelf, TEnumerator>.Add
  nameWithType.vb: List(Of TElement, TNode, TSelf, TEnumerator).Add
- uid: Collectathon.Lists.List`4.Clear
  name: Clear()
  href: api/Collectathon.Lists.List-4.html#Collectathon_Lists_List_4_Clear
  commentId: M:Collectathon.Lists.List`4.Clear
  fullName: Collectathon.Lists.List<TElement, TNode, TSelf, TEnumerator>.Clear()
  fullName.vb: Collectathon.Lists.List(Of TElement, TNode, TSelf, TEnumerator).Clear()
  nameWithType: List<TElement, TNode, TSelf, TEnumerator>.Clear()
  nameWithType.vb: List(Of TElement, TNode, TSelf, TEnumerator).Clear()
- uid: Collectathon.Lists.List`4.Clear*
  name: Clear
  href: api/Collectathon.Lists.List-4.html#Collectathon_Lists_List_4_Clear_
  commentId: Overload:Collectathon.Lists.List`4.Clear
  isSpec: "True"
  fullName: Collectathon.Lists.List<TElement, TNode, TSelf, TEnumerator>.Clear
  fullName.vb: Collectathon.Lists.List(Of TElement, TNode, TSelf, TEnumerator).Clear
  nameWithType: List<TElement, TNode, TSelf, TEnumerator>.Clear
  nameWithType.vb: List(Of TElement, TNode, TSelf, TEnumerator).Clear
- uid: Collectathon.Lists.List`4.Contains(`0)
  name: Contains(TElement)
  href: api/Collectathon.Lists.List-4.html#Collectathon_Lists_List_4_Contains__0_
  commentId: M:Collectathon.Lists.List`4.Contains(`0)
  fullName: Collectathon.Lists.List<TElement, TNode, TSelf, TEnumerator>.Contains(TElement)
  fullName.vb: Collectathon.Lists.List(Of TElement, TNode, TSelf, TEnumerator).Contains(TElement)
  nameWithType: List<TElement, TNode, TSelf, TEnumerator>.Contains(TElement)
  nameWithType.vb: List(Of TElement, TNode, TSelf, TEnumerator).Contains(TElement)
- uid: Collectathon.Lists.List`4.Contains*
  name: Contains
  href: api/Collectathon.Lists.List-4.html#Collectathon_Lists_List_4_Contains_
  commentId: Overload:Collectathon.Lists.List`4.Contains
  isSpec: "True"
  fullName: Collectathon.Lists.List<TElement, TNode, TSelf, TEnumerator>.Contains
  fullName.vb: Collectathon.Lists.List(Of TElement, TNode, TSelf, TEnumerator).Contains
  nameWithType: List<TElement, TNode, TSelf, TEnumerator>.Contains
  nameWithType.vb: List(Of TElement, TNode, TSelf, TEnumerator).Contains
- uid: Collectathon.Lists.List`4.Count
  name: Count
  href: api/Collectathon.Lists.List-4.html#Collectathon_Lists_List_4_Count
  commentId: P:Collectathon.Lists.List`4.Count
  fullName: Collectathon.Lists.List<TElement, TNode, TSelf, TEnumerator>.Count
  fullName.vb: Collectathon.Lists.List(Of TElement, TNode, TSelf, TEnumerator).Count
  nameWithType: List<TElement, TNode, TSelf, TEnumerator>.Count
  nameWithType.vb: List(Of TElement, TNode, TSelf, TEnumerator).Count
- uid: Collectathon.Lists.List`4.Count*
  name: Count
  href: api/Collectathon.Lists.List-4.html#Collectathon_Lists_List_4_Count_
  commentId: Overload:Collectathon.Lists.List`4.Count
  isSpec: "True"
  fullName: Collectathon.Lists.List<TElement, TNode, TSelf, TEnumerator>.Count
  fullName.vb: Collectathon.Lists.List(Of TElement, TNode, TSelf, TEnumerator).Count
  nameWithType: List<TElement, TNode, TSelf, TEnumerator>.Count
  nameWithType.vb: List(Of TElement, TNode, TSelf, TEnumerator).Count
- uid: Collectathon.Lists.List`4.Equals(`2)
  name: Equals(TSelf)
  href: api/Collectathon.Lists.List-4.html#Collectathon_Lists_List_4_Equals__2_
  commentId: M:Collectathon.Lists.List`4.Equals(`2)
  fullName: Collectathon.Lists.List<TElement, TNode, TSelf, TEnumerator>.Equals(TSelf)
  fullName.vb: Collectathon.Lists.List(Of TElement, TNode, TSelf, TEnumerator).Equals(TSelf)
  nameWithType: List<TElement, TNode, TSelf, TEnumerator>.Equals(TSelf)
  nameWithType.vb: List(Of TElement, TNode, TSelf, TEnumerator).Equals(TSelf)
- uid: Collectathon.Lists.List`4.Equals(Collectathon.Lists.List{`0,`1,`2,`3})
  name: Equals(List<TElement, TNode, TSelf, TEnumerator>)
  href: api/Collectathon.Lists.List-4.html#Collectathon_Lists_List_4_Equals_Collectathon_Lists_List__0__1__2__3__
  commentId: M:Collectathon.Lists.List`4.Equals(Collectathon.Lists.List{`0,`1,`2,`3})
  name.vb: Equals(List(Of TElement, TNode, TSelf, TEnumerator))
  fullName: Collectathon.Lists.List<TElement, TNode, TSelf, TEnumerator>.Equals(Collectathon.Lists.List<TElement, TNode, TSelf, TEnumerator>)
  fullName.vb: Collectathon.Lists.List(Of TElement, TNode, TSelf, TEnumerator).Equals(Collectathon.Lists.List(Of TElement, TNode, TSelf, TEnumerator))
  nameWithType: List<TElement, TNode, TSelf, TEnumerator>.Equals(List<TElement, TNode, TSelf, TEnumerator>)
  nameWithType.vb: List(Of TElement, TNode, TSelf, TEnumerator).Equals(List(Of TElement, TNode, TSelf, TEnumerator))
- uid: Collectathon.Lists.List`4.Equals(Object)
  name: Equals(Object)
  href: api/Collectathon.Lists.List-4.html#Collectathon_Lists_List_4_Equals_Object_
  commentId: M:Collectathon.Lists.List`4.Equals(Object)
  fullName: Collectathon.Lists.List<TElement, TNode, TSelf, TEnumerator>.Equals(Object)
  fullName.vb: Collectathon.Lists.List(Of TElement, TNode, TSelf, TEnumerator).Equals(Object)
  nameWithType: List<TElement, TNode, TSelf, TEnumerator>.Equals(Object)
  nameWithType.vb: List(Of TElement, TNode, TSelf, TEnumerator).Equals(Object)
- uid: Collectathon.Lists.List`4.Equals(System.Collections.Generic.IEnumerable{`0})
  name: Equals(Collections.Generic.IEnumerable<TElement>)
  href: api/Collectathon.Lists.List-4.html#Collectathon_Lists_List_4_Equals_System_Collections_Generic_IEnumerable__0__
  commentId: M:Collectathon.Lists.List`4.Equals(System.Collections.Generic.IEnumerable{`0})
  name.vb: Equals(Collections.Generic.IEnumerable(Of TElement))
  fullName: Collectathon.Lists.List<TElement, TNode, TSelf, TEnumerator>.Equals(System.Collections.Generic.IEnumerable<TElement>)
  fullName.vb: Collectathon.Lists.List(Of TElement, TNode, TSelf, TEnumerator).Equals(System.Collections.Generic.IEnumerable(Of TElement))
  nameWithType: List<TElement, TNode, TSelf, TEnumerator>.Equals(Collections.Generic.IEnumerable<TElement>)
  nameWithType.vb: List(Of TElement, TNode, TSelf, TEnumerator).Equals(Collections.Generic.IEnumerable(Of TElement))
- uid: Collectathon.Lists.List`4.Equals*
  name: Equals
  href: api/Collectathon.Lists.List-4.html#Collectathon_Lists_List_4_Equals_
  commentId: Overload:Collectathon.Lists.List`4.Equals
  isSpec: "True"
  fullName: Collectathon.Lists.List<TElement, TNode, TSelf, TEnumerator>.Equals
  fullName.vb: Collectathon.Lists.List(Of TElement, TNode, TSelf, TEnumerator).Equals
  nameWithType: List<TElement, TNode, TSelf, TEnumerator>.Equals
  nameWithType.vb: List(Of TElement, TNode, TSelf, TEnumerator).Equals
- uid: Collectathon.Lists.List`4.Filter
  name: Filter
  href: api/Collectathon.Lists.List-4.html#Collectathon_Lists_List_4_Filter
  commentId: F:Collectathon.Lists.List`4.Filter
  fullName: Collectathon.Lists.List<TElement, TNode, TSelf, TEnumerator>.Filter
  fullName.vb: Collectathon.Lists.List(Of TElement, TNode, TSelf, TEnumerator).Filter
  nameWithType: List<TElement, TNode, TSelf, TEnumerator>.Filter
  nameWithType.vb: List(Of TElement, TNode, TSelf, TEnumerator).Filter
- uid: Collectathon.Lists.List`4.GetEnumerator
  name: GetEnumerator()
  href: api/Collectathon.Lists.List-4.html#Collectathon_Lists_List_4_GetEnumerator
  commentId: M:Collectathon.Lists.List`4.GetEnumerator
  fullName: Collectathon.Lists.List<TElement, TNode, TSelf, TEnumerator>.GetEnumerator()
  fullName.vb: Collectathon.Lists.List(Of TElement, TNode, TSelf, TEnumerator).GetEnumerator()
  nameWithType: List<TElement, TNode, TSelf, TEnumerator>.GetEnumerator()
  nameWithType.vb: List(Of TElement, TNode, TSelf, TEnumerator).GetEnumerator()
- uid: Collectathon.Lists.List`4.GetEnumerator*
  name: GetEnumerator
  href: api/Collectathon.Lists.List-4.html#Collectathon_Lists_List_4_GetEnumerator_
  commentId: Overload:Collectathon.Lists.List`4.GetEnumerator
  isSpec: "True"
  fullName: Collectathon.Lists.List<TElement, TNode, TSelf, TEnumerator>.GetEnumerator
  fullName.vb: Collectathon.Lists.List(Of TElement, TNode, TSelf, TEnumerator).GetEnumerator
  nameWithType: List<TElement, TNode, TSelf, TEnumerator>.GetEnumerator
  nameWithType.vb: List(Of TElement, TNode, TSelf, TEnumerator).GetEnumerator
- uid: Collectathon.Lists.List`4.GetHashCode
  name: GetHashCode()
  href: api/Collectathon.Lists.List-4.html#Collectathon_Lists_List_4_GetHashCode
  commentId: M:Collectathon.Lists.List`4.GetHashCode
  fullName: Collectathon.Lists.List<TElement, TNode, TSelf, TEnumerator>.GetHashCode()
  fullName.vb: Collectathon.Lists.List(Of TElement, TNode, TSelf, TEnumerator).GetHashCode()
  nameWithType: List<TElement, TNode, TSelf, TEnumerator>.GetHashCode()
  nameWithType.vb: List(Of TElement, TNode, TSelf, TEnumerator).GetHashCode()
- uid: Collectathon.Lists.List`4.GetHashCode*
  name: GetHashCode
  href: api/Collectathon.Lists.List-4.html#Collectathon_Lists_List_4_GetHashCode_
  commentId: Overload:Collectathon.Lists.List`4.GetHashCode
  isSpec: "True"
  fullName: Collectathon.Lists.List<TElement, TNode, TSelf, TEnumerator>.GetHashCode
  fullName.vb: Collectathon.Lists.List(Of TElement, TNode, TSelf, TEnumerator).GetHashCode
  nameWithType: List<TElement, TNode, TSelf, TEnumerator>.GetHashCode
  nameWithType.vb: List(Of TElement, TNode, TSelf, TEnumerator).GetHashCode
- uid: Collectathon.Lists.List`4.Head
  name: Head
  href: api/Collectathon.Lists.List-4.html#Collectathon_Lists_List_4_Head
  commentId: F:Collectathon.Lists.List`4.Head
  fullName: Collectathon.Lists.List<TElement, TNode, TSelf, TEnumerator>.Head
  fullName.vb: Collectathon.Lists.List(Of TElement, TNode, TSelf, TEnumerator).Head
  nameWithType: List<TElement, TNode, TSelf, TEnumerator>.Head
  nameWithType.vb: List(Of TElement, TNode, TSelf, TEnumerator).Head
- uid: Collectathon.Lists.List`4.Insert(nint,`0)
  name: Insert(nint, TElement)
  href: api/Collectathon.Lists.List-4.html#Collectathon_Lists_List_4_Insert_nint__0_
  commentId: M:Collectathon.Lists.List`4.Insert(nint,`0)
  fullName: Collectathon.Lists.List<TElement, TNode, TSelf, TEnumerator>.Insert(nint, TElement)
  fullName.vb: Collectathon.Lists.List(Of TElement, TNode, TSelf, TEnumerator).Insert(nint, TElement)
  nameWithType: List<TElement, TNode, TSelf, TEnumerator>.Insert(nint, TElement)
  nameWithType.vb: List(Of TElement, TNode, TSelf, TEnumerator).Insert(nint, TElement)
- uid: Collectathon.Lists.List`4.Insert*
  name: Insert
  href: api/Collectathon.Lists.List-4.html#Collectathon_Lists_List_4_Insert_
  commentId: Overload:Collectathon.Lists.List`4.Insert
  isSpec: "True"
  fullName: Collectathon.Lists.List<TElement, TNode, TSelf, TEnumerator>.Insert
  fullName.vb: Collectathon.Lists.List(Of TElement, TNode, TSelf, TEnumerator).Insert
  nameWithType: List<TElement, TNode, TSelf, TEnumerator>.Insert
  nameWithType.vb: List(Of TElement, TNode, TSelf, TEnumerator).Insert
- uid: Collectathon.Lists.List`4.Item(nint)
  name: Item[nint]
  href: api/Collectathon.Lists.List-4.html#Collectathon_Lists_List_4_Item_nint_
  commentId: P:Collectathon.Lists.List`4.Item(nint)
  name.vb: Item(nint)
  fullName: Collectathon.Lists.List<TElement, TNode, TSelf, TEnumerator>.Item[nint]
  fullName.vb: Collectathon.Lists.List(Of TElement, TNode, TSelf, TEnumerator).Item(nint)
  nameWithType: List<TElement, TNode, TSelf, TEnumerator>.Item[nint]
  nameWithType.vb: List(Of TElement, TNode, TSelf, TEnumerator).Item(nint)
- uid: Collectathon.Lists.List`4.Item*
  name: Item
  href: api/Collectathon.Lists.List-4.html#Collectathon_Lists_List_4_Item_
  commentId: Overload:Collectathon.Lists.List`4.Item
  isSpec: "True"
  fullName: Collectathon.Lists.List<TElement, TNode, TSelf, TEnumerator>.Item
  fullName.vb: Collectathon.Lists.List(Of TElement, TNode, TSelf, TEnumerator).Item
  nameWithType: List<TElement, TNode, TSelf, TEnumerator>.Item
  nameWithType.vb: List(Of TElement, TNode, TSelf, TEnumerator).Item
- uid: Collectathon.Lists.List`4.NewUnlinkedNode(`0)
  name: NewUnlinkedNode(TElement)
  href: api/Collectathon.Lists.List-4.html#Collectathon_Lists_List_4_NewUnlinkedNode__0_
  commentId: M:Collectathon.Lists.List`4.NewUnlinkedNode(`0)
  fullName: Collectathon.Lists.List<TElement, TNode, TSelf, TEnumerator>.NewUnlinkedNode(TElement)
  fullName.vb: Collectathon.Lists.List(Of TElement, TNode, TSelf, TEnumerator).NewUnlinkedNode(TElement)
  nameWithType: List<TElement, TNode, TSelf, TEnumerator>.NewUnlinkedNode(TElement)
  nameWithType.vb: List(Of TElement, TNode, TSelf, TEnumerator).NewUnlinkedNode(TElement)
- uid: Collectathon.Lists.List`4.NewUnlinkedNode*
  name: NewUnlinkedNode
  href: api/Collectathon.Lists.List-4.html#Collectathon_Lists_List_4_NewUnlinkedNode_
  commentId: Overload:Collectathon.Lists.List`4.NewUnlinkedNode
  isSpec: "True"
  fullName: Collectathon.Lists.List<TElement, TNode, TSelf, TEnumerator>.NewUnlinkedNode
  fullName.vb: Collectathon.Lists.List(Of TElement, TNode, TSelf, TEnumerator).NewUnlinkedNode
  nameWithType: List<TElement, TNode, TSelf, TEnumerator>.NewUnlinkedNode
  nameWithType.vb: List(Of TElement, TNode, TSelf, TEnumerator).NewUnlinkedNode
- uid: Collectathon.Lists.List`4.Postpend(`0)
  name: Postpend(TElement)
  href: api/Collectathon.Lists.List-4.html#Collectathon_Lists_List_4_Postpend__0_
  commentId: M:Collectathon.Lists.List`4.Postpend(`0)
  fullName: Collectathon.Lists.List<TElement, TNode, TSelf, TEnumerator>.Postpend(TElement)
  fullName.vb: Collectathon.Lists.List(Of TElement, TNode, TSelf, TEnumerator).Postpend(TElement)
  nameWithType: List<TElement, TNode, TSelf, TEnumerator>.Postpend(TElement)
  nameWithType.vb: List(Of TElement, TNode, TSelf, TEnumerator).Postpend(TElement)
- uid: Collectathon.Lists.List`4.Postpend*
  name: Postpend
  href: api/Collectathon.Lists.List-4.html#Collectathon_Lists_List_4_Postpend_
  commentId: Overload:Collectathon.Lists.List`4.Postpend
  isSpec: "True"
  fullName: Collectathon.Lists.List<TElement, TNode, TSelf, TEnumerator>.Postpend
  fullName.vb: Collectathon.Lists.List(Of TElement, TNode, TSelf, TEnumerator).Postpend
  nameWithType: List<TElement, TNode, TSelf, TEnumerator>.Postpend
  nameWithType.vb: List(Of TElement, TNode, TSelf, TEnumerator).Postpend
- uid: Collectathon.Lists.List`4.Prepend(`0)
  name: Prepend(TElement)
  href: api/Collectathon.Lists.List-4.html#Collectathon_Lists_List_4_Prepend__0_
  commentId: M:Collectathon.Lists.List`4.Prepend(`0)
  fullName: Collectathon.Lists.List<TElement, TNode, TSelf, TEnumerator>.Prepend(TElement)
  fullName.vb: Collectathon.Lists.List(Of TElement, TNode, TSelf, TEnumerator).Prepend(TElement)
  nameWithType: List<TElement, TNode, TSelf, TEnumerator>.Prepend(TElement)
  nameWithType.vb: List(Of TElement, TNode, TSelf, TEnumerator).Prepend(TElement)
- uid: Collectathon.Lists.List`4.Prepend*
  name: Prepend
  href: api/Collectathon.Lists.List-4.html#Collectathon_Lists_List_4_Prepend_
  commentId: Overload:Collectathon.Lists.List`4.Prepend
  isSpec: "True"
  fullName: Collectathon.Lists.List<TElement, TNode, TSelf, TEnumerator>.Prepend
  fullName.vb: Collectathon.Lists.List(Of TElement, TNode, TSelf, TEnumerator).Prepend
  nameWithType: List<TElement, TNode, TSelf, TEnumerator>.Prepend
  nameWithType.vb: List(Of TElement, TNode, TSelf, TEnumerator).Prepend
- uid: Collectathon.Lists.List`4.Remove(`0)
  name: Remove(TElement)
  href: api/Collectathon.Lists.List-4.html#Collectathon_Lists_List_4_Remove__0_
  commentId: M:Collectathon.Lists.List`4.Remove(`0)
  fullName: Collectathon.Lists.List<TElement, TNode, TSelf, TEnumerator>.Remove(TElement)
  fullName.vb: Collectathon.Lists.List(Of TElement, TNode, TSelf, TEnumerator).Remove(TElement)
  nameWithType: List<TElement, TNode, TSelf, TEnumerator>.Remove(TElement)
  nameWithType.vb: List(Of TElement, TNode, TSelf, TEnumerator).Remove(TElement)
- uid: Collectathon.Lists.List`4.Remove*
  name: Remove
  href: api/Collectathon.Lists.List-4.html#Collectathon_Lists_List_4_Remove_
  commentId: Overload:Collectathon.Lists.List`4.Remove
  isSpec: "True"
  fullName: Collectathon.Lists.List<TElement, TNode, TSelf, TEnumerator>.Remove
  fullName.vb: Collectathon.Lists.List(Of TElement, TNode, TSelf, TEnumerator).Remove
  nameWithType: List<TElement, TNode, TSelf, TEnumerator>.Remove
  nameWithType.vb: List(Of TElement, TNode, TSelf, TEnumerator).Remove
- uid: Collectathon.Lists.List`4.RemoveFirst(`0)
  name: RemoveFirst(TElement)
  href: api/Collectathon.Lists.List-4.html#Collectathon_Lists_List_4_RemoveFirst__0_
  commentId: M:Collectathon.Lists.List`4.RemoveFirst(`0)
  fullName: Collectathon.Lists.List<TElement, TNode, TSelf, TEnumerator>.RemoveFirst(TElement)
  fullName.vb: Collectathon.Lists.List(Of TElement, TNode, TSelf, TEnumerator).RemoveFirst(TElement)
  nameWithType: List<TElement, TNode, TSelf, TEnumerator>.RemoveFirst(TElement)
  nameWithType.vb: List(Of TElement, TNode, TSelf, TEnumerator).RemoveFirst(TElement)
- uid: Collectathon.Lists.List`4.RemoveFirst*
  name: RemoveFirst
  href: api/Collectathon.Lists.List-4.html#Collectathon_Lists_List_4_RemoveFirst_
  commentId: Overload:Collectathon.Lists.List`4.RemoveFirst
  isSpec: "True"
  fullName: Collectathon.Lists.List<TElement, TNode, TSelf, TEnumerator>.RemoveFirst
  fullName.vb: Collectathon.Lists.List(Of TElement, TNode, TSelf, TEnumerator).RemoveFirst
  nameWithType: List<TElement, TNode, TSelf, TEnumerator>.RemoveFirst
  nameWithType.vb: List(Of TElement, TNode, TSelf, TEnumerator).RemoveFirst
- uid: Collectathon.Lists.List`4.RemoveLast(`0)
  name: RemoveLast(TElement)
  href: api/Collectathon.Lists.List-4.html#Collectathon_Lists_List_4_RemoveLast__0_
  commentId: M:Collectathon.Lists.List`4.RemoveLast(`0)
  fullName: Collectathon.Lists.List<TElement, TNode, TSelf, TEnumerator>.RemoveLast(TElement)
  fullName.vb: Collectathon.Lists.List(Of TElement, TNode, TSelf, TEnumerator).RemoveLast(TElement)
  nameWithType: List<TElement, TNode, TSelf, TEnumerator>.RemoveLast(TElement)
  nameWithType.vb: List(Of TElement, TNode, TSelf, TEnumerator).RemoveLast(TElement)
- uid: Collectathon.Lists.List`4.RemoveLast*
  name: RemoveLast
  href: api/Collectathon.Lists.List-4.html#Collectathon_Lists_List_4_RemoveLast_
  commentId: Overload:Collectathon.Lists.List`4.RemoveLast
  isSpec: "True"
  fullName: Collectathon.Lists.List<TElement, TNode, TSelf, TEnumerator>.RemoveLast
  fullName.vb: Collectathon.Lists.List(Of TElement, TNode, TSelf, TEnumerator).RemoveLast
  nameWithType: List<TElement, TNode, TSelf, TEnumerator>.RemoveLast
  nameWithType.vb: List(Of TElement, TNode, TSelf, TEnumerator).RemoveLast
- uid: Collectathon.Lists.List`4.Replace(`0,`0)
  name: Replace(TElement, TElement)
  href: api/Collectathon.Lists.List-4.html#Collectathon_Lists_List_4_Replace__0__0_
  commentId: M:Collectathon.Lists.List`4.Replace(`0,`0)
  fullName: Collectathon.Lists.List<TElement, TNode, TSelf, TEnumerator>.Replace(TElement, TElement)
  fullName.vb: Collectathon.Lists.List(Of TElement, TNode, TSelf, TEnumerator).Replace(TElement, TElement)
  nameWithType: List<TElement, TNode, TSelf, TEnumerator>.Replace(TElement, TElement)
  nameWithType.vb: List(Of TElement, TNode, TSelf, TEnumerator).Replace(TElement, TElement)
- uid: Collectathon.Lists.List`4.Replace*
  name: Replace
  href: api/Collectathon.Lists.List-4.html#Collectathon_Lists_List_4_Replace_
  commentId: Overload:Collectathon.Lists.List`4.Replace
  isSpec: "True"
  fullName: Collectathon.Lists.List<TElement, TNode, TSelf, TEnumerator>.Replace
  fullName.vb: Collectathon.Lists.List(Of TElement, TNode, TSelf, TEnumerator).Replace
  nameWithType: List<TElement, TNode, TSelf, TEnumerator>.Replace
  nameWithType.vb: List(Of TElement, TNode, TSelf, TEnumerator).Replace
- uid: Collectathon.Lists.List`4.Tail
  name: Tail
  href: api/Collectathon.Lists.List-4.html#Collectathon_Lists_List_4_Tail
  commentId: F:Collectathon.Lists.List`4.Tail
  fullName: Collectathon.Lists.List<TElement, TNode, TSelf, TEnumerator>.Tail
  fullName.vb: Collectathon.Lists.List(Of TElement, TNode, TSelf, TEnumerator).Tail
  nameWithType: List<TElement, TNode, TSelf, TEnumerator>.Tail
  nameWithType.vb: List(Of TElement, TNode, TSelf, TEnumerator).Tail
- uid: Collectathon.Lists.List`4.ToString
  name: ToString()
  href: api/Collectathon.Lists.List-4.html#Collectathon_Lists_List_4_ToString
  commentId: M:Collectathon.Lists.List`4.ToString
  fullName: Collectathon.Lists.List<TElement, TNode, TSelf, TEnumerator>.ToString()
  fullName.vb: Collectathon.Lists.List(Of TElement, TNode, TSelf, TEnumerator).ToString()
  nameWithType: List<TElement, TNode, TSelf, TEnumerator>.ToString()
  nameWithType.vb: List(Of TElement, TNode, TSelf, TEnumerator).ToString()
- uid: Collectathon.Lists.List`4.ToString(nint)
  name: ToString(nint)
  href: api/Collectathon.Lists.List-4.html#Collectathon_Lists_List_4_ToString_nint_
  commentId: M:Collectathon.Lists.List`4.ToString(nint)
  fullName: Collectathon.Lists.List<TElement, TNode, TSelf, TEnumerator>.ToString(nint)
  fullName.vb: Collectathon.Lists.List(Of TElement, TNode, TSelf, TEnumerator).ToString(nint)
  nameWithType: List<TElement, TNode, TSelf, TEnumerator>.ToString(nint)
  nameWithType.vb: List(Of TElement, TNode, TSelf, TEnumerator).ToString(nint)
- uid: Collectathon.Lists.List`4.ToString*
  name: ToString
  href: api/Collectathon.Lists.List-4.html#Collectathon_Lists_List_4_ToString_
  commentId: Overload:Collectathon.Lists.List`4.ToString
  isSpec: "True"
  fullName: Collectathon.Lists.List<TElement, TNode, TSelf, TEnumerator>.ToString
  fullName.vb: Collectathon.Lists.List(Of TElement, TNode, TSelf, TEnumerator).ToString
  nameWithType: List<TElement, TNode, TSelf, TEnumerator>.ToString
  nameWithType.vb: List(Of TElement, TNode, TSelf, TEnumerator).ToString
- uid: Collectathon.Lists.List`5
  name: List<TIndex, TElement, TNode, TSelf, TEnumerator>
  href: api/Collectathon.Lists.List-5.html
  commentId: T:Collectathon.Lists.List`5
  name.vb: List(Of TIndex, TElement, TNode, TSelf, TEnumerator)
  fullName: Collectathon.Lists.List<TIndex, TElement, TNode, TSelf, TEnumerator>
  fullName.vb: Collectathon.Lists.List(Of TIndex, TElement, TNode, TSelf, TEnumerator)
  nameWithType: List<TIndex, TElement, TNode, TSelf, TEnumerator>
  nameWithType.vb: List(Of TIndex, TElement, TNode, TSelf, TEnumerator)
- uid: Collectathon.Lists.List`5.#ctor(Collectathon.Filter{`0,`1})
  name: List(Filter<TIndex, TElement>)
  href: api/Collectathon.Lists.List-5.html#Collectathon_Lists_List_5__ctor_Collectathon_Filter__0__1__
  commentId: M:Collectathon.Lists.List`5.#ctor(Collectathon.Filter{`0,`1})
  name.vb: List(Filter(Of TIndex, TElement))
  fullName: Collectathon.Lists.List<TIndex, TElement, TNode, TSelf, TEnumerator>.List(Collectathon.Filter<TIndex, TElement>)
  fullName.vb: Collectathon.Lists.List(Of TIndex, TElement, TNode, TSelf, TEnumerator).List(Collectathon.Filter(Of TIndex, TElement))
  nameWithType: List<TIndex, TElement, TNode, TSelf, TEnumerator>.List(Filter<TIndex, TElement>)
  nameWithType.vb: List(Of TIndex, TElement, TNode, TSelf, TEnumerator).List(Filter(Of TIndex, TElement))
- uid: Collectathon.Lists.List`5.#ctor(Collectathon.Filters)
  name: List(Filters)
  href: api/Collectathon.Lists.List-5.html#Collectathon_Lists_List_5__ctor_Collectathon_Filters_
  commentId: M:Collectathon.Lists.List`5.#ctor(Collectathon.Filters)
  fullName: Collectathon.Lists.List<TIndex, TElement, TNode, TSelf, TEnumerator>.List(Collectathon.Filters)
  fullName.vb: Collectathon.Lists.List(Of TIndex, TElement, TNode, TSelf, TEnumerator).List(Collectathon.Filters)
  nameWithType: List<TIndex, TElement, TNode, TSelf, TEnumerator>.List(Filters)
  nameWithType.vb: List(Of TIndex, TElement, TNode, TSelf, TEnumerator).List(Filters)
- uid: Collectathon.Lists.List`5.#ctor*
  name: List
  href: api/Collectathon.Lists.List-5.html#Collectathon_Lists_List_5__ctor_
  commentId: Overload:Collectathon.Lists.List`5.#ctor
  isSpec: "True"
  fullName: Collectathon.Lists.List<TIndex, TElement, TNode, TSelf, TEnumerator>.List
  fullName.vb: Collectathon.Lists.List(Of TIndex, TElement, TNode, TSelf, TEnumerator).List
  nameWithType: List<TIndex, TElement, TNode, TSelf, TEnumerator>.List
  nameWithType.vb: List(Of TIndex, TElement, TNode, TSelf, TEnumerator).List
- uid: Collectathon.Lists.List`5.Clear
  name: Clear()
  href: api/Collectathon.Lists.List-5.html#Collectathon_Lists_List_5_Clear
  commentId: M:Collectathon.Lists.List`5.Clear
  fullName: Collectathon.Lists.List<TIndex, TElement, TNode, TSelf, TEnumerator>.Clear()
  fullName.vb: Collectathon.Lists.List(Of TIndex, TElement, TNode, TSelf, TEnumerator).Clear()
  nameWithType: List<TIndex, TElement, TNode, TSelf, TEnumerator>.Clear()
  nameWithType.vb: List(Of TIndex, TElement, TNode, TSelf, TEnumerator).Clear()
- uid: Collectathon.Lists.List`5.Clear*
  name: Clear
  href: api/Collectathon.Lists.List-5.html#Collectathon_Lists_List_5_Clear_
  commentId: Overload:Collectathon.Lists.List`5.Clear
  isSpec: "True"
  fullName: Collectathon.Lists.List<TIndex, TElement, TNode, TSelf, TEnumerator>.Clear
  fullName.vb: Collectathon.Lists.List(Of TIndex, TElement, TNode, TSelf, TEnumerator).Clear
  nameWithType: List<TIndex, TElement, TNode, TSelf, TEnumerator>.Clear
  nameWithType.vb: List(Of TIndex, TElement, TNode, TSelf, TEnumerator).Clear
- uid: Collectathon.Lists.List`5.Count
  name: Count
  href: api/Collectathon.Lists.List-5.html#Collectathon_Lists_List_5_Count
  commentId: P:Collectathon.Lists.List`5.Count
  fullName: Collectathon.Lists.List<TIndex, TElement, TNode, TSelf, TEnumerator>.Count
  fullName.vb: Collectathon.Lists.List(Of TIndex, TElement, TNode, TSelf, TEnumerator).Count
  nameWithType: List<TIndex, TElement, TNode, TSelf, TEnumerator>.Count
  nameWithType.vb: List(Of TIndex, TElement, TNode, TSelf, TEnumerator).Count
- uid: Collectathon.Lists.List`5.Count*
  name: Count
  href: api/Collectathon.Lists.List-5.html#Collectathon_Lists_List_5_Count_
  commentId: Overload:Collectathon.Lists.List`5.Count
  isSpec: "True"
  fullName: Collectathon.Lists.List<TIndex, TElement, TNode, TSelf, TEnumerator>.Count
  fullName.vb: Collectathon.Lists.List(Of TIndex, TElement, TNode, TSelf, TEnumerator).Count
  nameWithType: List<TIndex, TElement, TNode, TSelf, TEnumerator>.Count
  nameWithType.vb: List(Of TIndex, TElement, TNode, TSelf, TEnumerator).Count
- uid: Collectathon.Lists.List`5.Filter
  name: Filter
  href: api/Collectathon.Lists.List-5.html#Collectathon_Lists_List_5_Filter
  commentId: F:Collectathon.Lists.List`5.Filter
  fullName: Collectathon.Lists.List<TIndex, TElement, TNode, TSelf, TEnumerator>.Filter
  fullName.vb: Collectathon.Lists.List(Of TIndex, TElement, TNode, TSelf, TEnumerator).Filter
  nameWithType: List<TIndex, TElement, TNode, TSelf, TEnumerator>.Filter
  nameWithType.vb: List(Of TIndex, TElement, TNode, TSelf, TEnumerator).Filter
- uid: Collectathon.Lists.List`5.GetEnumerator
  name: GetEnumerator()
  href: api/Collectathon.Lists.List-5.html#Collectathon_Lists_List_5_GetEnumerator
  commentId: M:Collectathon.Lists.List`5.GetEnumerator
  fullName: Collectathon.Lists.List<TIndex, TElement, TNode, TSelf, TEnumerator>.GetEnumerator()
  fullName.vb: Collectathon.Lists.List(Of TIndex, TElement, TNode, TSelf, TEnumerator).GetEnumerator()
  nameWithType: List<TIndex, TElement, TNode, TSelf, TEnumerator>.GetEnumerator()
  nameWithType.vb: List(Of TIndex, TElement, TNode, TSelf, TEnumerator).GetEnumerator()
- uid: Collectathon.Lists.List`5.GetEnumerator*
  name: GetEnumerator
  href: api/Collectathon.Lists.List-5.html#Collectathon_Lists_List_5_GetEnumerator_
  commentId: Overload:Collectathon.Lists.List`5.GetEnumerator
  isSpec: "True"
  fullName: Collectathon.Lists.List<TIndex, TElement, TNode, TSelf, TEnumerator>.GetEnumerator
  fullName.vb: Collectathon.Lists.List(Of TIndex, TElement, TNode, TSelf, TEnumerator).GetEnumerator
  nameWithType: List<TIndex, TElement, TNode, TSelf, TEnumerator>.GetEnumerator
  nameWithType.vb: List(Of TIndex, TElement, TNode, TSelf, TEnumerator).GetEnumerator
- uid: Collectathon.Lists.List`5.Head
  name: Head
  href: api/Collectathon.Lists.List-5.html#Collectathon_Lists_List_5_Head
  commentId: F:Collectathon.Lists.List`5.Head
  fullName: Collectathon.Lists.List<TIndex, TElement, TNode, TSelf, TEnumerator>.Head
  fullName.vb: Collectathon.Lists.List(Of TIndex, TElement, TNode, TSelf, TEnumerator).Head
  nameWithType: List<TIndex, TElement, TNode, TSelf, TEnumerator>.Head
  nameWithType.vb: List(Of TIndex, TElement, TNode, TSelf, TEnumerator).Head
- uid: Collectathon.Lists.List`5.Insert(`0,`1)
  name: Insert(TIndex, TElement)
  href: api/Collectathon.Lists.List-5.html#Collectathon_Lists_List_5_Insert__0__1_
  commentId: M:Collectathon.Lists.List`5.Insert(`0,`1)
  fullName: Collectathon.Lists.List<TIndex, TElement, TNode, TSelf, TEnumerator>.Insert(TIndex, TElement)
  fullName.vb: Collectathon.Lists.List(Of TIndex, TElement, TNode, TSelf, TEnumerator).Insert(TIndex, TElement)
  nameWithType: List<TIndex, TElement, TNode, TSelf, TEnumerator>.Insert(TIndex, TElement)
  nameWithType.vb: List(Of TIndex, TElement, TNode, TSelf, TEnumerator).Insert(TIndex, TElement)
- uid: Collectathon.Lists.List`5.Insert*
  name: Insert
  href: api/Collectathon.Lists.List-5.html#Collectathon_Lists_List_5_Insert_
  commentId: Overload:Collectathon.Lists.List`5.Insert
  isSpec: "True"
  fullName: Collectathon.Lists.List<TIndex, TElement, TNode, TSelf, TEnumerator>.Insert
  fullName.vb: Collectathon.Lists.List(Of TIndex, TElement, TNode, TSelf, TEnumerator).Insert
  nameWithType: List<TIndex, TElement, TNode, TSelf, TEnumerator>.Insert
  nameWithType.vb: List(Of TIndex, TElement, TNode, TSelf, TEnumerator).Insert
- uid: Collectathon.Lists.List`5.Item(`0)
  name: Item[TIndex]
  href: api/Collectathon.Lists.List-5.html#Collectathon_Lists_List_5_Item__0_
  commentId: P:Collectathon.Lists.List`5.Item(`0)
  name.vb: Item(TIndex)
  fullName: Collectathon.Lists.List<TIndex, TElement, TNode, TSelf, TEnumerator>.Item[TIndex]
  fullName.vb: Collectathon.Lists.List(Of TIndex, TElement, TNode, TSelf, TEnumerator).Item(TIndex)
  nameWithType: List<TIndex, TElement, TNode, TSelf, TEnumerator>.Item[TIndex]
  nameWithType.vb: List(Of TIndex, TElement, TNode, TSelf, TEnumerator).Item(TIndex)
- uid: Collectathon.Lists.List`5.Item*
  name: Item
  href: api/Collectathon.Lists.List-5.html#Collectathon_Lists_List_5_Item_
  commentId: Overload:Collectathon.Lists.List`5.Item
  isSpec: "True"
  fullName: Collectathon.Lists.List<TIndex, TElement, TNode, TSelf, TEnumerator>.Item
  fullName.vb: Collectathon.Lists.List(Of TIndex, TElement, TNode, TSelf, TEnumerator).Item
  nameWithType: List<TIndex, TElement, TNode, TSelf, TEnumerator>.Item
  nameWithType.vb: List(Of TIndex, TElement, TNode, TSelf, TEnumerator).Item
- uid: Collectathon.Lists.List`5.NewUnlinkedNode(`0,`1)
  name: NewUnlinkedNode(TIndex, TElement)
  href: api/Collectathon.Lists.List-5.html#Collectathon_Lists_List_5_NewUnlinkedNode__0__1_
  commentId: M:Collectathon.Lists.List`5.NewUnlinkedNode(`0,`1)
  fullName: Collectathon.Lists.List<TIndex, TElement, TNode, TSelf, TEnumerator>.NewUnlinkedNode(TIndex, TElement)
  fullName.vb: Collectathon.Lists.List(Of TIndex, TElement, TNode, TSelf, TEnumerator).NewUnlinkedNode(TIndex, TElement)
  nameWithType: List<TIndex, TElement, TNode, TSelf, TEnumerator>.NewUnlinkedNode(TIndex, TElement)
  nameWithType.vb: List(Of TIndex, TElement, TNode, TSelf, TEnumerator).NewUnlinkedNode(TIndex, TElement)
- uid: Collectathon.Lists.List`5.NewUnlinkedNode*
  name: NewUnlinkedNode
  href: api/Collectathon.Lists.List-5.html#Collectathon_Lists_List_5_NewUnlinkedNode_
  commentId: Overload:Collectathon.Lists.List`5.NewUnlinkedNode
  isSpec: "True"
  fullName: Collectathon.Lists.List<TIndex, TElement, TNode, TSelf, TEnumerator>.NewUnlinkedNode
  fullName.vb: Collectathon.Lists.List(Of TIndex, TElement, TNode, TSelf, TEnumerator).NewUnlinkedNode
  nameWithType: List<TIndex, TElement, TNode, TSelf, TEnumerator>.NewUnlinkedNode
  nameWithType.vb: List(Of TIndex, TElement, TNode, TSelf, TEnumerator).NewUnlinkedNode
- uid: Collectathon.Lists.List`5.Tail
  name: Tail
  href: api/Collectathon.Lists.List-5.html#Collectathon_Lists_List_5_Tail
  commentId: F:Collectathon.Lists.List`5.Tail
  fullName: Collectathon.Lists.List<TIndex, TElement, TNode, TSelf, TEnumerator>.Tail
  fullName.vb: Collectathon.Lists.List(Of TIndex, TElement, TNode, TSelf, TEnumerator).Tail
  nameWithType: List<TIndex, TElement, TNode, TSelf, TEnumerator>.Tail
  nameWithType.vb: List(Of TIndex, TElement, TNode, TSelf, TEnumerator).Tail
- uid: Collectathon.Lists.List`5.ToString
  name: ToString()
  href: api/Collectathon.Lists.List-5.html#Collectathon_Lists_List_5_ToString
  commentId: M:Collectathon.Lists.List`5.ToString
  fullName: Collectathon.Lists.List<TIndex, TElement, TNode, TSelf, TEnumerator>.ToString()
  fullName.vb: Collectathon.Lists.List(Of TIndex, TElement, TNode, TSelf, TEnumerator).ToString()
  nameWithType: List<TIndex, TElement, TNode, TSelf, TEnumerator>.ToString()
  nameWithType.vb: List(Of TIndex, TElement, TNode, TSelf, TEnumerator).ToString()
- uid: Collectathon.Lists.List`5.ToString(nint)
  name: ToString(nint)
  href: api/Collectathon.Lists.List-5.html#Collectathon_Lists_List_5_ToString_nint_
  commentId: M:Collectathon.Lists.List`5.ToString(nint)
  fullName: Collectathon.Lists.List<TIndex, TElement, TNode, TSelf, TEnumerator>.ToString(nint)
  fullName.vb: Collectathon.Lists.List(Of TIndex, TElement, TNode, TSelf, TEnumerator).ToString(nint)
  nameWithType: List<TIndex, TElement, TNode, TSelf, TEnumerator>.ToString(nint)
  nameWithType.vb: List(Of TIndex, TElement, TNode, TSelf, TEnumerator).ToString(nint)
- uid: Collectathon.Lists.List`5.ToString*
  name: ToString
  href: api/Collectathon.Lists.List-5.html#Collectathon_Lists_List_5_ToString_
  commentId: Overload:Collectathon.Lists.List`5.ToString
  isSpec: "True"
  fullName: Collectathon.Lists.List<TIndex, TElement, TNode, TSelf, TEnumerator>.ToString
  fullName.vb: Collectathon.Lists.List(Of TIndex, TElement, TNode, TSelf, TEnumerator).ToString
  nameWithType: List<TIndex, TElement, TNode, TSelf, TEnumerator>.ToString
  nameWithType.vb: List(Of TIndex, TElement, TNode, TSelf, TEnumerator).ToString
- uid: Collectathon.Lists.SinglyLinkedList`1
  name: SinglyLinkedList<TElement>
  href: api/Collectathon.Lists.SinglyLinkedList-1.html
  commentId: T:Collectathon.Lists.SinglyLinkedList`1
  name.vb: SinglyLinkedList(Of TElement)
  fullName: Collectathon.Lists.SinglyLinkedList<TElement>
  fullName.vb: Collectathon.Lists.SinglyLinkedList(Of TElement)
  nameWithType: SinglyLinkedList<TElement>
  nameWithType.vb: SinglyLinkedList(Of TElement)
- uid: Collectathon.Lists.SinglyLinkedList`1.#ctor
  name: SinglyLinkedList()
  href: api/Collectathon.Lists.SinglyLinkedList-1.html#Collectathon_Lists_SinglyLinkedList_1__ctor
  commentId: M:Collectathon.Lists.SinglyLinkedList`1.#ctor
  fullName: Collectathon.Lists.SinglyLinkedList<TElement>.SinglyLinkedList()
  fullName.vb: Collectathon.Lists.SinglyLinkedList(Of TElement).SinglyLinkedList()
  nameWithType: SinglyLinkedList<TElement>.SinglyLinkedList()
  nameWithType.vb: SinglyLinkedList(Of TElement).SinglyLinkedList()
- uid: Collectathon.Lists.SinglyLinkedList`1.#ctor(`0[])
  name: SinglyLinkedList(TElement[])
  href: api/Collectathon.Lists.SinglyLinkedList-1.html#Collectathon_Lists_SinglyLinkedList_1__ctor__0___
  commentId: M:Collectathon.Lists.SinglyLinkedList`1.#ctor(`0[])
  name.vb: SinglyLinkedList(TElement())
  fullName: Collectathon.Lists.SinglyLinkedList<TElement>.SinglyLinkedList(TElement[])
  fullName.vb: Collectathon.Lists.SinglyLinkedList(Of TElement).SinglyLinkedList(TElement())
  nameWithType: SinglyLinkedList<TElement>.SinglyLinkedList(TElement[])
  nameWithType.vb: SinglyLinkedList(Of TElement).SinglyLinkedList(TElement())
- uid: Collectathon.Lists.SinglyLinkedList`1.#ctor(`0[],Collectathon.Filters)
  name: SinglyLinkedList(TElement[], Filters)
  href: api/Collectathon.Lists.SinglyLinkedList-1.html#Collectathon_Lists_SinglyLinkedList_1__ctor__0___Collectathon_Filters_
  commentId: M:Collectathon.Lists.SinglyLinkedList`1.#ctor(`0[],Collectathon.Filters)
  name.vb: SinglyLinkedList(TElement(), Filters)
  fullName: Collectathon.Lists.SinglyLinkedList<TElement>.SinglyLinkedList(TElement[], Collectathon.Filters)
  fullName.vb: Collectathon.Lists.SinglyLinkedList(Of TElement).SinglyLinkedList(TElement(), Collectathon.Filters)
  nameWithType: SinglyLinkedList<TElement>.SinglyLinkedList(TElement[], Filters)
  nameWithType.vb: SinglyLinkedList(Of TElement).SinglyLinkedList(TElement(), Filters)
- uid: Collectathon.Lists.SinglyLinkedList`1.#ctor(Collectathon.Filters)
  name: SinglyLinkedList(Filters)
  href: api/Collectathon.Lists.SinglyLinkedList-1.html#Collectathon_Lists_SinglyLinkedList_1__ctor_Collectathon_Filters_
  commentId: M:Collectathon.Lists.SinglyLinkedList`1.#ctor(Collectathon.Filters)
  fullName: Collectathon.Lists.SinglyLinkedList<TElement>.SinglyLinkedList(Collectathon.Filters)
  fullName.vb: Collectathon.Lists.SinglyLinkedList(Of TElement).SinglyLinkedList(Collectathon.Filters)
  nameWithType: SinglyLinkedList<TElement>.SinglyLinkedList(Filters)
  nameWithType.vb: SinglyLinkedList(Of TElement).SinglyLinkedList(Filters)
- uid: Collectathon.Lists.SinglyLinkedList`1.#ctor*
  name: SinglyLinkedList
  href: api/Collectathon.Lists.SinglyLinkedList-1.html#Collectathon_Lists_SinglyLinkedList_1__ctor_
  commentId: Overload:Collectathon.Lists.SinglyLinkedList`1.#ctor
  isSpec: "True"
  fullName: Collectathon.Lists.SinglyLinkedList<TElement>.SinglyLinkedList
  fullName.vb: Collectathon.Lists.SinglyLinkedList(Of TElement).SinglyLinkedList
  nameWithType: SinglyLinkedList<TElement>.SinglyLinkedList
  nameWithType.vb: SinglyLinkedList(Of TElement).SinglyLinkedList
- uid: Collectathon.Lists.SinglyLinkedList`1.Insert(nint,`0)
  name: Insert(nint, TElement)
  href: api/Collectathon.Lists.SinglyLinkedList-1.html#Collectathon_Lists_SinglyLinkedList_1_Insert_nint__0_
  commentId: M:Collectathon.Lists.SinglyLinkedList`1.Insert(nint,`0)
  fullName: Collectathon.Lists.SinglyLinkedList<TElement>.Insert(nint, TElement)
  fullName.vb: Collectathon.Lists.SinglyLinkedList(Of TElement).Insert(nint, TElement)
  nameWithType: SinglyLinkedList<TElement>.Insert(nint, TElement)
  nameWithType.vb: SinglyLinkedList(Of TElement).Insert(nint, TElement)
- uid: Collectathon.Lists.SinglyLinkedList`1.Insert*
  name: Insert
  href: api/Collectathon.Lists.SinglyLinkedList-1.html#Collectathon_Lists_SinglyLinkedList_1_Insert_
  commentId: Overload:Collectathon.Lists.SinglyLinkedList`1.Insert
  isSpec: "True"
  fullName: Collectathon.Lists.SinglyLinkedList<TElement>.Insert
  fullName.vb: Collectathon.Lists.SinglyLinkedList(Of TElement).Insert
  nameWithType: SinglyLinkedList<TElement>.Insert
  nameWithType.vb: SinglyLinkedList(Of TElement).Insert
- uid: Collectathon.Lists.SinglyLinkedList`1.NewUnlinkedNode(`0)
  name: NewUnlinkedNode(TElement)
  href: api/Collectathon.Lists.SinglyLinkedList-1.html#Collectathon_Lists_SinglyLinkedList_1_NewUnlinkedNode__0_
  commentId: M:Collectathon.Lists.SinglyLinkedList`1.NewUnlinkedNode(`0)
  fullName: Collectathon.Lists.SinglyLinkedList<TElement>.NewUnlinkedNode(TElement)
  fullName.vb: Collectathon.Lists.SinglyLinkedList(Of TElement).NewUnlinkedNode(TElement)
  nameWithType: SinglyLinkedList<TElement>.NewUnlinkedNode(TElement)
  nameWithType.vb: SinglyLinkedList(Of TElement).NewUnlinkedNode(TElement)
- uid: Collectathon.Lists.SinglyLinkedList`1.NewUnlinkedNode*
  name: NewUnlinkedNode
  href: api/Collectathon.Lists.SinglyLinkedList-1.html#Collectathon_Lists_SinglyLinkedList_1_NewUnlinkedNode_
  commentId: Overload:Collectathon.Lists.SinglyLinkedList`1.NewUnlinkedNode
  isSpec: "True"
  fullName: Collectathon.Lists.SinglyLinkedList<TElement>.NewUnlinkedNode
  fullName.vb: Collectathon.Lists.SinglyLinkedList(Of TElement).NewUnlinkedNode
  nameWithType: SinglyLinkedList<TElement>.NewUnlinkedNode
  nameWithType.vb: SinglyLinkedList(Of TElement).NewUnlinkedNode
- uid: Collectathon.Lists.SinglyLinkedList`1.Node
  name: SinglyLinkedList<TElement>.Node
  href: api/Collectathon.Lists.SinglyLinkedList-1.Node.html
  commentId: T:Collectathon.Lists.SinglyLinkedList`1.Node
  name.vb: SinglyLinkedList(Of TElement).Node
  fullName: Collectathon.Lists.SinglyLinkedList<TElement>.Node
  fullName.vb: Collectathon.Lists.SinglyLinkedList(Of TElement).Node
  nameWithType: SinglyLinkedList<TElement>.Node
  nameWithType.vb: SinglyLinkedList(Of TElement).Node
- uid: Collectathon.Lists.SinglyLinkedList`1.Node.#ctor(`0,Collectathon.Lists.SinglyLinkedList{`0}.Node)
  name: Node(TElement, SinglyLinkedList<TElement>.Node)
  href: api/Collectathon.Lists.SinglyLinkedList-1.Node.html#Collectathon_Lists_SinglyLinkedList_1_Node__ctor__0_Collectathon_Lists_SinglyLinkedList__0__Node_
  commentId: M:Collectathon.Lists.SinglyLinkedList`1.Node.#ctor(`0,Collectathon.Lists.SinglyLinkedList{`0}.Node)
  name.vb: Node(TElement, SinglyLinkedList(Of TElement).Node)
  fullName: Collectathon.Lists.SinglyLinkedList<TElement>.Node.Node(TElement, Collectathon.Lists.SinglyLinkedList<TElement>.Node)
  fullName.vb: Collectathon.Lists.SinglyLinkedList(Of TElement).Node.Node(TElement, Collectathon.Lists.SinglyLinkedList(Of TElement).Node)
  nameWithType: SinglyLinkedList<TElement>.Node.Node(TElement, SinglyLinkedList<TElement>.Node)
  nameWithType.vb: SinglyLinkedList(Of TElement).Node.Node(TElement, SinglyLinkedList(Of TElement).Node)
- uid: Collectathon.Lists.SinglyLinkedList`1.Node.#ctor*
  name: Node
  href: api/Collectathon.Lists.SinglyLinkedList-1.Node.html#Collectathon_Lists_SinglyLinkedList_1_Node__ctor_
  commentId: Overload:Collectathon.Lists.SinglyLinkedList`1.Node.#ctor
  isSpec: "True"
  fullName: Collectathon.Lists.SinglyLinkedList<TElement>.Node.Node
  fullName.vb: Collectathon.Lists.SinglyLinkedList(Of TElement).Node.Node
  nameWithType: SinglyLinkedList<TElement>.Node.Node
  nameWithType.vb: SinglyLinkedList(Of TElement).Node.Node
- uid: Collectathon.Lists.SinglyLinkedList`1.Node.Clear
  name: Clear()
  href: api/Collectathon.Lists.SinglyLinkedList-1.Node.html#Collectathon_Lists_SinglyLinkedList_1_Node_Clear
  commentId: M:Collectathon.Lists.SinglyLinkedList`1.Node.Clear
  fullName: Collectathon.Lists.SinglyLinkedList<TElement>.Node.Clear()
  fullName.vb: Collectathon.Lists.SinglyLinkedList(Of TElement).Node.Clear()
  nameWithType: SinglyLinkedList<TElement>.Node.Clear()
  nameWithType.vb: SinglyLinkedList(Of TElement).Node.Clear()
- uid: Collectathon.Lists.SinglyLinkedList`1.Node.Clear*
  name: Clear
  href: api/Collectathon.Lists.SinglyLinkedList-1.Node.html#Collectathon_Lists_SinglyLinkedList_1_Node_Clear_
  commentId: Overload:Collectathon.Lists.SinglyLinkedList`1.Node.Clear
  isSpec: "True"
  fullName: Collectathon.Lists.SinglyLinkedList<TElement>.Node.Clear
  fullName.vb: Collectathon.Lists.SinglyLinkedList(Of TElement).Node.Clear
  nameWithType: SinglyLinkedList<TElement>.Node.Clear
  nameWithType.vb: SinglyLinkedList(Of TElement).Node.Clear
- uid: Collectathon.Lists.SinglyLinkedList`1.Node.Postpend(`0)
  name: Postpend(TElement)
  href: api/Collectathon.Lists.SinglyLinkedList-1.Node.html#Collectathon_Lists_SinglyLinkedList_1_Node_Postpend__0_
  commentId: M:Collectathon.Lists.SinglyLinkedList`1.Node.Postpend(`0)
  fullName: Collectathon.Lists.SinglyLinkedList<TElement>.Node.Postpend(TElement)
  fullName.vb: Collectathon.Lists.SinglyLinkedList(Of TElement).Node.Postpend(TElement)
  nameWithType: SinglyLinkedList<TElement>.Node.Postpend(TElement)
  nameWithType.vb: SinglyLinkedList(Of TElement).Node.Postpend(TElement)
- uid: Collectathon.Lists.SinglyLinkedList`1.Node.Postpend*
  name: Postpend
  href: api/Collectathon.Lists.SinglyLinkedList-1.Node.html#Collectathon_Lists_SinglyLinkedList_1_Node_Postpend_
  commentId: Overload:Collectathon.Lists.SinglyLinkedList`1.Node.Postpend
  isSpec: "True"
  fullName: Collectathon.Lists.SinglyLinkedList<TElement>.Node.Postpend
  fullName.vb: Collectathon.Lists.SinglyLinkedList(Of TElement).Node.Postpend
  nameWithType: SinglyLinkedList<TElement>.Node.Postpend
  nameWithType.vb: SinglyLinkedList(Of TElement).Node.Postpend
- uid: Collectathon.Lists.SinglyLinkedList`1.Node.Prepend(`0)
  name: Prepend(TElement)
  href: api/Collectathon.Lists.SinglyLinkedList-1.Node.html#Collectathon_Lists_SinglyLinkedList_1_Node_Prepend__0_
  commentId: M:Collectathon.Lists.SinglyLinkedList`1.Node.Prepend(`0)
  fullName: Collectathon.Lists.SinglyLinkedList<TElement>.Node.Prepend(TElement)
  fullName.vb: Collectathon.Lists.SinglyLinkedList(Of TElement).Node.Prepend(TElement)
  nameWithType: SinglyLinkedList<TElement>.Node.Prepend(TElement)
  nameWithType.vb: SinglyLinkedList(Of TElement).Node.Prepend(TElement)
- uid: Collectathon.Lists.SinglyLinkedList`1.Node.Prepend*
  name: Prepend
  href: api/Collectathon.Lists.SinglyLinkedList-1.Node.html#Collectathon_Lists_SinglyLinkedList_1_Node_Prepend_
  commentId: Overload:Collectathon.Lists.SinglyLinkedList`1.Node.Prepend
  isSpec: "True"
  fullName: Collectathon.Lists.SinglyLinkedList<TElement>.Node.Prepend
  fullName.vb: Collectathon.Lists.SinglyLinkedList(Of TElement).Node.Prepend
  nameWithType: SinglyLinkedList<TElement>.Node.Prepend
  nameWithType.vb: SinglyLinkedList(Of TElement).Node.Prepend
- uid: Collectathon.Lists.SinglyLinkedList`1.op_Implicit(`0[])~Collectathon.Lists.SinglyLinkedList{`0}
  name: Implicit(TElement[] to SinglyLinkedList<TElement>)
  href: api/Collectathon.Lists.SinglyLinkedList-1.html#Collectathon_Lists_SinglyLinkedList_1_op_Implicit__0____Collectathon_Lists_SinglyLinkedList__0_
  commentId: M:Collectathon.Lists.SinglyLinkedList`1.op_Implicit(`0[])~Collectathon.Lists.SinglyLinkedList{`0}
  name.vb: Widening(TElement() to SinglyLinkedList(Of TElement))
  fullName: Collectathon.Lists.SinglyLinkedList<TElement>.Implicit(TElement[] to Collectathon.Lists.SinglyLinkedList<TElement>)
  fullName.vb: Collectathon.Lists.SinglyLinkedList(Of TElement).Widening(TElement() to Collectathon.Lists.SinglyLinkedList(Of TElement))
  nameWithType: SinglyLinkedList<TElement>.Implicit(TElement[] to SinglyLinkedList<TElement>)
  nameWithType.vb: SinglyLinkedList(Of TElement).Widening(TElement() to SinglyLinkedList(Of TElement))
- uid: Collectathon.Lists.SinglyLinkedList`1.op_Implicit*
  name: Implicit
  href: api/Collectathon.Lists.SinglyLinkedList-1.html#Collectathon_Lists_SinglyLinkedList_1_op_Implicit_
  commentId: Overload:Collectathon.Lists.SinglyLinkedList`1.op_Implicit
  isSpec: "True"
  name.vb: Widening
  fullName: Collectathon.Lists.SinglyLinkedList<TElement>.Implicit
  fullName.vb: Collectathon.Lists.SinglyLinkedList(Of TElement).Widening
  nameWithType: SinglyLinkedList<TElement>.Implicit
  nameWithType.vb: SinglyLinkedList(Of TElement).Widening
- uid: Collectathon.Lists.SinglyLinkedList`1.Remove(`0)
  name: Remove(TElement)
  href: api/Collectathon.Lists.SinglyLinkedList-1.html#Collectathon_Lists_SinglyLinkedList_1_Remove__0_
  commentId: M:Collectathon.Lists.SinglyLinkedList`1.Remove(`0)
  fullName: Collectathon.Lists.SinglyLinkedList<TElement>.Remove(TElement)
  fullName.vb: Collectathon.Lists.SinglyLinkedList(Of TElement).Remove(TElement)
  nameWithType: SinglyLinkedList<TElement>.Remove(TElement)
  nameWithType.vb: SinglyLinkedList(Of TElement).Remove(TElement)
- uid: Collectathon.Lists.SinglyLinkedList`1.Remove*
  name: Remove
  href: api/Collectathon.Lists.SinglyLinkedList-1.html#Collectathon_Lists_SinglyLinkedList_1_Remove_
  commentId: Overload:Collectathon.Lists.SinglyLinkedList`1.Remove
  isSpec: "True"
  fullName: Collectathon.Lists.SinglyLinkedList<TElement>.Remove
  fullName.vb: Collectathon.Lists.SinglyLinkedList(Of TElement).Remove
  nameWithType: SinglyLinkedList<TElement>.Remove
  nameWithType.vb: SinglyLinkedList(Of TElement).Remove
- uid: Collectathon.Lists.SinglyLinkedList`1.RemoveFirst(`0)
  name: RemoveFirst(TElement)
  href: api/Collectathon.Lists.SinglyLinkedList-1.html#Collectathon_Lists_SinglyLinkedList_1_RemoveFirst__0_
  commentId: M:Collectathon.Lists.SinglyLinkedList`1.RemoveFirst(`0)
  fullName: Collectathon.Lists.SinglyLinkedList<TElement>.RemoveFirst(TElement)
  fullName.vb: Collectathon.Lists.SinglyLinkedList(Of TElement).RemoveFirst(TElement)
  nameWithType: SinglyLinkedList<TElement>.RemoveFirst(TElement)
  nameWithType.vb: SinglyLinkedList(Of TElement).RemoveFirst(TElement)
- uid: Collectathon.Lists.SinglyLinkedList`1.RemoveFirst*
  name: RemoveFirst
  href: api/Collectathon.Lists.SinglyLinkedList-1.html#Collectathon_Lists_SinglyLinkedList_1_RemoveFirst_
  commentId: Overload:Collectathon.Lists.SinglyLinkedList`1.RemoveFirst
  isSpec: "True"
  fullName: Collectathon.Lists.SinglyLinkedList<TElement>.RemoveFirst
  fullName.vb: Collectathon.Lists.SinglyLinkedList(Of TElement).RemoveFirst
  nameWithType: SinglyLinkedList<TElement>.RemoveFirst
  nameWithType.vb: SinglyLinkedList(Of TElement).RemoveFirst
- uid: Collectathon.Lists.SinglyLinkedList`1.RemoveLast(`0)
  name: RemoveLast(TElement)
  href: api/Collectathon.Lists.SinglyLinkedList-1.html#Collectathon_Lists_SinglyLinkedList_1_RemoveLast__0_
  commentId: M:Collectathon.Lists.SinglyLinkedList`1.RemoveLast(`0)
  fullName: Collectathon.Lists.SinglyLinkedList<TElement>.RemoveLast(TElement)
  fullName.vb: Collectathon.Lists.SinglyLinkedList(Of TElement).RemoveLast(TElement)
  nameWithType: SinglyLinkedList<TElement>.RemoveLast(TElement)
  nameWithType.vb: SinglyLinkedList(Of TElement).RemoveLast(TElement)
- uid: Collectathon.Lists.SinglyLinkedList`1.RemoveLast*
  name: RemoveLast
  href: api/Collectathon.Lists.SinglyLinkedList-1.html#Collectathon_Lists_SinglyLinkedList_1_RemoveLast_
  commentId: Overload:Collectathon.Lists.SinglyLinkedList`1.RemoveLast
  isSpec: "True"
  fullName: Collectathon.Lists.SinglyLinkedList<TElement>.RemoveLast
  fullName.vb: Collectathon.Lists.SinglyLinkedList(Of TElement).RemoveLast
  nameWithType: SinglyLinkedList<TElement>.RemoveLast
  nameWithType.vb: SinglyLinkedList(Of TElement).RemoveLast
- uid: Collectathon.Lists.SinglyLinkedList`2
  name: SinglyLinkedList<TIndex, TElement>
  href: api/Collectathon.Lists.SinglyLinkedList-2.html
  commentId: T:Collectathon.Lists.SinglyLinkedList`2
  name.vb: SinglyLinkedList(Of TIndex, TElement)
  fullName: Collectathon.Lists.SinglyLinkedList<TIndex, TElement>
  fullName.vb: Collectathon.Lists.SinglyLinkedList(Of TIndex, TElement)
  nameWithType: SinglyLinkedList<TIndex, TElement>
  nameWithType.vb: SinglyLinkedList(Of TIndex, TElement)
- uid: Collectathon.Lists.SinglyLinkedList`2.#ctor
  name: SinglyLinkedList()
  href: api/Collectathon.Lists.SinglyLinkedList-2.html#Collectathon_Lists_SinglyLinkedList_2__ctor
  commentId: M:Collectathon.Lists.SinglyLinkedList`2.#ctor
  fullName: Collectathon.Lists.SinglyLinkedList<TIndex, TElement>.SinglyLinkedList()
  fullName.vb: Collectathon.Lists.SinglyLinkedList(Of TIndex, TElement).SinglyLinkedList()
  nameWithType: SinglyLinkedList<TIndex, TElement>.SinglyLinkedList()
  nameWithType.vb: SinglyLinkedList(Of TIndex, TElement).SinglyLinkedList()
- uid: Collectathon.Lists.SinglyLinkedList`2.#ctor(Collectathon.Filters)
  name: SinglyLinkedList(Filters)
  href: api/Collectathon.Lists.SinglyLinkedList-2.html#Collectathon_Lists_SinglyLinkedList_2__ctor_Collectathon_Filters_
  commentId: M:Collectathon.Lists.SinglyLinkedList`2.#ctor(Collectathon.Filters)
  fullName: Collectathon.Lists.SinglyLinkedList<TIndex, TElement>.SinglyLinkedList(Collectathon.Filters)
  fullName.vb: Collectathon.Lists.SinglyLinkedList(Of TIndex, TElement).SinglyLinkedList(Collectathon.Filters)
  nameWithType: SinglyLinkedList<TIndex, TElement>.SinglyLinkedList(Filters)
  nameWithType.vb: SinglyLinkedList(Of TIndex, TElement).SinglyLinkedList(Filters)
- uid: Collectathon.Lists.SinglyLinkedList`2.#ctor(System.ValueTuple{`0,`1}[])
  name: SinglyLinkedList((TIndex Index, TElement Element)[])
  href: api/Collectathon.Lists.SinglyLinkedList-2.html#Collectathon_Lists_SinglyLinkedList_2__ctor_System_ValueTuple__0__1____
  commentId: M:Collectathon.Lists.SinglyLinkedList`2.#ctor(System.ValueTuple{`0,`1}[])
  name.vb: SinglyLinkedList((Index As TIndex, Element As TElement)())
  fullName: Collectathon.Lists.SinglyLinkedList<TIndex, TElement>.SinglyLinkedList(System.ValueTuple<TIndex, TElement>[])
  fullName.vb: Collectathon.Lists.SinglyLinkedList(Of TIndex, TElement).SinglyLinkedList(System.ValueTuple(Of TIndex, TElement)())
  nameWithType: SinglyLinkedList<TIndex, TElement>.SinglyLinkedList((TIndex Index, TElement Element)[])
  nameWithType.vb: SinglyLinkedList(Of TIndex, TElement).SinglyLinkedList((Index As TIndex, Element As TElement)())
- uid: Collectathon.Lists.SinglyLinkedList`2.#ctor(System.ValueTuple{`0,`1}[],Collectathon.Filters)
  name: SinglyLinkedList((TIndex Index, TElement Element)[], Filters)
  href: api/Collectathon.Lists.SinglyLinkedList-2.html#Collectathon_Lists_SinglyLinkedList_2__ctor_System_ValueTuple__0__1____Collectathon_Filters_
  commentId: M:Collectathon.Lists.SinglyLinkedList`2.#ctor(System.ValueTuple{`0,`1}[],Collectathon.Filters)
  name.vb: SinglyLinkedList((Index As TIndex, Element As TElement)(), Filters)
  fullName: Collectathon.Lists.SinglyLinkedList<TIndex, TElement>.SinglyLinkedList(System.ValueTuple<TIndex, TElement>[], Collectathon.Filters)
  fullName.vb: Collectathon.Lists.SinglyLinkedList(Of TIndex, TElement).SinglyLinkedList(System.ValueTuple(Of TIndex, TElement)(), Collectathon.Filters)
  nameWithType: SinglyLinkedList<TIndex, TElement>.SinglyLinkedList((TIndex Index, TElement Element)[], Filters)
  nameWithType.vb: SinglyLinkedList(Of TIndex, TElement).SinglyLinkedList((Index As TIndex, Element As TElement)(), Filters)
- uid: Collectathon.Lists.SinglyLinkedList`2.#ctor*
  name: SinglyLinkedList
  href: api/Collectathon.Lists.SinglyLinkedList-2.html#Collectathon_Lists_SinglyLinkedList_2__ctor_
  commentId: Overload:Collectathon.Lists.SinglyLinkedList`2.#ctor
  isSpec: "True"
  fullName: Collectathon.Lists.SinglyLinkedList<TIndex, TElement>.SinglyLinkedList
  fullName.vb: Collectathon.Lists.SinglyLinkedList(Of TIndex, TElement).SinglyLinkedList
  nameWithType: SinglyLinkedList<TIndex, TElement>.SinglyLinkedList
  nameWithType.vb: SinglyLinkedList(Of TIndex, TElement).SinglyLinkedList
- uid: Collectathon.Lists.SinglyLinkedList`2.NewUnlinkedNode(`0,`1)
  name: NewUnlinkedNode(TIndex, TElement)
  href: api/Collectathon.Lists.SinglyLinkedList-2.html#Collectathon_Lists_SinglyLinkedList_2_NewUnlinkedNode__0__1_
  commentId: M:Collectathon.Lists.SinglyLinkedList`2.NewUnlinkedNode(`0,`1)
  fullName: Collectathon.Lists.SinglyLinkedList<TIndex, TElement>.NewUnlinkedNode(TIndex, TElement)
  fullName.vb: Collectathon.Lists.SinglyLinkedList(Of TIndex, TElement).NewUnlinkedNode(TIndex, TElement)
  nameWithType: SinglyLinkedList<TIndex, TElement>.NewUnlinkedNode(TIndex, TElement)
  nameWithType.vb: SinglyLinkedList(Of TIndex, TElement).NewUnlinkedNode(TIndex, TElement)
- uid: Collectathon.Lists.SinglyLinkedList`2.NewUnlinkedNode*
  name: NewUnlinkedNode
  href: api/Collectathon.Lists.SinglyLinkedList-2.html#Collectathon_Lists_SinglyLinkedList_2_NewUnlinkedNode_
  commentId: Overload:Collectathon.Lists.SinglyLinkedList`2.NewUnlinkedNode
  isSpec: "True"
  fullName: Collectathon.Lists.SinglyLinkedList<TIndex, TElement>.NewUnlinkedNode
  fullName.vb: Collectathon.Lists.SinglyLinkedList(Of TIndex, TElement).NewUnlinkedNode
  nameWithType: SinglyLinkedList<TIndex, TElement>.NewUnlinkedNode
  nameWithType.vb: SinglyLinkedList(Of TIndex, TElement).NewUnlinkedNode
- uid: Collectathon.Lists.SinglyLinkedList`2.Node
  name: SinglyLinkedList<TIndex, TElement>.Node
  href: api/Collectathon.Lists.SinglyLinkedList-2.Node.html
  commentId: T:Collectathon.Lists.SinglyLinkedList`2.Node
  name.vb: SinglyLinkedList(Of TIndex, TElement).Node
  fullName: Collectathon.Lists.SinglyLinkedList<TIndex, TElement>.Node
  fullName.vb: Collectathon.Lists.SinglyLinkedList(Of TIndex, TElement).Node
  nameWithType: SinglyLinkedList<TIndex, TElement>.Node
  nameWithType.vb: SinglyLinkedList(Of TIndex, TElement).Node
- uid: Collectathon.Lists.SinglyLinkedList`2.Node.#ctor(`0,`1,Collectathon.Lists.SinglyLinkedList{`0,`1}.Node)
  name: Node(TIndex, TElement, SinglyLinkedList<TIndex, TElement>.Node)
  href: api/Collectathon.Lists.SinglyLinkedList-2.Node.html#Collectathon_Lists_SinglyLinkedList_2_Node__ctor__0__1_Collectathon_Lists_SinglyLinkedList__0__1__Node_
  commentId: M:Collectathon.Lists.SinglyLinkedList`2.Node.#ctor(`0,`1,Collectathon.Lists.SinglyLinkedList{`0,`1}.Node)
  name.vb: Node(TIndex, TElement, SinglyLinkedList(Of TIndex, TElement).Node)
  fullName: Collectathon.Lists.SinglyLinkedList<TIndex, TElement>.Node.Node(TIndex, TElement, Collectathon.Lists.SinglyLinkedList<TIndex, TElement>.Node)
  fullName.vb: Collectathon.Lists.SinglyLinkedList(Of TIndex, TElement).Node.Node(TIndex, TElement, Collectathon.Lists.SinglyLinkedList(Of TIndex, TElement).Node)
  nameWithType: SinglyLinkedList<TIndex, TElement>.Node.Node(TIndex, TElement, SinglyLinkedList<TIndex, TElement>.Node)
  nameWithType.vb: SinglyLinkedList(Of TIndex, TElement).Node.Node(TIndex, TElement, SinglyLinkedList(Of TIndex, TElement).Node)
- uid: Collectathon.Lists.SinglyLinkedList`2.Node.#ctor*
  name: Node
  href: api/Collectathon.Lists.SinglyLinkedList-2.Node.html#Collectathon_Lists_SinglyLinkedList_2_Node__ctor_
  commentId: Overload:Collectathon.Lists.SinglyLinkedList`2.Node.#ctor
  isSpec: "True"
  fullName: Collectathon.Lists.SinglyLinkedList<TIndex, TElement>.Node.Node
  fullName.vb: Collectathon.Lists.SinglyLinkedList(Of TIndex, TElement).Node.Node
  nameWithType: SinglyLinkedList<TIndex, TElement>.Node.Node
  nameWithType.vb: SinglyLinkedList(Of TIndex, TElement).Node.Node
- uid: Collectathon.Lists.SinglyLinkedList`2.Node.Clear
  name: Clear()
  href: api/Collectathon.Lists.SinglyLinkedList-2.Node.html#Collectathon_Lists_SinglyLinkedList_2_Node_Clear
  commentId: M:Collectathon.Lists.SinglyLinkedList`2.Node.Clear
  fullName: Collectathon.Lists.SinglyLinkedList<TIndex, TElement>.Node.Clear()
  fullName.vb: Collectathon.Lists.SinglyLinkedList(Of TIndex, TElement).Node.Clear()
  nameWithType: SinglyLinkedList<TIndex, TElement>.Node.Clear()
  nameWithType.vb: SinglyLinkedList(Of TIndex, TElement).Node.Clear()
- uid: Collectathon.Lists.SinglyLinkedList`2.Node.Clear*
  name: Clear
  href: api/Collectathon.Lists.SinglyLinkedList-2.Node.html#Collectathon_Lists_SinglyLinkedList_2_Node_Clear_
  commentId: Overload:Collectathon.Lists.SinglyLinkedList`2.Node.Clear
  isSpec: "True"
  fullName: Collectathon.Lists.SinglyLinkedList<TIndex, TElement>.Node.Clear
  fullName.vb: Collectathon.Lists.SinglyLinkedList(Of TIndex, TElement).Node.Clear
  nameWithType: SinglyLinkedList<TIndex, TElement>.Node.Clear
  nameWithType.vb: SinglyLinkedList(Of TIndex, TElement).Node.Clear
- uid: Collectathon.Lists.SinglyLinkedList`2.Node.Postpend(`0,`1)
  name: Postpend(TIndex, TElement)
  href: api/Collectathon.Lists.SinglyLinkedList-2.Node.html#Collectathon_Lists_SinglyLinkedList_2_Node_Postpend__0__1_
  commentId: M:Collectathon.Lists.SinglyLinkedList`2.Node.Postpend(`0,`1)
  fullName: Collectathon.Lists.SinglyLinkedList<TIndex, TElement>.Node.Postpend(TIndex, TElement)
  fullName.vb: Collectathon.Lists.SinglyLinkedList(Of TIndex, TElement).Node.Postpend(TIndex, TElement)
  nameWithType: SinglyLinkedList<TIndex, TElement>.Node.Postpend(TIndex, TElement)
  nameWithType.vb: SinglyLinkedList(Of TIndex, TElement).Node.Postpend(TIndex, TElement)
- uid: Collectathon.Lists.SinglyLinkedList`2.Node.Postpend*
  name: Postpend
  href: api/Collectathon.Lists.SinglyLinkedList-2.Node.html#Collectathon_Lists_SinglyLinkedList_2_Node_Postpend_
  commentId: Overload:Collectathon.Lists.SinglyLinkedList`2.Node.Postpend
  isSpec: "True"
  fullName: Collectathon.Lists.SinglyLinkedList<TIndex, TElement>.Node.Postpend
  fullName.vb: Collectathon.Lists.SinglyLinkedList(Of TIndex, TElement).Node.Postpend
  nameWithType: SinglyLinkedList<TIndex, TElement>.Node.Postpend
  nameWithType.vb: SinglyLinkedList(Of TIndex, TElement).Node.Postpend
- uid: Collectathon.Lists.SinglyLinkedList`2.Node.Prepend(`0,`1)
  name: Prepend(TIndex, TElement)
  href: api/Collectathon.Lists.SinglyLinkedList-2.Node.html#Collectathon_Lists_SinglyLinkedList_2_Node_Prepend__0__1_
  commentId: M:Collectathon.Lists.SinglyLinkedList`2.Node.Prepend(`0,`1)
  fullName: Collectathon.Lists.SinglyLinkedList<TIndex, TElement>.Node.Prepend(TIndex, TElement)
  fullName.vb: Collectathon.Lists.SinglyLinkedList(Of TIndex, TElement).Node.Prepend(TIndex, TElement)
  nameWithType: SinglyLinkedList<TIndex, TElement>.Node.Prepend(TIndex, TElement)
  nameWithType.vb: SinglyLinkedList(Of TIndex, TElement).Node.Prepend(TIndex, TElement)
- uid: Collectathon.Lists.SinglyLinkedList`2.Node.Prepend*
  name: Prepend
  href: api/Collectathon.Lists.SinglyLinkedList-2.Node.html#Collectathon_Lists_SinglyLinkedList_2_Node_Prepend_
  commentId: Overload:Collectathon.Lists.SinglyLinkedList`2.Node.Prepend
  isSpec: "True"
  fullName: Collectathon.Lists.SinglyLinkedList<TIndex, TElement>.Node.Prepend
  fullName.vb: Collectathon.Lists.SinglyLinkedList(Of TIndex, TElement).Node.Prepend
  nameWithType: SinglyLinkedList<TIndex, TElement>.Node.Prepend
  nameWithType.vb: SinglyLinkedList(Of TIndex, TElement).Node.Prepend
- uid: Collectathon.Lists.SinglyLinkedList`2.op_Implicit(System.ValueTuple{`0,`1}[])~Collectathon.Lists.SinglyLinkedList{`0,`1}
  name: Implicit((TIndex Index, TElement Element)[] to SinglyLinkedList<TIndex, TElement>)
  href: api/Collectathon.Lists.SinglyLinkedList-2.html#Collectathon_Lists_SinglyLinkedList_2_op_Implicit_System_ValueTuple__0__1_____Collectathon_Lists_SinglyLinkedList__0__1_
  commentId: M:Collectathon.Lists.SinglyLinkedList`2.op_Implicit(System.ValueTuple{`0,`1}[])~Collectathon.Lists.SinglyLinkedList{`0,`1}
  name.vb: Widening((Index As TIndex, Element As TElement)() to SinglyLinkedList(Of TIndex, TElement))
  fullName: Collectathon.Lists.SinglyLinkedList<TIndex, TElement>.Implicit(System.ValueTuple<TIndex, TElement>[] to Collectathon.Lists.SinglyLinkedList<TIndex, TElement>)
  fullName.vb: Collectathon.Lists.SinglyLinkedList(Of TIndex, TElement).Widening(System.ValueTuple(Of TIndex, TElement)() to Collectathon.Lists.SinglyLinkedList(Of TIndex, TElement))
  nameWithType: SinglyLinkedList<TIndex, TElement>.Implicit((TIndex Index, TElement Element)[] to SinglyLinkedList<TIndex, TElement>)
  nameWithType.vb: SinglyLinkedList(Of TIndex, TElement).Widening((Index As TIndex, Element As TElement)() to SinglyLinkedList(Of TIndex, TElement))
- uid: Collectathon.Lists.SinglyLinkedList`2.op_Implicit*
  name: Implicit
  href: api/Collectathon.Lists.SinglyLinkedList-2.html#Collectathon_Lists_SinglyLinkedList_2_op_Implicit_
  commentId: Overload:Collectathon.Lists.SinglyLinkedList`2.op_Implicit
  isSpec: "True"
  name.vb: Widening
  fullName: Collectathon.Lists.SinglyLinkedList<TIndex, TElement>.Implicit
  fullName.vb: Collectathon.Lists.SinglyLinkedList(Of TIndex, TElement).Widening
  nameWithType: SinglyLinkedList<TIndex, TElement>.Implicit
  nameWithType.vb: SinglyLinkedList(Of TIndex, TElement).Widening
- uid: Collectathon.Lists.StandardList`3
  name: StandardList<TElement, TNode, TSelf>
  href: api/Collectathon.Lists.StandardList-3.html
  commentId: T:Collectathon.Lists.StandardList`3
  name.vb: StandardList(Of TElement, TNode, TSelf)
  fullName: Collectathon.Lists.StandardList<TElement, TNode, TSelf>
  fullName.vb: Collectathon.Lists.StandardList(Of TElement, TNode, TSelf)
  nameWithType: StandardList<TElement, TNode, TSelf>
  nameWithType.vb: StandardList(Of TElement, TNode, TSelf)
- uid: Collectathon.Lists.StandardList`3.#ctor(`0[],Collectathon.Filters)
  name: StandardList(TElement[], Filters)
  href: api/Collectathon.Lists.StandardList-3.html#Collectathon_Lists_StandardList_3__ctor__0___Collectathon_Filters_
  commentId: M:Collectathon.Lists.StandardList`3.#ctor(`0[],Collectathon.Filters)
  name.vb: StandardList(TElement(), Filters)
  fullName: Collectathon.Lists.StandardList<TElement, TNode, TSelf>.StandardList(TElement[], Collectathon.Filters)
  fullName.vb: Collectathon.Lists.StandardList(Of TElement, TNode, TSelf).StandardList(TElement(), Collectathon.Filters)
  nameWithType: StandardList<TElement, TNode, TSelf>.StandardList(TElement[], Filters)
  nameWithType.vb: StandardList(Of TElement, TNode, TSelf).StandardList(TElement(), Filters)
- uid: Collectathon.Lists.StandardList`3.#ctor(Collectathon.Filter{nint,`0})
  name: StandardList(Filter<nint, TElement>)
  href: api/Collectathon.Lists.StandardList-3.html#Collectathon_Lists_StandardList_3__ctor_Collectathon_Filter_nint__0__
  commentId: M:Collectathon.Lists.StandardList`3.#ctor(Collectathon.Filter{nint,`0})
  name.vb: StandardList(Filter(Of nint, TElement))
  fullName: Collectathon.Lists.StandardList<TElement, TNode, TSelf>.StandardList(Collectathon.Filter<nint, TElement>)
  fullName.vb: Collectathon.Lists.StandardList(Of TElement, TNode, TSelf).StandardList(Collectathon.Filter(Of nint, TElement))
  nameWithType: StandardList<TElement, TNode, TSelf>.StandardList(Filter<nint, TElement>)
  nameWithType.vb: StandardList(Of TElement, TNode, TSelf).StandardList(Filter(Of nint, TElement))
- uid: Collectathon.Lists.StandardList`3.#ctor(Collectathon.Filters)
  name: StandardList(Filters)
  href: api/Collectathon.Lists.StandardList-3.html#Collectathon_Lists_StandardList_3__ctor_Collectathon_Filters_
  commentId: M:Collectathon.Lists.StandardList`3.#ctor(Collectathon.Filters)
  fullName: Collectathon.Lists.StandardList<TElement, TNode, TSelf>.StandardList(Collectathon.Filters)
  fullName.vb: Collectathon.Lists.StandardList(Of TElement, TNode, TSelf).StandardList(Collectathon.Filters)
  nameWithType: StandardList<TElement, TNode, TSelf>.StandardList(Filters)
  nameWithType.vb: StandardList(Of TElement, TNode, TSelf).StandardList(Filters)
- uid: Collectathon.Lists.StandardList`3.#ctor*
  name: StandardList
  href: api/Collectathon.Lists.StandardList-3.html#Collectathon_Lists_StandardList_3__ctor_
  commentId: Overload:Collectathon.Lists.StandardList`3.#ctor
  isSpec: "True"
  fullName: Collectathon.Lists.StandardList<TElement, TNode, TSelf>.StandardList
  fullName.vb: Collectathon.Lists.StandardList(Of TElement, TNode, TSelf).StandardList
  nameWithType: StandardList<TElement, TNode, TSelf>.StandardList
  nameWithType.vb: StandardList(Of TElement, TNode, TSelf).StandardList
- uid: Collectathon.Lists.StandardList`3.Contains(`0)
  name: Contains(TElement)
  href: api/Collectathon.Lists.StandardList-3.html#Collectathon_Lists_StandardList_3_Contains__0_
  commentId: M:Collectathon.Lists.StandardList`3.Contains(`0)
  fullName: Collectathon.Lists.StandardList<TElement, TNode, TSelf>.Contains(TElement)
  fullName.vb: Collectathon.Lists.StandardList(Of TElement, TNode, TSelf).Contains(TElement)
  nameWithType: StandardList<TElement, TNode, TSelf>.Contains(TElement)
  nameWithType.vb: StandardList(Of TElement, TNode, TSelf).Contains(TElement)
- uid: Collectathon.Lists.StandardList`3.Contains*
  name: Contains
  href: api/Collectathon.Lists.StandardList-3.html#Collectathon_Lists_StandardList_3_Contains_
  commentId: Overload:Collectathon.Lists.StandardList`3.Contains
  isSpec: "True"
  fullName: Collectathon.Lists.StandardList<TElement, TNode, TSelf>.Contains
  fullName.vb: Collectathon.Lists.StandardList(Of TElement, TNode, TSelf).Contains
  nameWithType: StandardList<TElement, TNode, TSelf>.Contains
  nameWithType.vb: StandardList(Of TElement, TNode, TSelf).Contains
- uid: Collectathon.Lists.StandardList`3.Enumerator
  name: StandardList<TElement, TNode, TSelf>.Enumerator
  href: api/Collectathon.Lists.StandardList-3.Enumerator.html
  commentId: T:Collectathon.Lists.StandardList`3.Enumerator
  name.vb: StandardList(Of TElement, TNode, TSelf).Enumerator
  fullName: Collectathon.Lists.StandardList<TElement, TNode, TSelf>.Enumerator
  fullName.vb: Collectathon.Lists.StandardList(Of TElement, TNode, TSelf).Enumerator
  nameWithType: StandardList<TElement, TNode, TSelf>.Enumerator
  nameWithType.vb: StandardList(Of TElement, TNode, TSelf).Enumerator
- uid: Collectathon.Lists.StandardList`3.Enumerator.#ctor(Collectathon.Lists.StandardList{`0,`1,`2})
  name: Enumerator(StandardList<TElement, TNode, TSelf>)
  href: api/Collectathon.Lists.StandardList-3.Enumerator.html#Collectathon_Lists_StandardList_3_Enumerator__ctor_Collectathon_Lists_StandardList__0__1__2__
  commentId: M:Collectathon.Lists.StandardList`3.Enumerator.#ctor(Collectathon.Lists.StandardList{`0,`1,`2})
  name.vb: Enumerator(StandardList(Of TElement, TNode, TSelf))
  fullName: Collectathon.Lists.StandardList<TElement, TNode, TSelf>.Enumerator.Enumerator(Collectathon.Lists.StandardList<TElement, TNode, TSelf>)
  fullName.vb: Collectathon.Lists.StandardList(Of TElement, TNode, TSelf).Enumerator.Enumerator(Collectathon.Lists.StandardList(Of TElement, TNode, TSelf))
  nameWithType: StandardList<TElement, TNode, TSelf>.Enumerator.Enumerator(StandardList<TElement, TNode, TSelf>)
  nameWithType.vb: StandardList(Of TElement, TNode, TSelf).Enumerator.Enumerator(StandardList(Of TElement, TNode, TSelf))
- uid: Collectathon.Lists.StandardList`3.Enumerator.#ctor*
  name: Enumerator
  href: api/Collectathon.Lists.StandardList-3.Enumerator.html#Collectathon_Lists_StandardList_3_Enumerator__ctor_
  commentId: Overload:Collectathon.Lists.StandardList`3.Enumerator.#ctor
  isSpec: "True"
  fullName: Collectathon.Lists.StandardList<TElement, TNode, TSelf>.Enumerator.Enumerator
  fullName.vb: Collectathon.Lists.StandardList(Of TElement, TNode, TSelf).Enumerator.Enumerator
  nameWithType: StandardList<TElement, TNode, TSelf>.Enumerator.Enumerator
  nameWithType.vb: StandardList(Of TElement, TNode, TSelf).Enumerator.Enumerator
- uid: Collectathon.Lists.StandardList`3.Enumerator.Count
  name: Count
  href: api/Collectathon.Lists.StandardList-3.Enumerator.html#Collectathon_Lists_StandardList_3_Enumerator_Count
  commentId: P:Collectathon.Lists.StandardList`3.Enumerator.Count
  fullName: Collectathon.Lists.StandardList<TElement, TNode, TSelf>.Enumerator.Count
  fullName.vb: Collectathon.Lists.StandardList(Of TElement, TNode, TSelf).Enumerator.Count
  nameWithType: StandardList<TElement, TNode, TSelf>.Enumerator.Count
  nameWithType.vb: StandardList(Of TElement, TNode, TSelf).Enumerator.Count
- uid: Collectathon.Lists.StandardList`3.Enumerator.Count*
  name: Count
  href: api/Collectathon.Lists.StandardList-3.Enumerator.html#Collectathon_Lists_StandardList_3_Enumerator_Count_
  commentId: Overload:Collectathon.Lists.StandardList`3.Enumerator.Count
  isSpec: "True"
  fullName: Collectathon.Lists.StandardList<TElement, TNode, TSelf>.Enumerator.Count
  fullName.vb: Collectathon.Lists.StandardList(Of TElement, TNode, TSelf).Enumerator.Count
  nameWithType: StandardList<TElement, TNode, TSelf>.Enumerator.Count
  nameWithType.vb: StandardList(Of TElement, TNode, TSelf).Enumerator.Count
- uid: Collectathon.Lists.StandardList`3.Enumerator.Current
  name: Current
  href: api/Collectathon.Lists.StandardList-3.Enumerator.html#Collectathon_Lists_StandardList_3_Enumerator_Current
  commentId: P:Collectathon.Lists.StandardList`3.Enumerator.Current
  fullName: Collectathon.Lists.StandardList<TElement, TNode, TSelf>.Enumerator.Current
  fullName.vb: Collectathon.Lists.StandardList(Of TElement, TNode, TSelf).Enumerator.Current
  nameWithType: StandardList<TElement, TNode, TSelf>.Enumerator.Current
  nameWithType.vb: StandardList(Of TElement, TNode, TSelf).Enumerator.Current
- uid: Collectathon.Lists.StandardList`3.Enumerator.Current*
  name: Current
  href: api/Collectathon.Lists.StandardList-3.Enumerator.html#Collectathon_Lists_StandardList_3_Enumerator_Current_
  commentId: Overload:Collectathon.Lists.StandardList`3.Enumerator.Current
  isSpec: "True"
  fullName: Collectathon.Lists.StandardList<TElement, TNode, TSelf>.Enumerator.Current
  fullName.vb: Collectathon.Lists.StandardList(Of TElement, TNode, TSelf).Enumerator.Current
  nameWithType: StandardList<TElement, TNode, TSelf>.Enumerator.Current
  nameWithType.vb: StandardList(Of TElement, TNode, TSelf).Enumerator.Current
- uid: Collectathon.Lists.StandardList`3.Enumerator.Dispose
  name: Dispose()
  href: api/Collectathon.Lists.StandardList-3.Enumerator.html#Collectathon_Lists_StandardList_3_Enumerator_Dispose
  commentId: M:Collectathon.Lists.StandardList`3.Enumerator.Dispose
  fullName: Collectathon.Lists.StandardList<TElement, TNode, TSelf>.Enumerator.Dispose()
  fullName.vb: Collectathon.Lists.StandardList(Of TElement, TNode, TSelf).Enumerator.Dispose()
  nameWithType: StandardList<TElement, TNode, TSelf>.Enumerator.Dispose()
  nameWithType.vb: StandardList(Of TElement, TNode, TSelf).Enumerator.Dispose()
- uid: Collectathon.Lists.StandardList`3.Enumerator.Dispose*
  name: Dispose
  href: api/Collectathon.Lists.StandardList-3.Enumerator.html#Collectathon_Lists_StandardList_3_Enumerator_Dispose_
  commentId: Overload:Collectathon.Lists.StandardList`3.Enumerator.Dispose
  isSpec: "True"
  fullName: Collectathon.Lists.StandardList<TElement, TNode, TSelf>.Enumerator.Dispose
  fullName.vb: Collectathon.Lists.StandardList(Of TElement, TNode, TSelf).Enumerator.Dispose
  nameWithType: StandardList<TElement, TNode, TSelf>.Enumerator.Dispose
  nameWithType.vb: StandardList(Of TElement, TNode, TSelf).Enumerator.Dispose
- uid: Collectathon.Lists.StandardList`3.Enumerator.GetEnumerator
  name: GetEnumerator()
  href: api/Collectathon.Lists.StandardList-3.Enumerator.html#Collectathon_Lists_StandardList_3_Enumerator_GetEnumerator
  commentId: M:Collectathon.Lists.StandardList`3.Enumerator.GetEnumerator
  fullName: Collectathon.Lists.StandardList<TElement, TNode, TSelf>.Enumerator.GetEnumerator()
  fullName.vb: Collectathon.Lists.StandardList(Of TElement, TNode, TSelf).Enumerator.GetEnumerator()
  nameWithType: StandardList<TElement, TNode, TSelf>.Enumerator.GetEnumerator()
  nameWithType.vb: StandardList(Of TElement, TNode, TSelf).Enumerator.GetEnumerator()
- uid: Collectathon.Lists.StandardList`3.Enumerator.GetEnumerator*
  name: GetEnumerator
  href: api/Collectathon.Lists.StandardList-3.Enumerator.html#Collectathon_Lists_StandardList_3_Enumerator_GetEnumerator_
  commentId: Overload:Collectathon.Lists.StandardList`3.Enumerator.GetEnumerator
  isSpec: "True"
  fullName: Collectathon.Lists.StandardList<TElement, TNode, TSelf>.Enumerator.GetEnumerator
  fullName.vb: Collectathon.Lists.StandardList(Of TElement, TNode, TSelf).Enumerator.GetEnumerator
  nameWithType: StandardList<TElement, TNode, TSelf>.Enumerator.GetEnumerator
  nameWithType.vb: StandardList(Of TElement, TNode, TSelf).Enumerator.GetEnumerator
- uid: Collectathon.Lists.StandardList`3.Enumerator.MoveNext
  name: MoveNext()
  href: api/Collectathon.Lists.StandardList-3.Enumerator.html#Collectathon_Lists_StandardList_3_Enumerator_MoveNext
  commentId: M:Collectathon.Lists.StandardList`3.Enumerator.MoveNext
  fullName: Collectathon.Lists.StandardList<TElement, TNode, TSelf>.Enumerator.MoveNext()
  fullName.vb: Collectathon.Lists.StandardList(Of TElement, TNode, TSelf).Enumerator.MoveNext()
  nameWithType: StandardList<TElement, TNode, TSelf>.Enumerator.MoveNext()
  nameWithType.vb: StandardList(Of TElement, TNode, TSelf).Enumerator.MoveNext()
- uid: Collectathon.Lists.StandardList`3.Enumerator.MoveNext*
  name: MoveNext
  href: api/Collectathon.Lists.StandardList-3.Enumerator.html#Collectathon_Lists_StandardList_3_Enumerator_MoveNext_
  commentId: Overload:Collectathon.Lists.StandardList`3.Enumerator.MoveNext
  isSpec: "True"
  fullName: Collectathon.Lists.StandardList<TElement, TNode, TSelf>.Enumerator.MoveNext
  fullName.vb: Collectathon.Lists.StandardList(Of TElement, TNode, TSelf).Enumerator.MoveNext
  nameWithType: StandardList<TElement, TNode, TSelf>.Enumerator.MoveNext
  nameWithType.vb: StandardList(Of TElement, TNode, TSelf).Enumerator.MoveNext
- uid: Collectathon.Lists.StandardList`3.Enumerator.Reset
  name: Reset()
  href: api/Collectathon.Lists.StandardList-3.Enumerator.html#Collectathon_Lists_StandardList_3_Enumerator_Reset
  commentId: M:Collectathon.Lists.StandardList`3.Enumerator.Reset
  fullName: Collectathon.Lists.StandardList<TElement, TNode, TSelf>.Enumerator.Reset()
  fullName.vb: Collectathon.Lists.StandardList(Of TElement, TNode, TSelf).Enumerator.Reset()
  nameWithType: StandardList<TElement, TNode, TSelf>.Enumerator.Reset()
  nameWithType.vb: StandardList(Of TElement, TNode, TSelf).Enumerator.Reset()
- uid: Collectathon.Lists.StandardList`3.Enumerator.Reset*
  name: Reset
  href: api/Collectathon.Lists.StandardList-3.Enumerator.html#Collectathon_Lists_StandardList_3_Enumerator_Reset_
  commentId: Overload:Collectathon.Lists.StandardList`3.Enumerator.Reset
  isSpec: "True"
  fullName: Collectathon.Lists.StandardList<TElement, TNode, TSelf>.Enumerator.Reset
  fullName.vb: Collectathon.Lists.StandardList(Of TElement, TNode, TSelf).Enumerator.Reset
  nameWithType: StandardList<TElement, TNode, TSelf>.Enumerator.Reset
  nameWithType.vb: StandardList(Of TElement, TNode, TSelf).Enumerator.Reset
- uid: Collectathon.Lists.StandardList`3.Enumerator.ToString
  name: ToString()
  href: api/Collectathon.Lists.StandardList-3.Enumerator.html#Collectathon_Lists_StandardList_3_Enumerator_ToString
  commentId: M:Collectathon.Lists.StandardList`3.Enumerator.ToString
  fullName: Collectathon.Lists.StandardList<TElement, TNode, TSelf>.Enumerator.ToString()
  fullName.vb: Collectathon.Lists.StandardList(Of TElement, TNode, TSelf).Enumerator.ToString()
  nameWithType: StandardList<TElement, TNode, TSelf>.Enumerator.ToString()
  nameWithType.vb: StandardList(Of TElement, TNode, TSelf).Enumerator.ToString()
- uid: Collectathon.Lists.StandardList`3.Enumerator.ToString(nint)
  name: ToString(nint)
  href: api/Collectathon.Lists.StandardList-3.Enumerator.html#Collectathon_Lists_StandardList_3_Enumerator_ToString_nint_
  commentId: M:Collectathon.Lists.StandardList`3.Enumerator.ToString(nint)
  fullName: Collectathon.Lists.StandardList<TElement, TNode, TSelf>.Enumerator.ToString(nint)
  fullName.vb: Collectathon.Lists.StandardList(Of TElement, TNode, TSelf).Enumerator.ToString(nint)
  nameWithType: StandardList<TElement, TNode, TSelf>.Enumerator.ToString(nint)
  nameWithType.vb: StandardList(Of TElement, TNode, TSelf).Enumerator.ToString(nint)
- uid: Collectathon.Lists.StandardList`3.Enumerator.ToString*
  name: ToString
  href: api/Collectathon.Lists.StandardList-3.Enumerator.html#Collectathon_Lists_StandardList_3_Enumerator_ToString_
  commentId: Overload:Collectathon.Lists.StandardList`3.Enumerator.ToString
  isSpec: "True"
  fullName: Collectathon.Lists.StandardList<TElement, TNode, TSelf>.Enumerator.ToString
  fullName.vb: Collectathon.Lists.StandardList(Of TElement, TNode, TSelf).Enumerator.ToString
  nameWithType: StandardList<TElement, TNode, TSelf>.Enumerator.ToString
  nameWithType.vb: StandardList(Of TElement, TNode, TSelf).Enumerator.ToString
- uid: Collectathon.Lists.StandardList`3.GetEnumerator
  name: GetEnumerator()
  href: api/Collectathon.Lists.StandardList-3.html#Collectathon_Lists_StandardList_3_GetEnumerator
  commentId: M:Collectathon.Lists.StandardList`3.GetEnumerator
  fullName: Collectathon.Lists.StandardList<TElement, TNode, TSelf>.GetEnumerator()
  fullName.vb: Collectathon.Lists.StandardList(Of TElement, TNode, TSelf).GetEnumerator()
  nameWithType: StandardList<TElement, TNode, TSelf>.GetEnumerator()
  nameWithType.vb: StandardList(Of TElement, TNode, TSelf).GetEnumerator()
- uid: Collectathon.Lists.StandardList`3.GetEnumerator*
  name: GetEnumerator
  href: api/Collectathon.Lists.StandardList-3.html#Collectathon_Lists_StandardList_3_GetEnumerator_
  commentId: Overload:Collectathon.Lists.StandardList`3.GetEnumerator
  isSpec: "True"
  fullName: Collectathon.Lists.StandardList<TElement, TNode, TSelf>.GetEnumerator
  fullName.vb: Collectathon.Lists.StandardList(Of TElement, TNode, TSelf).GetEnumerator
  nameWithType: StandardList<TElement, TNode, TSelf>.GetEnumerator
  nameWithType.vb: StandardList(Of TElement, TNode, TSelf).GetEnumerator
- uid: Collectathon.Lists.StandardList`3.Item(nint)
  name: Item[nint]
  href: api/Collectathon.Lists.StandardList-3.html#Collectathon_Lists_StandardList_3_Item_nint_
  commentId: P:Collectathon.Lists.StandardList`3.Item(nint)
  name.vb: Item(nint)
  fullName: Collectathon.Lists.StandardList<TElement, TNode, TSelf>.Item[nint]
  fullName.vb: Collectathon.Lists.StandardList(Of TElement, TNode, TSelf).Item(nint)
  nameWithType: StandardList<TElement, TNode, TSelf>.Item[nint]
  nameWithType.vb: StandardList(Of TElement, TNode, TSelf).Item(nint)
- uid: Collectathon.Lists.StandardList`3.Item*
  name: Item
  href: api/Collectathon.Lists.StandardList-3.html#Collectathon_Lists_StandardList_3_Item_
  commentId: Overload:Collectathon.Lists.StandardList`3.Item
  isSpec: "True"
  fullName: Collectathon.Lists.StandardList<TElement, TNode, TSelf>.Item
  fullName.vb: Collectathon.Lists.StandardList(Of TElement, TNode, TSelf).Item
  nameWithType: StandardList<TElement, TNode, TSelf>.Item
  nameWithType.vb: StandardList(Of TElement, TNode, TSelf).Item
- uid: Collectathon.Lists.StandardList`3.Replace(`0,`0)
  name: Replace(TElement, TElement)
  href: api/Collectathon.Lists.StandardList-3.html#Collectathon_Lists_StandardList_3_Replace__0__0_
  commentId: M:Collectathon.Lists.StandardList`3.Replace(`0,`0)
  fullName: Collectathon.Lists.StandardList<TElement, TNode, TSelf>.Replace(TElement, TElement)
  fullName.vb: Collectathon.Lists.StandardList(Of TElement, TNode, TSelf).Replace(TElement, TElement)
  nameWithType: StandardList<TElement, TNode, TSelf>.Replace(TElement, TElement)
  nameWithType.vb: StandardList(Of TElement, TNode, TSelf).Replace(TElement, TElement)
- uid: Collectathon.Lists.StandardList`3.Replace*
  name: Replace
  href: api/Collectathon.Lists.StandardList-3.html#Collectathon_Lists_StandardList_3_Replace_
  commentId: Overload:Collectathon.Lists.StandardList`3.Replace
  isSpec: "True"
  fullName: Collectathon.Lists.StandardList<TElement, TNode, TSelf>.Replace
  fullName.vb: Collectathon.Lists.StandardList(Of TElement, TNode, TSelf).Replace
  nameWithType: StandardList<TElement, TNode, TSelf>.Replace
  nameWithType.vb: StandardList(Of TElement, TNode, TSelf).Replace
- uid: Collectathon.Lists.StandardList`4
  name: StandardList<TIndex, TElement, TNode, TSelf>
  href: api/Collectathon.Lists.StandardList-4.html
  commentId: T:Collectathon.Lists.StandardList`4
  name.vb: StandardList(Of TIndex, TElement, TNode, TSelf)
  fullName: Collectathon.Lists.StandardList<TIndex, TElement, TNode, TSelf>
  fullName.vb: Collectathon.Lists.StandardList(Of TIndex, TElement, TNode, TSelf)
  nameWithType: StandardList<TIndex, TElement, TNode, TSelf>
  nameWithType.vb: StandardList(Of TIndex, TElement, TNode, TSelf)
- uid: Collectathon.Lists.StandardList`4.#ctor(Collectathon.Filter{`0,`1})
  name: StandardList(Filter<TIndex, TElement>)
  href: api/Collectathon.Lists.StandardList-4.html#Collectathon_Lists_StandardList_4__ctor_Collectathon_Filter__0__1__
  commentId: M:Collectathon.Lists.StandardList`4.#ctor(Collectathon.Filter{`0,`1})
  name.vb: StandardList(Filter(Of TIndex, TElement))
  fullName: Collectathon.Lists.StandardList<TIndex, TElement, TNode, TSelf>.StandardList(Collectathon.Filter<TIndex, TElement>)
  fullName.vb: Collectathon.Lists.StandardList(Of TIndex, TElement, TNode, TSelf).StandardList(Collectathon.Filter(Of TIndex, TElement))
  nameWithType: StandardList<TIndex, TElement, TNode, TSelf>.StandardList(Filter<TIndex, TElement>)
  nameWithType.vb: StandardList(Of TIndex, TElement, TNode, TSelf).StandardList(Filter(Of TIndex, TElement))
- uid: Collectathon.Lists.StandardList`4.#ctor(Collectathon.Filters)
  name: StandardList(Filters)
  href: api/Collectathon.Lists.StandardList-4.html#Collectathon_Lists_StandardList_4__ctor_Collectathon_Filters_
  commentId: M:Collectathon.Lists.StandardList`4.#ctor(Collectathon.Filters)
  fullName: Collectathon.Lists.StandardList<TIndex, TElement, TNode, TSelf>.StandardList(Collectathon.Filters)
  fullName.vb: Collectathon.Lists.StandardList(Of TIndex, TElement, TNode, TSelf).StandardList(Collectathon.Filters)
  nameWithType: StandardList<TIndex, TElement, TNode, TSelf>.StandardList(Filters)
  nameWithType.vb: StandardList(Of TIndex, TElement, TNode, TSelf).StandardList(Filters)
- uid: Collectathon.Lists.StandardList`4.#ctor(System.ValueTuple{`0,`1}[],Collectathon.Filters)
  name: StandardList((TIndex Index, TElement Element)[], Filters)
  href: api/Collectathon.Lists.StandardList-4.html#Collectathon_Lists_StandardList_4__ctor_System_ValueTuple__0__1____Collectathon_Filters_
  commentId: M:Collectathon.Lists.StandardList`4.#ctor(System.ValueTuple{`0,`1}[],Collectathon.Filters)
  name.vb: StandardList((Index As TIndex, Element As TElement)(), Filters)
  fullName: Collectathon.Lists.StandardList<TIndex, TElement, TNode, TSelf>.StandardList(System.ValueTuple<TIndex, TElement>[], Collectathon.Filters)
  fullName.vb: Collectathon.Lists.StandardList(Of TIndex, TElement, TNode, TSelf).StandardList(System.ValueTuple(Of TIndex, TElement)(), Collectathon.Filters)
  nameWithType: StandardList<TIndex, TElement, TNode, TSelf>.StandardList((TIndex Index, TElement Element)[], Filters)
  nameWithType.vb: StandardList(Of TIndex, TElement, TNode, TSelf).StandardList((Index As TIndex, Element As TElement)(), Filters)
- uid: Collectathon.Lists.StandardList`4.#ctor*
  name: StandardList
  href: api/Collectathon.Lists.StandardList-4.html#Collectathon_Lists_StandardList_4__ctor_
  commentId: Overload:Collectathon.Lists.StandardList`4.#ctor
  isSpec: "True"
  fullName: Collectathon.Lists.StandardList<TIndex, TElement, TNode, TSelf>.StandardList
  fullName.vb: Collectathon.Lists.StandardList(Of TIndex, TElement, TNode, TSelf).StandardList
  nameWithType: StandardList<TIndex, TElement, TNode, TSelf>.StandardList
  nameWithType.vb: StandardList(Of TIndex, TElement, TNode, TSelf).StandardList
- uid: Collectathon.Lists.StandardList`4.Enumerator
  name: StandardList<TIndex, TElement, TNode, TSelf>.Enumerator
  href: api/Collectathon.Lists.StandardList-4.Enumerator.html
  commentId: T:Collectathon.Lists.StandardList`4.Enumerator
  name.vb: StandardList(Of TIndex, TElement, TNode, TSelf).Enumerator
  fullName: Collectathon.Lists.StandardList<TIndex, TElement, TNode, TSelf>.Enumerator
  fullName.vb: Collectathon.Lists.StandardList(Of TIndex, TElement, TNode, TSelf).Enumerator
  nameWithType: StandardList<TIndex, TElement, TNode, TSelf>.Enumerator
  nameWithType.vb: StandardList(Of TIndex, TElement, TNode, TSelf).Enumerator
- uid: Collectathon.Lists.StandardList`4.Enumerator.#ctor(Collectathon.Lists.StandardList{`0,`1,`2,`3})
  name: Enumerator(StandardList<TIndex, TElement, TNode, TSelf>)
  href: api/Collectathon.Lists.StandardList-4.Enumerator.html#Collectathon_Lists_StandardList_4_Enumerator__ctor_Collectathon_Lists_StandardList__0__1__2__3__
  commentId: M:Collectathon.Lists.StandardList`4.Enumerator.#ctor(Collectathon.Lists.StandardList{`0,`1,`2,`3})
  name.vb: Enumerator(StandardList(Of TIndex, TElement, TNode, TSelf))
  fullName: Collectathon.Lists.StandardList<TIndex, TElement, TNode, TSelf>.Enumerator.Enumerator(Collectathon.Lists.StandardList<TIndex, TElement, TNode, TSelf>)
  fullName.vb: Collectathon.Lists.StandardList(Of TIndex, TElement, TNode, TSelf).Enumerator.Enumerator(Collectathon.Lists.StandardList(Of TIndex, TElement, TNode, TSelf))
  nameWithType: StandardList<TIndex, TElement, TNode, TSelf>.Enumerator.Enumerator(StandardList<TIndex, TElement, TNode, TSelf>)
  nameWithType.vb: StandardList(Of TIndex, TElement, TNode, TSelf).Enumerator.Enumerator(StandardList(Of TIndex, TElement, TNode, TSelf))
- uid: Collectathon.Lists.StandardList`4.Enumerator.#ctor*
  name: Enumerator
  href: api/Collectathon.Lists.StandardList-4.Enumerator.html#Collectathon_Lists_StandardList_4_Enumerator__ctor_
  commentId: Overload:Collectathon.Lists.StandardList`4.Enumerator.#ctor
  isSpec: "True"
  fullName: Collectathon.Lists.StandardList<TIndex, TElement, TNode, TSelf>.Enumerator.Enumerator
  fullName.vb: Collectathon.Lists.StandardList(Of TIndex, TElement, TNode, TSelf).Enumerator.Enumerator
  nameWithType: StandardList<TIndex, TElement, TNode, TSelf>.Enumerator.Enumerator
  nameWithType.vb: StandardList(Of TIndex, TElement, TNode, TSelf).Enumerator.Enumerator
- uid: Collectathon.Lists.StandardList`4.Enumerator.Count
  name: Count
  href: api/Collectathon.Lists.StandardList-4.Enumerator.html#Collectathon_Lists_StandardList_4_Enumerator_Count
  commentId: P:Collectathon.Lists.StandardList`4.Enumerator.Count
  fullName: Collectathon.Lists.StandardList<TIndex, TElement, TNode, TSelf>.Enumerator.Count
  fullName.vb: Collectathon.Lists.StandardList(Of TIndex, TElement, TNode, TSelf).Enumerator.Count
  nameWithType: StandardList<TIndex, TElement, TNode, TSelf>.Enumerator.Count
  nameWithType.vb: StandardList(Of TIndex, TElement, TNode, TSelf).Enumerator.Count
- uid: Collectathon.Lists.StandardList`4.Enumerator.Count*
  name: Count
  href: api/Collectathon.Lists.StandardList-4.Enumerator.html#Collectathon_Lists_StandardList_4_Enumerator_Count_
  commentId: Overload:Collectathon.Lists.StandardList`4.Enumerator.Count
  isSpec: "True"
  fullName: Collectathon.Lists.StandardList<TIndex, TElement, TNode, TSelf>.Enumerator.Count
  fullName.vb: Collectathon.Lists.StandardList(Of TIndex, TElement, TNode, TSelf).Enumerator.Count
  nameWithType: StandardList<TIndex, TElement, TNode, TSelf>.Enumerator.Count
  nameWithType.vb: StandardList(Of TIndex, TElement, TNode, TSelf).Enumerator.Count
- uid: Collectathon.Lists.StandardList`4.Enumerator.Current
  name: Current
  href: api/Collectathon.Lists.StandardList-4.Enumerator.html#Collectathon_Lists_StandardList_4_Enumerator_Current
  commentId: P:Collectathon.Lists.StandardList`4.Enumerator.Current
  fullName: Collectathon.Lists.StandardList<TIndex, TElement, TNode, TSelf>.Enumerator.Current
  fullName.vb: Collectathon.Lists.StandardList(Of TIndex, TElement, TNode, TSelf).Enumerator.Current
  nameWithType: StandardList<TIndex, TElement, TNode, TSelf>.Enumerator.Current
  nameWithType.vb: StandardList(Of TIndex, TElement, TNode, TSelf).Enumerator.Current
- uid: Collectathon.Lists.StandardList`4.Enumerator.Current*
  name: Current
  href: api/Collectathon.Lists.StandardList-4.Enumerator.html#Collectathon_Lists_StandardList_4_Enumerator_Current_
  commentId: Overload:Collectathon.Lists.StandardList`4.Enumerator.Current
  isSpec: "True"
  fullName: Collectathon.Lists.StandardList<TIndex, TElement, TNode, TSelf>.Enumerator.Current
  fullName.vb: Collectathon.Lists.StandardList(Of TIndex, TElement, TNode, TSelf).Enumerator.Current
  nameWithType: StandardList<TIndex, TElement, TNode, TSelf>.Enumerator.Current
  nameWithType.vb: StandardList(Of TIndex, TElement, TNode, TSelf).Enumerator.Current
- uid: Collectathon.Lists.StandardList`4.Enumerator.Dispose
  name: Dispose()
  href: api/Collectathon.Lists.StandardList-4.Enumerator.html#Collectathon_Lists_StandardList_4_Enumerator_Dispose
  commentId: M:Collectathon.Lists.StandardList`4.Enumerator.Dispose
  fullName: Collectathon.Lists.StandardList<TIndex, TElement, TNode, TSelf>.Enumerator.Dispose()
  fullName.vb: Collectathon.Lists.StandardList(Of TIndex, TElement, TNode, TSelf).Enumerator.Dispose()
  nameWithType: StandardList<TIndex, TElement, TNode, TSelf>.Enumerator.Dispose()
  nameWithType.vb: StandardList(Of TIndex, TElement, TNode, TSelf).Enumerator.Dispose()
- uid: Collectathon.Lists.StandardList`4.Enumerator.Dispose*
  name: Dispose
  href: api/Collectathon.Lists.StandardList-4.Enumerator.html#Collectathon_Lists_StandardList_4_Enumerator_Dispose_
  commentId: Overload:Collectathon.Lists.StandardList`4.Enumerator.Dispose
  isSpec: "True"
  fullName: Collectathon.Lists.StandardList<TIndex, TElement, TNode, TSelf>.Enumerator.Dispose
  fullName.vb: Collectathon.Lists.StandardList(Of TIndex, TElement, TNode, TSelf).Enumerator.Dispose
  nameWithType: StandardList<TIndex, TElement, TNode, TSelf>.Enumerator.Dispose
  nameWithType.vb: StandardList(Of TIndex, TElement, TNode, TSelf).Enumerator.Dispose
- uid: Collectathon.Lists.StandardList`4.Enumerator.GetEnumerator
  name: GetEnumerator()
  href: api/Collectathon.Lists.StandardList-4.Enumerator.html#Collectathon_Lists_StandardList_4_Enumerator_GetEnumerator
  commentId: M:Collectathon.Lists.StandardList`4.Enumerator.GetEnumerator
  fullName: Collectathon.Lists.StandardList<TIndex, TElement, TNode, TSelf>.Enumerator.GetEnumerator()
  fullName.vb: Collectathon.Lists.StandardList(Of TIndex, TElement, TNode, TSelf).Enumerator.GetEnumerator()
  nameWithType: StandardList<TIndex, TElement, TNode, TSelf>.Enumerator.GetEnumerator()
  nameWithType.vb: StandardList(Of TIndex, TElement, TNode, TSelf).Enumerator.GetEnumerator()
- uid: Collectathon.Lists.StandardList`4.Enumerator.GetEnumerator*
  name: GetEnumerator
  href: api/Collectathon.Lists.StandardList-4.Enumerator.html#Collectathon_Lists_StandardList_4_Enumerator_GetEnumerator_
  commentId: Overload:Collectathon.Lists.StandardList`4.Enumerator.GetEnumerator
  isSpec: "True"
  fullName: Collectathon.Lists.StandardList<TIndex, TElement, TNode, TSelf>.Enumerator.GetEnumerator
  fullName.vb: Collectathon.Lists.StandardList(Of TIndex, TElement, TNode, TSelf).Enumerator.GetEnumerator
  nameWithType: StandardList<TIndex, TElement, TNode, TSelf>.Enumerator.GetEnumerator
  nameWithType.vb: StandardList(Of TIndex, TElement, TNode, TSelf).Enumerator.GetEnumerator
- uid: Collectathon.Lists.StandardList`4.Enumerator.MoveNext
  name: MoveNext()
  href: api/Collectathon.Lists.StandardList-4.Enumerator.html#Collectathon_Lists_StandardList_4_Enumerator_MoveNext
  commentId: M:Collectathon.Lists.StandardList`4.Enumerator.MoveNext
  fullName: Collectathon.Lists.StandardList<TIndex, TElement, TNode, TSelf>.Enumerator.MoveNext()
  fullName.vb: Collectathon.Lists.StandardList(Of TIndex, TElement, TNode, TSelf).Enumerator.MoveNext()
  nameWithType: StandardList<TIndex, TElement, TNode, TSelf>.Enumerator.MoveNext()
  nameWithType.vb: StandardList(Of TIndex, TElement, TNode, TSelf).Enumerator.MoveNext()
- uid: Collectathon.Lists.StandardList`4.Enumerator.MoveNext*
  name: MoveNext
  href: api/Collectathon.Lists.StandardList-4.Enumerator.html#Collectathon_Lists_StandardList_4_Enumerator_MoveNext_
  commentId: Overload:Collectathon.Lists.StandardList`4.Enumerator.MoveNext
  isSpec: "True"
  fullName: Collectathon.Lists.StandardList<TIndex, TElement, TNode, TSelf>.Enumerator.MoveNext
  fullName.vb: Collectathon.Lists.StandardList(Of TIndex, TElement, TNode, TSelf).Enumerator.MoveNext
  nameWithType: StandardList<TIndex, TElement, TNode, TSelf>.Enumerator.MoveNext
  nameWithType.vb: StandardList(Of TIndex, TElement, TNode, TSelf).Enumerator.MoveNext
- uid: Collectathon.Lists.StandardList`4.Enumerator.Reset
  name: Reset()
  href: api/Collectathon.Lists.StandardList-4.Enumerator.html#Collectathon_Lists_StandardList_4_Enumerator_Reset
  commentId: M:Collectathon.Lists.StandardList`4.Enumerator.Reset
  fullName: Collectathon.Lists.StandardList<TIndex, TElement, TNode, TSelf>.Enumerator.Reset()
  fullName.vb: Collectathon.Lists.StandardList(Of TIndex, TElement, TNode, TSelf).Enumerator.Reset()
  nameWithType: StandardList<TIndex, TElement, TNode, TSelf>.Enumerator.Reset()
  nameWithType.vb: StandardList(Of TIndex, TElement, TNode, TSelf).Enumerator.Reset()
- uid: Collectathon.Lists.StandardList`4.Enumerator.Reset*
  name: Reset
  href: api/Collectathon.Lists.StandardList-4.Enumerator.html#Collectathon_Lists_StandardList_4_Enumerator_Reset_
  commentId: Overload:Collectathon.Lists.StandardList`4.Enumerator.Reset
  isSpec: "True"
  fullName: Collectathon.Lists.StandardList<TIndex, TElement, TNode, TSelf>.Enumerator.Reset
  fullName.vb: Collectathon.Lists.StandardList(Of TIndex, TElement, TNode, TSelf).Enumerator.Reset
  nameWithType: StandardList<TIndex, TElement, TNode, TSelf>.Enumerator.Reset
  nameWithType.vb: StandardList(Of TIndex, TElement, TNode, TSelf).Enumerator.Reset
- uid: Collectathon.Lists.StandardList`4.Enumerator.ToString
  name: ToString()
  href: api/Collectathon.Lists.StandardList-4.Enumerator.html#Collectathon_Lists_StandardList_4_Enumerator_ToString
  commentId: M:Collectathon.Lists.StandardList`4.Enumerator.ToString
  fullName: Collectathon.Lists.StandardList<TIndex, TElement, TNode, TSelf>.Enumerator.ToString()
  fullName.vb: Collectathon.Lists.StandardList(Of TIndex, TElement, TNode, TSelf).Enumerator.ToString()
  nameWithType: StandardList<TIndex, TElement, TNode, TSelf>.Enumerator.ToString()
  nameWithType.vb: StandardList(Of TIndex, TElement, TNode, TSelf).Enumerator.ToString()
- uid: Collectathon.Lists.StandardList`4.Enumerator.ToString(nint)
  name: ToString(nint)
  href: api/Collectathon.Lists.StandardList-4.Enumerator.html#Collectathon_Lists_StandardList_4_Enumerator_ToString_nint_
  commentId: M:Collectathon.Lists.StandardList`4.Enumerator.ToString(nint)
  fullName: Collectathon.Lists.StandardList<TIndex, TElement, TNode, TSelf>.Enumerator.ToString(nint)
  fullName.vb: Collectathon.Lists.StandardList(Of TIndex, TElement, TNode, TSelf).Enumerator.ToString(nint)
  nameWithType: StandardList<TIndex, TElement, TNode, TSelf>.Enumerator.ToString(nint)
  nameWithType.vb: StandardList(Of TIndex, TElement, TNode, TSelf).Enumerator.ToString(nint)
- uid: Collectathon.Lists.StandardList`4.Enumerator.ToString*
  name: ToString
  href: api/Collectathon.Lists.StandardList-4.Enumerator.html#Collectathon_Lists_StandardList_4_Enumerator_ToString_
  commentId: Overload:Collectathon.Lists.StandardList`4.Enumerator.ToString
  isSpec: "True"
  fullName: Collectathon.Lists.StandardList<TIndex, TElement, TNode, TSelf>.Enumerator.ToString
  fullName.vb: Collectathon.Lists.StandardList(Of TIndex, TElement, TNode, TSelf).Enumerator.ToString
  nameWithType: StandardList<TIndex, TElement, TNode, TSelf>.Enumerator.ToString
  nameWithType.vb: StandardList(Of TIndex, TElement, TNode, TSelf).Enumerator.ToString
- uid: Collectathon.Lists.StandardList`4.GetEnumerator
  name: GetEnumerator()
  href: api/Collectathon.Lists.StandardList-4.html#Collectathon_Lists_StandardList_4_GetEnumerator
  commentId: M:Collectathon.Lists.StandardList`4.GetEnumerator
  fullName: Collectathon.Lists.StandardList<TIndex, TElement, TNode, TSelf>.GetEnumerator()
  fullName.vb: Collectathon.Lists.StandardList(Of TIndex, TElement, TNode, TSelf).GetEnumerator()
  nameWithType: StandardList<TIndex, TElement, TNode, TSelf>.GetEnumerator()
  nameWithType.vb: StandardList(Of TIndex, TElement, TNode, TSelf).GetEnumerator()
- uid: Collectathon.Lists.StandardList`4.GetEnumerator*
  name: GetEnumerator
  href: api/Collectathon.Lists.StandardList-4.html#Collectathon_Lists_StandardList_4_GetEnumerator_
  commentId: Overload:Collectathon.Lists.StandardList`4.GetEnumerator
  isSpec: "True"
  fullName: Collectathon.Lists.StandardList<TIndex, TElement, TNode, TSelf>.GetEnumerator
  fullName.vb: Collectathon.Lists.StandardList(Of TIndex, TElement, TNode, TSelf).GetEnumerator
  nameWithType: StandardList<TIndex, TElement, TNode, TSelf>.GetEnumerator
  nameWithType.vb: StandardList(Of TIndex, TElement, TNode, TSelf).GetEnumerator
- uid: Collectathon.Lists.StandardList`4.Item(`0)
  name: Item[TIndex]
  href: api/Collectathon.Lists.StandardList-4.html#Collectathon_Lists_StandardList_4_Item__0_
  commentId: P:Collectathon.Lists.StandardList`4.Item(`0)
  name.vb: Item(TIndex)
  fullName: Collectathon.Lists.StandardList<TIndex, TElement, TNode, TSelf>.Item[TIndex]
  fullName.vb: Collectathon.Lists.StandardList(Of TIndex, TElement, TNode, TSelf).Item(TIndex)
  nameWithType: StandardList<TIndex, TElement, TNode, TSelf>.Item[TIndex]
  nameWithType.vb: StandardList(Of TIndex, TElement, TNode, TSelf).Item(TIndex)
- uid: Collectathon.Lists.StandardList`4.Item*
  name: Item
  href: api/Collectathon.Lists.StandardList-4.html#Collectathon_Lists_StandardList_4_Item_
  commentId: Overload:Collectathon.Lists.StandardList`4.Item
  isSpec: "True"
  fullName: Collectathon.Lists.StandardList<TIndex, TElement, TNode, TSelf>.Item
  fullName.vb: Collectathon.Lists.StandardList(Of TIndex, TElement, TNode, TSelf).Item
  nameWithType: StandardList<TIndex, TElement, TNode, TSelf>.Item
  nameWithType.vb: StandardList(Of TIndex, TElement, TNode, TSelf).Item
- uid: Collectathon.Lists.UnrolledList`3
  name: UnrolledList<TElement, TNode, TSelf>
  href: api/Collectathon.Lists.UnrolledList-3.html
  commentId: T:Collectathon.Lists.UnrolledList`3
  name.vb: UnrolledList(Of TElement, TNode, TSelf)
  fullName: Collectathon.Lists.UnrolledList<TElement, TNode, TSelf>
  fullName.vb: Collectathon.Lists.UnrolledList(Of TElement, TNode, TSelf)
  nameWithType: UnrolledList<TElement, TNode, TSelf>
  nameWithType.vb: UnrolledList(Of TElement, TNode, TSelf)
- uid: Collectathon.Lists.UnrolledList`3.#ctor(Collectathon.Filter{nint,`0})
  name: UnrolledList(Filter<nint, TElement>)
  href: api/Collectathon.Lists.UnrolledList-3.html#Collectathon_Lists_UnrolledList_3__ctor_Collectathon_Filter_nint__0__
  commentId: M:Collectathon.Lists.UnrolledList`3.#ctor(Collectathon.Filter{nint,`0})
  name.vb: UnrolledList(Filter(Of nint, TElement))
  fullName: Collectathon.Lists.UnrolledList<TElement, TNode, TSelf>.UnrolledList(Collectathon.Filter<nint, TElement>)
  fullName.vb: Collectathon.Lists.UnrolledList(Of TElement, TNode, TSelf).UnrolledList(Collectathon.Filter(Of nint, TElement))
  nameWithType: UnrolledList<TElement, TNode, TSelf>.UnrolledList(Filter<nint, TElement>)
  nameWithType.vb: UnrolledList(Of TElement, TNode, TSelf).UnrolledList(Filter(Of nint, TElement))
- uid: Collectathon.Lists.UnrolledList`3.#ctor(Collectathon.Filters)
  name: UnrolledList(Filters)
  href: api/Collectathon.Lists.UnrolledList-3.html#Collectathon_Lists_UnrolledList_3__ctor_Collectathon_Filters_
  commentId: M:Collectathon.Lists.UnrolledList`3.#ctor(Collectathon.Filters)
  fullName: Collectathon.Lists.UnrolledList<TElement, TNode, TSelf>.UnrolledList(Collectathon.Filters)
  fullName.vb: Collectathon.Lists.UnrolledList(Of TElement, TNode, TSelf).UnrolledList(Collectathon.Filters)
  nameWithType: UnrolledList<TElement, TNode, TSelf>.UnrolledList(Filters)
  nameWithType.vb: UnrolledList(Of TElement, TNode, TSelf).UnrolledList(Filters)
- uid: Collectathon.Lists.UnrolledList`3.#ctor*
  name: UnrolledList
  href: api/Collectathon.Lists.UnrolledList-3.html#Collectathon_Lists_UnrolledList_3__ctor_
  commentId: Overload:Collectathon.Lists.UnrolledList`3.#ctor
  isSpec: "True"
  fullName: Collectathon.Lists.UnrolledList<TElement, TNode, TSelf>.UnrolledList
  fullName.vb: Collectathon.Lists.UnrolledList(Of TElement, TNode, TSelf).UnrolledList
  nameWithType: UnrolledList<TElement, TNode, TSelf>.UnrolledList
  nameWithType.vb: UnrolledList(Of TElement, TNode, TSelf).UnrolledList
- uid: Collectathon.Lists.UnrolledList`3.Add(`0[])
  name: Add(TElement[])
  href: api/Collectathon.Lists.UnrolledList-3.html#Collectathon_Lists_UnrolledList_3_Add__0___
  commentId: M:Collectathon.Lists.UnrolledList`3.Add(`0[])
  name.vb: Add(TElement())
  fullName: Collectathon.Lists.UnrolledList<TElement, TNode, TSelf>.Add(TElement[])
  fullName.vb: Collectathon.Lists.UnrolledList(Of TElement, TNode, TSelf).Add(TElement())
  nameWithType: UnrolledList<TElement, TNode, TSelf>.Add(TElement[])
  nameWithType.vb: UnrolledList(Of TElement, TNode, TSelf).Add(TElement())
- uid: Collectathon.Lists.UnrolledList`3.Add(Memory{`0})
  name: Add(Memory<TElement>)
  href: api/Collectathon.Lists.UnrolledList-3.html#Collectathon_Lists_UnrolledList_3_Add_Memory__0__
  commentId: M:Collectathon.Lists.UnrolledList`3.Add(Memory{`0})
  name.vb: Add(Memory(Of TElement))
  fullName: Collectathon.Lists.UnrolledList<TElement, TNode, TSelf>.Add(Memory<TElement>)
  fullName.vb: Collectathon.Lists.UnrolledList(Of TElement, TNode, TSelf).Add(Memory(Of TElement))
  nameWithType: UnrolledList<TElement, TNode, TSelf>.Add(Memory<TElement>)
  nameWithType.vb: UnrolledList(Of TElement, TNode, TSelf).Add(Memory(Of TElement))
- uid: Collectathon.Lists.UnrolledList`3.Add(ReadOnlyMemory{`0})
  name: Add(ReadOnlyMemory<TElement>)
  href: api/Collectathon.Lists.UnrolledList-3.html#Collectathon_Lists_UnrolledList_3_Add_ReadOnlyMemory__0__
  commentId: M:Collectathon.Lists.UnrolledList`3.Add(ReadOnlyMemory{`0})
  name.vb: Add(ReadOnlyMemory(Of TElement))
  fullName: Collectathon.Lists.UnrolledList<TElement, TNode, TSelf>.Add(ReadOnlyMemory<TElement>)
  fullName.vb: Collectathon.Lists.UnrolledList(Of TElement, TNode, TSelf).Add(ReadOnlyMemory(Of TElement))
  nameWithType: UnrolledList<TElement, TNode, TSelf>.Add(ReadOnlyMemory<TElement>)
  nameWithType.vb: UnrolledList(Of TElement, TNode, TSelf).Add(ReadOnlyMemory(Of TElement))
- uid: Collectathon.Lists.UnrolledList`3.Add*
  name: Add
  href: api/Collectathon.Lists.UnrolledList-3.html#Collectathon_Lists_UnrolledList_3_Add_
  commentId: Overload:Collectathon.Lists.UnrolledList`3.Add
  isSpec: "True"
  fullName: Collectathon.Lists.UnrolledList<TElement, TNode, TSelf>.Add
  fullName.vb: Collectathon.Lists.UnrolledList(Of TElement, TNode, TSelf).Add
  nameWithType: UnrolledList<TElement, TNode, TSelf>.Add
  nameWithType.vb: UnrolledList(Of TElement, TNode, TSelf).Add
- uid: Collectathon.Lists.UnrolledList`3.Enumerator
  name: UnrolledList<TElement, TNode, TSelf>.Enumerator
  href: api/Collectathon.Lists.UnrolledList-3.Enumerator.html
  commentId: T:Collectathon.Lists.UnrolledList`3.Enumerator
  name.vb: UnrolledList(Of TElement, TNode, TSelf).Enumerator
  fullName: Collectathon.Lists.UnrolledList<TElement, TNode, TSelf>.Enumerator
  fullName.vb: Collectathon.Lists.UnrolledList(Of TElement, TNode, TSelf).Enumerator
  nameWithType: UnrolledList<TElement, TNode, TSelf>.Enumerator
  nameWithType.vb: UnrolledList(Of TElement, TNode, TSelf).Enumerator
- uid: Collectathon.Lists.UnrolledList`3.Enumerator.#ctor(Collectathon.Lists.UnrolledList{`0,`1,`2})
  name: Enumerator(UnrolledList<TElement, TNode, TSelf>)
  href: api/Collectathon.Lists.UnrolledList-3.Enumerator.html#Collectathon_Lists_UnrolledList_3_Enumerator__ctor_Collectathon_Lists_UnrolledList__0__1__2__
  commentId: M:Collectathon.Lists.UnrolledList`3.Enumerator.#ctor(Collectathon.Lists.UnrolledList{`0,`1,`2})
  name.vb: Enumerator(UnrolledList(Of TElement, TNode, TSelf))
  fullName: Collectathon.Lists.UnrolledList<TElement, TNode, TSelf>.Enumerator.Enumerator(Collectathon.Lists.UnrolledList<TElement, TNode, TSelf>)
  fullName.vb: Collectathon.Lists.UnrolledList(Of TElement, TNode, TSelf).Enumerator.Enumerator(Collectathon.Lists.UnrolledList(Of TElement, TNode, TSelf))
  nameWithType: UnrolledList<TElement, TNode, TSelf>.Enumerator.Enumerator(UnrolledList<TElement, TNode, TSelf>)
  nameWithType.vb: UnrolledList(Of TElement, TNode, TSelf).Enumerator.Enumerator(UnrolledList(Of TElement, TNode, TSelf))
- uid: Collectathon.Lists.UnrolledList`3.Enumerator.#ctor*
  name: Enumerator
  href: api/Collectathon.Lists.UnrolledList-3.Enumerator.html#Collectathon_Lists_UnrolledList_3_Enumerator__ctor_
  commentId: Overload:Collectathon.Lists.UnrolledList`3.Enumerator.#ctor
  isSpec: "True"
  fullName: Collectathon.Lists.UnrolledList<TElement, TNode, TSelf>.Enumerator.Enumerator
  fullName.vb: Collectathon.Lists.UnrolledList(Of TElement, TNode, TSelf).Enumerator.Enumerator
  nameWithType: UnrolledList<TElement, TNode, TSelf>.Enumerator.Enumerator
  nameWithType.vb: UnrolledList(Of TElement, TNode, TSelf).Enumerator.Enumerator
- uid: Collectathon.Lists.UnrolledList`3.Enumerator.Count
  name: Count
  href: api/Collectathon.Lists.UnrolledList-3.Enumerator.html#Collectathon_Lists_UnrolledList_3_Enumerator_Count
  commentId: P:Collectathon.Lists.UnrolledList`3.Enumerator.Count
  fullName: Collectathon.Lists.UnrolledList<TElement, TNode, TSelf>.Enumerator.Count
  fullName.vb: Collectathon.Lists.UnrolledList(Of TElement, TNode, TSelf).Enumerator.Count
  nameWithType: UnrolledList<TElement, TNode, TSelf>.Enumerator.Count
  nameWithType.vb: UnrolledList(Of TElement, TNode, TSelf).Enumerator.Count
- uid: Collectathon.Lists.UnrolledList`3.Enumerator.Count*
  name: Count
  href: api/Collectathon.Lists.UnrolledList-3.Enumerator.html#Collectathon_Lists_UnrolledList_3_Enumerator_Count_
  commentId: Overload:Collectathon.Lists.UnrolledList`3.Enumerator.Count
  isSpec: "True"
  fullName: Collectathon.Lists.UnrolledList<TElement, TNode, TSelf>.Enumerator.Count
  fullName.vb: Collectathon.Lists.UnrolledList(Of TElement, TNode, TSelf).Enumerator.Count
  nameWithType: UnrolledList<TElement, TNode, TSelf>.Enumerator.Count
  nameWithType.vb: UnrolledList(Of TElement, TNode, TSelf).Enumerator.Count
- uid: Collectathon.Lists.UnrolledList`3.Enumerator.Current
  name: Current
  href: api/Collectathon.Lists.UnrolledList-3.Enumerator.html#Collectathon_Lists_UnrolledList_3_Enumerator_Current
  commentId: P:Collectathon.Lists.UnrolledList`3.Enumerator.Current
  fullName: Collectathon.Lists.UnrolledList<TElement, TNode, TSelf>.Enumerator.Current
  fullName.vb: Collectathon.Lists.UnrolledList(Of TElement, TNode, TSelf).Enumerator.Current
  nameWithType: UnrolledList<TElement, TNode, TSelf>.Enumerator.Current
  nameWithType.vb: UnrolledList(Of TElement, TNode, TSelf).Enumerator.Current
- uid: Collectathon.Lists.UnrolledList`3.Enumerator.Current*
  name: Current
  href: api/Collectathon.Lists.UnrolledList-3.Enumerator.html#Collectathon_Lists_UnrolledList_3_Enumerator_Current_
  commentId: Overload:Collectathon.Lists.UnrolledList`3.Enumerator.Current
  isSpec: "True"
  fullName: Collectathon.Lists.UnrolledList<TElement, TNode, TSelf>.Enumerator.Current
  fullName.vb: Collectathon.Lists.UnrolledList(Of TElement, TNode, TSelf).Enumerator.Current
  nameWithType: UnrolledList<TElement, TNode, TSelf>.Enumerator.Current
  nameWithType.vb: UnrolledList(Of TElement, TNode, TSelf).Enumerator.Current
- uid: Collectathon.Lists.UnrolledList`3.Enumerator.Dispose
  name: Dispose()
  href: api/Collectathon.Lists.UnrolledList-3.Enumerator.html#Collectathon_Lists_UnrolledList_3_Enumerator_Dispose
  commentId: M:Collectathon.Lists.UnrolledList`3.Enumerator.Dispose
  fullName: Collectathon.Lists.UnrolledList<TElement, TNode, TSelf>.Enumerator.Dispose()
  fullName.vb: Collectathon.Lists.UnrolledList(Of TElement, TNode, TSelf).Enumerator.Dispose()
  nameWithType: UnrolledList<TElement, TNode, TSelf>.Enumerator.Dispose()
  nameWithType.vb: UnrolledList(Of TElement, TNode, TSelf).Enumerator.Dispose()
- uid: Collectathon.Lists.UnrolledList`3.Enumerator.Dispose*
  name: Dispose
  href: api/Collectathon.Lists.UnrolledList-3.Enumerator.html#Collectathon_Lists_UnrolledList_3_Enumerator_Dispose_
  commentId: Overload:Collectathon.Lists.UnrolledList`3.Enumerator.Dispose
  isSpec: "True"
  fullName: Collectathon.Lists.UnrolledList<TElement, TNode, TSelf>.Enumerator.Dispose
  fullName.vb: Collectathon.Lists.UnrolledList(Of TElement, TNode, TSelf).Enumerator.Dispose
  nameWithType: UnrolledList<TElement, TNode, TSelf>.Enumerator.Dispose
  nameWithType.vb: UnrolledList(Of TElement, TNode, TSelf).Enumerator.Dispose
- uid: Collectathon.Lists.UnrolledList`3.Enumerator.GetEnumerator
  name: GetEnumerator()
  href: api/Collectathon.Lists.UnrolledList-3.Enumerator.html#Collectathon_Lists_UnrolledList_3_Enumerator_GetEnumerator
  commentId: M:Collectathon.Lists.UnrolledList`3.Enumerator.GetEnumerator
  fullName: Collectathon.Lists.UnrolledList<TElement, TNode, TSelf>.Enumerator.GetEnumerator()
  fullName.vb: Collectathon.Lists.UnrolledList(Of TElement, TNode, TSelf).Enumerator.GetEnumerator()
  nameWithType: UnrolledList<TElement, TNode, TSelf>.Enumerator.GetEnumerator()
  nameWithType.vb: UnrolledList(Of TElement, TNode, TSelf).Enumerator.GetEnumerator()
- uid: Collectathon.Lists.UnrolledList`3.Enumerator.GetEnumerator*
  name: GetEnumerator
  href: api/Collectathon.Lists.UnrolledList-3.Enumerator.html#Collectathon_Lists_UnrolledList_3_Enumerator_GetEnumerator_
  commentId: Overload:Collectathon.Lists.UnrolledList`3.Enumerator.GetEnumerator
  isSpec: "True"
  fullName: Collectathon.Lists.UnrolledList<TElement, TNode, TSelf>.Enumerator.GetEnumerator
  fullName.vb: Collectathon.Lists.UnrolledList(Of TElement, TNode, TSelf).Enumerator.GetEnumerator
  nameWithType: UnrolledList<TElement, TNode, TSelf>.Enumerator.GetEnumerator
  nameWithType.vb: UnrolledList(Of TElement, TNode, TSelf).Enumerator.GetEnumerator
- uid: Collectathon.Lists.UnrolledList`3.Enumerator.MoveNext
  name: MoveNext()
  href: api/Collectathon.Lists.UnrolledList-3.Enumerator.html#Collectathon_Lists_UnrolledList_3_Enumerator_MoveNext
  commentId: M:Collectathon.Lists.UnrolledList`3.Enumerator.MoveNext
  fullName: Collectathon.Lists.UnrolledList<TElement, TNode, TSelf>.Enumerator.MoveNext()
  fullName.vb: Collectathon.Lists.UnrolledList(Of TElement, TNode, TSelf).Enumerator.MoveNext()
  nameWithType: UnrolledList<TElement, TNode, TSelf>.Enumerator.MoveNext()
  nameWithType.vb: UnrolledList(Of TElement, TNode, TSelf).Enumerator.MoveNext()
- uid: Collectathon.Lists.UnrolledList`3.Enumerator.MoveNext*
  name: MoveNext
  href: api/Collectathon.Lists.UnrolledList-3.Enumerator.html#Collectathon_Lists_UnrolledList_3_Enumerator_MoveNext_
  commentId: Overload:Collectathon.Lists.UnrolledList`3.Enumerator.MoveNext
  isSpec: "True"
  fullName: Collectathon.Lists.UnrolledList<TElement, TNode, TSelf>.Enumerator.MoveNext
  fullName.vb: Collectathon.Lists.UnrolledList(Of TElement, TNode, TSelf).Enumerator.MoveNext
  nameWithType: UnrolledList<TElement, TNode, TSelf>.Enumerator.MoveNext
  nameWithType.vb: UnrolledList(Of TElement, TNode, TSelf).Enumerator.MoveNext
- uid: Collectathon.Lists.UnrolledList`3.Enumerator.Reset
  name: Reset()
  href: api/Collectathon.Lists.UnrolledList-3.Enumerator.html#Collectathon_Lists_UnrolledList_3_Enumerator_Reset
  commentId: M:Collectathon.Lists.UnrolledList`3.Enumerator.Reset
  fullName: Collectathon.Lists.UnrolledList<TElement, TNode, TSelf>.Enumerator.Reset()
  fullName.vb: Collectathon.Lists.UnrolledList(Of TElement, TNode, TSelf).Enumerator.Reset()
  nameWithType: UnrolledList<TElement, TNode, TSelf>.Enumerator.Reset()
  nameWithType.vb: UnrolledList(Of TElement, TNode, TSelf).Enumerator.Reset()
- uid: Collectathon.Lists.UnrolledList`3.Enumerator.Reset*
  name: Reset
  href: api/Collectathon.Lists.UnrolledList-3.Enumerator.html#Collectathon_Lists_UnrolledList_3_Enumerator_Reset_
  commentId: Overload:Collectathon.Lists.UnrolledList`3.Enumerator.Reset
  isSpec: "True"
  fullName: Collectathon.Lists.UnrolledList<TElement, TNode, TSelf>.Enumerator.Reset
  fullName.vb: Collectathon.Lists.UnrolledList(Of TElement, TNode, TSelf).Enumerator.Reset
  nameWithType: UnrolledList<TElement, TNode, TSelf>.Enumerator.Reset
  nameWithType.vb: UnrolledList(Of TElement, TNode, TSelf).Enumerator.Reset
- uid: Collectathon.Lists.UnrolledList`3.Enumerator.ToString
  name: ToString()
  href: api/Collectathon.Lists.UnrolledList-3.Enumerator.html#Collectathon_Lists_UnrolledList_3_Enumerator_ToString
  commentId: M:Collectathon.Lists.UnrolledList`3.Enumerator.ToString
  fullName: Collectathon.Lists.UnrolledList<TElement, TNode, TSelf>.Enumerator.ToString()
  fullName.vb: Collectathon.Lists.UnrolledList(Of TElement, TNode, TSelf).Enumerator.ToString()
  nameWithType: UnrolledList<TElement, TNode, TSelf>.Enumerator.ToString()
  nameWithType.vb: UnrolledList(Of TElement, TNode, TSelf).Enumerator.ToString()
- uid: Collectathon.Lists.UnrolledList`3.Enumerator.ToString(nint)
  name: ToString(nint)
  href: api/Collectathon.Lists.UnrolledList-3.Enumerator.html#Collectathon_Lists_UnrolledList_3_Enumerator_ToString_nint_
  commentId: M:Collectathon.Lists.UnrolledList`3.Enumerator.ToString(nint)
  fullName: Collectathon.Lists.UnrolledList<TElement, TNode, TSelf>.Enumerator.ToString(nint)
  fullName.vb: Collectathon.Lists.UnrolledList(Of TElement, TNode, TSelf).Enumerator.ToString(nint)
  nameWithType: UnrolledList<TElement, TNode, TSelf>.Enumerator.ToString(nint)
  nameWithType.vb: UnrolledList(Of TElement, TNode, TSelf).Enumerator.ToString(nint)
- uid: Collectathon.Lists.UnrolledList`3.Enumerator.ToString*
  name: ToString
  href: api/Collectathon.Lists.UnrolledList-3.Enumerator.html#Collectathon_Lists_UnrolledList_3_Enumerator_ToString_
  commentId: Overload:Collectathon.Lists.UnrolledList`3.Enumerator.ToString
  isSpec: "True"
  fullName: Collectathon.Lists.UnrolledList<TElement, TNode, TSelf>.Enumerator.ToString
  fullName.vb: Collectathon.Lists.UnrolledList(Of TElement, TNode, TSelf).Enumerator.ToString
  nameWithType: UnrolledList<TElement, TNode, TSelf>.Enumerator.ToString
  nameWithType.vb: UnrolledList(Of TElement, TNode, TSelf).Enumerator.ToString
- uid: Collectathon.Lists.UnrolledList`3.GetEnumerator
  name: GetEnumerator()
  href: api/Collectathon.Lists.UnrolledList-3.html#Collectathon_Lists_UnrolledList_3_GetEnumerator
  commentId: M:Collectathon.Lists.UnrolledList`3.GetEnumerator
  fullName: Collectathon.Lists.UnrolledList<TElement, TNode, TSelf>.GetEnumerator()
  fullName.vb: Collectathon.Lists.UnrolledList(Of TElement, TNode, TSelf).GetEnumerator()
  nameWithType: UnrolledList<TElement, TNode, TSelf>.GetEnumerator()
  nameWithType.vb: UnrolledList(Of TElement, TNode, TSelf).GetEnumerator()
- uid: Collectathon.Lists.UnrolledList`3.GetEnumerator*
  name: GetEnumerator
  href: api/Collectathon.Lists.UnrolledList-3.html#Collectathon_Lists_UnrolledList_3_GetEnumerator_
  commentId: Overload:Collectathon.Lists.UnrolledList`3.GetEnumerator
  isSpec: "True"
  fullName: Collectathon.Lists.UnrolledList<TElement, TNode, TSelf>.GetEnumerator
  fullName.vb: Collectathon.Lists.UnrolledList(Of TElement, TNode, TSelf).GetEnumerator
  nameWithType: UnrolledList<TElement, TNode, TSelf>.GetEnumerator
  nameWithType.vb: UnrolledList(Of TElement, TNode, TSelf).GetEnumerator
- uid: Collectathon.Lists.UnrolledList`3.Insert(nint,`0[])
  name: Insert(nint, TElement[])
  href: api/Collectathon.Lists.UnrolledList-3.html#Collectathon_Lists_UnrolledList_3_Insert_nint__0___
  commentId: M:Collectathon.Lists.UnrolledList`3.Insert(nint,`0[])
  name.vb: Insert(nint, TElement())
  fullName: Collectathon.Lists.UnrolledList<TElement, TNode, TSelf>.Insert(nint, TElement[])
  fullName.vb: Collectathon.Lists.UnrolledList(Of TElement, TNode, TSelf).Insert(nint, TElement())
  nameWithType: UnrolledList<TElement, TNode, TSelf>.Insert(nint, TElement[])
  nameWithType.vb: UnrolledList(Of TElement, TNode, TSelf).Insert(nint, TElement())
- uid: Collectathon.Lists.UnrolledList`3.Insert(nint,Memory{`0})
  name: Insert(nint, Memory<TElement>)
  href: api/Collectathon.Lists.UnrolledList-3.html#Collectathon_Lists_UnrolledList_3_Insert_nint_Memory__0__
  commentId: M:Collectathon.Lists.UnrolledList`3.Insert(nint,Memory{`0})
  name.vb: Insert(nint, Memory(Of TElement))
  fullName: Collectathon.Lists.UnrolledList<TElement, TNode, TSelf>.Insert(nint, Memory<TElement>)
  fullName.vb: Collectathon.Lists.UnrolledList(Of TElement, TNode, TSelf).Insert(nint, Memory(Of TElement))
  nameWithType: UnrolledList<TElement, TNode, TSelf>.Insert(nint, Memory<TElement>)
  nameWithType.vb: UnrolledList(Of TElement, TNode, TSelf).Insert(nint, Memory(Of TElement))
- uid: Collectathon.Lists.UnrolledList`3.Insert(nint,ReadOnlyMemory{`0})
  name: Insert(nint, ReadOnlyMemory<TElement>)
  href: api/Collectathon.Lists.UnrolledList-3.html#Collectathon_Lists_UnrolledList_3_Insert_nint_ReadOnlyMemory__0__
  commentId: M:Collectathon.Lists.UnrolledList`3.Insert(nint,ReadOnlyMemory{`0})
  name.vb: Insert(nint, ReadOnlyMemory(Of TElement))
  fullName: Collectathon.Lists.UnrolledList<TElement, TNode, TSelf>.Insert(nint, ReadOnlyMemory<TElement>)
  fullName.vb: Collectathon.Lists.UnrolledList(Of TElement, TNode, TSelf).Insert(nint, ReadOnlyMemory(Of TElement))
  nameWithType: UnrolledList<TElement, TNode, TSelf>.Insert(nint, ReadOnlyMemory<TElement>)
  nameWithType.vb: UnrolledList(Of TElement, TNode, TSelf).Insert(nint, ReadOnlyMemory(Of TElement))
- uid: Collectathon.Lists.UnrolledList`3.Insert*
  name: Insert
  href: api/Collectathon.Lists.UnrolledList-3.html#Collectathon_Lists_UnrolledList_3_Insert_
  commentId: Overload:Collectathon.Lists.UnrolledList`3.Insert
  isSpec: "True"
  fullName: Collectathon.Lists.UnrolledList<TElement, TNode, TSelf>.Insert
  fullName.vb: Collectathon.Lists.UnrolledList(Of TElement, TNode, TSelf).Insert
  nameWithType: UnrolledList<TElement, TNode, TSelf>.Insert
  nameWithType.vb: UnrolledList(Of TElement, TNode, TSelf).Insert
- uid: Collectathon.Lists.UnrolledList`3.Item(nint)
  name: Item[nint]
  href: api/Collectathon.Lists.UnrolledList-3.html#Collectathon_Lists_UnrolledList_3_Item_nint_
  commentId: P:Collectathon.Lists.UnrolledList`3.Item(nint)
  name.vb: Item(nint)
  fullName: Collectathon.Lists.UnrolledList<TElement, TNode, TSelf>.Item[nint]
  fullName.vb: Collectathon.Lists.UnrolledList(Of TElement, TNode, TSelf).Item(nint)
  nameWithType: UnrolledList<TElement, TNode, TSelf>.Item[nint]
  nameWithType.vb: UnrolledList(Of TElement, TNode, TSelf).Item(nint)
- uid: Collectathon.Lists.UnrolledList`3.Item*
  name: Item
  href: api/Collectathon.Lists.UnrolledList-3.html#Collectathon_Lists_UnrolledList_3_Item_
  commentId: Overload:Collectathon.Lists.UnrolledList`3.Item
  isSpec: "True"
  fullName: Collectathon.Lists.UnrolledList<TElement, TNode, TSelf>.Item
  fullName.vb: Collectathon.Lists.UnrolledList(Of TElement, TNode, TSelf).Item
  nameWithType: UnrolledList<TElement, TNode, TSelf>.Item
  nameWithType.vb: UnrolledList(Of TElement, TNode, TSelf).Item
- uid: Collectathon.Lists.UnrolledList`3.NewUnlinkedNode(ReadOnlyMemory{`0})
  name: NewUnlinkedNode(ReadOnlyMemory<TElement>)
  href: api/Collectathon.Lists.UnrolledList-3.html#Collectathon_Lists_UnrolledList_3_NewUnlinkedNode_ReadOnlyMemory__0__
  commentId: M:Collectathon.Lists.UnrolledList`3.NewUnlinkedNode(ReadOnlyMemory{`0})
  name.vb: NewUnlinkedNode(ReadOnlyMemory(Of TElement))
  fullName: Collectathon.Lists.UnrolledList<TElement, TNode, TSelf>.NewUnlinkedNode(ReadOnlyMemory<TElement>)
  fullName.vb: Collectathon.Lists.UnrolledList(Of TElement, TNode, TSelf).NewUnlinkedNode(ReadOnlyMemory(Of TElement))
  nameWithType: UnrolledList<TElement, TNode, TSelf>.NewUnlinkedNode(ReadOnlyMemory<TElement>)
  nameWithType.vb: UnrolledList(Of TElement, TNode, TSelf).NewUnlinkedNode(ReadOnlyMemory(Of TElement))
- uid: Collectathon.Lists.UnrolledList`3.NewUnlinkedNode*
  name: NewUnlinkedNode
  href: api/Collectathon.Lists.UnrolledList-3.html#Collectathon_Lists_UnrolledList_3_NewUnlinkedNode_
  commentId: Overload:Collectathon.Lists.UnrolledList`3.NewUnlinkedNode
  isSpec: "True"
  fullName: Collectathon.Lists.UnrolledList<TElement, TNode, TSelf>.NewUnlinkedNode
  fullName.vb: Collectathon.Lists.UnrolledList(Of TElement, TNode, TSelf).NewUnlinkedNode
  nameWithType: UnrolledList<TElement, TNode, TSelf>.NewUnlinkedNode
  nameWithType.vb: UnrolledList(Of TElement, TNode, TSelf).NewUnlinkedNode
- uid: Collectathon.Lists.UnrolledList`3.Postpend(`0[])
  name: Postpend(TElement[])
  href: api/Collectathon.Lists.UnrolledList-3.html#Collectathon_Lists_UnrolledList_3_Postpend__0___
  commentId: M:Collectathon.Lists.UnrolledList`3.Postpend(`0[])
  name.vb: Postpend(TElement())
  fullName: Collectathon.Lists.UnrolledList<TElement, TNode, TSelf>.Postpend(TElement[])
  fullName.vb: Collectathon.Lists.UnrolledList(Of TElement, TNode, TSelf).Postpend(TElement())
  nameWithType: UnrolledList<TElement, TNode, TSelf>.Postpend(TElement[])
  nameWithType.vb: UnrolledList(Of TElement, TNode, TSelf).Postpend(TElement())
- uid: Collectathon.Lists.UnrolledList`3.Postpend(Memory{`0})
  name: Postpend(Memory<TElement>)
  href: api/Collectathon.Lists.UnrolledList-3.html#Collectathon_Lists_UnrolledList_3_Postpend_Memory__0__
  commentId: M:Collectathon.Lists.UnrolledList`3.Postpend(Memory{`0})
  name.vb: Postpend(Memory(Of TElement))
  fullName: Collectathon.Lists.UnrolledList<TElement, TNode, TSelf>.Postpend(Memory<TElement>)
  fullName.vb: Collectathon.Lists.UnrolledList(Of TElement, TNode, TSelf).Postpend(Memory(Of TElement))
  nameWithType: UnrolledList<TElement, TNode, TSelf>.Postpend(Memory<TElement>)
  nameWithType.vb: UnrolledList(Of TElement, TNode, TSelf).Postpend(Memory(Of TElement))
- uid: Collectathon.Lists.UnrolledList`3.Postpend(ReadOnlyMemory{`0})
  name: Postpend(ReadOnlyMemory<TElement>)
  href: api/Collectathon.Lists.UnrolledList-3.html#Collectathon_Lists_UnrolledList_3_Postpend_ReadOnlyMemory__0__
  commentId: M:Collectathon.Lists.UnrolledList`3.Postpend(ReadOnlyMemory{`0})
  name.vb: Postpend(ReadOnlyMemory(Of TElement))
  fullName: Collectathon.Lists.UnrolledList<TElement, TNode, TSelf>.Postpend(ReadOnlyMemory<TElement>)
  fullName.vb: Collectathon.Lists.UnrolledList(Of TElement, TNode, TSelf).Postpend(ReadOnlyMemory(Of TElement))
  nameWithType: UnrolledList<TElement, TNode, TSelf>.Postpend(ReadOnlyMemory<TElement>)
  nameWithType.vb: UnrolledList(Of TElement, TNode, TSelf).Postpend(ReadOnlyMemory(Of TElement))
- uid: Collectathon.Lists.UnrolledList`3.Postpend*
  name: Postpend
  href: api/Collectathon.Lists.UnrolledList-3.html#Collectathon_Lists_UnrolledList_3_Postpend_
  commentId: Overload:Collectathon.Lists.UnrolledList`3.Postpend
  isSpec: "True"
  fullName: Collectathon.Lists.UnrolledList<TElement, TNode, TSelf>.Postpend
  fullName.vb: Collectathon.Lists.UnrolledList(Of TElement, TNode, TSelf).Postpend
  nameWithType: UnrolledList<TElement, TNode, TSelf>.Postpend
  nameWithType.vb: UnrolledList(Of TElement, TNode, TSelf).Postpend
- uid: Collectathon.Lists.UnrolledList`3.Prepend(`0[])
  name: Prepend(TElement[])
  href: api/Collectathon.Lists.UnrolledList-3.html#Collectathon_Lists_UnrolledList_3_Prepend__0___
  commentId: M:Collectathon.Lists.UnrolledList`3.Prepend(`0[])
  name.vb: Prepend(TElement())
  fullName: Collectathon.Lists.UnrolledList<TElement, TNode, TSelf>.Prepend(TElement[])
  fullName.vb: Collectathon.Lists.UnrolledList(Of TElement, TNode, TSelf).Prepend(TElement())
  nameWithType: UnrolledList<TElement, TNode, TSelf>.Prepend(TElement[])
  nameWithType.vb: UnrolledList(Of TElement, TNode, TSelf).Prepend(TElement())
- uid: Collectathon.Lists.UnrolledList`3.Prepend(Memory{`0})
  name: Prepend(Memory<TElement>)
  href: api/Collectathon.Lists.UnrolledList-3.html#Collectathon_Lists_UnrolledList_3_Prepend_Memory__0__
  commentId: M:Collectathon.Lists.UnrolledList`3.Prepend(Memory{`0})
  name.vb: Prepend(Memory(Of TElement))
  fullName: Collectathon.Lists.UnrolledList<TElement, TNode, TSelf>.Prepend(Memory<TElement>)
  fullName.vb: Collectathon.Lists.UnrolledList(Of TElement, TNode, TSelf).Prepend(Memory(Of TElement))
  nameWithType: UnrolledList<TElement, TNode, TSelf>.Prepend(Memory<TElement>)
  nameWithType.vb: UnrolledList(Of TElement, TNode, TSelf).Prepend(Memory(Of TElement))
- uid: Collectathon.Lists.UnrolledList`3.Prepend(ReadOnlyMemory{`0})
  name: Prepend(ReadOnlyMemory<TElement>)
  href: api/Collectathon.Lists.UnrolledList-3.html#Collectathon_Lists_UnrolledList_3_Prepend_ReadOnlyMemory__0__
  commentId: M:Collectathon.Lists.UnrolledList`3.Prepend(ReadOnlyMemory{`0})
  name.vb: Prepend(ReadOnlyMemory(Of TElement))
  fullName: Collectathon.Lists.UnrolledList<TElement, TNode, TSelf>.Prepend(ReadOnlyMemory<TElement>)
  fullName.vb: Collectathon.Lists.UnrolledList(Of TElement, TNode, TSelf).Prepend(ReadOnlyMemory(Of TElement))
  nameWithType: UnrolledList<TElement, TNode, TSelf>.Prepend(ReadOnlyMemory<TElement>)
  nameWithType.vb: UnrolledList(Of TElement, TNode, TSelf).Prepend(ReadOnlyMemory(Of TElement))
- uid: Collectathon.Lists.UnrolledList`3.Prepend*
  name: Prepend
  href: api/Collectathon.Lists.UnrolledList-3.html#Collectathon_Lists_UnrolledList_3_Prepend_
  commentId: Overload:Collectathon.Lists.UnrolledList`3.Prepend
  isSpec: "True"
  fullName: Collectathon.Lists.UnrolledList<TElement, TNode, TSelf>.Prepend
  fullName.vb: Collectathon.Lists.UnrolledList(Of TElement, TNode, TSelf).Prepend
  nameWithType: UnrolledList<TElement, TNode, TSelf>.Prepend
  nameWithType.vb: UnrolledList(Of TElement, TNode, TSelf).Prepend
- uid: Collectathon.Nodes
  name: Collectathon.Nodes
  href: api/Collectathon.Nodes.html
  commentId: N:Collectathon.Nodes
  fullName: Collectathon.Nodes
  nameWithType: Collectathon.Nodes
- uid: Collectathon.Nodes.ListNode`2
  name: ListNode<TElement, TSelf>
  href: api/Collectathon.Nodes.ListNode-2.html
  commentId: T:Collectathon.Nodes.ListNode`2
  name.vb: ListNode(Of TElement, TSelf)
  fullName: Collectathon.Nodes.ListNode<TElement, TSelf>
  fullName.vb: Collectathon.Nodes.ListNode(Of TElement, TSelf)
  nameWithType: ListNode<TElement, TSelf>
  nameWithType.vb: ListNode(Of TElement, TSelf)
- uid: Collectathon.Nodes.ListNode`2.#ctor(`1)
  name: ListNode(TSelf)
  href: api/Collectathon.Nodes.ListNode-2.html#Collectathon_Nodes_ListNode_2__ctor__1_
  commentId: M:Collectathon.Nodes.ListNode`2.#ctor(`1)
  fullName: Collectathon.Nodes.ListNode<TElement, TSelf>.ListNode(TSelf)
  fullName.vb: Collectathon.Nodes.ListNode(Of TElement, TSelf).ListNode(TSelf)
  nameWithType: ListNode<TElement, TSelf>.ListNode(TSelf)
  nameWithType.vb: ListNode(Of TElement, TSelf).ListNode(TSelf)
- uid: Collectathon.Nodes.ListNode`2.#ctor*
  name: ListNode
  href: api/Collectathon.Nodes.ListNode-2.html#Collectathon_Nodes_ListNode_2__ctor_
  commentId: Overload:Collectathon.Nodes.ListNode`2.#ctor
  isSpec: "True"
  fullName: Collectathon.Nodes.ListNode<TElement, TSelf>.ListNode
  fullName.vb: Collectathon.Nodes.ListNode(Of TElement, TSelf).ListNode
  nameWithType: ListNode<TElement, TSelf>.ListNode
  nameWithType.vb: ListNode(Of TElement, TSelf).ListNode
- uid: Collectathon.Nodes.ListNode`2.Clear
  name: Clear()
  href: api/Collectathon.Nodes.ListNode-2.html#Collectathon_Nodes_ListNode_2_Clear
  commentId: M:Collectathon.Nodes.ListNode`2.Clear
  fullName: Collectathon.Nodes.ListNode<TElement, TSelf>.Clear()
  fullName.vb: Collectathon.Nodes.ListNode(Of TElement, TSelf).Clear()
  nameWithType: ListNode<TElement, TSelf>.Clear()
  nameWithType.vb: ListNode(Of TElement, TSelf).Clear()
- uid: Collectathon.Nodes.ListNode`2.Clear*
  name: Clear
  href: api/Collectathon.Nodes.ListNode-2.html#Collectathon_Nodes_ListNode_2_Clear_
  commentId: Overload:Collectathon.Nodes.ListNode`2.Clear
  isSpec: "True"
  fullName: Collectathon.Nodes.ListNode<TElement, TSelf>.Clear
  fullName.vb: Collectathon.Nodes.ListNode(Of TElement, TSelf).Clear
  nameWithType: ListNode<TElement, TSelf>.Clear
  nameWithType.vb: ListNode(Of TElement, TSelf).Clear
- uid: Collectathon.Nodes.ListNode`2.Count
  name: Count
  href: api/Collectathon.Nodes.ListNode-2.html#Collectathon_Nodes_ListNode_2_Count
  commentId: P:Collectathon.Nodes.ListNode`2.Count
  fullName: Collectathon.Nodes.ListNode<TElement, TSelf>.Count
  fullName.vb: Collectathon.Nodes.ListNode(Of TElement, TSelf).Count
  nameWithType: ListNode<TElement, TSelf>.Count
  nameWithType.vb: ListNode(Of TElement, TSelf).Count
- uid: Collectathon.Nodes.ListNode`2.Count*
  name: Count
  href: api/Collectathon.Nodes.ListNode-2.html#Collectathon_Nodes_ListNode_2_Count_
  commentId: Overload:Collectathon.Nodes.ListNode`2.Count
  isSpec: "True"
  fullName: Collectathon.Nodes.ListNode<TElement, TSelf>.Count
  fullName.vb: Collectathon.Nodes.ListNode(Of TElement, TSelf).Count
  nameWithType: ListNode<TElement, TSelf>.Count
  nameWithType.vb: ListNode(Of TElement, TSelf).Count
- uid: Collectathon.Nodes.ListNode`2.GetHashCode
  name: GetHashCode()
  href: api/Collectathon.Nodes.ListNode-2.html#Collectathon_Nodes_ListNode_2_GetHashCode
  commentId: M:Collectathon.Nodes.ListNode`2.GetHashCode
  fullName: Collectathon.Nodes.ListNode<TElement, TSelf>.GetHashCode()
  fullName.vb: Collectathon.Nodes.ListNode(Of TElement, TSelf).GetHashCode()
  nameWithType: ListNode<TElement, TSelf>.GetHashCode()
  nameWithType.vb: ListNode(Of TElement, TSelf).GetHashCode()
- uid: Collectathon.Nodes.ListNode`2.GetHashCode*
  name: GetHashCode
  href: api/Collectathon.Nodes.ListNode-2.html#Collectathon_Nodes_ListNode_2_GetHashCode_
  commentId: Overload:Collectathon.Nodes.ListNode`2.GetHashCode
  isSpec: "True"
  fullName: Collectathon.Nodes.ListNode<TElement, TSelf>.GetHashCode
  fullName.vb: Collectathon.Nodes.ListNode(Of TElement, TSelf).GetHashCode
  nameWithType: ListNode<TElement, TSelf>.GetHashCode
  nameWithType.vb: ListNode(Of TElement, TSelf).GetHashCode
- uid: Collectathon.Nodes.ListNode`2.Next
  name: Next
  href: api/Collectathon.Nodes.ListNode-2.html#Collectathon_Nodes_ListNode_2_Next
  commentId: P:Collectathon.Nodes.ListNode`2.Next
  fullName: Collectathon.Nodes.ListNode<TElement, TSelf>.Next
  fullName.vb: Collectathon.Nodes.ListNode(Of TElement, TSelf).Next
  nameWithType: ListNode<TElement, TSelf>.Next
  nameWithType.vb: ListNode(Of TElement, TSelf).Next
- uid: Collectathon.Nodes.ListNode`2.Next*
  name: Next
  href: api/Collectathon.Nodes.ListNode-2.html#Collectathon_Nodes_ListNode_2_Next_
  commentId: Overload:Collectathon.Nodes.ListNode`2.Next
  isSpec: "True"
  fullName: Collectathon.Nodes.ListNode<TElement, TSelf>.Next
  fullName.vb: Collectathon.Nodes.ListNode(Of TElement, TSelf).Next
  nameWithType: ListNode<TElement, TSelf>.Next
  nameWithType.vb: ListNode(Of TElement, TSelf).Next
- uid: Collectathon.Nodes.ListNode`2.Postpend(`0)
  name: Postpend(TElement)
  href: api/Collectathon.Nodes.ListNode-2.html#Collectathon_Nodes_ListNode_2_Postpend__0_
  commentId: M:Collectathon.Nodes.ListNode`2.Postpend(`0)
  fullName: Collectathon.Nodes.ListNode<TElement, TSelf>.Postpend(TElement)
  fullName.vb: Collectathon.Nodes.ListNode(Of TElement, TSelf).Postpend(TElement)
  nameWithType: ListNode<TElement, TSelf>.Postpend(TElement)
  nameWithType.vb: ListNode(Of TElement, TSelf).Postpend(TElement)
- uid: Collectathon.Nodes.ListNode`2.Postpend*
  name: Postpend
  href: api/Collectathon.Nodes.ListNode-2.html#Collectathon_Nodes_ListNode_2_Postpend_
  commentId: Overload:Collectathon.Nodes.ListNode`2.Postpend
  isSpec: "True"
  fullName: Collectathon.Nodes.ListNode<TElement, TSelf>.Postpend
  fullName.vb: Collectathon.Nodes.ListNode(Of TElement, TSelf).Postpend
  nameWithType: ListNode<TElement, TSelf>.Postpend
  nameWithType.vb: ListNode(Of TElement, TSelf).Postpend
- uid: Collectathon.Nodes.ListNode`2.Prepend(`0)
  name: Prepend(TElement)
  href: api/Collectathon.Nodes.ListNode-2.html#Collectathon_Nodes_ListNode_2_Prepend__0_
  commentId: M:Collectathon.Nodes.ListNode`2.Prepend(`0)
  fullName: Collectathon.Nodes.ListNode<TElement, TSelf>.Prepend(TElement)
  fullName.vb: Collectathon.Nodes.ListNode(Of TElement, TSelf).Prepend(TElement)
  nameWithType: ListNode<TElement, TSelf>.Prepend(TElement)
  nameWithType.vb: ListNode(Of TElement, TSelf).Prepend(TElement)
- uid: Collectathon.Nodes.ListNode`2.Prepend*
  name: Prepend
  href: api/Collectathon.Nodes.ListNode-2.html#Collectathon_Nodes_ListNode_2_Prepend_
  commentId: Overload:Collectathon.Nodes.ListNode`2.Prepend
  isSpec: "True"
  fullName: Collectathon.Nodes.ListNode<TElement, TSelf>.Prepend
  fullName.vb: Collectathon.Nodes.ListNode(Of TElement, TSelf).Prepend
  nameWithType: ListNode<TElement, TSelf>.Prepend
  nameWithType.vb: ListNode(Of TElement, TSelf).Prepend
- uid: Collectathon.Nodes.ListNode`2.ToString
  name: ToString()
  href: api/Collectathon.Nodes.ListNode-2.html#Collectathon_Nodes_ListNode_2_ToString
  commentId: M:Collectathon.Nodes.ListNode`2.ToString
  fullName: Collectathon.Nodes.ListNode<TElement, TSelf>.ToString()
  fullName.vb: Collectathon.Nodes.ListNode(Of TElement, TSelf).ToString()
  nameWithType: ListNode<TElement, TSelf>.ToString()
  nameWithType.vb: ListNode(Of TElement, TSelf).ToString()
- uid: Collectathon.Nodes.ListNode`2.ToString*
  name: ToString
  href: api/Collectathon.Nodes.ListNode-2.html#Collectathon_Nodes_ListNode_2_ToString_
  commentId: Overload:Collectathon.Nodes.ListNode`2.ToString
  isSpec: "True"
  fullName: Collectathon.Nodes.ListNode<TElement, TSelf>.ToString
  fullName.vb: Collectathon.Nodes.ListNode(Of TElement, TSelf).ToString
  nameWithType: ListNode<TElement, TSelf>.ToString
  nameWithType.vb: ListNode(Of TElement, TSelf).ToString
- uid: Collectathon.Nodes.ListNode`3
  name: ListNode<TIndex, TElement, TSelf>
  href: api/Collectathon.Nodes.ListNode-3.html
  commentId: T:Collectathon.Nodes.ListNode`3
  name.vb: ListNode(Of TIndex, TElement, TSelf)
  fullName: Collectathon.Nodes.ListNode<TIndex, TElement, TSelf>
  fullName.vb: Collectathon.Nodes.ListNode(Of TIndex, TElement, TSelf)
  nameWithType: ListNode<TIndex, TElement, TSelf>
  nameWithType.vb: ListNode(Of TIndex, TElement, TSelf)
- uid: Collectathon.Nodes.ListNode`3.#ctor(`2)
  name: ListNode(TSelf)
  href: api/Collectathon.Nodes.ListNode-3.html#Collectathon_Nodes_ListNode_3__ctor__2_
  commentId: M:Collectathon.Nodes.ListNode`3.#ctor(`2)
  fullName: Collectathon.Nodes.ListNode<TIndex, TElement, TSelf>.ListNode(TSelf)
  fullName.vb: Collectathon.Nodes.ListNode(Of TIndex, TElement, TSelf).ListNode(TSelf)
  nameWithType: ListNode<TIndex, TElement, TSelf>.ListNode(TSelf)
  nameWithType.vb: ListNode(Of TIndex, TElement, TSelf).ListNode(TSelf)
- uid: Collectathon.Nodes.ListNode`3.#ctor*
  name: ListNode
  href: api/Collectathon.Nodes.ListNode-3.html#Collectathon_Nodes_ListNode_3__ctor_
  commentId: Overload:Collectathon.Nodes.ListNode`3.#ctor
  isSpec: "True"
  fullName: Collectathon.Nodes.ListNode<TIndex, TElement, TSelf>.ListNode
  fullName.vb: Collectathon.Nodes.ListNode(Of TIndex, TElement, TSelf).ListNode
  nameWithType: ListNode<TIndex, TElement, TSelf>.ListNode
  nameWithType.vb: ListNode(Of TIndex, TElement, TSelf).ListNode
- uid: Collectathon.Nodes.ListNode`3.Clear
  name: Clear()
  href: api/Collectathon.Nodes.ListNode-3.html#Collectathon_Nodes_ListNode_3_Clear
  commentId: M:Collectathon.Nodes.ListNode`3.Clear
  fullName: Collectathon.Nodes.ListNode<TIndex, TElement, TSelf>.Clear()
  fullName.vb: Collectathon.Nodes.ListNode(Of TIndex, TElement, TSelf).Clear()
  nameWithType: ListNode<TIndex, TElement, TSelf>.Clear()
  nameWithType.vb: ListNode(Of TIndex, TElement, TSelf).Clear()
- uid: Collectathon.Nodes.ListNode`3.Clear*
  name: Clear
  href: api/Collectathon.Nodes.ListNode-3.html#Collectathon_Nodes_ListNode_3_Clear_
  commentId: Overload:Collectathon.Nodes.ListNode`3.Clear
  isSpec: "True"
  fullName: Collectathon.Nodes.ListNode<TIndex, TElement, TSelf>.Clear
  fullName.vb: Collectathon.Nodes.ListNode(Of TIndex, TElement, TSelf).Clear
  nameWithType: ListNode<TIndex, TElement, TSelf>.Clear
  nameWithType.vb: ListNode(Of TIndex, TElement, TSelf).Clear
- uid: Collectathon.Nodes.ListNode`3.Count
  name: Count
  href: api/Collectathon.Nodes.ListNode-3.html#Collectathon_Nodes_ListNode_3_Count
  commentId: P:Collectathon.Nodes.ListNode`3.Count
  fullName: Collectathon.Nodes.ListNode<TIndex, TElement, TSelf>.Count
  fullName.vb: Collectathon.Nodes.ListNode(Of TIndex, TElement, TSelf).Count
  nameWithType: ListNode<TIndex, TElement, TSelf>.Count
  nameWithType.vb: ListNode(Of TIndex, TElement, TSelf).Count
- uid: Collectathon.Nodes.ListNode`3.Count*
  name: Count
  href: api/Collectathon.Nodes.ListNode-3.html#Collectathon_Nodes_ListNode_3_Count_
  commentId: Overload:Collectathon.Nodes.ListNode`3.Count
  isSpec: "True"
  fullName: Collectathon.Nodes.ListNode<TIndex, TElement, TSelf>.Count
  fullName.vb: Collectathon.Nodes.ListNode(Of TIndex, TElement, TSelf).Count
  nameWithType: ListNode<TIndex, TElement, TSelf>.Count
  nameWithType.vb: ListNode(Of TIndex, TElement, TSelf).Count
- uid: Collectathon.Nodes.ListNode`3.GetHashCode
  name: GetHashCode()
  href: api/Collectathon.Nodes.ListNode-3.html#Collectathon_Nodes_ListNode_3_GetHashCode
  commentId: M:Collectathon.Nodes.ListNode`3.GetHashCode
  fullName: Collectathon.Nodes.ListNode<TIndex, TElement, TSelf>.GetHashCode()
  fullName.vb: Collectathon.Nodes.ListNode(Of TIndex, TElement, TSelf).GetHashCode()
  nameWithType: ListNode<TIndex, TElement, TSelf>.GetHashCode()
  nameWithType.vb: ListNode(Of TIndex, TElement, TSelf).GetHashCode()
- uid: Collectathon.Nodes.ListNode`3.GetHashCode*
  name: GetHashCode
  href: api/Collectathon.Nodes.ListNode-3.html#Collectathon_Nodes_ListNode_3_GetHashCode_
  commentId: Overload:Collectathon.Nodes.ListNode`3.GetHashCode
  isSpec: "True"
  fullName: Collectathon.Nodes.ListNode<TIndex, TElement, TSelf>.GetHashCode
  fullName.vb: Collectathon.Nodes.ListNode(Of TIndex, TElement, TSelf).GetHashCode
  nameWithType: ListNode<TIndex, TElement, TSelf>.GetHashCode
  nameWithType.vb: ListNode(Of TIndex, TElement, TSelf).GetHashCode
- uid: Collectathon.Nodes.ListNode`3.Next
  name: Next
  href: api/Collectathon.Nodes.ListNode-3.html#Collectathon_Nodes_ListNode_3_Next
  commentId: P:Collectathon.Nodes.ListNode`3.Next
  fullName: Collectathon.Nodes.ListNode<TIndex, TElement, TSelf>.Next
  fullName.vb: Collectathon.Nodes.ListNode(Of TIndex, TElement, TSelf).Next
  nameWithType: ListNode<TIndex, TElement, TSelf>.Next
  nameWithType.vb: ListNode(Of TIndex, TElement, TSelf).Next
- uid: Collectathon.Nodes.ListNode`3.Next*
  name: Next
  href: api/Collectathon.Nodes.ListNode-3.html#Collectathon_Nodes_ListNode_3_Next_
  commentId: Overload:Collectathon.Nodes.ListNode`3.Next
  isSpec: "True"
  fullName: Collectathon.Nodes.ListNode<TIndex, TElement, TSelf>.Next
  fullName.vb: Collectathon.Nodes.ListNode(Of TIndex, TElement, TSelf).Next
  nameWithType: ListNode<TIndex, TElement, TSelf>.Next
  nameWithType.vb: ListNode(Of TIndex, TElement, TSelf).Next
- uid: Collectathon.Nodes.ListNode`3.Postpend(`0,`1)
  name: Postpend(TIndex, TElement)
  href: api/Collectathon.Nodes.ListNode-3.html#Collectathon_Nodes_ListNode_3_Postpend__0__1_
  commentId: M:Collectathon.Nodes.ListNode`3.Postpend(`0,`1)
  fullName: Collectathon.Nodes.ListNode<TIndex, TElement, TSelf>.Postpend(TIndex, TElement)
  fullName.vb: Collectathon.Nodes.ListNode(Of TIndex, TElement, TSelf).Postpend(TIndex, TElement)
  nameWithType: ListNode<TIndex, TElement, TSelf>.Postpend(TIndex, TElement)
  nameWithType.vb: ListNode(Of TIndex, TElement, TSelf).Postpend(TIndex, TElement)
- uid: Collectathon.Nodes.ListNode`3.Postpend*
  name: Postpend
  href: api/Collectathon.Nodes.ListNode-3.html#Collectathon_Nodes_ListNode_3_Postpend_
  commentId: Overload:Collectathon.Nodes.ListNode`3.Postpend
  isSpec: "True"
  fullName: Collectathon.Nodes.ListNode<TIndex, TElement, TSelf>.Postpend
  fullName.vb: Collectathon.Nodes.ListNode(Of TIndex, TElement, TSelf).Postpend
  nameWithType: ListNode<TIndex, TElement, TSelf>.Postpend
  nameWithType.vb: ListNode(Of TIndex, TElement, TSelf).Postpend
- uid: Collectathon.Nodes.ListNode`3.Prepend(`0,`1)
  name: Prepend(TIndex, TElement)
  href: api/Collectathon.Nodes.ListNode-3.html#Collectathon_Nodes_ListNode_3_Prepend__0__1_
  commentId: M:Collectathon.Nodes.ListNode`3.Prepend(`0,`1)
  fullName: Collectathon.Nodes.ListNode<TIndex, TElement, TSelf>.Prepend(TIndex, TElement)
  fullName.vb: Collectathon.Nodes.ListNode(Of TIndex, TElement, TSelf).Prepend(TIndex, TElement)
  nameWithType: ListNode<TIndex, TElement, TSelf>.Prepend(TIndex, TElement)
  nameWithType.vb: ListNode(Of TIndex, TElement, TSelf).Prepend(TIndex, TElement)
- uid: Collectathon.Nodes.ListNode`3.Prepend*
  name: Prepend
  href: api/Collectathon.Nodes.ListNode-3.html#Collectathon_Nodes_ListNode_3_Prepend_
  commentId: Overload:Collectathon.Nodes.ListNode`3.Prepend
  isSpec: "True"
  fullName: Collectathon.Nodes.ListNode<TIndex, TElement, TSelf>.Prepend
  fullName.vb: Collectathon.Nodes.ListNode(Of TIndex, TElement, TSelf).Prepend
  nameWithType: ListNode<TIndex, TElement, TSelf>.Prepend
  nameWithType.vb: ListNode(Of TIndex, TElement, TSelf).Prepend
- uid: Collectathon.Nodes.ListNode`3.ToString
  name: ToString()
  href: api/Collectathon.Nodes.ListNode-3.html#Collectathon_Nodes_ListNode_3_ToString
  commentId: M:Collectathon.Nodes.ListNode`3.ToString
  fullName: Collectathon.Nodes.ListNode<TIndex, TElement, TSelf>.ToString()
  fullName.vb: Collectathon.Nodes.ListNode(Of TIndex, TElement, TSelf).ToString()
  nameWithType: ListNode<TIndex, TElement, TSelf>.ToString()
  nameWithType.vb: ListNode(Of TIndex, TElement, TSelf).ToString()
- uid: Collectathon.Nodes.ListNode`3.ToString*
  name: ToString
  href: api/Collectathon.Nodes.ListNode-3.html#Collectathon_Nodes_ListNode_3_ToString_
  commentId: Overload:Collectathon.Nodes.ListNode`3.ToString
  isSpec: "True"
  fullName: Collectathon.Nodes.ListNode<TIndex, TElement, TSelf>.ToString
  fullName.vb: Collectathon.Nodes.ListNode(Of TIndex, TElement, TSelf).ToString
  nameWithType: ListNode<TIndex, TElement, TSelf>.ToString
  nameWithType.vb: ListNode(Of TIndex, TElement, TSelf).ToString
- uid: Collectathon.Nodes.StandardListNode`2
  name: StandardListNode<TElement, TSelf>
  href: api/Collectathon.Nodes.StandardListNode-2.html
  commentId: T:Collectathon.Nodes.StandardListNode`2
  name.vb: StandardListNode(Of TElement, TSelf)
  fullName: Collectathon.Nodes.StandardListNode<TElement, TSelf>
  fullName.vb: Collectathon.Nodes.StandardListNode(Of TElement, TSelf)
  nameWithType: StandardListNode<TElement, TSelf>
  nameWithType.vb: StandardListNode(Of TElement, TSelf)
- uid: Collectathon.Nodes.StandardListNode`2.#ctor(`0,`1)
  name: StandardListNode(TElement, TSelf)
  href: api/Collectathon.Nodes.StandardListNode-2.html#Collectathon_Nodes_StandardListNode_2__ctor__0__1_
  commentId: M:Collectathon.Nodes.StandardListNode`2.#ctor(`0,`1)
  fullName: Collectathon.Nodes.StandardListNode<TElement, TSelf>.StandardListNode(TElement, TSelf)
  fullName.vb: Collectathon.Nodes.StandardListNode(Of TElement, TSelf).StandardListNode(TElement, TSelf)
  nameWithType: StandardListNode<TElement, TSelf>.StandardListNode(TElement, TSelf)
  nameWithType.vb: StandardListNode(Of TElement, TSelf).StandardListNode(TElement, TSelf)
- uid: Collectathon.Nodes.StandardListNode`2.#ctor*
  name: StandardListNode
  href: api/Collectathon.Nodes.StandardListNode-2.html#Collectathon_Nodes_StandardListNode_2__ctor_
  commentId: Overload:Collectathon.Nodes.StandardListNode`2.#ctor
  isSpec: "True"
  fullName: Collectathon.Nodes.StandardListNode<TElement, TSelf>.StandardListNode
  fullName.vb: Collectathon.Nodes.StandardListNode(Of TElement, TSelf).StandardListNode
  nameWithType: StandardListNode<TElement, TSelf>.StandardListNode
  nameWithType.vb: StandardListNode(Of TElement, TSelf).StandardListNode
- uid: Collectathon.Nodes.StandardListNode`2.Count
  name: Count
  href: api/Collectathon.Nodes.StandardListNode-2.html#Collectathon_Nodes_StandardListNode_2_Count
  commentId: P:Collectathon.Nodes.StandardListNode`2.Count
  fullName: Collectathon.Nodes.StandardListNode<TElement, TSelf>.Count
  fullName.vb: Collectathon.Nodes.StandardListNode(Of TElement, TSelf).Count
  nameWithType: StandardListNode<TElement, TSelf>.Count
  nameWithType.vb: StandardListNode(Of TElement, TSelf).Count
- uid: Collectathon.Nodes.StandardListNode`2.Count*
  name: Count
  href: api/Collectathon.Nodes.StandardListNode-2.html#Collectathon_Nodes_StandardListNode_2_Count_
  commentId: Overload:Collectathon.Nodes.StandardListNode`2.Count
  isSpec: "True"
  fullName: Collectathon.Nodes.StandardListNode<TElement, TSelf>.Count
  fullName.vb: Collectathon.Nodes.StandardListNode(Of TElement, TSelf).Count
  nameWithType: StandardListNode<TElement, TSelf>.Count
  nameWithType.vb: StandardListNode(Of TElement, TSelf).Count
- uid: Collectathon.Nodes.StandardListNode`2.Element
  name: Element
  href: api/Collectathon.Nodes.StandardListNode-2.html#Collectathon_Nodes_StandardListNode_2_Element
  commentId: P:Collectathon.Nodes.StandardListNode`2.Element
  fullName: Collectathon.Nodes.StandardListNode<TElement, TSelf>.Element
  fullName.vb: Collectathon.Nodes.StandardListNode(Of TElement, TSelf).Element
  nameWithType: StandardListNode<TElement, TSelf>.Element
  nameWithType.vb: StandardListNode(Of TElement, TSelf).Element
- uid: Collectathon.Nodes.StandardListNode`2.Element*
  name: Element
  href: api/Collectathon.Nodes.StandardListNode-2.html#Collectathon_Nodes_StandardListNode_2_Element_
  commentId: Overload:Collectathon.Nodes.StandardListNode`2.Element
  isSpec: "True"
  fullName: Collectathon.Nodes.StandardListNode<TElement, TSelf>.Element
  fullName.vb: Collectathon.Nodes.StandardListNode(Of TElement, TSelf).Element
  nameWithType: StandardListNode<TElement, TSelf>.Element
  nameWithType.vb: StandardListNode(Of TElement, TSelf).Element
- uid: Collectathon.Nodes.StandardListNode`2.Replace(`0,`0)
  name: Replace(TElement, TElement)
  href: api/Collectathon.Nodes.StandardListNode-2.html#Collectathon_Nodes_StandardListNode_2_Replace__0__0_
  commentId: M:Collectathon.Nodes.StandardListNode`2.Replace(`0,`0)
  fullName: Collectathon.Nodes.StandardListNode<TElement, TSelf>.Replace(TElement, TElement)
  fullName.vb: Collectathon.Nodes.StandardListNode(Of TElement, TSelf).Replace(TElement, TElement)
  nameWithType: StandardListNode<TElement, TSelf>.Replace(TElement, TElement)
  nameWithType.vb: StandardListNode(Of TElement, TSelf).Replace(TElement, TElement)
- uid: Collectathon.Nodes.StandardListNode`2.Replace*
  name: Replace
  href: api/Collectathon.Nodes.StandardListNode-2.html#Collectathon_Nodes_StandardListNode_2_Replace_
  commentId: Overload:Collectathon.Nodes.StandardListNode`2.Replace
  isSpec: "True"
  fullName: Collectathon.Nodes.StandardListNode<TElement, TSelf>.Replace
  fullName.vb: Collectathon.Nodes.StandardListNode(Of TElement, TSelf).Replace
  nameWithType: StandardListNode<TElement, TSelf>.Replace
  nameWithType.vb: StandardListNode(Of TElement, TSelf).Replace
- uid: Collectathon.Nodes.StandardListNode`2.ToString
  name: ToString()
  href: api/Collectathon.Nodes.StandardListNode-2.html#Collectathon_Nodes_StandardListNode_2_ToString
  commentId: M:Collectathon.Nodes.StandardListNode`2.ToString
  fullName: Collectathon.Nodes.StandardListNode<TElement, TSelf>.ToString()
  fullName.vb: Collectathon.Nodes.StandardListNode(Of TElement, TSelf).ToString()
  nameWithType: StandardListNode<TElement, TSelf>.ToString()
  nameWithType.vb: StandardListNode(Of TElement, TSelf).ToString()
- uid: Collectathon.Nodes.StandardListNode`2.ToString*
  name: ToString
  href: api/Collectathon.Nodes.StandardListNode-2.html#Collectathon_Nodes_StandardListNode_2_ToString_
  commentId: Overload:Collectathon.Nodes.StandardListNode`2.ToString
  isSpec: "True"
  fullName: Collectathon.Nodes.StandardListNode<TElement, TSelf>.ToString
  fullName.vb: Collectathon.Nodes.StandardListNode(Of TElement, TSelf).ToString
  nameWithType: StandardListNode<TElement, TSelf>.ToString
  nameWithType.vb: StandardListNode(Of TElement, TSelf).ToString
- uid: Collectathon.Nodes.StandardListNode`3
  name: StandardListNode<TIndex, TElement, TSelf>
  href: api/Collectathon.Nodes.StandardListNode-3.html
  commentId: T:Collectathon.Nodes.StandardListNode`3
  name.vb: StandardListNode(Of TIndex, TElement, TSelf)
  fullName: Collectathon.Nodes.StandardListNode<TIndex, TElement, TSelf>
  fullName.vb: Collectathon.Nodes.StandardListNode(Of TIndex, TElement, TSelf)
  nameWithType: StandardListNode<TIndex, TElement, TSelf>
  nameWithType.vb: StandardListNode(Of TIndex, TElement, TSelf)
- uid: Collectathon.Nodes.StandardListNode`3.#ctor(`0,`1,`2)
  name: StandardListNode(TIndex, TElement, TSelf)
  href: api/Collectathon.Nodes.StandardListNode-3.html#Collectathon_Nodes_StandardListNode_3__ctor__0__1__2_
  commentId: M:Collectathon.Nodes.StandardListNode`3.#ctor(`0,`1,`2)
  fullName: Collectathon.Nodes.StandardListNode<TIndex, TElement, TSelf>.StandardListNode(TIndex, TElement, TSelf)
  fullName.vb: Collectathon.Nodes.StandardListNode(Of TIndex, TElement, TSelf).StandardListNode(TIndex, TElement, TSelf)
  nameWithType: StandardListNode<TIndex, TElement, TSelf>.StandardListNode(TIndex, TElement, TSelf)
  nameWithType.vb: StandardListNode(Of TIndex, TElement, TSelf).StandardListNode(TIndex, TElement, TSelf)
- uid: Collectathon.Nodes.StandardListNode`3.#ctor*
  name: StandardListNode
  href: api/Collectathon.Nodes.StandardListNode-3.html#Collectathon_Nodes_StandardListNode_3__ctor_
  commentId: Overload:Collectathon.Nodes.StandardListNode`3.#ctor
  isSpec: "True"
  fullName: Collectathon.Nodes.StandardListNode<TIndex, TElement, TSelf>.StandardListNode
  fullName.vb: Collectathon.Nodes.StandardListNode(Of TIndex, TElement, TSelf).StandardListNode
  nameWithType: StandardListNode<TIndex, TElement, TSelf>.StandardListNode
  nameWithType.vb: StandardListNode(Of TIndex, TElement, TSelf).StandardListNode
- uid: Collectathon.Nodes.StandardListNode`3.Count
  name: Count
  href: api/Collectathon.Nodes.StandardListNode-3.html#Collectathon_Nodes_StandardListNode_3_Count
  commentId: P:Collectathon.Nodes.StandardListNode`3.Count
  fullName: Collectathon.Nodes.StandardListNode<TIndex, TElement, TSelf>.Count
  fullName.vb: Collectathon.Nodes.StandardListNode(Of TIndex, TElement, TSelf).Count
  nameWithType: StandardListNode<TIndex, TElement, TSelf>.Count
  nameWithType.vb: StandardListNode(Of TIndex, TElement, TSelf).Count
- uid: Collectathon.Nodes.StandardListNode`3.Count*
  name: Count
  href: api/Collectathon.Nodes.StandardListNode-3.html#Collectathon_Nodes_StandardListNode_3_Count_
  commentId: Overload:Collectathon.Nodes.StandardListNode`3.Count
  isSpec: "True"
  fullName: Collectathon.Nodes.StandardListNode<TIndex, TElement, TSelf>.Count
  fullName.vb: Collectathon.Nodes.StandardListNode(Of TIndex, TElement, TSelf).Count
  nameWithType: StandardListNode<TIndex, TElement, TSelf>.Count
  nameWithType.vb: StandardListNode(Of TIndex, TElement, TSelf).Count
- uid: Collectathon.Nodes.StandardListNode`3.Element
  name: Element
  href: api/Collectathon.Nodes.StandardListNode-3.html#Collectathon_Nodes_StandardListNode_3_Element
  commentId: P:Collectathon.Nodes.StandardListNode`3.Element
  fullName: Collectathon.Nodes.StandardListNode<TIndex, TElement, TSelf>.Element
  fullName.vb: Collectathon.Nodes.StandardListNode(Of TIndex, TElement, TSelf).Element
  nameWithType: StandardListNode<TIndex, TElement, TSelf>.Element
  nameWithType.vb: StandardListNode(Of TIndex, TElement, TSelf).Element
- uid: Collectathon.Nodes.StandardListNode`3.Element*
  name: Element
  href: api/Collectathon.Nodes.StandardListNode-3.html#Collectathon_Nodes_StandardListNode_3_Element_
  commentId: Overload:Collectathon.Nodes.StandardListNode`3.Element
  isSpec: "True"
  fullName: Collectathon.Nodes.StandardListNode<TIndex, TElement, TSelf>.Element
  fullName.vb: Collectathon.Nodes.StandardListNode(Of TIndex, TElement, TSelf).Element
  nameWithType: StandardListNode<TIndex, TElement, TSelf>.Element
  nameWithType.vb: StandardListNode(Of TIndex, TElement, TSelf).Element
- uid: Collectathon.Nodes.StandardListNode`3.Index
  name: Index
  href: api/Collectathon.Nodes.StandardListNode-3.html#Collectathon_Nodes_StandardListNode_3_Index
  commentId: P:Collectathon.Nodes.StandardListNode`3.Index
  fullName: Collectathon.Nodes.StandardListNode<TIndex, TElement, TSelf>.Index
  fullName.vb: Collectathon.Nodes.StandardListNode(Of TIndex, TElement, TSelf).Index
  nameWithType: StandardListNode<TIndex, TElement, TSelf>.Index
  nameWithType.vb: StandardListNode(Of TIndex, TElement, TSelf).Index
- uid: Collectathon.Nodes.StandardListNode`3.Index*
  name: Index
  href: api/Collectathon.Nodes.StandardListNode-3.html#Collectathon_Nodes_StandardListNode_3_Index_
  commentId: Overload:Collectathon.Nodes.StandardListNode`3.Index
  isSpec: "True"
  fullName: Collectathon.Nodes.StandardListNode<TIndex, TElement, TSelf>.Index
  fullName.vb: Collectathon.Nodes.StandardListNode(Of TIndex, TElement, TSelf).Index
  nameWithType: StandardListNode<TIndex, TElement, TSelf>.Index
  nameWithType.vb: StandardListNode(Of TIndex, TElement, TSelf).Index
- uid: Collectathon.Nodes.StandardListNode`3.Replace(`1,`1)
  name: Replace(TElement, TElement)
  href: api/Collectathon.Nodes.StandardListNode-3.html#Collectathon_Nodes_StandardListNode_3_Replace__1__1_
  commentId: M:Collectathon.Nodes.StandardListNode`3.Replace(`1,`1)
  fullName: Collectathon.Nodes.StandardListNode<TIndex, TElement, TSelf>.Replace(TElement, TElement)
  fullName.vb: Collectathon.Nodes.StandardListNode(Of TIndex, TElement, TSelf).Replace(TElement, TElement)
  nameWithType: StandardListNode<TIndex, TElement, TSelf>.Replace(TElement, TElement)
  nameWithType.vb: StandardListNode(Of TIndex, TElement, TSelf).Replace(TElement, TElement)
- uid: Collectathon.Nodes.StandardListNode`3.Replace*
  name: Replace
  href: api/Collectathon.Nodes.StandardListNode-3.html#Collectathon_Nodes_StandardListNode_3_Replace_
  commentId: Overload:Collectathon.Nodes.StandardListNode`3.Replace
  isSpec: "True"
  fullName: Collectathon.Nodes.StandardListNode<TIndex, TElement, TSelf>.Replace
  fullName.vb: Collectathon.Nodes.StandardListNode(Of TIndex, TElement, TSelf).Replace
  nameWithType: StandardListNode<TIndex, TElement, TSelf>.Replace
  nameWithType.vb: StandardListNode(Of TIndex, TElement, TSelf).Replace
- uid: Collectathon.Nodes.StandardListNode`3.ToString
  name: ToString()
  href: api/Collectathon.Nodes.StandardListNode-3.html#Collectathon_Nodes_StandardListNode_3_ToString
  commentId: M:Collectathon.Nodes.StandardListNode`3.ToString
  fullName: Collectathon.Nodes.StandardListNode<TIndex, TElement, TSelf>.ToString()
  fullName.vb: Collectathon.Nodes.StandardListNode(Of TIndex, TElement, TSelf).ToString()
  nameWithType: StandardListNode<TIndex, TElement, TSelf>.ToString()
  nameWithType.vb: StandardListNode(Of TIndex, TElement, TSelf).ToString()
- uid: Collectathon.Nodes.StandardListNode`3.ToString*
  name: ToString
  href: api/Collectathon.Nodes.StandardListNode-3.html#Collectathon_Nodes_StandardListNode_3_ToString_
  commentId: Overload:Collectathon.Nodes.StandardListNode`3.ToString
  isSpec: "True"
  fullName: Collectathon.Nodes.StandardListNode<TIndex, TElement, TSelf>.ToString
  fullName.vb: Collectathon.Nodes.StandardListNode(Of TIndex, TElement, TSelf).ToString
  nameWithType: StandardListNode<TIndex, TElement, TSelf>.ToString
  nameWithType.vb: StandardListNode(Of TIndex, TElement, TSelf).ToString
- uid: Collectathon.Nodes.UnrolledListNode`2
  name: UnrolledListNode<TElement, TSelf>
  href: api/Collectathon.Nodes.UnrolledListNode-2.html
  commentId: T:Collectathon.Nodes.UnrolledListNode`2
  name.vb: UnrolledListNode(Of TElement, TSelf)
  fullName: Collectathon.Nodes.UnrolledListNode<TElement, TSelf>
  fullName.vb: Collectathon.Nodes.UnrolledListNode(Of TElement, TSelf)
  nameWithType: UnrolledListNode<TElement, TSelf>
  nameWithType.vb: UnrolledListNode(Of TElement, TSelf)
- uid: Collectathon.Nodes.UnrolledListNode`2.#ctor(`1)
  name: UnrolledListNode(TSelf)
  href: api/Collectathon.Nodes.UnrolledListNode-2.html#Collectathon_Nodes_UnrolledListNode_2__ctor__1_
  commentId: M:Collectathon.Nodes.UnrolledListNode`2.#ctor(`1)
  fullName: Collectathon.Nodes.UnrolledListNode<TElement, TSelf>.UnrolledListNode(TSelf)
  fullName.vb: Collectathon.Nodes.UnrolledListNode(Of TElement, TSelf).UnrolledListNode(TSelf)
  nameWithType: UnrolledListNode<TElement, TSelf>.UnrolledListNode(TSelf)
  nameWithType.vb: UnrolledListNode(Of TElement, TSelf).UnrolledListNode(TSelf)
- uid: Collectathon.Nodes.UnrolledListNode`2.#ctor*
  name: UnrolledListNode
  href: api/Collectathon.Nodes.UnrolledListNode-2.html#Collectathon_Nodes_UnrolledListNode_2__ctor_
  commentId: Overload:Collectathon.Nodes.UnrolledListNode`2.#ctor
  isSpec: "True"
  fullName: Collectathon.Nodes.UnrolledListNode<TElement, TSelf>.UnrolledListNode
  fullName.vb: Collectathon.Nodes.UnrolledListNode(Of TElement, TSelf).UnrolledListNode
  nameWithType: UnrolledListNode<TElement, TSelf>.UnrolledListNode
  nameWithType.vb: UnrolledListNode(Of TElement, TSelf).UnrolledListNode
- uid: Collectathon.Nodes.UnrolledListNode`2.Enumerator
  name: UnrolledListNode<TElement, TSelf>.Enumerator
  href: api/Collectathon.Nodes.UnrolledListNode-2.Enumerator.html
  commentId: T:Collectathon.Nodes.UnrolledListNode`2.Enumerator
  name.vb: UnrolledListNode(Of TElement, TSelf).Enumerator
  fullName: Collectathon.Nodes.UnrolledListNode<TElement, TSelf>.Enumerator
  fullName.vb: Collectathon.Nodes.UnrolledListNode(Of TElement, TSelf).Enumerator
  nameWithType: UnrolledListNode<TElement, TSelf>.Enumerator
  nameWithType.vb: UnrolledListNode(Of TElement, TSelf).Enumerator
- uid: Collectathon.Nodes.UnrolledListNode`2.Enumerator.#ctor(Collectathon.Nodes.UnrolledListNode{`0,`1})
  name: Enumerator(UnrolledListNode<TElement, TSelf>)
  href: api/Collectathon.Nodes.UnrolledListNode-2.Enumerator.html#Collectathon_Nodes_UnrolledListNode_2_Enumerator__ctor_Collectathon_Nodes_UnrolledListNode__0__1__
  commentId: M:Collectathon.Nodes.UnrolledListNode`2.Enumerator.#ctor(Collectathon.Nodes.UnrolledListNode{`0,`1})
  name.vb: Enumerator(UnrolledListNode(Of TElement, TSelf))
  fullName: Collectathon.Nodes.UnrolledListNode<TElement, TSelf>.Enumerator.Enumerator(Collectathon.Nodes.UnrolledListNode<TElement, TSelf>)
  fullName.vb: Collectathon.Nodes.UnrolledListNode(Of TElement, TSelf).Enumerator.Enumerator(Collectathon.Nodes.UnrolledListNode(Of TElement, TSelf))
  nameWithType: UnrolledListNode<TElement, TSelf>.Enumerator.Enumerator(UnrolledListNode<TElement, TSelf>)
  nameWithType.vb: UnrolledListNode(Of TElement, TSelf).Enumerator.Enumerator(UnrolledListNode(Of TElement, TSelf))
- uid: Collectathon.Nodes.UnrolledListNode`2.Enumerator.#ctor*
  name: Enumerator
  href: api/Collectathon.Nodes.UnrolledListNode-2.Enumerator.html#Collectathon_Nodes_UnrolledListNode_2_Enumerator__ctor_
  commentId: Overload:Collectathon.Nodes.UnrolledListNode`2.Enumerator.#ctor
  isSpec: "True"
  fullName: Collectathon.Nodes.UnrolledListNode<TElement, TSelf>.Enumerator.Enumerator
  fullName.vb: Collectathon.Nodes.UnrolledListNode(Of TElement, TSelf).Enumerator.Enumerator
  nameWithType: UnrolledListNode<TElement, TSelf>.Enumerator.Enumerator
  nameWithType.vb: UnrolledListNode(Of TElement, TSelf).Enumerator.Enumerator
- uid: Collectathon.Nodes.UnrolledListNode`2.Enumerator.Count
  name: Count
  href: api/Collectathon.Nodes.UnrolledListNode-2.Enumerator.html#Collectathon_Nodes_UnrolledListNode_2_Enumerator_Count
  commentId: P:Collectathon.Nodes.UnrolledListNode`2.Enumerator.Count
  fullName: Collectathon.Nodes.UnrolledListNode<TElement, TSelf>.Enumerator.Count
  fullName.vb: Collectathon.Nodes.UnrolledListNode(Of TElement, TSelf).Enumerator.Count
  nameWithType: UnrolledListNode<TElement, TSelf>.Enumerator.Count
  nameWithType.vb: UnrolledListNode(Of TElement, TSelf).Enumerator.Count
- uid: Collectathon.Nodes.UnrolledListNode`2.Enumerator.Count*
  name: Count
  href: api/Collectathon.Nodes.UnrolledListNode-2.Enumerator.html#Collectathon_Nodes_UnrolledListNode_2_Enumerator_Count_
  commentId: Overload:Collectathon.Nodes.UnrolledListNode`2.Enumerator.Count
  isSpec: "True"
  fullName: Collectathon.Nodes.UnrolledListNode<TElement, TSelf>.Enumerator.Count
  fullName.vb: Collectathon.Nodes.UnrolledListNode(Of TElement, TSelf).Enumerator.Count
  nameWithType: UnrolledListNode<TElement, TSelf>.Enumerator.Count
  nameWithType.vb: UnrolledListNode(Of TElement, TSelf).Enumerator.Count
- uid: Collectathon.Nodes.UnrolledListNode`2.Enumerator.Current
  name: Current
  href: api/Collectathon.Nodes.UnrolledListNode-2.Enumerator.html#Collectathon_Nodes_UnrolledListNode_2_Enumerator_Current
  commentId: P:Collectathon.Nodes.UnrolledListNode`2.Enumerator.Current
  fullName: Collectathon.Nodes.UnrolledListNode<TElement, TSelf>.Enumerator.Current
  fullName.vb: Collectathon.Nodes.UnrolledListNode(Of TElement, TSelf).Enumerator.Current
  nameWithType: UnrolledListNode<TElement, TSelf>.Enumerator.Current
  nameWithType.vb: UnrolledListNode(Of TElement, TSelf).Enumerator.Current
- uid: Collectathon.Nodes.UnrolledListNode`2.Enumerator.Current*
  name: Current
  href: api/Collectathon.Nodes.UnrolledListNode-2.Enumerator.html#Collectathon_Nodes_UnrolledListNode_2_Enumerator_Current_
  commentId: Overload:Collectathon.Nodes.UnrolledListNode`2.Enumerator.Current
  isSpec: "True"
  fullName: Collectathon.Nodes.UnrolledListNode<TElement, TSelf>.Enumerator.Current
  fullName.vb: Collectathon.Nodes.UnrolledListNode(Of TElement, TSelf).Enumerator.Current
  nameWithType: UnrolledListNode<TElement, TSelf>.Enumerator.Current
  nameWithType.vb: UnrolledListNode(Of TElement, TSelf).Enumerator.Current
- uid: Collectathon.Nodes.UnrolledListNode`2.Enumerator.Dispose
  name: Dispose()
  href: api/Collectathon.Nodes.UnrolledListNode-2.Enumerator.html#Collectathon_Nodes_UnrolledListNode_2_Enumerator_Dispose
  commentId: M:Collectathon.Nodes.UnrolledListNode`2.Enumerator.Dispose
  fullName: Collectathon.Nodes.UnrolledListNode<TElement, TSelf>.Enumerator.Dispose()
  fullName.vb: Collectathon.Nodes.UnrolledListNode(Of TElement, TSelf).Enumerator.Dispose()
  nameWithType: UnrolledListNode<TElement, TSelf>.Enumerator.Dispose()
  nameWithType.vb: UnrolledListNode(Of TElement, TSelf).Enumerator.Dispose()
- uid: Collectathon.Nodes.UnrolledListNode`2.Enumerator.Dispose*
  name: Dispose
  href: api/Collectathon.Nodes.UnrolledListNode-2.Enumerator.html#Collectathon_Nodes_UnrolledListNode_2_Enumerator_Dispose_
  commentId: Overload:Collectathon.Nodes.UnrolledListNode`2.Enumerator.Dispose
  isSpec: "True"
  fullName: Collectathon.Nodes.UnrolledListNode<TElement, TSelf>.Enumerator.Dispose
  fullName.vb: Collectathon.Nodes.UnrolledListNode(Of TElement, TSelf).Enumerator.Dispose
  nameWithType: UnrolledListNode<TElement, TSelf>.Enumerator.Dispose
  nameWithType.vb: UnrolledListNode(Of TElement, TSelf).Enumerator.Dispose
- uid: Collectathon.Nodes.UnrolledListNode`2.Enumerator.GetEnumerator
  name: GetEnumerator()
  href: api/Collectathon.Nodes.UnrolledListNode-2.Enumerator.html#Collectathon_Nodes_UnrolledListNode_2_Enumerator_GetEnumerator
  commentId: M:Collectathon.Nodes.UnrolledListNode`2.Enumerator.GetEnumerator
  fullName: Collectathon.Nodes.UnrolledListNode<TElement, TSelf>.Enumerator.GetEnumerator()
  fullName.vb: Collectathon.Nodes.UnrolledListNode(Of TElement, TSelf).Enumerator.GetEnumerator()
  nameWithType: UnrolledListNode<TElement, TSelf>.Enumerator.GetEnumerator()
  nameWithType.vb: UnrolledListNode(Of TElement, TSelf).Enumerator.GetEnumerator()
- uid: Collectathon.Nodes.UnrolledListNode`2.Enumerator.GetEnumerator*
  name: GetEnumerator
  href: api/Collectathon.Nodes.UnrolledListNode-2.Enumerator.html#Collectathon_Nodes_UnrolledListNode_2_Enumerator_GetEnumerator_
  commentId: Overload:Collectathon.Nodes.UnrolledListNode`2.Enumerator.GetEnumerator
  isSpec: "True"
  fullName: Collectathon.Nodes.UnrolledListNode<TElement, TSelf>.Enumerator.GetEnumerator
  fullName.vb: Collectathon.Nodes.UnrolledListNode(Of TElement, TSelf).Enumerator.GetEnumerator
  nameWithType: UnrolledListNode<TElement, TSelf>.Enumerator.GetEnumerator
  nameWithType.vb: UnrolledListNode(Of TElement, TSelf).Enumerator.GetEnumerator
- uid: Collectathon.Nodes.UnrolledListNode`2.Enumerator.MoveNext
  name: MoveNext()
  href: api/Collectathon.Nodes.UnrolledListNode-2.Enumerator.html#Collectathon_Nodes_UnrolledListNode_2_Enumerator_MoveNext
  commentId: M:Collectathon.Nodes.UnrolledListNode`2.Enumerator.MoveNext
  fullName: Collectathon.Nodes.UnrolledListNode<TElement, TSelf>.Enumerator.MoveNext()
  fullName.vb: Collectathon.Nodes.UnrolledListNode(Of TElement, TSelf).Enumerator.MoveNext()
  nameWithType: UnrolledListNode<TElement, TSelf>.Enumerator.MoveNext()
  nameWithType.vb: UnrolledListNode(Of TElement, TSelf).Enumerator.MoveNext()
- uid: Collectathon.Nodes.UnrolledListNode`2.Enumerator.MoveNext*
  name: MoveNext
  href: api/Collectathon.Nodes.UnrolledListNode-2.Enumerator.html#Collectathon_Nodes_UnrolledListNode_2_Enumerator_MoveNext_
  commentId: Overload:Collectathon.Nodes.UnrolledListNode`2.Enumerator.MoveNext
  isSpec: "True"
  fullName: Collectathon.Nodes.UnrolledListNode<TElement, TSelf>.Enumerator.MoveNext
  fullName.vb: Collectathon.Nodes.UnrolledListNode(Of TElement, TSelf).Enumerator.MoveNext
  nameWithType: UnrolledListNode<TElement, TSelf>.Enumerator.MoveNext
  nameWithType.vb: UnrolledListNode(Of TElement, TSelf).Enumerator.MoveNext
- uid: Collectathon.Nodes.UnrolledListNode`2.Enumerator.Reset
  name: Reset()
  href: api/Collectathon.Nodes.UnrolledListNode-2.Enumerator.html#Collectathon_Nodes_UnrolledListNode_2_Enumerator_Reset
  commentId: M:Collectathon.Nodes.UnrolledListNode`2.Enumerator.Reset
  fullName: Collectathon.Nodes.UnrolledListNode<TElement, TSelf>.Enumerator.Reset()
  fullName.vb: Collectathon.Nodes.UnrolledListNode(Of TElement, TSelf).Enumerator.Reset()
  nameWithType: UnrolledListNode<TElement, TSelf>.Enumerator.Reset()
  nameWithType.vb: UnrolledListNode(Of TElement, TSelf).Enumerator.Reset()
- uid: Collectathon.Nodes.UnrolledListNode`2.Enumerator.Reset*
  name: Reset
  href: api/Collectathon.Nodes.UnrolledListNode-2.Enumerator.html#Collectathon_Nodes_UnrolledListNode_2_Enumerator_Reset_
  commentId: Overload:Collectathon.Nodes.UnrolledListNode`2.Enumerator.Reset
  isSpec: "True"
  fullName: Collectathon.Nodes.UnrolledListNode<TElement, TSelf>.Enumerator.Reset
  fullName.vb: Collectathon.Nodes.UnrolledListNode(Of TElement, TSelf).Enumerator.Reset
  nameWithType: UnrolledListNode<TElement, TSelf>.Enumerator.Reset
  nameWithType.vb: UnrolledListNode(Of TElement, TSelf).Enumerator.Reset
- uid: Collectathon.Nodes.UnrolledListNode`2.Enumerator.ToString
  name: ToString()
  href: api/Collectathon.Nodes.UnrolledListNode-2.Enumerator.html#Collectathon_Nodes_UnrolledListNode_2_Enumerator_ToString
  commentId: M:Collectathon.Nodes.UnrolledListNode`2.Enumerator.ToString
  fullName: Collectathon.Nodes.UnrolledListNode<TElement, TSelf>.Enumerator.ToString()
  fullName.vb: Collectathon.Nodes.UnrolledListNode(Of TElement, TSelf).Enumerator.ToString()
  nameWithType: UnrolledListNode<TElement, TSelf>.Enumerator.ToString()
  nameWithType.vb: UnrolledListNode(Of TElement, TSelf).Enumerator.ToString()
- uid: Collectathon.Nodes.UnrolledListNode`2.Enumerator.ToString(nint)
  name: ToString(nint)
  href: api/Collectathon.Nodes.UnrolledListNode-2.Enumerator.html#Collectathon_Nodes_UnrolledListNode_2_Enumerator_ToString_nint_
  commentId: M:Collectathon.Nodes.UnrolledListNode`2.Enumerator.ToString(nint)
  fullName: Collectathon.Nodes.UnrolledListNode<TElement, TSelf>.Enumerator.ToString(nint)
  fullName.vb: Collectathon.Nodes.UnrolledListNode(Of TElement, TSelf).Enumerator.ToString(nint)
  nameWithType: UnrolledListNode<TElement, TSelf>.Enumerator.ToString(nint)
  nameWithType.vb: UnrolledListNode(Of TElement, TSelf).Enumerator.ToString(nint)
- uid: Collectathon.Nodes.UnrolledListNode`2.Enumerator.ToString*
  name: ToString
  href: api/Collectathon.Nodes.UnrolledListNode-2.Enumerator.html#Collectathon_Nodes_UnrolledListNode_2_Enumerator_ToString_
  commentId: Overload:Collectathon.Nodes.UnrolledListNode`2.Enumerator.ToString
  isSpec: "True"
  fullName: Collectathon.Nodes.UnrolledListNode<TElement, TSelf>.Enumerator.ToString
  fullName.vb: Collectathon.Nodes.UnrolledListNode(Of TElement, TSelf).Enumerator.ToString
  nameWithType: UnrolledListNode<TElement, TSelf>.Enumerator.ToString
  nameWithType.vb: UnrolledListNode(Of TElement, TSelf).Enumerator.ToString
- uid: Collectathon.Nodes.UnrolledListNode`2.GetEnumerator
  name: GetEnumerator()
  href: api/Collectathon.Nodes.UnrolledListNode-2.html#Collectathon_Nodes_UnrolledListNode_2_GetEnumerator
  commentId: M:Collectathon.Nodes.UnrolledListNode`2.GetEnumerator
  fullName: Collectathon.Nodes.UnrolledListNode<TElement, TSelf>.GetEnumerator()
  fullName.vb: Collectathon.Nodes.UnrolledListNode(Of TElement, TSelf).GetEnumerator()
  nameWithType: UnrolledListNode<TElement, TSelf>.GetEnumerator()
  nameWithType.vb: UnrolledListNode(Of TElement, TSelf).GetEnumerator()
- uid: Collectathon.Nodes.UnrolledListNode`2.GetEnumerator*
  name: GetEnumerator
  href: api/Collectathon.Nodes.UnrolledListNode-2.html#Collectathon_Nodes_UnrolledListNode_2_GetEnumerator_
  commentId: Overload:Collectathon.Nodes.UnrolledListNode`2.GetEnumerator
  isSpec: "True"
  fullName: Collectathon.Nodes.UnrolledListNode<TElement, TSelf>.GetEnumerator
  fullName.vb: Collectathon.Nodes.UnrolledListNode(Of TElement, TSelf).GetEnumerator
  nameWithType: UnrolledListNode<TElement, TSelf>.GetEnumerator
  nameWithType.vb: UnrolledListNode(Of TElement, TSelf).GetEnumerator
- uid: Collectathon.Nodes.UnrolledListNode`2.Insert(nint,`0)
  name: Insert(nint, TElement)
  href: api/Collectathon.Nodes.UnrolledListNode-2.html#Collectathon_Nodes_UnrolledListNode_2_Insert_nint__0_
  commentId: M:Collectathon.Nodes.UnrolledListNode`2.Insert(nint,`0)
  fullName: Collectathon.Nodes.UnrolledListNode<TElement, TSelf>.Insert(nint, TElement)
  fullName.vb: Collectathon.Nodes.UnrolledListNode(Of TElement, TSelf).Insert(nint, TElement)
  nameWithType: UnrolledListNode<TElement, TSelf>.Insert(nint, TElement)
  nameWithType.vb: UnrolledListNode(Of TElement, TSelf).Insert(nint, TElement)
- uid: Collectathon.Nodes.UnrolledListNode`2.Insert(nint,ReadOnlyMemory{`0})
  name: Insert(nint, ReadOnlyMemory<TElement>)
  href: api/Collectathon.Nodes.UnrolledListNode-2.html#Collectathon_Nodes_UnrolledListNode_2_Insert_nint_ReadOnlyMemory__0__
  commentId: M:Collectathon.Nodes.UnrolledListNode`2.Insert(nint,ReadOnlyMemory{`0})
  name.vb: Insert(nint, ReadOnlyMemory(Of TElement))
  fullName: Collectathon.Nodes.UnrolledListNode<TElement, TSelf>.Insert(nint, ReadOnlyMemory<TElement>)
  fullName.vb: Collectathon.Nodes.UnrolledListNode(Of TElement, TSelf).Insert(nint, ReadOnlyMemory(Of TElement))
  nameWithType: UnrolledListNode<TElement, TSelf>.Insert(nint, ReadOnlyMemory<TElement>)
  nameWithType.vb: UnrolledListNode(Of TElement, TSelf).Insert(nint, ReadOnlyMemory(Of TElement))
- uid: Collectathon.Nodes.UnrolledListNode`2.Insert*
  name: Insert
  href: api/Collectathon.Nodes.UnrolledListNode-2.html#Collectathon_Nodes_UnrolledListNode_2_Insert_
  commentId: Overload:Collectathon.Nodes.UnrolledListNode`2.Insert
  isSpec: "True"
  fullName: Collectathon.Nodes.UnrolledListNode<TElement, TSelf>.Insert
  fullName.vb: Collectathon.Nodes.UnrolledListNode(Of TElement, TSelf).Insert
  nameWithType: UnrolledListNode<TElement, TSelf>.Insert
  nameWithType.vb: UnrolledListNode(Of TElement, TSelf).Insert
- uid: Collectathon.Nodes.UnrolledListNode`2.Item(nint)
  name: Item[nint]
  href: api/Collectathon.Nodes.UnrolledListNode-2.html#Collectathon_Nodes_UnrolledListNode_2_Item_nint_
  commentId: P:Collectathon.Nodes.UnrolledListNode`2.Item(nint)
  name.vb: Item(nint)
  fullName: Collectathon.Nodes.UnrolledListNode<TElement, TSelf>.Item[nint]
  fullName.vb: Collectathon.Nodes.UnrolledListNode(Of TElement, TSelf).Item(nint)
  nameWithType: UnrolledListNode<TElement, TSelf>.Item[nint]
  nameWithType.vb: UnrolledListNode(Of TElement, TSelf).Item(nint)
- uid: Collectathon.Nodes.UnrolledListNode`2.Item*
  name: Item
  href: api/Collectathon.Nodes.UnrolledListNode-2.html#Collectathon_Nodes_UnrolledListNode_2_Item_
  commentId: Overload:Collectathon.Nodes.UnrolledListNode`2.Item
  isSpec: "True"
  fullName: Collectathon.Nodes.UnrolledListNode<TElement, TSelf>.Item
  fullName.vb: Collectathon.Nodes.UnrolledListNode(Of TElement, TSelf).Item
  nameWithType: UnrolledListNode<TElement, TSelf>.Item
  nameWithType.vb: UnrolledListNode(Of TElement, TSelf).Item
- uid: Collectathon.Nodes.UnrolledListNode`2.Postpend(ReadOnlyMemory{`0})
  name: Postpend(ReadOnlyMemory<TElement>)
  href: api/Collectathon.Nodes.UnrolledListNode-2.html#Collectathon_Nodes_UnrolledListNode_2_Postpend_ReadOnlyMemory__0__
  commentId: M:Collectathon.Nodes.UnrolledListNode`2.Postpend(ReadOnlyMemory{`0})
  name.vb: Postpend(ReadOnlyMemory(Of TElement))
  fullName: Collectathon.Nodes.UnrolledListNode<TElement, TSelf>.Postpend(ReadOnlyMemory<TElement>)
  fullName.vb: Collectathon.Nodes.UnrolledListNode(Of TElement, TSelf).Postpend(ReadOnlyMemory(Of TElement))
  nameWithType: UnrolledListNode<TElement, TSelf>.Postpend(ReadOnlyMemory<TElement>)
  nameWithType.vb: UnrolledListNode(Of TElement, TSelf).Postpend(ReadOnlyMemory(Of TElement))
- uid: Collectathon.Nodes.UnrolledListNode`2.Postpend*
  name: Postpend
  href: api/Collectathon.Nodes.UnrolledListNode-2.html#Collectathon_Nodes_UnrolledListNode_2_Postpend_
  commentId: Overload:Collectathon.Nodes.UnrolledListNode`2.Postpend
  isSpec: "True"
  fullName: Collectathon.Nodes.UnrolledListNode<TElement, TSelf>.Postpend
  fullName.vb: Collectathon.Nodes.UnrolledListNode(Of TElement, TSelf).Postpend
  nameWithType: UnrolledListNode<TElement, TSelf>.Postpend
  nameWithType.vb: UnrolledListNode(Of TElement, TSelf).Postpend
- uid: Collectathon.Nodes.UnrolledListNode`2.Prepend(ReadOnlyMemory{`0})
  name: Prepend(ReadOnlyMemory<TElement>)
  href: api/Collectathon.Nodes.UnrolledListNode-2.html#Collectathon_Nodes_UnrolledListNode_2_Prepend_ReadOnlyMemory__0__
  commentId: M:Collectathon.Nodes.UnrolledListNode`2.Prepend(ReadOnlyMemory{`0})
  name.vb: Prepend(ReadOnlyMemory(Of TElement))
  fullName: Collectathon.Nodes.UnrolledListNode<TElement, TSelf>.Prepend(ReadOnlyMemory<TElement>)
  fullName.vb: Collectathon.Nodes.UnrolledListNode(Of TElement, TSelf).Prepend(ReadOnlyMemory(Of TElement))
  nameWithType: UnrolledListNode<TElement, TSelf>.Prepend(ReadOnlyMemory<TElement>)
  nameWithType.vb: UnrolledListNode(Of TElement, TSelf).Prepend(ReadOnlyMemory(Of TElement))
- uid: Collectathon.Nodes.UnrolledListNode`2.Prepend*
  name: Prepend
  href: api/Collectathon.Nodes.UnrolledListNode-2.html#Collectathon_Nodes_UnrolledListNode_2_Prepend_
  commentId: Overload:Collectathon.Nodes.UnrolledListNode`2.Prepend
  isSpec: "True"
  fullName: Collectathon.Nodes.UnrolledListNode<TElement, TSelf>.Prepend
  fullName.vb: Collectathon.Nodes.UnrolledListNode(Of TElement, TSelf).Prepend
  nameWithType: UnrolledListNode<TElement, TSelf>.Prepend
  nameWithType.vb: UnrolledListNode(Of TElement, TSelf).Prepend
- uid: Collectathon.Nodes.UnrolledListNode`2.Remove(`0)
  name: Remove(TElement)
  href: api/Collectathon.Nodes.UnrolledListNode-2.html#Collectathon_Nodes_UnrolledListNode_2_Remove__0_
  commentId: M:Collectathon.Nodes.UnrolledListNode`2.Remove(`0)
  fullName: Collectathon.Nodes.UnrolledListNode<TElement, TSelf>.Remove(TElement)
  fullName.vb: Collectathon.Nodes.UnrolledListNode(Of TElement, TSelf).Remove(TElement)
  nameWithType: UnrolledListNode<TElement, TSelf>.Remove(TElement)
  nameWithType.vb: UnrolledListNode(Of TElement, TSelf).Remove(TElement)
- uid: Collectathon.Nodes.UnrolledListNode`2.Remove*
  name: Remove
  href: api/Collectathon.Nodes.UnrolledListNode-2.html#Collectathon_Nodes_UnrolledListNode_2_Remove_
  commentId: Overload:Collectathon.Nodes.UnrolledListNode`2.Remove
  isSpec: "True"
  fullName: Collectathon.Nodes.UnrolledListNode<TElement, TSelf>.Remove
  fullName.vb: Collectathon.Nodes.UnrolledListNode(Of TElement, TSelf).Remove
  nameWithType: UnrolledListNode<TElement, TSelf>.Remove
  nameWithType.vb: UnrolledListNode(Of TElement, TSelf).Remove
- uid: Collectathon.Nodes.UnrolledListNode`2.Replace(`0,`0)
  name: Replace(TElement, TElement)
  href: api/Collectathon.Nodes.UnrolledListNode-2.html#Collectathon_Nodes_UnrolledListNode_2_Replace__0__0_
  commentId: M:Collectathon.Nodes.UnrolledListNode`2.Replace(`0,`0)
  fullName: Collectathon.Nodes.UnrolledListNode<TElement, TSelf>.Replace(TElement, TElement)
  fullName.vb: Collectathon.Nodes.UnrolledListNode(Of TElement, TSelf).Replace(TElement, TElement)
  nameWithType: UnrolledListNode<TElement, TSelf>.Replace(TElement, TElement)
  nameWithType.vb: UnrolledListNode(Of TElement, TSelf).Replace(TElement, TElement)
- uid: Collectathon.Nodes.UnrolledListNode`2.Replace*
  name: Replace
  href: api/Collectathon.Nodes.UnrolledListNode-2.html#Collectathon_Nodes_UnrolledListNode_2_Replace_
  commentId: Overload:Collectathon.Nodes.UnrolledListNode`2.Replace
  isSpec: "True"
  fullName: Collectathon.Nodes.UnrolledListNode<TElement, TSelf>.Replace
  fullName.vb: Collectathon.Nodes.UnrolledListNode(Of TElement, TSelf).Replace
  nameWithType: UnrolledListNode<TElement, TSelf>.Replace
  nameWithType.vb: UnrolledListNode(Of TElement, TSelf).Replace
- uid: Collectathon.Nodes.UnrolledListNode`2.ToString
  name: ToString()
  href: api/Collectathon.Nodes.UnrolledListNode-2.html#Collectathon_Nodes_UnrolledListNode_2_ToString
  commentId: M:Collectathon.Nodes.UnrolledListNode`2.ToString
  fullName: Collectathon.Nodes.UnrolledListNode<TElement, TSelf>.ToString()
  fullName.vb: Collectathon.Nodes.UnrolledListNode(Of TElement, TSelf).ToString()
  nameWithType: UnrolledListNode<TElement, TSelf>.ToString()
  nameWithType.vb: UnrolledListNode(Of TElement, TSelf).ToString()
- uid: Collectathon.Nodes.UnrolledListNode`2.ToString(nint)
  name: ToString(nint)
  href: api/Collectathon.Nodes.UnrolledListNode-2.html#Collectathon_Nodes_UnrolledListNode_2_ToString_nint_
  commentId: M:Collectathon.Nodes.UnrolledListNode`2.ToString(nint)
  fullName: Collectathon.Nodes.UnrolledListNode<TElement, TSelf>.ToString(nint)
  fullName.vb: Collectathon.Nodes.UnrolledListNode(Of TElement, TSelf).ToString(nint)
  nameWithType: UnrolledListNode<TElement, TSelf>.ToString(nint)
  nameWithType.vb: UnrolledListNode(Of TElement, TSelf).ToString(nint)
- uid: Collectathon.Nodes.UnrolledListNode`2.ToString*
  name: ToString
  href: api/Collectathon.Nodes.UnrolledListNode-2.html#Collectathon_Nodes_UnrolledListNode_2_ToString_
  commentId: Overload:Collectathon.Nodes.UnrolledListNode`2.ToString
  isSpec: "True"
  fullName: Collectathon.Nodes.UnrolledListNode<TElement, TSelf>.ToString
  fullName.vb: Collectathon.Nodes.UnrolledListNode(Of TElement, TSelf).ToString
  nameWithType: UnrolledListNode<TElement, TSelf>.ToString
  nameWithType.vb: UnrolledListNode(Of TElement, TSelf).ToString
- uid: Collectathon.Queues
  name: Collectathon.Queues
  href: api/Collectathon.Queues.html
  commentId: N:Collectathon.Queues
  fullName: Collectathon.Queues
  nameWithType: Collectathon.Queues
- uid: Collectathon.Queues.Queue`1
  name: Queue<TElement>
  href: api/Collectathon.Queues.Queue-1.html
  commentId: T:Collectathon.Queues.Queue`1
  name.vb: Queue(Of TElement)
  fullName: Collectathon.Queues.Queue<TElement>
  fullName.vb: Collectathon.Queues.Queue(Of TElement)
  nameWithType: Queue<TElement>
  nameWithType.vb: Queue(Of TElement)
- uid: Collectathon.Queues.Queue`1.#ctor
  name: Queue()
  href: api/Collectathon.Queues.Queue-1.html#Collectathon_Queues_Queue_1__ctor
  commentId: M:Collectathon.Queues.Queue`1.#ctor
  fullName: Collectathon.Queues.Queue<TElement>.Queue()
  fullName.vb: Collectathon.Queues.Queue(Of TElement).Queue()
  nameWithType: Queue<TElement>.Queue()
  nameWithType.vb: Queue(Of TElement).Queue()
- uid: Collectathon.Queues.Queue`1.#ctor(`0[])
  name: Queue(TElement[])
  href: api/Collectathon.Queues.Queue-1.html#Collectathon_Queues_Queue_1__ctor__0___
  commentId: M:Collectathon.Queues.Queue`1.#ctor(`0[])
  name.vb: Queue(TElement())
  fullName: Collectathon.Queues.Queue<TElement>.Queue(TElement[])
  fullName.vb: Collectathon.Queues.Queue(Of TElement).Queue(TElement())
  nameWithType: Queue<TElement>.Queue(TElement[])
  nameWithType.vb: Queue(Of TElement).Queue(TElement())
- uid: Collectathon.Queues.Queue`1.#ctor*
  name: Queue
  href: api/Collectathon.Queues.Queue-1.html#Collectathon_Queues_Queue_1__ctor_
  commentId: Overload:Collectathon.Queues.Queue`1.#ctor
  isSpec: "True"
  fullName: Collectathon.Queues.Queue<TElement>.Queue
  fullName.vb: Collectathon.Queues.Queue(Of TElement).Queue
  nameWithType: Queue<TElement>.Queue
  nameWithType.vb: Queue(Of TElement).Queue
- uid: Collectathon.Queues.Queue`1.Add(`0)
  name: Add(TElement)
  href: api/Collectathon.Queues.Queue-1.html#Collectathon_Queues_Queue_1_Add__0_
  commentId: M:Collectathon.Queues.Queue`1.Add(`0)
  fullName: Collectathon.Queues.Queue<TElement>.Add(TElement)
  fullName.vb: Collectathon.Queues.Queue(Of TElement).Add(TElement)
  nameWithType: Queue<TElement>.Add(TElement)
  nameWithType.vb: Queue(Of TElement).Add(TElement)
- uid: Collectathon.Queues.Queue`1.Add*
  name: Add
  href: api/Collectathon.Queues.Queue-1.html#Collectathon_Queues_Queue_1_Add_
  commentId: Overload:Collectathon.Queues.Queue`1.Add
  isSpec: "True"
  fullName: Collectathon.Queues.Queue<TElement>.Add
  fullName.vb: Collectathon.Queues.Queue(Of TElement).Add
  nameWithType: Queue<TElement>.Add
  nameWithType.vb: Queue(Of TElement).Add
- uid: Collectathon.Queues.Queue`1.Clear
  name: Clear()
  href: api/Collectathon.Queues.Queue-1.html#Collectathon_Queues_Queue_1_Clear
  commentId: M:Collectathon.Queues.Queue`1.Clear
  fullName: Collectathon.Queues.Queue<TElement>.Clear()
  fullName.vb: Collectathon.Queues.Queue(Of TElement).Clear()
  nameWithType: Queue<TElement>.Clear()
  nameWithType.vb: Queue(Of TElement).Clear()
- uid: Collectathon.Queues.Queue`1.Clear*
  name: Clear
  href: api/Collectathon.Queues.Queue-1.html#Collectathon_Queues_Queue_1_Clear_
  commentId: Overload:Collectathon.Queues.Queue`1.Clear
  isSpec: "True"
  fullName: Collectathon.Queues.Queue<TElement>.Clear
  fullName.vb: Collectathon.Queues.Queue(Of TElement).Clear
  nameWithType: Queue<TElement>.Clear
  nameWithType.vb: Queue(Of TElement).Clear
- uid: Collectathon.Queues.Queue`1.Contains(`0)
  name: Contains(TElement)
  href: api/Collectathon.Queues.Queue-1.html#Collectathon_Queues_Queue_1_Contains__0_
  commentId: M:Collectathon.Queues.Queue`1.Contains(`0)
  fullName: Collectathon.Queues.Queue<TElement>.Contains(TElement)
  fullName.vb: Collectathon.Queues.Queue(Of TElement).Contains(TElement)
  nameWithType: Queue<TElement>.Contains(TElement)
  nameWithType.vb: Queue(Of TElement).Contains(TElement)
- uid: Collectathon.Queues.Queue`1.Contains*
  name: Contains
  href: api/Collectathon.Queues.Queue-1.html#Collectathon_Queues_Queue_1_Contains_
  commentId: Overload:Collectathon.Queues.Queue`1.Contains
  isSpec: "True"
  fullName: Collectathon.Queues.Queue<TElement>.Contains
  fullName.vb: Collectathon.Queues.Queue(Of TElement).Contains
  nameWithType: Queue<TElement>.Contains
  nameWithType.vb: Queue(Of TElement).Contains
- uid: Collectathon.Queues.Queue`1.Count
  name: Count
  href: api/Collectathon.Queues.Queue-1.html#Collectathon_Queues_Queue_1_Count
  commentId: P:Collectathon.Queues.Queue`1.Count
  fullName: Collectathon.Queues.Queue<TElement>.Count
  fullName.vb: Collectathon.Queues.Queue(Of TElement).Count
  nameWithType: Queue<TElement>.Count
  nameWithType.vb: Queue(Of TElement).Count
- uid: Collectathon.Queues.Queue`1.Count*
  name: Count
  href: api/Collectathon.Queues.Queue-1.html#Collectathon_Queues_Queue_1_Count_
  commentId: Overload:Collectathon.Queues.Queue`1.Count
  isSpec: "True"
  fullName: Collectathon.Queues.Queue<TElement>.Count
  fullName.vb: Collectathon.Queues.Queue(Of TElement).Count
  nameWithType: Queue<TElement>.Count
  nameWithType.vb: Queue(Of TElement).Count
- uid: Collectathon.Queues.Queue`1.Dequeue
  name: Dequeue()
  href: api/Collectathon.Queues.Queue-1.html#Collectathon_Queues_Queue_1_Dequeue
  commentId: M:Collectathon.Queues.Queue`1.Dequeue
  fullName: Collectathon.Queues.Queue<TElement>.Dequeue()
  fullName.vb: Collectathon.Queues.Queue(Of TElement).Dequeue()
  nameWithType: Queue<TElement>.Dequeue()
  nameWithType.vb: Queue(Of TElement).Dequeue()
- uid: Collectathon.Queues.Queue`1.Dequeue*
  name: Dequeue
  href: api/Collectathon.Queues.Queue-1.html#Collectathon_Queues_Queue_1_Dequeue_
  commentId: Overload:Collectathon.Queues.Queue`1.Dequeue
  isSpec: "True"
  fullName: Collectathon.Queues.Queue<TElement>.Dequeue
  fullName.vb: Collectathon.Queues.Queue(Of TElement).Dequeue
  nameWithType: Queue<TElement>.Dequeue
  nameWithType.vb: Queue(Of TElement).Dequeue
- uid: Collectathon.Queues.Queue`1.Enqueue(`0)
  name: Enqueue(TElement)
  href: api/Collectathon.Queues.Queue-1.html#Collectathon_Queues_Queue_1_Enqueue__0_
  commentId: M:Collectathon.Queues.Queue`1.Enqueue(`0)
  fullName: Collectathon.Queues.Queue<TElement>.Enqueue(TElement)
  fullName.vb: Collectathon.Queues.Queue(Of TElement).Enqueue(TElement)
  nameWithType: Queue<TElement>.Enqueue(TElement)
  nameWithType.vb: Queue(Of TElement).Enqueue(TElement)
- uid: Collectathon.Queues.Queue`1.Enqueue*
  name: Enqueue
  href: api/Collectathon.Queues.Queue-1.html#Collectathon_Queues_Queue_1_Enqueue_
  commentId: Overload:Collectathon.Queues.Queue`1.Enqueue
  isSpec: "True"
  fullName: Collectathon.Queues.Queue<TElement>.Enqueue
  fullName.vb: Collectathon.Queues.Queue(Of TElement).Enqueue
  nameWithType: Queue<TElement>.Enqueue
  nameWithType.vb: Queue(Of TElement).Enqueue
- uid: Collectathon.Queues.Queue`1.Enumerator
  name: Queue<TElement>.Enumerator
  href: api/Collectathon.Queues.Queue-1.Enumerator.html
  commentId: T:Collectathon.Queues.Queue`1.Enumerator
  name.vb: Queue(Of TElement).Enumerator
  fullName: Collectathon.Queues.Queue<TElement>.Enumerator
  fullName.vb: Collectathon.Queues.Queue(Of TElement).Enumerator
  nameWithType: Queue<TElement>.Enumerator
  nameWithType.vb: Queue(Of TElement).Enumerator
- uid: Collectathon.Queues.Queue`1.Enumerator.#ctor(Collectathon.Queues.Queue{`0})
  name: Enumerator(Queue<TElement>)
  href: api/Collectathon.Queues.Queue-1.Enumerator.html#Collectathon_Queues_Queue_1_Enumerator__ctor_Collectathon_Queues_Queue__0__
  commentId: M:Collectathon.Queues.Queue`1.Enumerator.#ctor(Collectathon.Queues.Queue{`0})
  name.vb: Enumerator(Queue(Of TElement))
  fullName: Collectathon.Queues.Queue<TElement>.Enumerator.Enumerator(Collectathon.Queues.Queue<TElement>)
  fullName.vb: Collectathon.Queues.Queue(Of TElement).Enumerator.Enumerator(Collectathon.Queues.Queue(Of TElement))
  nameWithType: Queue<TElement>.Enumerator.Enumerator(Queue<TElement>)
  nameWithType.vb: Queue(Of TElement).Enumerator.Enumerator(Queue(Of TElement))
- uid: Collectathon.Queues.Queue`1.Enumerator.#ctor*
  name: Enumerator
  href: api/Collectathon.Queues.Queue-1.Enumerator.html#Collectathon_Queues_Queue_1_Enumerator__ctor_
  commentId: Overload:Collectathon.Queues.Queue`1.Enumerator.#ctor
  isSpec: "True"
  fullName: Collectathon.Queues.Queue<TElement>.Enumerator.Enumerator
  fullName.vb: Collectathon.Queues.Queue(Of TElement).Enumerator.Enumerator
  nameWithType: Queue<TElement>.Enumerator.Enumerator
  nameWithType.vb: Queue(Of TElement).Enumerator.Enumerator
- uid: Collectathon.Queues.Queue`1.Enumerator.Count
  name: Count
  href: api/Collectathon.Queues.Queue-1.Enumerator.html#Collectathon_Queues_Queue_1_Enumerator_Count
  commentId: P:Collectathon.Queues.Queue`1.Enumerator.Count
  fullName: Collectathon.Queues.Queue<TElement>.Enumerator.Count
  fullName.vb: Collectathon.Queues.Queue(Of TElement).Enumerator.Count
  nameWithType: Queue<TElement>.Enumerator.Count
  nameWithType.vb: Queue(Of TElement).Enumerator.Count
- uid: Collectathon.Queues.Queue`1.Enumerator.Count*
  name: Count
  href: api/Collectathon.Queues.Queue-1.Enumerator.html#Collectathon_Queues_Queue_1_Enumerator_Count_
  commentId: Overload:Collectathon.Queues.Queue`1.Enumerator.Count
  isSpec: "True"
  fullName: Collectathon.Queues.Queue<TElement>.Enumerator.Count
  fullName.vb: Collectathon.Queues.Queue(Of TElement).Enumerator.Count
  nameWithType: Queue<TElement>.Enumerator.Count
  nameWithType.vb: Queue(Of TElement).Enumerator.Count
- uid: Collectathon.Queues.Queue`1.Enumerator.Current
  name: Current
  href: api/Collectathon.Queues.Queue-1.Enumerator.html#Collectathon_Queues_Queue_1_Enumerator_Current
  commentId: P:Collectathon.Queues.Queue`1.Enumerator.Current
  fullName: Collectathon.Queues.Queue<TElement>.Enumerator.Current
  fullName.vb: Collectathon.Queues.Queue(Of TElement).Enumerator.Current
  nameWithType: Queue<TElement>.Enumerator.Current
  nameWithType.vb: Queue(Of TElement).Enumerator.Current
- uid: Collectathon.Queues.Queue`1.Enumerator.Current*
  name: Current
  href: api/Collectathon.Queues.Queue-1.Enumerator.html#Collectathon_Queues_Queue_1_Enumerator_Current_
  commentId: Overload:Collectathon.Queues.Queue`1.Enumerator.Current
  isSpec: "True"
  fullName: Collectathon.Queues.Queue<TElement>.Enumerator.Current
  fullName.vb: Collectathon.Queues.Queue(Of TElement).Enumerator.Current
  nameWithType: Queue<TElement>.Enumerator.Current
  nameWithType.vb: Queue(Of TElement).Enumerator.Current
- uid: Collectathon.Queues.Queue`1.Enumerator.Dispose
  name: Dispose()
  href: api/Collectathon.Queues.Queue-1.Enumerator.html#Collectathon_Queues_Queue_1_Enumerator_Dispose
  commentId: M:Collectathon.Queues.Queue`1.Enumerator.Dispose
  fullName: Collectathon.Queues.Queue<TElement>.Enumerator.Dispose()
  fullName.vb: Collectathon.Queues.Queue(Of TElement).Enumerator.Dispose()
  nameWithType: Queue<TElement>.Enumerator.Dispose()
  nameWithType.vb: Queue(Of TElement).Enumerator.Dispose()
- uid: Collectathon.Queues.Queue`1.Enumerator.Dispose*
  name: Dispose
  href: api/Collectathon.Queues.Queue-1.Enumerator.html#Collectathon_Queues_Queue_1_Enumerator_Dispose_
  commentId: Overload:Collectathon.Queues.Queue`1.Enumerator.Dispose
  isSpec: "True"
  fullName: Collectathon.Queues.Queue<TElement>.Enumerator.Dispose
  fullName.vb: Collectathon.Queues.Queue(Of TElement).Enumerator.Dispose
  nameWithType: Queue<TElement>.Enumerator.Dispose
  nameWithType.vb: Queue(Of TElement).Enumerator.Dispose
- uid: Collectathon.Queues.Queue`1.Enumerator.GetEnumerator
  name: GetEnumerator()
  href: api/Collectathon.Queues.Queue-1.Enumerator.html#Collectathon_Queues_Queue_1_Enumerator_GetEnumerator
  commentId: M:Collectathon.Queues.Queue`1.Enumerator.GetEnumerator
  fullName: Collectathon.Queues.Queue<TElement>.Enumerator.GetEnumerator()
  fullName.vb: Collectathon.Queues.Queue(Of TElement).Enumerator.GetEnumerator()
  nameWithType: Queue<TElement>.Enumerator.GetEnumerator()
  nameWithType.vb: Queue(Of TElement).Enumerator.GetEnumerator()
- uid: Collectathon.Queues.Queue`1.Enumerator.GetEnumerator*
  name: GetEnumerator
  href: api/Collectathon.Queues.Queue-1.Enumerator.html#Collectathon_Queues_Queue_1_Enumerator_GetEnumerator_
  commentId: Overload:Collectathon.Queues.Queue`1.Enumerator.GetEnumerator
  isSpec: "True"
  fullName: Collectathon.Queues.Queue<TElement>.Enumerator.GetEnumerator
  fullName.vb: Collectathon.Queues.Queue(Of TElement).Enumerator.GetEnumerator
  nameWithType: Queue<TElement>.Enumerator.GetEnumerator
  nameWithType.vb: Queue(Of TElement).Enumerator.GetEnumerator
- uid: Collectathon.Queues.Queue`1.Enumerator.MoveNext
  name: MoveNext()
  href: api/Collectathon.Queues.Queue-1.Enumerator.html#Collectathon_Queues_Queue_1_Enumerator_MoveNext
  commentId: M:Collectathon.Queues.Queue`1.Enumerator.MoveNext
  fullName: Collectathon.Queues.Queue<TElement>.Enumerator.MoveNext()
  fullName.vb: Collectathon.Queues.Queue(Of TElement).Enumerator.MoveNext()
  nameWithType: Queue<TElement>.Enumerator.MoveNext()
  nameWithType.vb: Queue(Of TElement).Enumerator.MoveNext()
- uid: Collectathon.Queues.Queue`1.Enumerator.MoveNext*
  name: MoveNext
  href: api/Collectathon.Queues.Queue-1.Enumerator.html#Collectathon_Queues_Queue_1_Enumerator_MoveNext_
  commentId: Overload:Collectathon.Queues.Queue`1.Enumerator.MoveNext
  isSpec: "True"
  fullName: Collectathon.Queues.Queue<TElement>.Enumerator.MoveNext
  fullName.vb: Collectathon.Queues.Queue(Of TElement).Enumerator.MoveNext
  nameWithType: Queue<TElement>.Enumerator.MoveNext
  nameWithType.vb: Queue(Of TElement).Enumerator.MoveNext
- uid: Collectathon.Queues.Queue`1.Enumerator.Reset
  name: Reset()
  href: api/Collectathon.Queues.Queue-1.Enumerator.html#Collectathon_Queues_Queue_1_Enumerator_Reset
  commentId: M:Collectathon.Queues.Queue`1.Enumerator.Reset
  fullName: Collectathon.Queues.Queue<TElement>.Enumerator.Reset()
  fullName.vb: Collectathon.Queues.Queue(Of TElement).Enumerator.Reset()
  nameWithType: Queue<TElement>.Enumerator.Reset()
  nameWithType.vb: Queue(Of TElement).Enumerator.Reset()
- uid: Collectathon.Queues.Queue`1.Enumerator.Reset*
  name: Reset
  href: api/Collectathon.Queues.Queue-1.Enumerator.html#Collectathon_Queues_Queue_1_Enumerator_Reset_
  commentId: Overload:Collectathon.Queues.Queue`1.Enumerator.Reset
  isSpec: "True"
  fullName: Collectathon.Queues.Queue<TElement>.Enumerator.Reset
  fullName.vb: Collectathon.Queues.Queue(Of TElement).Enumerator.Reset
  nameWithType: Queue<TElement>.Enumerator.Reset
  nameWithType.vb: Queue(Of TElement).Enumerator.Reset
- uid: Collectathon.Queues.Queue`1.Enumerator.ToString
  name: ToString()
  href: api/Collectathon.Queues.Queue-1.Enumerator.html#Collectathon_Queues_Queue_1_Enumerator_ToString
  commentId: M:Collectathon.Queues.Queue`1.Enumerator.ToString
  fullName: Collectathon.Queues.Queue<TElement>.Enumerator.ToString()
  fullName.vb: Collectathon.Queues.Queue(Of TElement).Enumerator.ToString()
  nameWithType: Queue<TElement>.Enumerator.ToString()
  nameWithType.vb: Queue(Of TElement).Enumerator.ToString()
- uid: Collectathon.Queues.Queue`1.Enumerator.ToString(nint)
  name: ToString(nint)
  href: api/Collectathon.Queues.Queue-1.Enumerator.html#Collectathon_Queues_Queue_1_Enumerator_ToString_nint_
  commentId: M:Collectathon.Queues.Queue`1.Enumerator.ToString(nint)
  fullName: Collectathon.Queues.Queue<TElement>.Enumerator.ToString(nint)
  fullName.vb: Collectathon.Queues.Queue(Of TElement).Enumerator.ToString(nint)
  nameWithType: Queue<TElement>.Enumerator.ToString(nint)
  nameWithType.vb: Queue(Of TElement).Enumerator.ToString(nint)
- uid: Collectathon.Queues.Queue`1.Enumerator.ToString*
  name: ToString
  href: api/Collectathon.Queues.Queue-1.Enumerator.html#Collectathon_Queues_Queue_1_Enumerator_ToString_
  commentId: Overload:Collectathon.Queues.Queue`1.Enumerator.ToString
  isSpec: "True"
  fullName: Collectathon.Queues.Queue<TElement>.Enumerator.ToString
  fullName.vb: Collectathon.Queues.Queue(Of TElement).Enumerator.ToString
  nameWithType: Queue<TElement>.Enumerator.ToString
  nameWithType.vb: Queue(Of TElement).Enumerator.ToString
- uid: Collectathon.Queues.Queue`1.GetEnumerator
  name: GetEnumerator()
  href: api/Collectathon.Queues.Queue-1.html#Collectathon_Queues_Queue_1_GetEnumerator
  commentId: M:Collectathon.Queues.Queue`1.GetEnumerator
  fullName: Collectathon.Queues.Queue<TElement>.GetEnumerator()
  fullName.vb: Collectathon.Queues.Queue(Of TElement).GetEnumerator()
  nameWithType: Queue<TElement>.GetEnumerator()
  nameWithType.vb: Queue(Of TElement).GetEnumerator()
- uid: Collectathon.Queues.Queue`1.GetEnumerator*
  name: GetEnumerator
  href: api/Collectathon.Queues.Queue-1.html#Collectathon_Queues_Queue_1_GetEnumerator_
  commentId: Overload:Collectathon.Queues.Queue`1.GetEnumerator
  isSpec: "True"
  fullName: Collectathon.Queues.Queue<TElement>.GetEnumerator
  fullName.vb: Collectathon.Queues.Queue(Of TElement).GetEnumerator
  nameWithType: Queue<TElement>.GetEnumerator
  nameWithType.vb: Queue(Of TElement).GetEnumerator
- uid: Collectathon.Queues.Queue`1.Peek
  name: Peek()
  href: api/Collectathon.Queues.Queue-1.html#Collectathon_Queues_Queue_1_Peek
  commentId: M:Collectathon.Queues.Queue`1.Peek
  fullName: Collectathon.Queues.Queue<TElement>.Peek()
  fullName.vb: Collectathon.Queues.Queue(Of TElement).Peek()
  nameWithType: Queue<TElement>.Peek()
  nameWithType.vb: Queue(Of TElement).Peek()
- uid: Collectathon.Queues.Queue`1.Peek(`0@)
  name: Peek(out TElement)
  href: api/Collectathon.Queues.Queue-1.html#Collectathon_Queues_Queue_1_Peek__0__
  commentId: M:Collectathon.Queues.Queue`1.Peek(`0@)
  name.vb: Peek(ByRef TElement)
  fullName: Collectathon.Queues.Queue<TElement>.Peek(out TElement)
  fullName.vb: Collectathon.Queues.Queue(Of TElement).Peek(ByRef TElement)
  nameWithType: Queue<TElement>.Peek(out TElement)
  nameWithType.vb: Queue(Of TElement).Peek(ByRef TElement)
- uid: Collectathon.Queues.Queue`1.Peek*
  name: Peek
  href: api/Collectathon.Queues.Queue-1.html#Collectathon_Queues_Queue_1_Peek_
  commentId: Overload:Collectathon.Queues.Queue`1.Peek
  isSpec: "True"
  fullName: Collectathon.Queues.Queue<TElement>.Peek
  fullName.vb: Collectathon.Queues.Queue(Of TElement).Peek
  nameWithType: Queue<TElement>.Peek
  nameWithType.vb: Queue(Of TElement).Peek
- uid: Collectathon.Queues.Queue`1.Read(`0@)
  name: Read(out TElement)
  href: api/Collectathon.Queues.Queue-1.html#Collectathon_Queues_Queue_1_Read__0__
  commentId: M:Collectathon.Queues.Queue`1.Read(`0@)
  name.vb: Read(ByRef TElement)
  fullName: Collectathon.Queues.Queue<TElement>.Read(out TElement)
  fullName.vb: Collectathon.Queues.Queue(Of TElement).Read(ByRef TElement)
  nameWithType: Queue<TElement>.Read(out TElement)
  nameWithType.vb: Queue(Of TElement).Read(ByRef TElement)
- uid: Collectathon.Queues.Queue`1.Read*
  name: Read
  href: api/Collectathon.Queues.Queue-1.html#Collectathon_Queues_Queue_1_Read_
  commentId: Overload:Collectathon.Queues.Queue`1.Read
  isSpec: "True"
  fullName: Collectathon.Queues.Queue<TElement>.Read
  fullName.vb: Collectathon.Queues.Queue(Of TElement).Read
  nameWithType: Queue<TElement>.Read
  nameWithType.vb: Queue(Of TElement).Read
- uid: Collectathon.Queues.Queue`1.Readable
  name: Readable
  href: api/Collectathon.Queues.Queue-1.html#Collectathon_Queues_Queue_1_Readable
  commentId: P:Collectathon.Queues.Queue`1.Readable
  fullName: Collectathon.Queues.Queue<TElement>.Readable
  fullName.vb: Collectathon.Queues.Queue(Of TElement).Readable
  nameWithType: Queue<TElement>.Readable
  nameWithType.vb: Queue(Of TElement).Readable
- uid: Collectathon.Queues.Queue`1.Readable*
  name: Readable
  href: api/Collectathon.Queues.Queue-1.html#Collectathon_Queues_Queue_1_Readable_
  commentId: Overload:Collectathon.Queues.Queue`1.Readable
  isSpec: "True"
  fullName: Collectathon.Queues.Queue<TElement>.Readable
  fullName.vb: Collectathon.Queues.Queue(Of TElement).Readable
  nameWithType: Queue<TElement>.Readable
  nameWithType.vb: Queue(Of TElement).Readable
- uid: Collectathon.Queues.Queue`1.ToString
  name: ToString()
  href: api/Collectathon.Queues.Queue-1.html#Collectathon_Queues_Queue_1_ToString
  commentId: M:Collectathon.Queues.Queue`1.ToString
  fullName: Collectathon.Queues.Queue<TElement>.ToString()
  fullName.vb: Collectathon.Queues.Queue(Of TElement).ToString()
  nameWithType: Queue<TElement>.ToString()
  nameWithType.vb: Queue(Of TElement).ToString()
- uid: Collectathon.Queues.Queue`1.ToString(nint)
  name: ToString(nint)
  href: api/Collectathon.Queues.Queue-1.html#Collectathon_Queues_Queue_1_ToString_nint_
  commentId: M:Collectathon.Queues.Queue`1.ToString(nint)
  fullName: Collectathon.Queues.Queue<TElement>.ToString(nint)
  fullName.vb: Collectathon.Queues.Queue(Of TElement).ToString(nint)
  nameWithType: Queue<TElement>.ToString(nint)
  nameWithType.vb: Queue(Of TElement).ToString(nint)
- uid: Collectathon.Queues.Queue`1.ToString*
  name: ToString
  href: api/Collectathon.Queues.Queue-1.html#Collectathon_Queues_Queue_1_ToString_
  commentId: Overload:Collectathon.Queues.Queue`1.ToString
  isSpec: "True"
  fullName: Collectathon.Queues.Queue<TElement>.ToString
  fullName.vb: Collectathon.Queues.Queue(Of TElement).ToString
  nameWithType: Queue<TElement>.ToString
  nameWithType.vb: Queue(Of TElement).ToString
- uid: Collectathon.Queues.Queue`1.Writable
  name: Writable
  href: api/Collectathon.Queues.Queue-1.html#Collectathon_Queues_Queue_1_Writable
  commentId: P:Collectathon.Queues.Queue`1.Writable
  fullName: Collectathon.Queues.Queue<TElement>.Writable
  fullName.vb: Collectathon.Queues.Queue(Of TElement).Writable
  nameWithType: Queue<TElement>.Writable
  nameWithType.vb: Queue(Of TElement).Writable
- uid: Collectathon.Queues.Queue`1.Writable*
  name: Writable
  href: api/Collectathon.Queues.Queue-1.html#Collectathon_Queues_Queue_1_Writable_
  commentId: Overload:Collectathon.Queues.Queue`1.Writable
  isSpec: "True"
  fullName: Collectathon.Queues.Queue<TElement>.Writable
  fullName.vb: Collectathon.Queues.Queue(Of TElement).Writable
  nameWithType: Queue<TElement>.Writable
  nameWithType.vb: Queue(Of TElement).Writable
- uid: Collectathon.Queues.Queue`1.Write(`0)
  name: Write(TElement)
  href: api/Collectathon.Queues.Queue-1.html#Collectathon_Queues_Queue_1_Write__0_
  commentId: M:Collectathon.Queues.Queue`1.Write(`0)
  fullName: Collectathon.Queues.Queue<TElement>.Write(TElement)
  fullName.vb: Collectathon.Queues.Queue(Of TElement).Write(TElement)
  nameWithType: Queue<TElement>.Write(TElement)
  nameWithType.vb: Queue(Of TElement).Write(TElement)
- uid: Collectathon.Queues.Queue`1.Write*
  name: Write
  href: api/Collectathon.Queues.Queue-1.html#Collectathon_Queues_Queue_1_Write_
  commentId: Overload:Collectathon.Queues.Queue`1.Write
  isSpec: "True"
  fullName: Collectathon.Queues.Queue<TElement>.Write
  fullName.vb: Collectathon.Queues.Queue(Of TElement).Write
  nameWithType: Queue<TElement>.Write
  nameWithType.vb: Queue(Of TElement).Write
- uid: Collectathon.Queues.QueueExtensions
  name: QueueExtensions
  href: api/Collectathon.Queues.QueueExtensions.html
  commentId: T:Collectathon.Queues.QueueExtensions
  fullName: Collectathon.Queues.QueueExtensions
  nameWithType: QueueExtensions
- uid: Collectathon.Queues.QueueExtensions.Invoke(Collectathon.Queues.Queue{Action})
  name: Invoke(Queue<Action>)
  href: api/Collectathon.Queues.QueueExtensions.html#Collectathon_Queues_QueueExtensions_Invoke_Collectathon_Queues_Queue_Action__
  commentId: M:Collectathon.Queues.QueueExtensions.Invoke(Collectathon.Queues.Queue{Action})
  name.vb: Invoke(Queue(Of Action))
  fullName: Collectathon.Queues.QueueExtensions.Invoke(Collectathon.Queues.Queue<Action>)
  fullName.vb: Collectathon.Queues.QueueExtensions.Invoke(Collectathon.Queues.Queue(Of Action))
  nameWithType: QueueExtensions.Invoke(Queue<Action>)
  nameWithType.vb: QueueExtensions.Invoke(Queue(Of Action))
- uid: Collectathon.Queues.QueueExtensions.Invoke*
  name: Invoke
  href: api/Collectathon.Queues.QueueExtensions.html#Collectathon_Queues_QueueExtensions_Invoke_
  commentId: Overload:Collectathon.Queues.QueueExtensions.Invoke
  isSpec: "True"
  fullName: Collectathon.Queues.QueueExtensions.Invoke
  nameWithType: QueueExtensions.Invoke
- uid: Collectathon.Queues.QueueExtensions.Invoke``1(Collectathon.Queues.Queue{Func{``0}})
  name: Invoke<TResult>(Queue<Func<TResult>>)
  href: api/Collectathon.Queues.QueueExtensions.html#Collectathon_Queues_QueueExtensions_Invoke__1_Collectathon_Queues_Queue_Func___0___
  commentId: M:Collectathon.Queues.QueueExtensions.Invoke``1(Collectathon.Queues.Queue{Func{``0}})
  name.vb: Invoke(Of TResult)(Queue(Of Func(Of TResult)))
  fullName: Collectathon.Queues.QueueExtensions.Invoke<TResult>(Collectathon.Queues.Queue<Func<TResult>>)
  fullName.vb: Collectathon.Queues.QueueExtensions.Invoke(Of TResult)(Collectathon.Queues.Queue(Of Func(Of TResult)))
  nameWithType: QueueExtensions.Invoke<TResult>(Queue<Func<TResult>>)
  nameWithType.vb: QueueExtensions.Invoke(Of TResult)(Queue(Of Func(Of TResult)))
- uid: Collectathon.Queues.QueueExtensions.Requeue*
  name: Requeue
  href: api/Collectathon.Queues.QueueExtensions.html#Collectathon_Queues_QueueExtensions_Requeue_
  commentId: Overload:Collectathon.Queues.QueueExtensions.Requeue
  isSpec: "True"
  fullName: Collectathon.Queues.QueueExtensions.Requeue
  nameWithType: QueueExtensions.Requeue
- uid: Collectathon.Queues.QueueExtensions.Requeue``1(Collectathon.Queues.Queue{``0})
  name: Requeue<TElement>(Queue<TElement>)
  href: api/Collectathon.Queues.QueueExtensions.html#Collectathon_Queues_QueueExtensions_Requeue__1_Collectathon_Queues_Queue___0__
  commentId: M:Collectathon.Queues.QueueExtensions.Requeue``1(Collectathon.Queues.Queue{``0})
  name.vb: Requeue(Of TElement)(Queue(Of TElement))
  fullName: Collectathon.Queues.QueueExtensions.Requeue<TElement>(Collectathon.Queues.Queue<TElement>)
  fullName.vb: Collectathon.Queues.QueueExtensions.Requeue(Of TElement)(Collectathon.Queues.Queue(Of TElement))
  nameWithType: QueueExtensions.Requeue<TElement>(Queue<TElement>)
  nameWithType.vb: QueueExtensions.Requeue(Of TElement)(Queue(Of TElement))
- uid: Collectathon.Stacks
  name: Collectathon.Stacks
  href: api/Collectathon.Stacks.html
  commentId: N:Collectathon.Stacks
  fullName: Collectathon.Stacks
  nameWithType: Collectathon.Stacks
- uid: Collectathon.Stacks.Stack`1
  name: Stack<TElement>
  href: api/Collectathon.Stacks.Stack-1.html
  commentId: T:Collectathon.Stacks.Stack`1
  name.vb: Stack(Of TElement)
  fullName: Collectathon.Stacks.Stack<TElement>
  fullName.vb: Collectathon.Stacks.Stack(Of TElement)
  nameWithType: Stack<TElement>
  nameWithType.vb: Stack(Of TElement)
- uid: Collectathon.Stacks.Stack`1.#ctor
  name: Stack()
  href: api/Collectathon.Stacks.Stack-1.html#Collectathon_Stacks_Stack_1__ctor
  commentId: M:Collectathon.Stacks.Stack`1.#ctor
  fullName: Collectathon.Stacks.Stack<TElement>.Stack()
  fullName.vb: Collectathon.Stacks.Stack(Of TElement).Stack()
  nameWithType: Stack<TElement>.Stack()
  nameWithType.vb: Stack(Of TElement).Stack()
- uid: Collectathon.Stacks.Stack`1.#ctor(`0[])
  name: Stack(TElement[])
  href: api/Collectathon.Stacks.Stack-1.html#Collectathon_Stacks_Stack_1__ctor__0___
  commentId: M:Collectathon.Stacks.Stack`1.#ctor(`0[])
  name.vb: Stack(TElement())
  fullName: Collectathon.Stacks.Stack<TElement>.Stack(TElement[])
  fullName.vb: Collectathon.Stacks.Stack(Of TElement).Stack(TElement())
  nameWithType: Stack<TElement>.Stack(TElement[])
  nameWithType.vb: Stack(Of TElement).Stack(TElement())
- uid: Collectathon.Stacks.Stack`1.#ctor*
  name: Stack
  href: api/Collectathon.Stacks.Stack-1.html#Collectathon_Stacks_Stack_1__ctor_
  commentId: Overload:Collectathon.Stacks.Stack`1.#ctor
  isSpec: "True"
  fullName: Collectathon.Stacks.Stack<TElement>.Stack
  fullName.vb: Collectathon.Stacks.Stack(Of TElement).Stack
  nameWithType: Stack<TElement>.Stack
  nameWithType.vb: Stack(Of TElement).Stack
- uid: Collectathon.Stacks.Stack`1.Add(`0)
  name: Add(TElement)
  href: api/Collectathon.Stacks.Stack-1.html#Collectathon_Stacks_Stack_1_Add__0_
  commentId: M:Collectathon.Stacks.Stack`1.Add(`0)
  fullName: Collectathon.Stacks.Stack<TElement>.Add(TElement)
  fullName.vb: Collectathon.Stacks.Stack(Of TElement).Add(TElement)
  nameWithType: Stack<TElement>.Add(TElement)
  nameWithType.vb: Stack(Of TElement).Add(TElement)
- uid: Collectathon.Stacks.Stack`1.Add*
  name: Add
  href: api/Collectathon.Stacks.Stack-1.html#Collectathon_Stacks_Stack_1_Add_
  commentId: Overload:Collectathon.Stacks.Stack`1.Add
  isSpec: "True"
  fullName: Collectathon.Stacks.Stack<TElement>.Add
  fullName.vb: Collectathon.Stacks.Stack(Of TElement).Add
  nameWithType: Stack<TElement>.Add
  nameWithType.vb: Stack(Of TElement).Add
- uid: Collectathon.Stacks.Stack`1.Clear
  name: Clear()
  href: api/Collectathon.Stacks.Stack-1.html#Collectathon_Stacks_Stack_1_Clear
  commentId: M:Collectathon.Stacks.Stack`1.Clear
  fullName: Collectathon.Stacks.Stack<TElement>.Clear()
  fullName.vb: Collectathon.Stacks.Stack(Of TElement).Clear()
  nameWithType: Stack<TElement>.Clear()
  nameWithType.vb: Stack(Of TElement).Clear()
- uid: Collectathon.Stacks.Stack`1.Clear*
  name: Clear
  href: api/Collectathon.Stacks.Stack-1.html#Collectathon_Stacks_Stack_1_Clear_
  commentId: Overload:Collectathon.Stacks.Stack`1.Clear
  isSpec: "True"
  fullName: Collectathon.Stacks.Stack<TElement>.Clear
  fullName.vb: Collectathon.Stacks.Stack(Of TElement).Clear
  nameWithType: Stack<TElement>.Clear
  nameWithType.vb: Stack(Of TElement).Clear
- uid: Collectathon.Stacks.Stack`1.Contains(`0)
  name: Contains(TElement)
  href: api/Collectathon.Stacks.Stack-1.html#Collectathon_Stacks_Stack_1_Contains__0_
  commentId: M:Collectathon.Stacks.Stack`1.Contains(`0)
  fullName: Collectathon.Stacks.Stack<TElement>.Contains(TElement)
  fullName.vb: Collectathon.Stacks.Stack(Of TElement).Contains(TElement)
  nameWithType: Stack<TElement>.Contains(TElement)
  nameWithType.vb: Stack(Of TElement).Contains(TElement)
- uid: Collectathon.Stacks.Stack`1.Contains*
  name: Contains
  href: api/Collectathon.Stacks.Stack-1.html#Collectathon_Stacks_Stack_1_Contains_
  commentId: Overload:Collectathon.Stacks.Stack`1.Contains
  isSpec: "True"
  fullName: Collectathon.Stacks.Stack<TElement>.Contains
  fullName.vb: Collectathon.Stacks.Stack(Of TElement).Contains
  nameWithType: Stack<TElement>.Contains
  nameWithType.vb: Stack(Of TElement).Contains
- uid: Collectathon.Stacks.Stack`1.Count
  name: Count
  href: api/Collectathon.Stacks.Stack-1.html#Collectathon_Stacks_Stack_1_Count
  commentId: P:Collectathon.Stacks.Stack`1.Count
  fullName: Collectathon.Stacks.Stack<TElement>.Count
  fullName.vb: Collectathon.Stacks.Stack(Of TElement).Count
  nameWithType: Stack<TElement>.Count
  nameWithType.vb: Stack(Of TElement).Count
- uid: Collectathon.Stacks.Stack`1.Count*
  name: Count
  href: api/Collectathon.Stacks.Stack-1.html#Collectathon_Stacks_Stack_1_Count_
  commentId: Overload:Collectathon.Stacks.Stack`1.Count
  isSpec: "True"
  fullName: Collectathon.Stacks.Stack<TElement>.Count
  fullName.vb: Collectathon.Stacks.Stack(Of TElement).Count
  nameWithType: Stack<TElement>.Count
  nameWithType.vb: Stack(Of TElement).Count
- uid: Collectathon.Stacks.Stack`1.Enumerator
  name: Stack<TElement>.Enumerator
  href: api/Collectathon.Stacks.Stack-1.Enumerator.html
  commentId: T:Collectathon.Stacks.Stack`1.Enumerator
  name.vb: Stack(Of TElement).Enumerator
  fullName: Collectathon.Stacks.Stack<TElement>.Enumerator
  fullName.vb: Collectathon.Stacks.Stack(Of TElement).Enumerator
  nameWithType: Stack<TElement>.Enumerator
  nameWithType.vb: Stack(Of TElement).Enumerator
- uid: Collectathon.Stacks.Stack`1.Enumerator.#ctor(Collectathon.Stacks.Stack{`0})
  name: Enumerator(Stack<TElement>)
  href: api/Collectathon.Stacks.Stack-1.Enumerator.html#Collectathon_Stacks_Stack_1_Enumerator__ctor_Collectathon_Stacks_Stack__0__
  commentId: M:Collectathon.Stacks.Stack`1.Enumerator.#ctor(Collectathon.Stacks.Stack{`0})
  name.vb: Enumerator(Stack(Of TElement))
  fullName: Collectathon.Stacks.Stack<TElement>.Enumerator.Enumerator(Collectathon.Stacks.Stack<TElement>)
  fullName.vb: Collectathon.Stacks.Stack(Of TElement).Enumerator.Enumerator(Collectathon.Stacks.Stack(Of TElement))
  nameWithType: Stack<TElement>.Enumerator.Enumerator(Stack<TElement>)
  nameWithType.vb: Stack(Of TElement).Enumerator.Enumerator(Stack(Of TElement))
- uid: Collectathon.Stacks.Stack`1.Enumerator.#ctor*
  name: Enumerator
  href: api/Collectathon.Stacks.Stack-1.Enumerator.html#Collectathon_Stacks_Stack_1_Enumerator__ctor_
  commentId: Overload:Collectathon.Stacks.Stack`1.Enumerator.#ctor
  isSpec: "True"
  fullName: Collectathon.Stacks.Stack<TElement>.Enumerator.Enumerator
  fullName.vb: Collectathon.Stacks.Stack(Of TElement).Enumerator.Enumerator
  nameWithType: Stack<TElement>.Enumerator.Enumerator
  nameWithType.vb: Stack(Of TElement).Enumerator.Enumerator
- uid: Collectathon.Stacks.Stack`1.Enumerator.Count
  name: Count
  href: api/Collectathon.Stacks.Stack-1.Enumerator.html#Collectathon_Stacks_Stack_1_Enumerator_Count
  commentId: P:Collectathon.Stacks.Stack`1.Enumerator.Count
  fullName: Collectathon.Stacks.Stack<TElement>.Enumerator.Count
  fullName.vb: Collectathon.Stacks.Stack(Of TElement).Enumerator.Count
  nameWithType: Stack<TElement>.Enumerator.Count
  nameWithType.vb: Stack(Of TElement).Enumerator.Count
- uid: Collectathon.Stacks.Stack`1.Enumerator.Count*
  name: Count
  href: api/Collectathon.Stacks.Stack-1.Enumerator.html#Collectathon_Stacks_Stack_1_Enumerator_Count_
  commentId: Overload:Collectathon.Stacks.Stack`1.Enumerator.Count
  isSpec: "True"
  fullName: Collectathon.Stacks.Stack<TElement>.Enumerator.Count
  fullName.vb: Collectathon.Stacks.Stack(Of TElement).Enumerator.Count
  nameWithType: Stack<TElement>.Enumerator.Count
  nameWithType.vb: Stack(Of TElement).Enumerator.Count
- uid: Collectathon.Stacks.Stack`1.Enumerator.Current
  name: Current
  href: api/Collectathon.Stacks.Stack-1.Enumerator.html#Collectathon_Stacks_Stack_1_Enumerator_Current
  commentId: P:Collectathon.Stacks.Stack`1.Enumerator.Current
  fullName: Collectathon.Stacks.Stack<TElement>.Enumerator.Current
  fullName.vb: Collectathon.Stacks.Stack(Of TElement).Enumerator.Current
  nameWithType: Stack<TElement>.Enumerator.Current
  nameWithType.vb: Stack(Of TElement).Enumerator.Current
- uid: Collectathon.Stacks.Stack`1.Enumerator.Current*
  name: Current
  href: api/Collectathon.Stacks.Stack-1.Enumerator.html#Collectathon_Stacks_Stack_1_Enumerator_Current_
  commentId: Overload:Collectathon.Stacks.Stack`1.Enumerator.Current
  isSpec: "True"
  fullName: Collectathon.Stacks.Stack<TElement>.Enumerator.Current
  fullName.vb: Collectathon.Stacks.Stack(Of TElement).Enumerator.Current
  nameWithType: Stack<TElement>.Enumerator.Current
  nameWithType.vb: Stack(Of TElement).Enumerator.Current
- uid: Collectathon.Stacks.Stack`1.Enumerator.Dispose
  name: Dispose()
  href: api/Collectathon.Stacks.Stack-1.Enumerator.html#Collectathon_Stacks_Stack_1_Enumerator_Dispose
  commentId: M:Collectathon.Stacks.Stack`1.Enumerator.Dispose
  fullName: Collectathon.Stacks.Stack<TElement>.Enumerator.Dispose()
  fullName.vb: Collectathon.Stacks.Stack(Of TElement).Enumerator.Dispose()
  nameWithType: Stack<TElement>.Enumerator.Dispose()
  nameWithType.vb: Stack(Of TElement).Enumerator.Dispose()
- uid: Collectathon.Stacks.Stack`1.Enumerator.Dispose*
  name: Dispose
  href: api/Collectathon.Stacks.Stack-1.Enumerator.html#Collectathon_Stacks_Stack_1_Enumerator_Dispose_
  commentId: Overload:Collectathon.Stacks.Stack`1.Enumerator.Dispose
  isSpec: "True"
  fullName: Collectathon.Stacks.Stack<TElement>.Enumerator.Dispose
  fullName.vb: Collectathon.Stacks.Stack(Of TElement).Enumerator.Dispose
  nameWithType: Stack<TElement>.Enumerator.Dispose
  nameWithType.vb: Stack(Of TElement).Enumerator.Dispose
- uid: Collectathon.Stacks.Stack`1.Enumerator.GetEnumerator
  name: GetEnumerator()
  href: api/Collectathon.Stacks.Stack-1.Enumerator.html#Collectathon_Stacks_Stack_1_Enumerator_GetEnumerator
  commentId: M:Collectathon.Stacks.Stack`1.Enumerator.GetEnumerator
  fullName: Collectathon.Stacks.Stack<TElement>.Enumerator.GetEnumerator()
  fullName.vb: Collectathon.Stacks.Stack(Of TElement).Enumerator.GetEnumerator()
  nameWithType: Stack<TElement>.Enumerator.GetEnumerator()
  nameWithType.vb: Stack(Of TElement).Enumerator.GetEnumerator()
- uid: Collectathon.Stacks.Stack`1.Enumerator.GetEnumerator*
  name: GetEnumerator
  href: api/Collectathon.Stacks.Stack-1.Enumerator.html#Collectathon_Stacks_Stack_1_Enumerator_GetEnumerator_
  commentId: Overload:Collectathon.Stacks.Stack`1.Enumerator.GetEnumerator
  isSpec: "True"
  fullName: Collectathon.Stacks.Stack<TElement>.Enumerator.GetEnumerator
  fullName.vb: Collectathon.Stacks.Stack(Of TElement).Enumerator.GetEnumerator
  nameWithType: Stack<TElement>.Enumerator.GetEnumerator
  nameWithType.vb: Stack(Of TElement).Enumerator.GetEnumerator
- uid: Collectathon.Stacks.Stack`1.Enumerator.MoveNext
  name: MoveNext()
  href: api/Collectathon.Stacks.Stack-1.Enumerator.html#Collectathon_Stacks_Stack_1_Enumerator_MoveNext
  commentId: M:Collectathon.Stacks.Stack`1.Enumerator.MoveNext
  fullName: Collectathon.Stacks.Stack<TElement>.Enumerator.MoveNext()
  fullName.vb: Collectathon.Stacks.Stack(Of TElement).Enumerator.MoveNext()
  nameWithType: Stack<TElement>.Enumerator.MoveNext()
  nameWithType.vb: Stack(Of TElement).Enumerator.MoveNext()
- uid: Collectathon.Stacks.Stack`1.Enumerator.MoveNext*
  name: MoveNext
  href: api/Collectathon.Stacks.Stack-1.Enumerator.html#Collectathon_Stacks_Stack_1_Enumerator_MoveNext_
  commentId: Overload:Collectathon.Stacks.Stack`1.Enumerator.MoveNext
  isSpec: "True"
  fullName: Collectathon.Stacks.Stack<TElement>.Enumerator.MoveNext
  fullName.vb: Collectathon.Stacks.Stack(Of TElement).Enumerator.MoveNext
  nameWithType: Stack<TElement>.Enumerator.MoveNext
  nameWithType.vb: Stack(Of TElement).Enumerator.MoveNext
- uid: Collectathon.Stacks.Stack`1.Enumerator.Reset
  name: Reset()
  href: api/Collectathon.Stacks.Stack-1.Enumerator.html#Collectathon_Stacks_Stack_1_Enumerator_Reset
  commentId: M:Collectathon.Stacks.Stack`1.Enumerator.Reset
  fullName: Collectathon.Stacks.Stack<TElement>.Enumerator.Reset()
  fullName.vb: Collectathon.Stacks.Stack(Of TElement).Enumerator.Reset()
  nameWithType: Stack<TElement>.Enumerator.Reset()
  nameWithType.vb: Stack(Of TElement).Enumerator.Reset()
- uid: Collectathon.Stacks.Stack`1.Enumerator.Reset*
  name: Reset
  href: api/Collectathon.Stacks.Stack-1.Enumerator.html#Collectathon_Stacks_Stack_1_Enumerator_Reset_
  commentId: Overload:Collectathon.Stacks.Stack`1.Enumerator.Reset
  isSpec: "True"
  fullName: Collectathon.Stacks.Stack<TElement>.Enumerator.Reset
  fullName.vb: Collectathon.Stacks.Stack(Of TElement).Enumerator.Reset
  nameWithType: Stack<TElement>.Enumerator.Reset
  nameWithType.vb: Stack(Of TElement).Enumerator.Reset
- uid: Collectathon.Stacks.Stack`1.Enumerator.ToString
  name: ToString()
  href: api/Collectathon.Stacks.Stack-1.Enumerator.html#Collectathon_Stacks_Stack_1_Enumerator_ToString
  commentId: M:Collectathon.Stacks.Stack`1.Enumerator.ToString
  fullName: Collectathon.Stacks.Stack<TElement>.Enumerator.ToString()
  fullName.vb: Collectathon.Stacks.Stack(Of TElement).Enumerator.ToString()
  nameWithType: Stack<TElement>.Enumerator.ToString()
  nameWithType.vb: Stack(Of TElement).Enumerator.ToString()
- uid: Collectathon.Stacks.Stack`1.Enumerator.ToString(nint)
  name: ToString(nint)
  href: api/Collectathon.Stacks.Stack-1.Enumerator.html#Collectathon_Stacks_Stack_1_Enumerator_ToString_nint_
  commentId: M:Collectathon.Stacks.Stack`1.Enumerator.ToString(nint)
  fullName: Collectathon.Stacks.Stack<TElement>.Enumerator.ToString(nint)
  fullName.vb: Collectathon.Stacks.Stack(Of TElement).Enumerator.ToString(nint)
  nameWithType: Stack<TElement>.Enumerator.ToString(nint)
  nameWithType.vb: Stack(Of TElement).Enumerator.ToString(nint)
- uid: Collectathon.Stacks.Stack`1.Enumerator.ToString*
  name: ToString
  href: api/Collectathon.Stacks.Stack-1.Enumerator.html#Collectathon_Stacks_Stack_1_Enumerator_ToString_
  commentId: Overload:Collectathon.Stacks.Stack`1.Enumerator.ToString
  isSpec: "True"
  fullName: Collectathon.Stacks.Stack<TElement>.Enumerator.ToString
  fullName.vb: Collectathon.Stacks.Stack(Of TElement).Enumerator.ToString
  nameWithType: Stack<TElement>.Enumerator.ToString
  nameWithType.vb: Stack(Of TElement).Enumerator.ToString
- uid: Collectathon.Stacks.Stack`1.GetEnumerator
  name: GetEnumerator()
  href: api/Collectathon.Stacks.Stack-1.html#Collectathon_Stacks_Stack_1_GetEnumerator
  commentId: M:Collectathon.Stacks.Stack`1.GetEnumerator
  fullName: Collectathon.Stacks.Stack<TElement>.GetEnumerator()
  fullName.vb: Collectathon.Stacks.Stack(Of TElement).GetEnumerator()
  nameWithType: Stack<TElement>.GetEnumerator()
  nameWithType.vb: Stack(Of TElement).GetEnumerator()
- uid: Collectathon.Stacks.Stack`1.GetEnumerator*
  name: GetEnumerator
  href: api/Collectathon.Stacks.Stack-1.html#Collectathon_Stacks_Stack_1_GetEnumerator_
  commentId: Overload:Collectathon.Stacks.Stack`1.GetEnumerator
  isSpec: "True"
  fullName: Collectathon.Stacks.Stack<TElement>.GetEnumerator
  fullName.vb: Collectathon.Stacks.Stack(Of TElement).GetEnumerator
  nameWithType: Stack<TElement>.GetEnumerator
  nameWithType.vb: Stack(Of TElement).GetEnumerator
- uid: Collectathon.Stacks.Stack`1.Peek
  name: Peek()
  href: api/Collectathon.Stacks.Stack-1.html#Collectathon_Stacks_Stack_1_Peek
  commentId: M:Collectathon.Stacks.Stack`1.Peek
  fullName: Collectathon.Stacks.Stack<TElement>.Peek()
  fullName.vb: Collectathon.Stacks.Stack(Of TElement).Peek()
  nameWithType: Stack<TElement>.Peek()
  nameWithType.vb: Stack(Of TElement).Peek()
- uid: Collectathon.Stacks.Stack`1.Peek(`0@)
  name: Peek(out TElement)
  href: api/Collectathon.Stacks.Stack-1.html#Collectathon_Stacks_Stack_1_Peek__0__
  commentId: M:Collectathon.Stacks.Stack`1.Peek(`0@)
  name.vb: Peek(ByRef TElement)
  fullName: Collectathon.Stacks.Stack<TElement>.Peek(out TElement)
  fullName.vb: Collectathon.Stacks.Stack(Of TElement).Peek(ByRef TElement)
  nameWithType: Stack<TElement>.Peek(out TElement)
  nameWithType.vb: Stack(Of TElement).Peek(ByRef TElement)
- uid: Collectathon.Stacks.Stack`1.Peek*
  name: Peek
  href: api/Collectathon.Stacks.Stack-1.html#Collectathon_Stacks_Stack_1_Peek_
  commentId: Overload:Collectathon.Stacks.Stack`1.Peek
  isSpec: "True"
  fullName: Collectathon.Stacks.Stack<TElement>.Peek
  fullName.vb: Collectathon.Stacks.Stack(Of TElement).Peek
  nameWithType: Stack<TElement>.Peek
  nameWithType.vb: Stack(Of TElement).Peek
- uid: Collectathon.Stacks.Stack`1.Pop
  name: Pop()
  href: api/Collectathon.Stacks.Stack-1.html#Collectathon_Stacks_Stack_1_Pop
  commentId: M:Collectathon.Stacks.Stack`1.Pop
  fullName: Collectathon.Stacks.Stack<TElement>.Pop()
  fullName.vb: Collectathon.Stacks.Stack(Of TElement).Pop()
  nameWithType: Stack<TElement>.Pop()
  nameWithType.vb: Stack(Of TElement).Pop()
- uid: Collectathon.Stacks.Stack`1.Pop*
  name: Pop
  href: api/Collectathon.Stacks.Stack-1.html#Collectathon_Stacks_Stack_1_Pop_
  commentId: Overload:Collectathon.Stacks.Stack`1.Pop
  isSpec: "True"
  fullName: Collectathon.Stacks.Stack<TElement>.Pop
  fullName.vb: Collectathon.Stacks.Stack(Of TElement).Pop
  nameWithType: Stack<TElement>.Pop
  nameWithType.vb: Stack(Of TElement).Pop
- uid: Collectathon.Stacks.Stack`1.Push(`0)
  name: Push(TElement)
  href: api/Collectathon.Stacks.Stack-1.html#Collectathon_Stacks_Stack_1_Push__0_
  commentId: M:Collectathon.Stacks.Stack`1.Push(`0)
  fullName: Collectathon.Stacks.Stack<TElement>.Push(TElement)
  fullName.vb: Collectathon.Stacks.Stack(Of TElement).Push(TElement)
  nameWithType: Stack<TElement>.Push(TElement)
  nameWithType.vb: Stack(Of TElement).Push(TElement)
- uid: Collectathon.Stacks.Stack`1.Push*
  name: Push
  href: api/Collectathon.Stacks.Stack-1.html#Collectathon_Stacks_Stack_1_Push_
  commentId: Overload:Collectathon.Stacks.Stack`1.Push
  isSpec: "True"
  fullName: Collectathon.Stacks.Stack<TElement>.Push
  fullName.vb: Collectathon.Stacks.Stack(Of TElement).Push
  nameWithType: Stack<TElement>.Push
  nameWithType.vb: Stack(Of TElement).Push
- uid: Collectathon.Stacks.Stack`1.Read(`0@)
  name: Read(out TElement)
  href: api/Collectathon.Stacks.Stack-1.html#Collectathon_Stacks_Stack_1_Read__0__
  commentId: M:Collectathon.Stacks.Stack`1.Read(`0@)
  name.vb: Read(ByRef TElement)
  fullName: Collectathon.Stacks.Stack<TElement>.Read(out TElement)
  fullName.vb: Collectathon.Stacks.Stack(Of TElement).Read(ByRef TElement)
  nameWithType: Stack<TElement>.Read(out TElement)
  nameWithType.vb: Stack(Of TElement).Read(ByRef TElement)
- uid: Collectathon.Stacks.Stack`1.Read*
  name: Read
  href: api/Collectathon.Stacks.Stack-1.html#Collectathon_Stacks_Stack_1_Read_
  commentId: Overload:Collectathon.Stacks.Stack`1.Read
  isSpec: "True"
  fullName: Collectathon.Stacks.Stack<TElement>.Read
  fullName.vb: Collectathon.Stacks.Stack(Of TElement).Read
  nameWithType: Stack<TElement>.Read
  nameWithType.vb: Stack(Of TElement).Read
- uid: Collectathon.Stacks.Stack`1.Readable
  name: Readable
  href: api/Collectathon.Stacks.Stack-1.html#Collectathon_Stacks_Stack_1_Readable
  commentId: P:Collectathon.Stacks.Stack`1.Readable
  fullName: Collectathon.Stacks.Stack<TElement>.Readable
  fullName.vb: Collectathon.Stacks.Stack(Of TElement).Readable
  nameWithType: Stack<TElement>.Readable
  nameWithType.vb: Stack(Of TElement).Readable
- uid: Collectathon.Stacks.Stack`1.Readable*
  name: Readable
  href: api/Collectathon.Stacks.Stack-1.html#Collectathon_Stacks_Stack_1_Readable_
  commentId: Overload:Collectathon.Stacks.Stack`1.Readable
  isSpec: "True"
  fullName: Collectathon.Stacks.Stack<TElement>.Readable
  fullName.vb: Collectathon.Stacks.Stack(Of TElement).Readable
  nameWithType: Stack<TElement>.Readable
  nameWithType.vb: Stack(Of TElement).Readable
- uid: Collectathon.Stacks.Stack`1.ToString
  name: ToString()
  href: api/Collectathon.Stacks.Stack-1.html#Collectathon_Stacks_Stack_1_ToString
  commentId: M:Collectathon.Stacks.Stack`1.ToString
  fullName: Collectathon.Stacks.Stack<TElement>.ToString()
  fullName.vb: Collectathon.Stacks.Stack(Of TElement).ToString()
  nameWithType: Stack<TElement>.ToString()
  nameWithType.vb: Stack(Of TElement).ToString()
- uid: Collectathon.Stacks.Stack`1.ToString(nint)
  name: ToString(nint)
  href: api/Collectathon.Stacks.Stack-1.html#Collectathon_Stacks_Stack_1_ToString_nint_
  commentId: M:Collectathon.Stacks.Stack`1.ToString(nint)
  fullName: Collectathon.Stacks.Stack<TElement>.ToString(nint)
  fullName.vb: Collectathon.Stacks.Stack(Of TElement).ToString(nint)
  nameWithType: Stack<TElement>.ToString(nint)
  nameWithType.vb: Stack(Of TElement).ToString(nint)
- uid: Collectathon.Stacks.Stack`1.ToString*
  name: ToString
  href: api/Collectathon.Stacks.Stack-1.html#Collectathon_Stacks_Stack_1_ToString_
  commentId: Overload:Collectathon.Stacks.Stack`1.ToString
  isSpec: "True"
  fullName: Collectathon.Stacks.Stack<TElement>.ToString
  fullName.vb: Collectathon.Stacks.Stack(Of TElement).ToString
  nameWithType: Stack<TElement>.ToString
  nameWithType.vb: Stack(Of TElement).ToString
- uid: Collectathon.Stacks.Stack`1.Writable
  name: Writable
  href: api/Collectathon.Stacks.Stack-1.html#Collectathon_Stacks_Stack_1_Writable
  commentId: P:Collectathon.Stacks.Stack`1.Writable
  fullName: Collectathon.Stacks.Stack<TElement>.Writable
  fullName.vb: Collectathon.Stacks.Stack(Of TElement).Writable
  nameWithType: Stack<TElement>.Writable
  nameWithType.vb: Stack(Of TElement).Writable
- uid: Collectathon.Stacks.Stack`1.Writable*
  name: Writable
  href: api/Collectathon.Stacks.Stack-1.html#Collectathon_Stacks_Stack_1_Writable_
  commentId: Overload:Collectathon.Stacks.Stack`1.Writable
  isSpec: "True"
  fullName: Collectathon.Stacks.Stack<TElement>.Writable
  fullName.vb: Collectathon.Stacks.Stack(Of TElement).Writable
  nameWithType: Stack<TElement>.Writable
  nameWithType.vb: Stack(Of TElement).Writable
- uid: Collectathon.Stacks.Stack`1.Write(`0)
  name: Write(TElement)
  href: api/Collectathon.Stacks.Stack-1.html#Collectathon_Stacks_Stack_1_Write__0_
  commentId: M:Collectathon.Stacks.Stack`1.Write(`0)
  fullName: Collectathon.Stacks.Stack<TElement>.Write(TElement)
  fullName.vb: Collectathon.Stacks.Stack(Of TElement).Write(TElement)
  nameWithType: Stack<TElement>.Write(TElement)
  nameWithType.vb: Stack(Of TElement).Write(TElement)
- uid: Collectathon.Stacks.Stack`1.Write*
  name: Write
  href: api/Collectathon.Stacks.Stack-1.html#Collectathon_Stacks_Stack_1_Write_
  commentId: Overload:Collectathon.Stacks.Stack`1.Write
  isSpec: "True"
  fullName: Collectathon.Stacks.Stack<TElement>.Write
  fullName.vb: Collectathon.Stacks.Stack(Of TElement).Write
  nameWithType: Stack<TElement>.Write
  nameWithType.vb: Stack(Of TElement).Write
- uid: Collectathon.Stacks.StackExtensions
  name: StackExtensions
  href: api/Collectathon.Stacks.StackExtensions.html
  commentId: T:Collectathon.Stacks.StackExtensions
  fullName: Collectathon.Stacks.StackExtensions
  nameWithType: StackExtensions
- uid: Collectathon.Stacks.StackExtensions.Abs(Collectathon.Stacks.Stack{Double})
  name: Abs(Stack<Double>)
  href: api/Collectathon.Stacks.StackExtensions.html#Collectathon_Stacks_StackExtensions_Abs_Collectathon_Stacks_Stack_Double__
  commentId: M:Collectathon.Stacks.StackExtensions.Abs(Collectathon.Stacks.Stack{Double})
  name.vb: Abs(Stack(Of Double))
  fullName: Collectathon.Stacks.StackExtensions.Abs(Collectathon.Stacks.Stack<Double>)
  fullName.vb: Collectathon.Stacks.StackExtensions.Abs(Collectathon.Stacks.Stack(Of Double))
  nameWithType: StackExtensions.Abs(Stack<Double>)
  nameWithType.vb: StackExtensions.Abs(Stack(Of Double))
- uid: Collectathon.Stacks.StackExtensions.Abs(Collectathon.Stacks.Stack{Double},Double@)
  name: Abs(Stack<Double>, out Double)
  href: api/Collectathon.Stacks.StackExtensions.html#Collectathon_Stacks_StackExtensions_Abs_Collectathon_Stacks_Stack_Double__Double__
  commentId: M:Collectathon.Stacks.StackExtensions.Abs(Collectathon.Stacks.Stack{Double},Double@)
  name.vb: Abs(Stack(Of Double), ByRef Double)
  fullName: Collectathon.Stacks.StackExtensions.Abs(Collectathon.Stacks.Stack<Double>, out Double)
  fullName.vb: Collectathon.Stacks.StackExtensions.Abs(Collectathon.Stacks.Stack(Of Double), ByRef Double)
  nameWithType: StackExtensions.Abs(Stack<Double>, out Double)
  nameWithType.vb: StackExtensions.Abs(Stack(Of Double), ByRef Double)
- uid: Collectathon.Stacks.StackExtensions.Abs(Collectathon.Stacks.Stack{Int32})
  name: Abs(Stack<Int32>)
  href: api/Collectathon.Stacks.StackExtensions.html#Collectathon_Stacks_StackExtensions_Abs_Collectathon_Stacks_Stack_Int32__
  commentId: M:Collectathon.Stacks.StackExtensions.Abs(Collectathon.Stacks.Stack{Int32})
  name.vb: Abs(Stack(Of Int32))
  fullName: Collectathon.Stacks.StackExtensions.Abs(Collectathon.Stacks.Stack<Int32>)
  fullName.vb: Collectathon.Stacks.StackExtensions.Abs(Collectathon.Stacks.Stack(Of Int32))
  nameWithType: StackExtensions.Abs(Stack<Int32>)
  nameWithType.vb: StackExtensions.Abs(Stack(Of Int32))
- uid: Collectathon.Stacks.StackExtensions.Abs(Collectathon.Stacks.Stack{Int32},Int32@)
  name: Abs(Stack<Int32>, out Int32)
  href: api/Collectathon.Stacks.StackExtensions.html#Collectathon_Stacks_StackExtensions_Abs_Collectathon_Stacks_Stack_Int32__Int32__
  commentId: M:Collectathon.Stacks.StackExtensions.Abs(Collectathon.Stacks.Stack{Int32},Int32@)
  name.vb: Abs(Stack(Of Int32), ByRef Int32)
  fullName: Collectathon.Stacks.StackExtensions.Abs(Collectathon.Stacks.Stack<Int32>, out Int32)
  fullName.vb: Collectathon.Stacks.StackExtensions.Abs(Collectathon.Stacks.Stack(Of Int32), ByRef Int32)
  nameWithType: StackExtensions.Abs(Stack<Int32>, out Int32)
  nameWithType.vb: StackExtensions.Abs(Stack(Of Int32), ByRef Int32)
- uid: Collectathon.Stacks.StackExtensions.Abs(Collectathon.Stacks.Stack{Int64})
  name: Abs(Stack<Int64>)
  href: api/Collectathon.Stacks.StackExtensions.html#Collectathon_Stacks_StackExtensions_Abs_Collectathon_Stacks_Stack_Int64__
  commentId: M:Collectathon.Stacks.StackExtensions.Abs(Collectathon.Stacks.Stack{Int64})
  name.vb: Abs(Stack(Of Int64))
  fullName: Collectathon.Stacks.StackExtensions.Abs(Collectathon.Stacks.Stack<Int64>)
  fullName.vb: Collectathon.Stacks.StackExtensions.Abs(Collectathon.Stacks.Stack(Of Int64))
  nameWithType: StackExtensions.Abs(Stack<Int64>)
  nameWithType.vb: StackExtensions.Abs(Stack(Of Int64))
- uid: Collectathon.Stacks.StackExtensions.Abs(Collectathon.Stacks.Stack{Int64},Int64@)
  name: Abs(Stack<Int64>, out Int64)
  href: api/Collectathon.Stacks.StackExtensions.html#Collectathon_Stacks_StackExtensions_Abs_Collectathon_Stacks_Stack_Int64__Int64__
  commentId: M:Collectathon.Stacks.StackExtensions.Abs(Collectathon.Stacks.Stack{Int64},Int64@)
  name.vb: Abs(Stack(Of Int64), ByRef Int64)
  fullName: Collectathon.Stacks.StackExtensions.Abs(Collectathon.Stacks.Stack<Int64>, out Int64)
  fullName.vb: Collectathon.Stacks.StackExtensions.Abs(Collectathon.Stacks.Stack(Of Int64), ByRef Int64)
  nameWithType: StackExtensions.Abs(Stack<Int64>, out Int64)
  nameWithType.vb: StackExtensions.Abs(Stack(Of Int64), ByRef Int64)
- uid: Collectathon.Stacks.StackExtensions.Abs(Collectathon.Stacks.Stack{Single})
  name: Abs(Stack<Single>)
  href: api/Collectathon.Stacks.StackExtensions.html#Collectathon_Stacks_StackExtensions_Abs_Collectathon_Stacks_Stack_Single__
  commentId: M:Collectathon.Stacks.StackExtensions.Abs(Collectathon.Stacks.Stack{Single})
  name.vb: Abs(Stack(Of Single))
  fullName: Collectathon.Stacks.StackExtensions.Abs(Collectathon.Stacks.Stack<Single>)
  fullName.vb: Collectathon.Stacks.StackExtensions.Abs(Collectathon.Stacks.Stack(Of Single))
  nameWithType: StackExtensions.Abs(Stack<Single>)
  nameWithType.vb: StackExtensions.Abs(Stack(Of Single))
- uid: Collectathon.Stacks.StackExtensions.Abs(Collectathon.Stacks.Stack{Single},Single@)
  name: Abs(Stack<Single>, out Single)
  href: api/Collectathon.Stacks.StackExtensions.html#Collectathon_Stacks_StackExtensions_Abs_Collectathon_Stacks_Stack_Single__Single__
  commentId: M:Collectathon.Stacks.StackExtensions.Abs(Collectathon.Stacks.Stack{Single},Single@)
  name.vb: Abs(Stack(Of Single), ByRef Single)
  fullName: Collectathon.Stacks.StackExtensions.Abs(Collectathon.Stacks.Stack<Single>, out Single)
  fullName.vb: Collectathon.Stacks.StackExtensions.Abs(Collectathon.Stacks.Stack(Of Single), ByRef Single)
  nameWithType: StackExtensions.Abs(Stack<Single>, out Single)
  nameWithType.vb: StackExtensions.Abs(Stack(Of Single), ByRef Single)
- uid: Collectathon.Stacks.StackExtensions.Abs*
  name: Abs
  href: api/Collectathon.Stacks.StackExtensions.html#Collectathon_Stacks_StackExtensions_Abs_
  commentId: Overload:Collectathon.Stacks.StackExtensions.Abs
  isSpec: "True"
  fullName: Collectathon.Stacks.StackExtensions.Abs
  nameWithType: StackExtensions.Abs
- uid: Collectathon.Stacks.StackExtensions.Add(Collectathon.Stacks.Stack{Double})
  name: Add(Stack<Double>)
  href: api/Collectathon.Stacks.StackExtensions.html#Collectathon_Stacks_StackExtensions_Add_Collectathon_Stacks_Stack_Double__
  commentId: M:Collectathon.Stacks.StackExtensions.Add(Collectathon.Stacks.Stack{Double})
  name.vb: Add(Stack(Of Double))
  fullName: Collectathon.Stacks.StackExtensions.Add(Collectathon.Stacks.Stack<Double>)
  fullName.vb: Collectathon.Stacks.StackExtensions.Add(Collectathon.Stacks.Stack(Of Double))
  nameWithType: StackExtensions.Add(Stack<Double>)
  nameWithType.vb: StackExtensions.Add(Stack(Of Double))
- uid: Collectathon.Stacks.StackExtensions.Add(Collectathon.Stacks.Stack{Double},Double@)
  name: Add(Stack<Double>, out Double)
  href: api/Collectathon.Stacks.StackExtensions.html#Collectathon_Stacks_StackExtensions_Add_Collectathon_Stacks_Stack_Double__Double__
  commentId: M:Collectathon.Stacks.StackExtensions.Add(Collectathon.Stacks.Stack{Double},Double@)
  name.vb: Add(Stack(Of Double), ByRef Double)
  fullName: Collectathon.Stacks.StackExtensions.Add(Collectathon.Stacks.Stack<Double>, out Double)
  fullName.vb: Collectathon.Stacks.StackExtensions.Add(Collectathon.Stacks.Stack(Of Double), ByRef Double)
  nameWithType: StackExtensions.Add(Stack<Double>, out Double)
  nameWithType.vb: StackExtensions.Add(Stack(Of Double), ByRef Double)
- uid: Collectathon.Stacks.StackExtensions.Add(Collectathon.Stacks.Stack{Int32})
  name: Add(Stack<Int32>)
  href: api/Collectathon.Stacks.StackExtensions.html#Collectathon_Stacks_StackExtensions_Add_Collectathon_Stacks_Stack_Int32__
  commentId: M:Collectathon.Stacks.StackExtensions.Add(Collectathon.Stacks.Stack{Int32})
  name.vb: Add(Stack(Of Int32))
  fullName: Collectathon.Stacks.StackExtensions.Add(Collectathon.Stacks.Stack<Int32>)
  fullName.vb: Collectathon.Stacks.StackExtensions.Add(Collectathon.Stacks.Stack(Of Int32))
  nameWithType: StackExtensions.Add(Stack<Int32>)
  nameWithType.vb: StackExtensions.Add(Stack(Of Int32))
- uid: Collectathon.Stacks.StackExtensions.Add(Collectathon.Stacks.Stack{Int32},Int32@)
  name: Add(Stack<Int32>, out Int32)
  href: api/Collectathon.Stacks.StackExtensions.html#Collectathon_Stacks_StackExtensions_Add_Collectathon_Stacks_Stack_Int32__Int32__
  commentId: M:Collectathon.Stacks.StackExtensions.Add(Collectathon.Stacks.Stack{Int32},Int32@)
  name.vb: Add(Stack(Of Int32), ByRef Int32)
  fullName: Collectathon.Stacks.StackExtensions.Add(Collectathon.Stacks.Stack<Int32>, out Int32)
  fullName.vb: Collectathon.Stacks.StackExtensions.Add(Collectathon.Stacks.Stack(Of Int32), ByRef Int32)
  nameWithType: StackExtensions.Add(Stack<Int32>, out Int32)
  nameWithType.vb: StackExtensions.Add(Stack(Of Int32), ByRef Int32)
- uid: Collectathon.Stacks.StackExtensions.Add(Collectathon.Stacks.Stack{Int64})
  name: Add(Stack<Int64>)
  href: api/Collectathon.Stacks.StackExtensions.html#Collectathon_Stacks_StackExtensions_Add_Collectathon_Stacks_Stack_Int64__
  commentId: M:Collectathon.Stacks.StackExtensions.Add(Collectathon.Stacks.Stack{Int64})
  name.vb: Add(Stack(Of Int64))
  fullName: Collectathon.Stacks.StackExtensions.Add(Collectathon.Stacks.Stack<Int64>)
  fullName.vb: Collectathon.Stacks.StackExtensions.Add(Collectathon.Stacks.Stack(Of Int64))
  nameWithType: StackExtensions.Add(Stack<Int64>)
  nameWithType.vb: StackExtensions.Add(Stack(Of Int64))
- uid: Collectathon.Stacks.StackExtensions.Add(Collectathon.Stacks.Stack{Int64},Int64@)
  name: Add(Stack<Int64>, out Int64)
  href: api/Collectathon.Stacks.StackExtensions.html#Collectathon_Stacks_StackExtensions_Add_Collectathon_Stacks_Stack_Int64__Int64__
  commentId: M:Collectathon.Stacks.StackExtensions.Add(Collectathon.Stacks.Stack{Int64},Int64@)
  name.vb: Add(Stack(Of Int64), ByRef Int64)
  fullName: Collectathon.Stacks.StackExtensions.Add(Collectathon.Stacks.Stack<Int64>, out Int64)
  fullName.vb: Collectathon.Stacks.StackExtensions.Add(Collectathon.Stacks.Stack(Of Int64), ByRef Int64)
  nameWithType: StackExtensions.Add(Stack<Int64>, out Int64)
  nameWithType.vb: StackExtensions.Add(Stack(Of Int64), ByRef Int64)
- uid: Collectathon.Stacks.StackExtensions.Add(Collectathon.Stacks.Stack{Single})
  name: Add(Stack<Single>)
  href: api/Collectathon.Stacks.StackExtensions.html#Collectathon_Stacks_StackExtensions_Add_Collectathon_Stacks_Stack_Single__
  commentId: M:Collectathon.Stacks.StackExtensions.Add(Collectathon.Stacks.Stack{Single})
  name.vb: Add(Stack(Of Single))
  fullName: Collectathon.Stacks.StackExtensions.Add(Collectathon.Stacks.Stack<Single>)
  fullName.vb: Collectathon.Stacks.StackExtensions.Add(Collectathon.Stacks.Stack(Of Single))
  nameWithType: StackExtensions.Add(Stack<Single>)
  nameWithType.vb: StackExtensions.Add(Stack(Of Single))
- uid: Collectathon.Stacks.StackExtensions.Add(Collectathon.Stacks.Stack{Single},Single@)
  name: Add(Stack<Single>, out Single)
  href: api/Collectathon.Stacks.StackExtensions.html#Collectathon_Stacks_StackExtensions_Add_Collectathon_Stacks_Stack_Single__Single__
  commentId: M:Collectathon.Stacks.StackExtensions.Add(Collectathon.Stacks.Stack{Single},Single@)
  name.vb: Add(Stack(Of Single), ByRef Single)
  fullName: Collectathon.Stacks.StackExtensions.Add(Collectathon.Stacks.Stack<Single>, out Single)
  fullName.vb: Collectathon.Stacks.StackExtensions.Add(Collectathon.Stacks.Stack(Of Single), ByRef Single)
  nameWithType: StackExtensions.Add(Stack<Single>, out Single)
  nameWithType.vb: StackExtensions.Add(Stack(Of Single), ByRef Single)
- uid: Collectathon.Stacks.StackExtensions.Add*
  name: Add
  href: api/Collectathon.Stacks.StackExtensions.html#Collectathon_Stacks_StackExtensions_Add_
  commentId: Overload:Collectathon.Stacks.StackExtensions.Add
  isSpec: "True"
  fullName: Collectathon.Stacks.StackExtensions.Add
  nameWithType: StackExtensions.Add
- uid: Collectathon.Stacks.StackExtensions.Ceiling(Collectathon.Stacks.Stack{Double})
  name: Ceiling(Stack<Double>)
  href: api/Collectathon.Stacks.StackExtensions.html#Collectathon_Stacks_StackExtensions_Ceiling_Collectathon_Stacks_Stack_Double__
  commentId: M:Collectathon.Stacks.StackExtensions.Ceiling(Collectathon.Stacks.Stack{Double})
  name.vb: Ceiling(Stack(Of Double))
  fullName: Collectathon.Stacks.StackExtensions.Ceiling(Collectathon.Stacks.Stack<Double>)
  fullName.vb: Collectathon.Stacks.StackExtensions.Ceiling(Collectathon.Stacks.Stack(Of Double))
  nameWithType: StackExtensions.Ceiling(Stack<Double>)
  nameWithType.vb: StackExtensions.Ceiling(Stack(Of Double))
- uid: Collectathon.Stacks.StackExtensions.Ceiling(Collectathon.Stacks.Stack{Double},Double@)
  name: Ceiling(Stack<Double>, out Double)
  href: api/Collectathon.Stacks.StackExtensions.html#Collectathon_Stacks_StackExtensions_Ceiling_Collectathon_Stacks_Stack_Double__Double__
  commentId: M:Collectathon.Stacks.StackExtensions.Ceiling(Collectathon.Stacks.Stack{Double},Double@)
  name.vb: Ceiling(Stack(Of Double), ByRef Double)
  fullName: Collectathon.Stacks.StackExtensions.Ceiling(Collectathon.Stacks.Stack<Double>, out Double)
  fullName.vb: Collectathon.Stacks.StackExtensions.Ceiling(Collectathon.Stacks.Stack(Of Double), ByRef Double)
  nameWithType: StackExtensions.Ceiling(Stack<Double>, out Double)
  nameWithType.vb: StackExtensions.Ceiling(Stack(Of Double), ByRef Double)
- uid: Collectathon.Stacks.StackExtensions.Ceiling*
  name: Ceiling
  href: api/Collectathon.Stacks.StackExtensions.html#Collectathon_Stacks_StackExtensions_Ceiling_
  commentId: Overload:Collectathon.Stacks.StackExtensions.Ceiling
  isSpec: "True"
  fullName: Collectathon.Stacks.StackExtensions.Ceiling
  nameWithType: StackExtensions.Ceiling
- uid: Collectathon.Stacks.StackExtensions.Cos(Collectathon.Stacks.Stack{Double})
  name: Cos(Stack<Double>)
  href: api/Collectathon.Stacks.StackExtensions.html#Collectathon_Stacks_StackExtensions_Cos_Collectathon_Stacks_Stack_Double__
  commentId: M:Collectathon.Stacks.StackExtensions.Cos(Collectathon.Stacks.Stack{Double})
  name.vb: Cos(Stack(Of Double))
  fullName: Collectathon.Stacks.StackExtensions.Cos(Collectathon.Stacks.Stack<Double>)
  fullName.vb: Collectathon.Stacks.StackExtensions.Cos(Collectathon.Stacks.Stack(Of Double))
  nameWithType: StackExtensions.Cos(Stack<Double>)
  nameWithType.vb: StackExtensions.Cos(Stack(Of Double))
- uid: Collectathon.Stacks.StackExtensions.Cos(Collectathon.Stacks.Stack{Double},Double@)
  name: Cos(Stack<Double>, out Double)
  href: api/Collectathon.Stacks.StackExtensions.html#Collectathon_Stacks_StackExtensions_Cos_Collectathon_Stacks_Stack_Double__Double__
  commentId: M:Collectathon.Stacks.StackExtensions.Cos(Collectathon.Stacks.Stack{Double},Double@)
  name.vb: Cos(Stack(Of Double), ByRef Double)
  fullName: Collectathon.Stacks.StackExtensions.Cos(Collectathon.Stacks.Stack<Double>, out Double)
  fullName.vb: Collectathon.Stacks.StackExtensions.Cos(Collectathon.Stacks.Stack(Of Double), ByRef Double)
  nameWithType: StackExtensions.Cos(Stack<Double>, out Double)
  nameWithType.vb: StackExtensions.Cos(Stack(Of Double), ByRef Double)
- uid: Collectathon.Stacks.StackExtensions.Cos*
  name: Cos
  href: api/Collectathon.Stacks.StackExtensions.html#Collectathon_Stacks_StackExtensions_Cos_
  commentId: Overload:Collectathon.Stacks.StackExtensions.Cos
  isSpec: "True"
  fullName: Collectathon.Stacks.StackExtensions.Cos
  nameWithType: StackExtensions.Cos
- uid: Collectathon.Stacks.StackExtensions.Div(Collectathon.Stacks.Stack{Double})
  name: Div(Stack<Double>)
  href: api/Collectathon.Stacks.StackExtensions.html#Collectathon_Stacks_StackExtensions_Div_Collectathon_Stacks_Stack_Double__
  commentId: M:Collectathon.Stacks.StackExtensions.Div(Collectathon.Stacks.Stack{Double})
  name.vb: Div(Stack(Of Double))
  fullName: Collectathon.Stacks.StackExtensions.Div(Collectathon.Stacks.Stack<Double>)
  fullName.vb: Collectathon.Stacks.StackExtensions.Div(Collectathon.Stacks.Stack(Of Double))
  nameWithType: StackExtensions.Div(Stack<Double>)
  nameWithType.vb: StackExtensions.Div(Stack(Of Double))
- uid: Collectathon.Stacks.StackExtensions.Div(Collectathon.Stacks.Stack{Double},Double@)
  name: Div(Stack<Double>, out Double)
  href: api/Collectathon.Stacks.StackExtensions.html#Collectathon_Stacks_StackExtensions_Div_Collectathon_Stacks_Stack_Double__Double__
  commentId: M:Collectathon.Stacks.StackExtensions.Div(Collectathon.Stacks.Stack{Double},Double@)
  name.vb: Div(Stack(Of Double), ByRef Double)
  fullName: Collectathon.Stacks.StackExtensions.Div(Collectathon.Stacks.Stack<Double>, out Double)
  fullName.vb: Collectathon.Stacks.StackExtensions.Div(Collectathon.Stacks.Stack(Of Double), ByRef Double)
  nameWithType: StackExtensions.Div(Stack<Double>, out Double)
  nameWithType.vb: StackExtensions.Div(Stack(Of Double), ByRef Double)
- uid: Collectathon.Stacks.StackExtensions.Div(Collectathon.Stacks.Stack{Int32})
  name: Div(Stack<Int32>)
  href: api/Collectathon.Stacks.StackExtensions.html#Collectathon_Stacks_StackExtensions_Div_Collectathon_Stacks_Stack_Int32__
  commentId: M:Collectathon.Stacks.StackExtensions.Div(Collectathon.Stacks.Stack{Int32})
  name.vb: Div(Stack(Of Int32))
  fullName: Collectathon.Stacks.StackExtensions.Div(Collectathon.Stacks.Stack<Int32>)
  fullName.vb: Collectathon.Stacks.StackExtensions.Div(Collectathon.Stacks.Stack(Of Int32))
  nameWithType: StackExtensions.Div(Stack<Int32>)
  nameWithType.vb: StackExtensions.Div(Stack(Of Int32))
- uid: Collectathon.Stacks.StackExtensions.Div(Collectathon.Stacks.Stack{Int32},Int32@)
  name: Div(Stack<Int32>, out Int32)
  href: api/Collectathon.Stacks.StackExtensions.html#Collectathon_Stacks_StackExtensions_Div_Collectathon_Stacks_Stack_Int32__Int32__
  commentId: M:Collectathon.Stacks.StackExtensions.Div(Collectathon.Stacks.Stack{Int32},Int32@)
  name.vb: Div(Stack(Of Int32), ByRef Int32)
  fullName: Collectathon.Stacks.StackExtensions.Div(Collectathon.Stacks.Stack<Int32>, out Int32)
  fullName.vb: Collectathon.Stacks.StackExtensions.Div(Collectathon.Stacks.Stack(Of Int32), ByRef Int32)
  nameWithType: StackExtensions.Div(Stack<Int32>, out Int32)
  nameWithType.vb: StackExtensions.Div(Stack(Of Int32), ByRef Int32)
- uid: Collectathon.Stacks.StackExtensions.Div(Collectathon.Stacks.Stack{Int64})
  name: Div(Stack<Int64>)
  href: api/Collectathon.Stacks.StackExtensions.html#Collectathon_Stacks_StackExtensions_Div_Collectathon_Stacks_Stack_Int64__
  commentId: M:Collectathon.Stacks.StackExtensions.Div(Collectathon.Stacks.Stack{Int64})
  name.vb: Div(Stack(Of Int64))
  fullName: Collectathon.Stacks.StackExtensions.Div(Collectathon.Stacks.Stack<Int64>)
  fullName.vb: Collectathon.Stacks.StackExtensions.Div(Collectathon.Stacks.Stack(Of Int64))
  nameWithType: StackExtensions.Div(Stack<Int64>)
  nameWithType.vb: StackExtensions.Div(Stack(Of Int64))
- uid: Collectathon.Stacks.StackExtensions.Div(Collectathon.Stacks.Stack{Int64},Int64@)
  name: Div(Stack<Int64>, out Int64)
  href: api/Collectathon.Stacks.StackExtensions.html#Collectathon_Stacks_StackExtensions_Div_Collectathon_Stacks_Stack_Int64__Int64__
  commentId: M:Collectathon.Stacks.StackExtensions.Div(Collectathon.Stacks.Stack{Int64},Int64@)
  name.vb: Div(Stack(Of Int64), ByRef Int64)
  fullName: Collectathon.Stacks.StackExtensions.Div(Collectathon.Stacks.Stack<Int64>, out Int64)
  fullName.vb: Collectathon.Stacks.StackExtensions.Div(Collectathon.Stacks.Stack(Of Int64), ByRef Int64)
  nameWithType: StackExtensions.Div(Stack<Int64>, out Int64)
  nameWithType.vb: StackExtensions.Div(Stack(Of Int64), ByRef Int64)
- uid: Collectathon.Stacks.StackExtensions.Div(Collectathon.Stacks.Stack{Single})
  name: Div(Stack<Single>)
  href: api/Collectathon.Stacks.StackExtensions.html#Collectathon_Stacks_StackExtensions_Div_Collectathon_Stacks_Stack_Single__
  commentId: M:Collectathon.Stacks.StackExtensions.Div(Collectathon.Stacks.Stack{Single})
  name.vb: Div(Stack(Of Single))
  fullName: Collectathon.Stacks.StackExtensions.Div(Collectathon.Stacks.Stack<Single>)
  fullName.vb: Collectathon.Stacks.StackExtensions.Div(Collectathon.Stacks.Stack(Of Single))
  nameWithType: StackExtensions.Div(Stack<Single>)
  nameWithType.vb: StackExtensions.Div(Stack(Of Single))
- uid: Collectathon.Stacks.StackExtensions.Div(Collectathon.Stacks.Stack{Single},Single@)
  name: Div(Stack<Single>, out Single)
  href: api/Collectathon.Stacks.StackExtensions.html#Collectathon_Stacks_StackExtensions_Div_Collectathon_Stacks_Stack_Single__Single__
  commentId: M:Collectathon.Stacks.StackExtensions.Div(Collectathon.Stacks.Stack{Single},Single@)
  name.vb: Div(Stack(Of Single), ByRef Single)
  fullName: Collectathon.Stacks.StackExtensions.Div(Collectathon.Stacks.Stack<Single>, out Single)
  fullName.vb: Collectathon.Stacks.StackExtensions.Div(Collectathon.Stacks.Stack(Of Single), ByRef Single)
  nameWithType: StackExtensions.Div(Stack<Single>, out Single)
  nameWithType.vb: StackExtensions.Div(Stack(Of Single), ByRef Single)
- uid: Collectathon.Stacks.StackExtensions.Div*
  name: Div
  href: api/Collectathon.Stacks.StackExtensions.html#Collectathon_Stacks_StackExtensions_Div_
  commentId: Overload:Collectathon.Stacks.StackExtensions.Div
  isSpec: "True"
  fullName: Collectathon.Stacks.StackExtensions.Div
  nameWithType: StackExtensions.Div
- uid: Collectathon.Stacks.StackExtensions.Exp(Collectathon.Stacks.Stack{Double})
  name: Exp(Stack<Double>)
  href: api/Collectathon.Stacks.StackExtensions.html#Collectathon_Stacks_StackExtensions_Exp_Collectathon_Stacks_Stack_Double__
  commentId: M:Collectathon.Stacks.StackExtensions.Exp(Collectathon.Stacks.Stack{Double})
  name.vb: Exp(Stack(Of Double))
  fullName: Collectathon.Stacks.StackExtensions.Exp(Collectathon.Stacks.Stack<Double>)
  fullName.vb: Collectathon.Stacks.StackExtensions.Exp(Collectathon.Stacks.Stack(Of Double))
  nameWithType: StackExtensions.Exp(Stack<Double>)
  nameWithType.vb: StackExtensions.Exp(Stack(Of Double))
- uid: Collectathon.Stacks.StackExtensions.Exp(Collectathon.Stacks.Stack{Double},Double@)
  name: Exp(Stack<Double>, out Double)
  href: api/Collectathon.Stacks.StackExtensions.html#Collectathon_Stacks_StackExtensions_Exp_Collectathon_Stacks_Stack_Double__Double__
  commentId: M:Collectathon.Stacks.StackExtensions.Exp(Collectathon.Stacks.Stack{Double},Double@)
  name.vb: Exp(Stack(Of Double), ByRef Double)
  fullName: Collectathon.Stacks.StackExtensions.Exp(Collectathon.Stacks.Stack<Double>, out Double)
  fullName.vb: Collectathon.Stacks.StackExtensions.Exp(Collectathon.Stacks.Stack(Of Double), ByRef Double)
  nameWithType: StackExtensions.Exp(Stack<Double>, out Double)
  nameWithType.vb: StackExtensions.Exp(Stack(Of Double), ByRef Double)
- uid: Collectathon.Stacks.StackExtensions.Exp*
  name: Exp
  href: api/Collectathon.Stacks.StackExtensions.html#Collectathon_Stacks_StackExtensions_Exp_
  commentId: Overload:Collectathon.Stacks.StackExtensions.Exp
  isSpec: "True"
  fullName: Collectathon.Stacks.StackExtensions.Exp
  nameWithType: StackExtensions.Exp
- uid: Collectathon.Stacks.StackExtensions.Floor(Collectathon.Stacks.Stack{Double})
  name: Floor(Stack<Double>)
  href: api/Collectathon.Stacks.StackExtensions.html#Collectathon_Stacks_StackExtensions_Floor_Collectathon_Stacks_Stack_Double__
  commentId: M:Collectathon.Stacks.StackExtensions.Floor(Collectathon.Stacks.Stack{Double})
  name.vb: Floor(Stack(Of Double))
  fullName: Collectathon.Stacks.StackExtensions.Floor(Collectathon.Stacks.Stack<Double>)
  fullName.vb: Collectathon.Stacks.StackExtensions.Floor(Collectathon.Stacks.Stack(Of Double))
  nameWithType: StackExtensions.Floor(Stack<Double>)
  nameWithType.vb: StackExtensions.Floor(Stack(Of Double))
- uid: Collectathon.Stacks.StackExtensions.Floor(Collectathon.Stacks.Stack{Double},Double@)
  name: Floor(Stack<Double>, out Double)
  href: api/Collectathon.Stacks.StackExtensions.html#Collectathon_Stacks_StackExtensions_Floor_Collectathon_Stacks_Stack_Double__Double__
  commentId: M:Collectathon.Stacks.StackExtensions.Floor(Collectathon.Stacks.Stack{Double},Double@)
  name.vb: Floor(Stack(Of Double), ByRef Double)
  fullName: Collectathon.Stacks.StackExtensions.Floor(Collectathon.Stacks.Stack<Double>, out Double)
  fullName.vb: Collectathon.Stacks.StackExtensions.Floor(Collectathon.Stacks.Stack(Of Double), ByRef Double)
  nameWithType: StackExtensions.Floor(Stack<Double>, out Double)
  nameWithType.vb: StackExtensions.Floor(Stack(Of Double), ByRef Double)
- uid: Collectathon.Stacks.StackExtensions.Floor*
  name: Floor
  href: api/Collectathon.Stacks.StackExtensions.html#Collectathon_Stacks_StackExtensions_Floor_
  commentId: Overload:Collectathon.Stacks.StackExtensions.Floor
  isSpec: "True"
  fullName: Collectathon.Stacks.StackExtensions.Floor
  nameWithType: StackExtensions.Floor
- uid: Collectathon.Stacks.StackExtensions.Max(Collectathon.Stacks.Stack{Double})
  name: Max(Stack<Double>)
  href: api/Collectathon.Stacks.StackExtensions.html#Collectathon_Stacks_StackExtensions_Max_Collectathon_Stacks_Stack_Double__
  commentId: M:Collectathon.Stacks.StackExtensions.Max(Collectathon.Stacks.Stack{Double})
  name.vb: Max(Stack(Of Double))
  fullName: Collectathon.Stacks.StackExtensions.Max(Collectathon.Stacks.Stack<Double>)
  fullName.vb: Collectathon.Stacks.StackExtensions.Max(Collectathon.Stacks.Stack(Of Double))
  nameWithType: StackExtensions.Max(Stack<Double>)
  nameWithType.vb: StackExtensions.Max(Stack(Of Double))
- uid: Collectathon.Stacks.StackExtensions.Max(Collectathon.Stacks.Stack{Double},Double@)
  name: Max(Stack<Double>, out Double)
  href: api/Collectathon.Stacks.StackExtensions.html#Collectathon_Stacks_StackExtensions_Max_Collectathon_Stacks_Stack_Double__Double__
  commentId: M:Collectathon.Stacks.StackExtensions.Max(Collectathon.Stacks.Stack{Double},Double@)
  name.vb: Max(Stack(Of Double), ByRef Double)
  fullName: Collectathon.Stacks.StackExtensions.Max(Collectathon.Stacks.Stack<Double>, out Double)
  fullName.vb: Collectathon.Stacks.StackExtensions.Max(Collectathon.Stacks.Stack(Of Double), ByRef Double)
  nameWithType: StackExtensions.Max(Stack<Double>, out Double)
  nameWithType.vb: StackExtensions.Max(Stack(Of Double), ByRef Double)
- uid: Collectathon.Stacks.StackExtensions.Max(Collectathon.Stacks.Stack{Int32})
  name: Max(Stack<Int32>)
  href: api/Collectathon.Stacks.StackExtensions.html#Collectathon_Stacks_StackExtensions_Max_Collectathon_Stacks_Stack_Int32__
  commentId: M:Collectathon.Stacks.StackExtensions.Max(Collectathon.Stacks.Stack{Int32})
  name.vb: Max(Stack(Of Int32))
  fullName: Collectathon.Stacks.StackExtensions.Max(Collectathon.Stacks.Stack<Int32>)
  fullName.vb: Collectathon.Stacks.StackExtensions.Max(Collectathon.Stacks.Stack(Of Int32))
  nameWithType: StackExtensions.Max(Stack<Int32>)
  nameWithType.vb: StackExtensions.Max(Stack(Of Int32))
- uid: Collectathon.Stacks.StackExtensions.Max(Collectathon.Stacks.Stack{Int32},Int32@)
  name: Max(Stack<Int32>, out Int32)
  href: api/Collectathon.Stacks.StackExtensions.html#Collectathon_Stacks_StackExtensions_Max_Collectathon_Stacks_Stack_Int32__Int32__
  commentId: M:Collectathon.Stacks.StackExtensions.Max(Collectathon.Stacks.Stack{Int32},Int32@)
  name.vb: Max(Stack(Of Int32), ByRef Int32)
  fullName: Collectathon.Stacks.StackExtensions.Max(Collectathon.Stacks.Stack<Int32>, out Int32)
  fullName.vb: Collectathon.Stacks.StackExtensions.Max(Collectathon.Stacks.Stack(Of Int32), ByRef Int32)
  nameWithType: StackExtensions.Max(Stack<Int32>, out Int32)
  nameWithType.vb: StackExtensions.Max(Stack(Of Int32), ByRef Int32)
- uid: Collectathon.Stacks.StackExtensions.Max(Collectathon.Stacks.Stack{Int64})
  name: Max(Stack<Int64>)
  href: api/Collectathon.Stacks.StackExtensions.html#Collectathon_Stacks_StackExtensions_Max_Collectathon_Stacks_Stack_Int64__
  commentId: M:Collectathon.Stacks.StackExtensions.Max(Collectathon.Stacks.Stack{Int64})
  name.vb: Max(Stack(Of Int64))
  fullName: Collectathon.Stacks.StackExtensions.Max(Collectathon.Stacks.Stack<Int64>)
  fullName.vb: Collectathon.Stacks.StackExtensions.Max(Collectathon.Stacks.Stack(Of Int64))
  nameWithType: StackExtensions.Max(Stack<Int64>)
  nameWithType.vb: StackExtensions.Max(Stack(Of Int64))
- uid: Collectathon.Stacks.StackExtensions.Max(Collectathon.Stacks.Stack{Int64},Int64@)
  name: Max(Stack<Int64>, out Int64)
  href: api/Collectathon.Stacks.StackExtensions.html#Collectathon_Stacks_StackExtensions_Max_Collectathon_Stacks_Stack_Int64__Int64__
  commentId: M:Collectathon.Stacks.StackExtensions.Max(Collectathon.Stacks.Stack{Int64},Int64@)
  name.vb: Max(Stack(Of Int64), ByRef Int64)
  fullName: Collectathon.Stacks.StackExtensions.Max(Collectathon.Stacks.Stack<Int64>, out Int64)
  fullName.vb: Collectathon.Stacks.StackExtensions.Max(Collectathon.Stacks.Stack(Of Int64), ByRef Int64)
  nameWithType: StackExtensions.Max(Stack<Int64>, out Int64)
  nameWithType.vb: StackExtensions.Max(Stack(Of Int64), ByRef Int64)
- uid: Collectathon.Stacks.StackExtensions.Max(Collectathon.Stacks.Stack{Single})
  name: Max(Stack<Single>)
  href: api/Collectathon.Stacks.StackExtensions.html#Collectathon_Stacks_StackExtensions_Max_Collectathon_Stacks_Stack_Single__
  commentId: M:Collectathon.Stacks.StackExtensions.Max(Collectathon.Stacks.Stack{Single})
  name.vb: Max(Stack(Of Single))
  fullName: Collectathon.Stacks.StackExtensions.Max(Collectathon.Stacks.Stack<Single>)
  fullName.vb: Collectathon.Stacks.StackExtensions.Max(Collectathon.Stacks.Stack(Of Single))
  nameWithType: StackExtensions.Max(Stack<Single>)
  nameWithType.vb: StackExtensions.Max(Stack(Of Single))
- uid: Collectathon.Stacks.StackExtensions.Max(Collectathon.Stacks.Stack{Single},Single@)
  name: Max(Stack<Single>, out Single)
  href: api/Collectathon.Stacks.StackExtensions.html#Collectathon_Stacks_StackExtensions_Max_Collectathon_Stacks_Stack_Single__Single__
  commentId: M:Collectathon.Stacks.StackExtensions.Max(Collectathon.Stacks.Stack{Single},Single@)
  name.vb: Max(Stack(Of Single), ByRef Single)
  fullName: Collectathon.Stacks.StackExtensions.Max(Collectathon.Stacks.Stack<Single>, out Single)
  fullName.vb: Collectathon.Stacks.StackExtensions.Max(Collectathon.Stacks.Stack(Of Single), ByRef Single)
  nameWithType: StackExtensions.Max(Stack<Single>, out Single)
  nameWithType.vb: StackExtensions.Max(Stack(Of Single), ByRef Single)
- uid: Collectathon.Stacks.StackExtensions.Max*
  name: Max
  href: api/Collectathon.Stacks.StackExtensions.html#Collectathon_Stacks_StackExtensions_Max_
  commentId: Overload:Collectathon.Stacks.StackExtensions.Max
  isSpec: "True"
  fullName: Collectathon.Stacks.StackExtensions.Max
  nameWithType: StackExtensions.Max
- uid: Collectathon.Stacks.StackExtensions.Min(Collectathon.Stacks.Stack{Double})
  name: Min(Stack<Double>)
  href: api/Collectathon.Stacks.StackExtensions.html#Collectathon_Stacks_StackExtensions_Min_Collectathon_Stacks_Stack_Double__
  commentId: M:Collectathon.Stacks.StackExtensions.Min(Collectathon.Stacks.Stack{Double})
  name.vb: Min(Stack(Of Double))
  fullName: Collectathon.Stacks.StackExtensions.Min(Collectathon.Stacks.Stack<Double>)
  fullName.vb: Collectathon.Stacks.StackExtensions.Min(Collectathon.Stacks.Stack(Of Double))
  nameWithType: StackExtensions.Min(Stack<Double>)
  nameWithType.vb: StackExtensions.Min(Stack(Of Double))
- uid: Collectathon.Stacks.StackExtensions.Min(Collectathon.Stacks.Stack{Double},Double@)
  name: Min(Stack<Double>, out Double)
  href: api/Collectathon.Stacks.StackExtensions.html#Collectathon_Stacks_StackExtensions_Min_Collectathon_Stacks_Stack_Double__Double__
  commentId: M:Collectathon.Stacks.StackExtensions.Min(Collectathon.Stacks.Stack{Double},Double@)
  name.vb: Min(Stack(Of Double), ByRef Double)
  fullName: Collectathon.Stacks.StackExtensions.Min(Collectathon.Stacks.Stack<Double>, out Double)
  fullName.vb: Collectathon.Stacks.StackExtensions.Min(Collectathon.Stacks.Stack(Of Double), ByRef Double)
  nameWithType: StackExtensions.Min(Stack<Double>, out Double)
  nameWithType.vb: StackExtensions.Min(Stack(Of Double), ByRef Double)
- uid: Collectathon.Stacks.StackExtensions.Min(Collectathon.Stacks.Stack{Int32})
  name: Min(Stack<Int32>)
  href: api/Collectathon.Stacks.StackExtensions.html#Collectathon_Stacks_StackExtensions_Min_Collectathon_Stacks_Stack_Int32__
  commentId: M:Collectathon.Stacks.StackExtensions.Min(Collectathon.Stacks.Stack{Int32})
  name.vb: Min(Stack(Of Int32))
  fullName: Collectathon.Stacks.StackExtensions.Min(Collectathon.Stacks.Stack<Int32>)
  fullName.vb: Collectathon.Stacks.StackExtensions.Min(Collectathon.Stacks.Stack(Of Int32))
  nameWithType: StackExtensions.Min(Stack<Int32>)
  nameWithType.vb: StackExtensions.Min(Stack(Of Int32))
- uid: Collectathon.Stacks.StackExtensions.Min(Collectathon.Stacks.Stack{Int32},Int32@)
  name: Min(Stack<Int32>, out Int32)
  href: api/Collectathon.Stacks.StackExtensions.html#Collectathon_Stacks_StackExtensions_Min_Collectathon_Stacks_Stack_Int32__Int32__
  commentId: M:Collectathon.Stacks.StackExtensions.Min(Collectathon.Stacks.Stack{Int32},Int32@)
  name.vb: Min(Stack(Of Int32), ByRef Int32)
  fullName: Collectathon.Stacks.StackExtensions.Min(Collectathon.Stacks.Stack<Int32>, out Int32)
  fullName.vb: Collectathon.Stacks.StackExtensions.Min(Collectathon.Stacks.Stack(Of Int32), ByRef Int32)
  nameWithType: StackExtensions.Min(Stack<Int32>, out Int32)
  nameWithType.vb: StackExtensions.Min(Stack(Of Int32), ByRef Int32)
- uid: Collectathon.Stacks.StackExtensions.Min(Collectathon.Stacks.Stack{Int64})
  name: Min(Stack<Int64>)
  href: api/Collectathon.Stacks.StackExtensions.html#Collectathon_Stacks_StackExtensions_Min_Collectathon_Stacks_Stack_Int64__
  commentId: M:Collectathon.Stacks.StackExtensions.Min(Collectathon.Stacks.Stack{Int64})
  name.vb: Min(Stack(Of Int64))
  fullName: Collectathon.Stacks.StackExtensions.Min(Collectathon.Stacks.Stack<Int64>)
  fullName.vb: Collectathon.Stacks.StackExtensions.Min(Collectathon.Stacks.Stack(Of Int64))
  nameWithType: StackExtensions.Min(Stack<Int64>)
  nameWithType.vb: StackExtensions.Min(Stack(Of Int64))
- uid: Collectathon.Stacks.StackExtensions.Min(Collectathon.Stacks.Stack{Int64},Int64@)
  name: Min(Stack<Int64>, out Int64)
  href: api/Collectathon.Stacks.StackExtensions.html#Collectathon_Stacks_StackExtensions_Min_Collectathon_Stacks_Stack_Int64__Int64__
  commentId: M:Collectathon.Stacks.StackExtensions.Min(Collectathon.Stacks.Stack{Int64},Int64@)
  name.vb: Min(Stack(Of Int64), ByRef Int64)
  fullName: Collectathon.Stacks.StackExtensions.Min(Collectathon.Stacks.Stack<Int64>, out Int64)
  fullName.vb: Collectathon.Stacks.StackExtensions.Min(Collectathon.Stacks.Stack(Of Int64), ByRef Int64)
  nameWithType: StackExtensions.Min(Stack<Int64>, out Int64)
  nameWithType.vb: StackExtensions.Min(Stack(Of Int64), ByRef Int64)
- uid: Collectathon.Stacks.StackExtensions.Min(Collectathon.Stacks.Stack{Single})
  name: Min(Stack<Single>)
  href: api/Collectathon.Stacks.StackExtensions.html#Collectathon_Stacks_StackExtensions_Min_Collectathon_Stacks_Stack_Single__
  commentId: M:Collectathon.Stacks.StackExtensions.Min(Collectathon.Stacks.Stack{Single})
  name.vb: Min(Stack(Of Single))
  fullName: Collectathon.Stacks.StackExtensions.Min(Collectathon.Stacks.Stack<Single>)
  fullName.vb: Collectathon.Stacks.StackExtensions.Min(Collectathon.Stacks.Stack(Of Single))
  nameWithType: StackExtensions.Min(Stack<Single>)
  nameWithType.vb: StackExtensions.Min(Stack(Of Single))
- uid: Collectathon.Stacks.StackExtensions.Min(Collectathon.Stacks.Stack{Single},Single@)
  name: Min(Stack<Single>, out Single)
  href: api/Collectathon.Stacks.StackExtensions.html#Collectathon_Stacks_StackExtensions_Min_Collectathon_Stacks_Stack_Single__Single__
  commentId: M:Collectathon.Stacks.StackExtensions.Min(Collectathon.Stacks.Stack{Single},Single@)
  name.vb: Min(Stack(Of Single), ByRef Single)
  fullName: Collectathon.Stacks.StackExtensions.Min(Collectathon.Stacks.Stack<Single>, out Single)
  fullName.vb: Collectathon.Stacks.StackExtensions.Min(Collectathon.Stacks.Stack(Of Single), ByRef Single)
  nameWithType: StackExtensions.Min(Stack<Single>, out Single)
  nameWithType.vb: StackExtensions.Min(Stack(Of Single), ByRef Single)
- uid: Collectathon.Stacks.StackExtensions.Min*
  name: Min
  href: api/Collectathon.Stacks.StackExtensions.html#Collectathon_Stacks_StackExtensions_Min_
  commentId: Overload:Collectathon.Stacks.StackExtensions.Min
  isSpec: "True"
  fullName: Collectathon.Stacks.StackExtensions.Min
  nameWithType: StackExtensions.Min
- uid: Collectathon.Stacks.StackExtensions.Mod(Collectathon.Stacks.Stack{Double})
  name: Mod(Stack<Double>)
  href: api/Collectathon.Stacks.StackExtensions.html#Collectathon_Stacks_StackExtensions_Mod_Collectathon_Stacks_Stack_Double__
  commentId: M:Collectathon.Stacks.StackExtensions.Mod(Collectathon.Stacks.Stack{Double})
  name.vb: Mod(Stack(Of Double))
  fullName: Collectathon.Stacks.StackExtensions.Mod(Collectathon.Stacks.Stack<Double>)
  fullName.vb: Collectathon.Stacks.StackExtensions.Mod(Collectathon.Stacks.Stack(Of Double))
  nameWithType: StackExtensions.Mod(Stack<Double>)
  nameWithType.vb: StackExtensions.Mod(Stack(Of Double))
- uid: Collectathon.Stacks.StackExtensions.Mod(Collectathon.Stacks.Stack{Double},Double@)
  name: Mod(Stack<Double>, out Double)
  href: api/Collectathon.Stacks.StackExtensions.html#Collectathon_Stacks_StackExtensions_Mod_Collectathon_Stacks_Stack_Double__Double__
  commentId: M:Collectathon.Stacks.StackExtensions.Mod(Collectathon.Stacks.Stack{Double},Double@)
  name.vb: Mod(Stack(Of Double), ByRef Double)
  fullName: Collectathon.Stacks.StackExtensions.Mod(Collectathon.Stacks.Stack<Double>, out Double)
  fullName.vb: Collectathon.Stacks.StackExtensions.Mod(Collectathon.Stacks.Stack(Of Double), ByRef Double)
  nameWithType: StackExtensions.Mod(Stack<Double>, out Double)
  nameWithType.vb: StackExtensions.Mod(Stack(Of Double), ByRef Double)
- uid: Collectathon.Stacks.StackExtensions.Mod(Collectathon.Stacks.Stack{Int32})
  name: Mod(Stack<Int32>)
  href: api/Collectathon.Stacks.StackExtensions.html#Collectathon_Stacks_StackExtensions_Mod_Collectathon_Stacks_Stack_Int32__
  commentId: M:Collectathon.Stacks.StackExtensions.Mod(Collectathon.Stacks.Stack{Int32})
  name.vb: Mod(Stack(Of Int32))
  fullName: Collectathon.Stacks.StackExtensions.Mod(Collectathon.Stacks.Stack<Int32>)
  fullName.vb: Collectathon.Stacks.StackExtensions.Mod(Collectathon.Stacks.Stack(Of Int32))
  nameWithType: StackExtensions.Mod(Stack<Int32>)
  nameWithType.vb: StackExtensions.Mod(Stack(Of Int32))
- uid: Collectathon.Stacks.StackExtensions.Mod(Collectathon.Stacks.Stack{Int32},Int32@)
  name: Mod(Stack<Int32>, out Int32)
  href: api/Collectathon.Stacks.StackExtensions.html#Collectathon_Stacks_StackExtensions_Mod_Collectathon_Stacks_Stack_Int32__Int32__
  commentId: M:Collectathon.Stacks.StackExtensions.Mod(Collectathon.Stacks.Stack{Int32},Int32@)
  name.vb: Mod(Stack(Of Int32), ByRef Int32)
  fullName: Collectathon.Stacks.StackExtensions.Mod(Collectathon.Stacks.Stack<Int32>, out Int32)
  fullName.vb: Collectathon.Stacks.StackExtensions.Mod(Collectathon.Stacks.Stack(Of Int32), ByRef Int32)
  nameWithType: StackExtensions.Mod(Stack<Int32>, out Int32)
  nameWithType.vb: StackExtensions.Mod(Stack(Of Int32), ByRef Int32)
- uid: Collectathon.Stacks.StackExtensions.Mod(Collectathon.Stacks.Stack{Int64})
  name: Mod(Stack<Int64>)
  href: api/Collectathon.Stacks.StackExtensions.html#Collectathon_Stacks_StackExtensions_Mod_Collectathon_Stacks_Stack_Int64__
  commentId: M:Collectathon.Stacks.StackExtensions.Mod(Collectathon.Stacks.Stack{Int64})
  name.vb: Mod(Stack(Of Int64))
  fullName: Collectathon.Stacks.StackExtensions.Mod(Collectathon.Stacks.Stack<Int64>)
  fullName.vb: Collectathon.Stacks.StackExtensions.Mod(Collectathon.Stacks.Stack(Of Int64))
  nameWithType: StackExtensions.Mod(Stack<Int64>)
  nameWithType.vb: StackExtensions.Mod(Stack(Of Int64))
- uid: Collectathon.Stacks.StackExtensions.Mod(Collectathon.Stacks.Stack{Int64},Int64@)
  name: Mod(Stack<Int64>, out Int64)
  href: api/Collectathon.Stacks.StackExtensions.html#Collectathon_Stacks_StackExtensions_Mod_Collectathon_Stacks_Stack_Int64__Int64__
  commentId: M:Collectathon.Stacks.StackExtensions.Mod(Collectathon.Stacks.Stack{Int64},Int64@)
  name.vb: Mod(Stack(Of Int64), ByRef Int64)
  fullName: Collectathon.Stacks.StackExtensions.Mod(Collectathon.Stacks.Stack<Int64>, out Int64)
  fullName.vb: Collectathon.Stacks.StackExtensions.Mod(Collectathon.Stacks.Stack(Of Int64), ByRef Int64)
  nameWithType: StackExtensions.Mod(Stack<Int64>, out Int64)
  nameWithType.vb: StackExtensions.Mod(Stack(Of Int64), ByRef Int64)
- uid: Collectathon.Stacks.StackExtensions.Mod(Collectathon.Stacks.Stack{Single})
  name: Mod(Stack<Single>)
  href: api/Collectathon.Stacks.StackExtensions.html#Collectathon_Stacks_StackExtensions_Mod_Collectathon_Stacks_Stack_Single__
  commentId: M:Collectathon.Stacks.StackExtensions.Mod(Collectathon.Stacks.Stack{Single})
  name.vb: Mod(Stack(Of Single))
  fullName: Collectathon.Stacks.StackExtensions.Mod(Collectathon.Stacks.Stack<Single>)
  fullName.vb: Collectathon.Stacks.StackExtensions.Mod(Collectathon.Stacks.Stack(Of Single))
  nameWithType: StackExtensions.Mod(Stack<Single>)
  nameWithType.vb: StackExtensions.Mod(Stack(Of Single))
- uid: Collectathon.Stacks.StackExtensions.Mod(Collectathon.Stacks.Stack{Single},Single@)
  name: Mod(Stack<Single>, out Single)
  href: api/Collectathon.Stacks.StackExtensions.html#Collectathon_Stacks_StackExtensions_Mod_Collectathon_Stacks_Stack_Single__Single__
  commentId: M:Collectathon.Stacks.StackExtensions.Mod(Collectathon.Stacks.Stack{Single},Single@)
  name.vb: Mod(Stack(Of Single), ByRef Single)
  fullName: Collectathon.Stacks.StackExtensions.Mod(Collectathon.Stacks.Stack<Single>, out Single)
  fullName.vb: Collectathon.Stacks.StackExtensions.Mod(Collectathon.Stacks.Stack(Of Single), ByRef Single)
  nameWithType: StackExtensions.Mod(Stack<Single>, out Single)
  nameWithType.vb: StackExtensions.Mod(Stack(Of Single), ByRef Single)
- uid: Collectathon.Stacks.StackExtensions.Mod*
  name: Mod
  href: api/Collectathon.Stacks.StackExtensions.html#Collectathon_Stacks_StackExtensions_Mod_
  commentId: Overload:Collectathon.Stacks.StackExtensions.Mod
  isSpec: "True"
  fullName: Collectathon.Stacks.StackExtensions.Mod
  nameWithType: StackExtensions.Mod
- uid: Collectathon.Stacks.StackExtensions.Mul(Collectathon.Stacks.Stack{Double})
  name: Mul(Stack<Double>)
  href: api/Collectathon.Stacks.StackExtensions.html#Collectathon_Stacks_StackExtensions_Mul_Collectathon_Stacks_Stack_Double__
  commentId: M:Collectathon.Stacks.StackExtensions.Mul(Collectathon.Stacks.Stack{Double})
  name.vb: Mul(Stack(Of Double))
  fullName: Collectathon.Stacks.StackExtensions.Mul(Collectathon.Stacks.Stack<Double>)
  fullName.vb: Collectathon.Stacks.StackExtensions.Mul(Collectathon.Stacks.Stack(Of Double))
  nameWithType: StackExtensions.Mul(Stack<Double>)
  nameWithType.vb: StackExtensions.Mul(Stack(Of Double))
- uid: Collectathon.Stacks.StackExtensions.Mul(Collectathon.Stacks.Stack{Double},Double@)
  name: Mul(Stack<Double>, out Double)
  href: api/Collectathon.Stacks.StackExtensions.html#Collectathon_Stacks_StackExtensions_Mul_Collectathon_Stacks_Stack_Double__Double__
  commentId: M:Collectathon.Stacks.StackExtensions.Mul(Collectathon.Stacks.Stack{Double},Double@)
  name.vb: Mul(Stack(Of Double), ByRef Double)
  fullName: Collectathon.Stacks.StackExtensions.Mul(Collectathon.Stacks.Stack<Double>, out Double)
  fullName.vb: Collectathon.Stacks.StackExtensions.Mul(Collectathon.Stacks.Stack(Of Double), ByRef Double)
  nameWithType: StackExtensions.Mul(Stack<Double>, out Double)
  nameWithType.vb: StackExtensions.Mul(Stack(Of Double), ByRef Double)
- uid: Collectathon.Stacks.StackExtensions.Mul(Collectathon.Stacks.Stack{Int32})
  name: Mul(Stack<Int32>)
  href: api/Collectathon.Stacks.StackExtensions.html#Collectathon_Stacks_StackExtensions_Mul_Collectathon_Stacks_Stack_Int32__
  commentId: M:Collectathon.Stacks.StackExtensions.Mul(Collectathon.Stacks.Stack{Int32})
  name.vb: Mul(Stack(Of Int32))
  fullName: Collectathon.Stacks.StackExtensions.Mul(Collectathon.Stacks.Stack<Int32>)
  fullName.vb: Collectathon.Stacks.StackExtensions.Mul(Collectathon.Stacks.Stack(Of Int32))
  nameWithType: StackExtensions.Mul(Stack<Int32>)
  nameWithType.vb: StackExtensions.Mul(Stack(Of Int32))
- uid: Collectathon.Stacks.StackExtensions.Mul(Collectathon.Stacks.Stack{Int32},Int32@)
  name: Mul(Stack<Int32>, out Int32)
  href: api/Collectathon.Stacks.StackExtensions.html#Collectathon_Stacks_StackExtensions_Mul_Collectathon_Stacks_Stack_Int32__Int32__
  commentId: M:Collectathon.Stacks.StackExtensions.Mul(Collectathon.Stacks.Stack{Int32},Int32@)
  name.vb: Mul(Stack(Of Int32), ByRef Int32)
  fullName: Collectathon.Stacks.StackExtensions.Mul(Collectathon.Stacks.Stack<Int32>, out Int32)
  fullName.vb: Collectathon.Stacks.StackExtensions.Mul(Collectathon.Stacks.Stack(Of Int32), ByRef Int32)
  nameWithType: StackExtensions.Mul(Stack<Int32>, out Int32)
  nameWithType.vb: StackExtensions.Mul(Stack(Of Int32), ByRef Int32)
- uid: Collectathon.Stacks.StackExtensions.Mul(Collectathon.Stacks.Stack{Int64})
  name: Mul(Stack<Int64>)
  href: api/Collectathon.Stacks.StackExtensions.html#Collectathon_Stacks_StackExtensions_Mul_Collectathon_Stacks_Stack_Int64__
  commentId: M:Collectathon.Stacks.StackExtensions.Mul(Collectathon.Stacks.Stack{Int64})
  name.vb: Mul(Stack(Of Int64))
  fullName: Collectathon.Stacks.StackExtensions.Mul(Collectathon.Stacks.Stack<Int64>)
  fullName.vb: Collectathon.Stacks.StackExtensions.Mul(Collectathon.Stacks.Stack(Of Int64))
  nameWithType: StackExtensions.Mul(Stack<Int64>)
  nameWithType.vb: StackExtensions.Mul(Stack(Of Int64))
- uid: Collectathon.Stacks.StackExtensions.Mul(Collectathon.Stacks.Stack{Int64},Int64@)
  name: Mul(Stack<Int64>, out Int64)
  href: api/Collectathon.Stacks.StackExtensions.html#Collectathon_Stacks_StackExtensions_Mul_Collectathon_Stacks_Stack_Int64__Int64__
  commentId: M:Collectathon.Stacks.StackExtensions.Mul(Collectathon.Stacks.Stack{Int64},Int64@)
  name.vb: Mul(Stack(Of Int64), ByRef Int64)
  fullName: Collectathon.Stacks.StackExtensions.Mul(Collectathon.Stacks.Stack<Int64>, out Int64)
  fullName.vb: Collectathon.Stacks.StackExtensions.Mul(Collectathon.Stacks.Stack(Of Int64), ByRef Int64)
  nameWithType: StackExtensions.Mul(Stack<Int64>, out Int64)
  nameWithType.vb: StackExtensions.Mul(Stack(Of Int64), ByRef Int64)
- uid: Collectathon.Stacks.StackExtensions.Mul(Collectathon.Stacks.Stack{Single})
  name: Mul(Stack<Single>)
  href: api/Collectathon.Stacks.StackExtensions.html#Collectathon_Stacks_StackExtensions_Mul_Collectathon_Stacks_Stack_Single__
  commentId: M:Collectathon.Stacks.StackExtensions.Mul(Collectathon.Stacks.Stack{Single})
  name.vb: Mul(Stack(Of Single))
  fullName: Collectathon.Stacks.StackExtensions.Mul(Collectathon.Stacks.Stack<Single>)
  fullName.vb: Collectathon.Stacks.StackExtensions.Mul(Collectathon.Stacks.Stack(Of Single))
  nameWithType: StackExtensions.Mul(Stack<Single>)
  nameWithType.vb: StackExtensions.Mul(Stack(Of Single))
- uid: Collectathon.Stacks.StackExtensions.Mul(Collectathon.Stacks.Stack{Single},Single@)
  name: Mul(Stack<Single>, out Single)
  href: api/Collectathon.Stacks.StackExtensions.html#Collectathon_Stacks_StackExtensions_Mul_Collectathon_Stacks_Stack_Single__Single__
  commentId: M:Collectathon.Stacks.StackExtensions.Mul(Collectathon.Stacks.Stack{Single},Single@)
  name.vb: Mul(Stack(Of Single), ByRef Single)
  fullName: Collectathon.Stacks.StackExtensions.Mul(Collectathon.Stacks.Stack<Single>, out Single)
  fullName.vb: Collectathon.Stacks.StackExtensions.Mul(Collectathon.Stacks.Stack(Of Single), ByRef Single)
  nameWithType: StackExtensions.Mul(Stack<Single>, out Single)
  nameWithType.vb: StackExtensions.Mul(Stack(Of Single), ByRef Single)
- uid: Collectathon.Stacks.StackExtensions.Mul*
  name: Mul
  href: api/Collectathon.Stacks.StackExtensions.html#Collectathon_Stacks_StackExtensions_Mul_
  commentId: Overload:Collectathon.Stacks.StackExtensions.Mul
  isSpec: "True"
  fullName: Collectathon.Stacks.StackExtensions.Mul
  nameWithType: StackExtensions.Mul
- uid: Collectathon.Stacks.StackExtensions.Pow(Collectathon.Stacks.Stack{Double})
  name: Pow(Stack<Double>)
  href: api/Collectathon.Stacks.StackExtensions.html#Collectathon_Stacks_StackExtensions_Pow_Collectathon_Stacks_Stack_Double__
  commentId: M:Collectathon.Stacks.StackExtensions.Pow(Collectathon.Stacks.Stack{Double})
  name.vb: Pow(Stack(Of Double))
  fullName: Collectathon.Stacks.StackExtensions.Pow(Collectathon.Stacks.Stack<Double>)
  fullName.vb: Collectathon.Stacks.StackExtensions.Pow(Collectathon.Stacks.Stack(Of Double))
  nameWithType: StackExtensions.Pow(Stack<Double>)
  nameWithType.vb: StackExtensions.Pow(Stack(Of Double))
- uid: Collectathon.Stacks.StackExtensions.Pow(Collectathon.Stacks.Stack{Double},Double@)
  name: Pow(Stack<Double>, out Double)
  href: api/Collectathon.Stacks.StackExtensions.html#Collectathon_Stacks_StackExtensions_Pow_Collectathon_Stacks_Stack_Double__Double__
  commentId: M:Collectathon.Stacks.StackExtensions.Pow(Collectathon.Stacks.Stack{Double},Double@)
  name.vb: Pow(Stack(Of Double), ByRef Double)
  fullName: Collectathon.Stacks.StackExtensions.Pow(Collectathon.Stacks.Stack<Double>, out Double)
  fullName.vb: Collectathon.Stacks.StackExtensions.Pow(Collectathon.Stacks.Stack(Of Double), ByRef Double)
  nameWithType: StackExtensions.Pow(Stack<Double>, out Double)
  nameWithType.vb: StackExtensions.Pow(Stack(Of Double), ByRef Double)
- uid: Collectathon.Stacks.StackExtensions.Pow*
  name: Pow
  href: api/Collectathon.Stacks.StackExtensions.html#Collectathon_Stacks_StackExtensions_Pow_
  commentId: Overload:Collectathon.Stacks.StackExtensions.Pow
  isSpec: "True"
  fullName: Collectathon.Stacks.StackExtensions.Pow
  nameWithType: StackExtensions.Pow
- uid: Collectathon.Stacks.StackExtensions.Sin(Collectathon.Stacks.Stack{Double})
  name: Sin(Stack<Double>)
  href: api/Collectathon.Stacks.StackExtensions.html#Collectathon_Stacks_StackExtensions_Sin_Collectathon_Stacks_Stack_Double__
  commentId: M:Collectathon.Stacks.StackExtensions.Sin(Collectathon.Stacks.Stack{Double})
  name.vb: Sin(Stack(Of Double))
  fullName: Collectathon.Stacks.StackExtensions.Sin(Collectathon.Stacks.Stack<Double>)
  fullName.vb: Collectathon.Stacks.StackExtensions.Sin(Collectathon.Stacks.Stack(Of Double))
  nameWithType: StackExtensions.Sin(Stack<Double>)
  nameWithType.vb: StackExtensions.Sin(Stack(Of Double))
- uid: Collectathon.Stacks.StackExtensions.Sin(Collectathon.Stacks.Stack{Double},Double@)
  name: Sin(Stack<Double>, out Double)
  href: api/Collectathon.Stacks.StackExtensions.html#Collectathon_Stacks_StackExtensions_Sin_Collectathon_Stacks_Stack_Double__Double__
  commentId: M:Collectathon.Stacks.StackExtensions.Sin(Collectathon.Stacks.Stack{Double},Double@)
  name.vb: Sin(Stack(Of Double), ByRef Double)
  fullName: Collectathon.Stacks.StackExtensions.Sin(Collectathon.Stacks.Stack<Double>, out Double)
  fullName.vb: Collectathon.Stacks.StackExtensions.Sin(Collectathon.Stacks.Stack(Of Double), ByRef Double)
  nameWithType: StackExtensions.Sin(Stack<Double>, out Double)
  nameWithType.vb: StackExtensions.Sin(Stack(Of Double), ByRef Double)
- uid: Collectathon.Stacks.StackExtensions.Sin*
  name: Sin
  href: api/Collectathon.Stacks.StackExtensions.html#Collectathon_Stacks_StackExtensions_Sin_
  commentId: Overload:Collectathon.Stacks.StackExtensions.Sin
  isSpec: "True"
  fullName: Collectathon.Stacks.StackExtensions.Sin
  nameWithType: StackExtensions.Sin
- uid: Collectathon.Stacks.StackExtensions.Sub(Collectathon.Stacks.Stack{Double})
  name: Sub(Stack<Double>)
  href: api/Collectathon.Stacks.StackExtensions.html#Collectathon_Stacks_StackExtensions_Sub_Collectathon_Stacks_Stack_Double__
  commentId: M:Collectathon.Stacks.StackExtensions.Sub(Collectathon.Stacks.Stack{Double})
  name.vb: Sub(Stack(Of Double))
  fullName: Collectathon.Stacks.StackExtensions.Sub(Collectathon.Stacks.Stack<Double>)
  fullName.vb: Collectathon.Stacks.StackExtensions.Sub(Collectathon.Stacks.Stack(Of Double))
  nameWithType: StackExtensions.Sub(Stack<Double>)
  nameWithType.vb: StackExtensions.Sub(Stack(Of Double))
- uid: Collectathon.Stacks.StackExtensions.Sub(Collectathon.Stacks.Stack{Double},Double@)
  name: Sub(Stack<Double>, out Double)
  href: api/Collectathon.Stacks.StackExtensions.html#Collectathon_Stacks_StackExtensions_Sub_Collectathon_Stacks_Stack_Double__Double__
  commentId: M:Collectathon.Stacks.StackExtensions.Sub(Collectathon.Stacks.Stack{Double},Double@)
  name.vb: Sub(Stack(Of Double), ByRef Double)
  fullName: Collectathon.Stacks.StackExtensions.Sub(Collectathon.Stacks.Stack<Double>, out Double)
  fullName.vb: Collectathon.Stacks.StackExtensions.Sub(Collectathon.Stacks.Stack(Of Double), ByRef Double)
  nameWithType: StackExtensions.Sub(Stack<Double>, out Double)
  nameWithType.vb: StackExtensions.Sub(Stack(Of Double), ByRef Double)
- uid: Collectathon.Stacks.StackExtensions.Sub(Collectathon.Stacks.Stack{Int32})
  name: Sub(Stack<Int32>)
  href: api/Collectathon.Stacks.StackExtensions.html#Collectathon_Stacks_StackExtensions_Sub_Collectathon_Stacks_Stack_Int32__
  commentId: M:Collectathon.Stacks.StackExtensions.Sub(Collectathon.Stacks.Stack{Int32})
  name.vb: Sub(Stack(Of Int32))
  fullName: Collectathon.Stacks.StackExtensions.Sub(Collectathon.Stacks.Stack<Int32>)
  fullName.vb: Collectathon.Stacks.StackExtensions.Sub(Collectathon.Stacks.Stack(Of Int32))
  nameWithType: StackExtensions.Sub(Stack<Int32>)
  nameWithType.vb: StackExtensions.Sub(Stack(Of Int32))
- uid: Collectathon.Stacks.StackExtensions.Sub(Collectathon.Stacks.Stack{Int32},Int32@)
  name: Sub(Stack<Int32>, out Int32)
  href: api/Collectathon.Stacks.StackExtensions.html#Collectathon_Stacks_StackExtensions_Sub_Collectathon_Stacks_Stack_Int32__Int32__
  commentId: M:Collectathon.Stacks.StackExtensions.Sub(Collectathon.Stacks.Stack{Int32},Int32@)
  name.vb: Sub(Stack(Of Int32), ByRef Int32)
  fullName: Collectathon.Stacks.StackExtensions.Sub(Collectathon.Stacks.Stack<Int32>, out Int32)
  fullName.vb: Collectathon.Stacks.StackExtensions.Sub(Collectathon.Stacks.Stack(Of Int32), ByRef Int32)
  nameWithType: StackExtensions.Sub(Stack<Int32>, out Int32)
  nameWithType.vb: StackExtensions.Sub(Stack(Of Int32), ByRef Int32)
- uid: Collectathon.Stacks.StackExtensions.Sub(Collectathon.Stacks.Stack{Int64})
  name: Sub(Stack<Int64>)
  href: api/Collectathon.Stacks.StackExtensions.html#Collectathon_Stacks_StackExtensions_Sub_Collectathon_Stacks_Stack_Int64__
  commentId: M:Collectathon.Stacks.StackExtensions.Sub(Collectathon.Stacks.Stack{Int64})
  name.vb: Sub(Stack(Of Int64))
  fullName: Collectathon.Stacks.StackExtensions.Sub(Collectathon.Stacks.Stack<Int64>)
  fullName.vb: Collectathon.Stacks.StackExtensions.Sub(Collectathon.Stacks.Stack(Of Int64))
  nameWithType: StackExtensions.Sub(Stack<Int64>)
  nameWithType.vb: StackExtensions.Sub(Stack(Of Int64))
- uid: Collectathon.Stacks.StackExtensions.Sub(Collectathon.Stacks.Stack{Int64},Int64@)
  name: Sub(Stack<Int64>, out Int64)
  href: api/Collectathon.Stacks.StackExtensions.html#Collectathon_Stacks_StackExtensions_Sub_Collectathon_Stacks_Stack_Int64__Int64__
  commentId: M:Collectathon.Stacks.StackExtensions.Sub(Collectathon.Stacks.Stack{Int64},Int64@)
  name.vb: Sub(Stack(Of Int64), ByRef Int64)
  fullName: Collectathon.Stacks.StackExtensions.Sub(Collectathon.Stacks.Stack<Int64>, out Int64)
  fullName.vb: Collectathon.Stacks.StackExtensions.Sub(Collectathon.Stacks.Stack(Of Int64), ByRef Int64)
  nameWithType: StackExtensions.Sub(Stack<Int64>, out Int64)
  nameWithType.vb: StackExtensions.Sub(Stack(Of Int64), ByRef Int64)
- uid: Collectathon.Stacks.StackExtensions.Sub(Collectathon.Stacks.Stack{Single})
  name: Sub(Stack<Single>)
  href: api/Collectathon.Stacks.StackExtensions.html#Collectathon_Stacks_StackExtensions_Sub_Collectathon_Stacks_Stack_Single__
  commentId: M:Collectathon.Stacks.StackExtensions.Sub(Collectathon.Stacks.Stack{Single})
  name.vb: Sub(Stack(Of Single))
  fullName: Collectathon.Stacks.StackExtensions.Sub(Collectathon.Stacks.Stack<Single>)
  fullName.vb: Collectathon.Stacks.StackExtensions.Sub(Collectathon.Stacks.Stack(Of Single))
  nameWithType: StackExtensions.Sub(Stack<Single>)
  nameWithType.vb: StackExtensions.Sub(Stack(Of Single))
- uid: Collectathon.Stacks.StackExtensions.Sub(Collectathon.Stacks.Stack{Single},Single@)
  name: Sub(Stack<Single>, out Single)
  href: api/Collectathon.Stacks.StackExtensions.html#Collectathon_Stacks_StackExtensions_Sub_Collectathon_Stacks_Stack_Single__Single__
  commentId: M:Collectathon.Stacks.StackExtensions.Sub(Collectathon.Stacks.Stack{Single},Single@)
  name.vb: Sub(Stack(Of Single), ByRef Single)
  fullName: Collectathon.Stacks.StackExtensions.Sub(Collectathon.Stacks.Stack<Single>, out Single)
  fullName.vb: Collectathon.Stacks.StackExtensions.Sub(Collectathon.Stacks.Stack(Of Single), ByRef Single)
  nameWithType: StackExtensions.Sub(Stack<Single>, out Single)
  nameWithType.vb: StackExtensions.Sub(Stack(Of Single), ByRef Single)
- uid: Collectathon.Stacks.StackExtensions.Sub*
  name: Sub
  href: api/Collectathon.Stacks.StackExtensions.html#Collectathon_Stacks_StackExtensions_Sub_
  commentId: Overload:Collectathon.Stacks.StackExtensions.Sub
  isSpec: "True"
  fullName: Collectathon.Stacks.StackExtensions.Sub
  nameWithType: StackExtensions.Sub
- uid: Collectathon.Stacks.StackExtensions.Tan(Collectathon.Stacks.Stack{Double})
  name: Tan(Stack<Double>)
  href: api/Collectathon.Stacks.StackExtensions.html#Collectathon_Stacks_StackExtensions_Tan_Collectathon_Stacks_Stack_Double__
  commentId: M:Collectathon.Stacks.StackExtensions.Tan(Collectathon.Stacks.Stack{Double})
  name.vb: Tan(Stack(Of Double))
  fullName: Collectathon.Stacks.StackExtensions.Tan(Collectathon.Stacks.Stack<Double>)
  fullName.vb: Collectathon.Stacks.StackExtensions.Tan(Collectathon.Stacks.Stack(Of Double))
  nameWithType: StackExtensions.Tan(Stack<Double>)
  nameWithType.vb: StackExtensions.Tan(Stack(Of Double))
- uid: Collectathon.Stacks.StackExtensions.Tan(Collectathon.Stacks.Stack{Double},Double@)
  name: Tan(Stack<Double>, out Double)
  href: api/Collectathon.Stacks.StackExtensions.html#Collectathon_Stacks_StackExtensions_Tan_Collectathon_Stacks_Stack_Double__Double__
  commentId: M:Collectathon.Stacks.StackExtensions.Tan(Collectathon.Stacks.Stack{Double},Double@)
  name.vb: Tan(Stack(Of Double), ByRef Double)
  fullName: Collectathon.Stacks.StackExtensions.Tan(Collectathon.Stacks.Stack<Double>, out Double)
  fullName.vb: Collectathon.Stacks.StackExtensions.Tan(Collectathon.Stacks.Stack(Of Double), ByRef Double)
  nameWithType: StackExtensions.Tan(Stack<Double>, out Double)
  nameWithType.vb: StackExtensions.Tan(Stack(Of Double), ByRef Double)
- uid: Collectathon.Stacks.StackExtensions.Tan*
  name: Tan
  href: api/Collectathon.Stacks.StackExtensions.html#Collectathon_Stacks_StackExtensions_Tan_
  commentId: Overload:Collectathon.Stacks.StackExtensions.Tan
  isSpec: "True"
  fullName: Collectathon.Stacks.StackExtensions.Tan
  nameWithType: StackExtensions.Tan
- uid: Collectathon.Stacks.StackExtensions.Truncate(Collectathon.Stacks.Stack{Double})
  name: Truncate(Stack<Double>)
  href: api/Collectathon.Stacks.StackExtensions.html#Collectathon_Stacks_StackExtensions_Truncate_Collectathon_Stacks_Stack_Double__
  commentId: M:Collectathon.Stacks.StackExtensions.Truncate(Collectathon.Stacks.Stack{Double})
  name.vb: Truncate(Stack(Of Double))
  fullName: Collectathon.Stacks.StackExtensions.Truncate(Collectathon.Stacks.Stack<Double>)
  fullName.vb: Collectathon.Stacks.StackExtensions.Truncate(Collectathon.Stacks.Stack(Of Double))
  nameWithType: StackExtensions.Truncate(Stack<Double>)
  nameWithType.vb: StackExtensions.Truncate(Stack(Of Double))
- uid: Collectathon.Stacks.StackExtensions.Truncate(Collectathon.Stacks.Stack{Double},Double@)
  name: Truncate(Stack<Double>, out Double)
  href: api/Collectathon.Stacks.StackExtensions.html#Collectathon_Stacks_StackExtensions_Truncate_Collectathon_Stacks_Stack_Double__Double__
  commentId: M:Collectathon.Stacks.StackExtensions.Truncate(Collectathon.Stacks.Stack{Double},Double@)
  name.vb: Truncate(Stack(Of Double), ByRef Double)
  fullName: Collectathon.Stacks.StackExtensions.Truncate(Collectathon.Stacks.Stack<Double>, out Double)
  fullName.vb: Collectathon.Stacks.StackExtensions.Truncate(Collectathon.Stacks.Stack(Of Double), ByRef Double)
  nameWithType: StackExtensions.Truncate(Stack<Double>, out Double)
  nameWithType.vb: StackExtensions.Truncate(Stack(Of Double), ByRef Double)
- uid: Collectathon.Stacks.StackExtensions.Truncate*
  name: Truncate
  href: api/Collectathon.Stacks.StackExtensions.html#Collectathon_Stacks_StackExtensions_Truncate_
  commentId: Overload:Collectathon.Stacks.StackExtensions.Truncate
  isSpec: "True"
  fullName: Collectathon.Stacks.StackExtensions.Truncate
  nameWithType: StackExtensions.Truncate
- uid: Langly
  name: Langly
  href: api/Langly.html
  commentId: N:Langly
  fullName: Langly
  nameWithType: Langly
- uid: Langly.Keyword
  name: Keyword
  href: api/Langly.Keyword.html
  commentId: T:Langly.Keyword
  fullName: Langly.Keyword
  nameWithType: Keyword
- uid: Langly.Keyword.#ctor(System.Int32)
  name: Keyword(Int32)
  href: api/Langly.Keyword.html#Langly_Keyword__ctor_System_Int32_
  commentId: M:Langly.Keyword.#ctor(System.Int32)
  fullName: Langly.Keyword.Keyword(System.Int32)
  nameWithType: Keyword.Keyword(Int32)
- uid: Langly.Keyword.#ctor*
  name: Keyword
  href: api/Langly.Keyword.html#Langly_Keyword__ctor_
  commentId: Overload:Langly.Keyword.#ctor
  isSpec: "True"
  fullName: Langly.Keyword.Keyword
  nameWithType: Keyword.Keyword
- uid: Langly.Lexeme
  name: Lexeme
  href: api/Langly.Lexeme.html
  commentId: T:Langly.Lexeme
  fullName: Langly.Lexeme
  nameWithType: Lexeme
- uid: Langly.Lexeme.#ctor(System.Int32)
  name: Lexeme(Int32)
  href: api/Langly.Lexeme.html#Langly_Lexeme__ctor_System_Int32_
  commentId: M:Langly.Lexeme.#ctor(System.Int32)
  fullName: Langly.Lexeme.Lexeme(System.Int32)
  nameWithType: Lexeme.Lexeme(Int32)
- uid: Langly.Lexeme.#ctor*
  name: Lexeme
  href: api/Langly.Lexeme.html#Langly_Lexeme__ctor_
  commentId: Overload:Langly.Lexeme.#ctor
  isSpec: "True"
  fullName: Langly.Lexeme.Lexeme
  nameWithType: Lexeme.Lexeme
- uid: Langly.Lexeme.ToString
  name: ToString()
  href: api/Langly.Lexeme.html#Langly_Lexeme_ToString
  commentId: M:Langly.Lexeme.ToString
  fullName: Langly.Lexeme.ToString()
  nameWithType: Lexeme.ToString()
- uid: Langly.Lexeme.ToString*
  name: ToString
  href: api/Langly.Lexeme.html#Langly_Lexeme_ToString_
  commentId: Overload:Langly.Lexeme.ToString
  isSpec: "True"
  fullName: Langly.Lexeme.ToString
  nameWithType: Lexeme.ToString
- uid: Langly.Literal
  name: Literal
  href: api/Langly.Literal.html
  commentId: T:Langly.Literal
  fullName: Langly.Literal
  nameWithType: Literal
- uid: Langly.Literal.#ctor(System.Int32)
  name: Literal(Int32)
  href: api/Langly.Literal.html#Langly_Literal__ctor_System_Int32_
  commentId: M:Langly.Literal.#ctor(System.Int32)
  fullName: Langly.Literal.Literal(System.Int32)
  nameWithType: Literal.Literal(Int32)
- uid: Langly.Literal.#ctor*
  name: Literal
  href: api/Langly.Literal.html#Langly_Literal__ctor_
  commentId: Overload:Langly.Literal.#ctor
  isSpec: "True"
  fullName: Langly.Literal.Literal
  nameWithType: Literal.Literal
- uid: Langly.Operator
  name: Operator
  href: api/Langly.Operator.html
  commentId: T:Langly.Operator
  fullName: Langly.Operator
  nameWithType: Operator
- uid: Langly.Operator.#ctor(System.Int32)
  name: Operator(Int32)
  href: api/Langly.Operator.html#Langly_Operator__ctor_System_Int32_
  commentId: M:Langly.Operator.#ctor(System.Int32)
  fullName: Langly.Operator.Operator(System.Int32)
  nameWithType: Operator.Operator(Int32)
- uid: Langly.Operator.#ctor*
  name: Operator
  href: api/Langly.Operator.html#Langly_Operator__ctor_
  commentId: Overload:Langly.Operator.#ctor
  isSpec: "True"
  fullName: Langly.Operator.Operator
  nameWithType: Operator.Operator
- uid: Numbersome
  name: Numbersome
  href: api/Numbersome.html
  commentId: N:Numbersome
  fullName: Numbersome
  nameWithType: Numbersome
- uid: Numbersome.ArithmeticExtensions
  name: ArithmeticExtensions
  href: api/Numbersome.ArithmeticExtensions.html
  commentId: T:Numbersome.ArithmeticExtensions
  fullName: Numbersome.ArithmeticExtensions
  nameWithType: ArithmeticExtensions
- uid: Numbersome.ArithmeticExtensions.Product*
  name: Product
  href: api/Numbersome.ArithmeticExtensions.html#Numbersome_ArithmeticExtensions_Product_
  commentId: Overload:Numbersome.ArithmeticExtensions.Product
  isSpec: "True"
  fullName: Numbersome.ArithmeticExtensions.Product
  nameWithType: ArithmeticExtensions.Product
- uid: Numbersome.ArithmeticExtensions.Product``1(System.Traits.ISequence{nint,``0})
  name: Product<TEnumerator>(ISequence<nint, TEnumerator>)
  href: api/Numbersome.ArithmeticExtensions.html#Numbersome_ArithmeticExtensions_Product__1_System_Traits_ISequence_nint___0__
  commentId: M:Numbersome.ArithmeticExtensions.Product``1(System.Traits.ISequence{nint,``0})
  name.vb: Product(Of TEnumerator)(ISequence(Of nint, TEnumerator))
  fullName: Numbersome.ArithmeticExtensions.Product<TEnumerator>(System.Traits.ISequence<nint, TEnumerator>)
  fullName.vb: Numbersome.ArithmeticExtensions.Product(Of TEnumerator)(System.Traits.ISequence(Of nint, TEnumerator))
  nameWithType: ArithmeticExtensions.Product<TEnumerator>(ISequence<nint, TEnumerator>)
  nameWithType.vb: ArithmeticExtensions.Product(Of TEnumerator)(ISequence(Of nint, TEnumerator))
- uid: Numbersome.ArithmeticExtensions.Product``1(System.Traits.ISequence{nuint,``0})
  name: Product<TEnumerator>(ISequence<nuint, TEnumerator>)
  href: api/Numbersome.ArithmeticExtensions.html#Numbersome_ArithmeticExtensions_Product__1_System_Traits_ISequence_nuint___0__
  commentId: M:Numbersome.ArithmeticExtensions.Product``1(System.Traits.ISequence{nuint,``0})
  name.vb: Product(Of TEnumerator)(ISequence(Of nuint, TEnumerator))
  fullName: Numbersome.ArithmeticExtensions.Product<TEnumerator>(System.Traits.ISequence<nuint, TEnumerator>)
  fullName.vb: Numbersome.ArithmeticExtensions.Product(Of TEnumerator)(System.Traits.ISequence(Of nuint, TEnumerator))
  nameWithType: ArithmeticExtensions.Product<TEnumerator>(ISequence<nuint, TEnumerator>)
  nameWithType.vb: ArithmeticExtensions.Product(Of TEnumerator)(ISequence(Of nuint, TEnumerator))
- uid: Numbersome.ArithmeticExtensions.Product``1(System.Traits.ISequence{System.Byte,``0})
  name: Product<TEnumerator>(ISequence<Byte, TEnumerator>)
  href: api/Numbersome.ArithmeticExtensions.html#Numbersome_ArithmeticExtensions_Product__1_System_Traits_ISequence_System_Byte___0__
  commentId: M:Numbersome.ArithmeticExtensions.Product``1(System.Traits.ISequence{System.Byte,``0})
  name.vb: Product(Of TEnumerator)(ISequence(Of Byte, TEnumerator))
  fullName: Numbersome.ArithmeticExtensions.Product<TEnumerator>(System.Traits.ISequence<System.Byte, TEnumerator>)
  fullName.vb: Numbersome.ArithmeticExtensions.Product(Of TEnumerator)(System.Traits.ISequence(Of System.Byte, TEnumerator))
  nameWithType: ArithmeticExtensions.Product<TEnumerator>(ISequence<Byte, TEnumerator>)
  nameWithType.vb: ArithmeticExtensions.Product(Of TEnumerator)(ISequence(Of Byte, TEnumerator))
- uid: Numbersome.ArithmeticExtensions.Product``1(System.Traits.ISequence{System.Double,``0})
  name: Product<TEnumerator>(ISequence<Double, TEnumerator>)
  href: api/Numbersome.ArithmeticExtensions.html#Numbersome_ArithmeticExtensions_Product__1_System_Traits_ISequence_System_Double___0__
  commentId: M:Numbersome.ArithmeticExtensions.Product``1(System.Traits.ISequence{System.Double,``0})
  name.vb: Product(Of TEnumerator)(ISequence(Of Double, TEnumerator))
  fullName: Numbersome.ArithmeticExtensions.Product<TEnumerator>(System.Traits.ISequence<System.Double, TEnumerator>)
  fullName.vb: Numbersome.ArithmeticExtensions.Product(Of TEnumerator)(System.Traits.ISequence(Of System.Double, TEnumerator))
  nameWithType: ArithmeticExtensions.Product<TEnumerator>(ISequence<Double, TEnumerator>)
  nameWithType.vb: ArithmeticExtensions.Product(Of TEnumerator)(ISequence(Of Double, TEnumerator))
- uid: Numbersome.ArithmeticExtensions.Product``1(System.Traits.ISequence{System.Int16,``0})
  name: Product<TEnumerator>(ISequence<Int16, TEnumerator>)
  href: api/Numbersome.ArithmeticExtensions.html#Numbersome_ArithmeticExtensions_Product__1_System_Traits_ISequence_System_Int16___0__
  commentId: M:Numbersome.ArithmeticExtensions.Product``1(System.Traits.ISequence{System.Int16,``0})
  name.vb: Product(Of TEnumerator)(ISequence(Of Int16, TEnumerator))
  fullName: Numbersome.ArithmeticExtensions.Product<TEnumerator>(System.Traits.ISequence<System.Int16, TEnumerator>)
  fullName.vb: Numbersome.ArithmeticExtensions.Product(Of TEnumerator)(System.Traits.ISequence(Of System.Int16, TEnumerator))
  nameWithType: ArithmeticExtensions.Product<TEnumerator>(ISequence<Int16, TEnumerator>)
  nameWithType.vb: ArithmeticExtensions.Product(Of TEnumerator)(ISequence(Of Int16, TEnumerator))
- uid: Numbersome.ArithmeticExtensions.Product``1(System.Traits.ISequence{System.Int32,``0})
  name: Product<TEnumerator>(ISequence<Int32, TEnumerator>)
  href: api/Numbersome.ArithmeticExtensions.html#Numbersome_ArithmeticExtensions_Product__1_System_Traits_ISequence_System_Int32___0__
  commentId: M:Numbersome.ArithmeticExtensions.Product``1(System.Traits.ISequence{System.Int32,``0})
  name.vb: Product(Of TEnumerator)(ISequence(Of Int32, TEnumerator))
  fullName: Numbersome.ArithmeticExtensions.Product<TEnumerator>(System.Traits.ISequence<System.Int32, TEnumerator>)
  fullName.vb: Numbersome.ArithmeticExtensions.Product(Of TEnumerator)(System.Traits.ISequence(Of System.Int32, TEnumerator))
  nameWithType: ArithmeticExtensions.Product<TEnumerator>(ISequence<Int32, TEnumerator>)
  nameWithType.vb: ArithmeticExtensions.Product(Of TEnumerator)(ISequence(Of Int32, TEnumerator))
- uid: Numbersome.ArithmeticExtensions.Product``1(System.Traits.ISequence{System.Int64,``0})
  name: Product<TEnumerator>(ISequence<Int64, TEnumerator>)
  href: api/Numbersome.ArithmeticExtensions.html#Numbersome_ArithmeticExtensions_Product__1_System_Traits_ISequence_System_Int64___0__
  commentId: M:Numbersome.ArithmeticExtensions.Product``1(System.Traits.ISequence{System.Int64,``0})
  name.vb: Product(Of TEnumerator)(ISequence(Of Int64, TEnumerator))
  fullName: Numbersome.ArithmeticExtensions.Product<TEnumerator>(System.Traits.ISequence<System.Int64, TEnumerator>)
  fullName.vb: Numbersome.ArithmeticExtensions.Product(Of TEnumerator)(System.Traits.ISequence(Of System.Int64, TEnumerator))
  nameWithType: ArithmeticExtensions.Product<TEnumerator>(ISequence<Int64, TEnumerator>)
  nameWithType.vb: ArithmeticExtensions.Product(Of TEnumerator)(ISequence(Of Int64, TEnumerator))
- uid: Numbersome.ArithmeticExtensions.Product``1(System.Traits.ISequence{System.SByte,``0})
  name: Product<TEnumerator>(ISequence<SByte, TEnumerator>)
  href: api/Numbersome.ArithmeticExtensions.html#Numbersome_ArithmeticExtensions_Product__1_System_Traits_ISequence_System_SByte___0__
  commentId: M:Numbersome.ArithmeticExtensions.Product``1(System.Traits.ISequence{System.SByte,``0})
  name.vb: Product(Of TEnumerator)(ISequence(Of SByte, TEnumerator))
  fullName: Numbersome.ArithmeticExtensions.Product<TEnumerator>(System.Traits.ISequence<System.SByte, TEnumerator>)
  fullName.vb: Numbersome.ArithmeticExtensions.Product(Of TEnumerator)(System.Traits.ISequence(Of System.SByte, TEnumerator))
  nameWithType: ArithmeticExtensions.Product<TEnumerator>(ISequence<SByte, TEnumerator>)
  nameWithType.vb: ArithmeticExtensions.Product(Of TEnumerator)(ISequence(Of SByte, TEnumerator))
- uid: Numbersome.ArithmeticExtensions.Product``1(System.Traits.ISequence{System.Single,``0})
  name: Product<TEnumerator>(ISequence<Single, TEnumerator>)
  href: api/Numbersome.ArithmeticExtensions.html#Numbersome_ArithmeticExtensions_Product__1_System_Traits_ISequence_System_Single___0__
  commentId: M:Numbersome.ArithmeticExtensions.Product``1(System.Traits.ISequence{System.Single,``0})
  name.vb: Product(Of TEnumerator)(ISequence(Of Single, TEnumerator))
  fullName: Numbersome.ArithmeticExtensions.Product<TEnumerator>(System.Traits.ISequence<System.Single, TEnumerator>)
  fullName.vb: Numbersome.ArithmeticExtensions.Product(Of TEnumerator)(System.Traits.ISequence(Of System.Single, TEnumerator))
  nameWithType: ArithmeticExtensions.Product<TEnumerator>(ISequence<Single, TEnumerator>)
  nameWithType.vb: ArithmeticExtensions.Product(Of TEnumerator)(ISequence(Of Single, TEnumerator))
- uid: Numbersome.ArithmeticExtensions.Product``1(System.Traits.ISequence{System.UInt16,``0})
  name: Product<TEnumerator>(ISequence<UInt16, TEnumerator>)
  href: api/Numbersome.ArithmeticExtensions.html#Numbersome_ArithmeticExtensions_Product__1_System_Traits_ISequence_System_UInt16___0__
  commentId: M:Numbersome.ArithmeticExtensions.Product``1(System.Traits.ISequence{System.UInt16,``0})
  name.vb: Product(Of TEnumerator)(ISequence(Of UInt16, TEnumerator))
  fullName: Numbersome.ArithmeticExtensions.Product<TEnumerator>(System.Traits.ISequence<System.UInt16, TEnumerator>)
  fullName.vb: Numbersome.ArithmeticExtensions.Product(Of TEnumerator)(System.Traits.ISequence(Of System.UInt16, TEnumerator))
  nameWithType: ArithmeticExtensions.Product<TEnumerator>(ISequence<UInt16, TEnumerator>)
  nameWithType.vb: ArithmeticExtensions.Product(Of TEnumerator)(ISequence(Of UInt16, TEnumerator))
- uid: Numbersome.ArithmeticExtensions.Product``1(System.Traits.ISequence{System.UInt32,``0})
  name: Product<TEnumerator>(ISequence<UInt32, TEnumerator>)
  href: api/Numbersome.ArithmeticExtensions.html#Numbersome_ArithmeticExtensions_Product__1_System_Traits_ISequence_System_UInt32___0__
  commentId: M:Numbersome.ArithmeticExtensions.Product``1(System.Traits.ISequence{System.UInt32,``0})
  name.vb: Product(Of TEnumerator)(ISequence(Of UInt32, TEnumerator))
  fullName: Numbersome.ArithmeticExtensions.Product<TEnumerator>(System.Traits.ISequence<System.UInt32, TEnumerator>)
  fullName.vb: Numbersome.ArithmeticExtensions.Product(Of TEnumerator)(System.Traits.ISequence(Of System.UInt32, TEnumerator))
  nameWithType: ArithmeticExtensions.Product<TEnumerator>(ISequence<UInt32, TEnumerator>)
  nameWithType.vb: ArithmeticExtensions.Product(Of TEnumerator)(ISequence(Of UInt32, TEnumerator))
- uid: Numbersome.ArithmeticExtensions.Product``1(System.Traits.ISequence{System.UInt64,``0})
  name: Product<TEnumerator>(ISequence<UInt64, TEnumerator>)
  href: api/Numbersome.ArithmeticExtensions.html#Numbersome_ArithmeticExtensions_Product__1_System_Traits_ISequence_System_UInt64___0__
  commentId: M:Numbersome.ArithmeticExtensions.Product``1(System.Traits.ISequence{System.UInt64,``0})
  name.vb: Product(Of TEnumerator)(ISequence(Of UInt64, TEnumerator))
  fullName: Numbersome.ArithmeticExtensions.Product<TEnumerator>(System.Traits.ISequence<System.UInt64, TEnumerator>)
  fullName.vb: Numbersome.ArithmeticExtensions.Product(Of TEnumerator)(System.Traits.ISequence(Of System.UInt64, TEnumerator))
  nameWithType: ArithmeticExtensions.Product<TEnumerator>(ISequence<UInt64, TEnumerator>)
  nameWithType.vb: ArithmeticExtensions.Product(Of TEnumerator)(ISequence(Of UInt64, TEnumerator))
- uid: Numbersome.ArithmeticExtensions.Sum*
  name: Sum
  href: api/Numbersome.ArithmeticExtensions.html#Numbersome_ArithmeticExtensions_Sum_
  commentId: Overload:Numbersome.ArithmeticExtensions.Sum
  isSpec: "True"
  fullName: Numbersome.ArithmeticExtensions.Sum
  nameWithType: ArithmeticExtensions.Sum
- uid: Numbersome.ArithmeticExtensions.Sum``1(System.Traits.ISequence{nint,``0})
  name: Sum<TEnumerator>(ISequence<nint, TEnumerator>)
  href: api/Numbersome.ArithmeticExtensions.html#Numbersome_ArithmeticExtensions_Sum__1_System_Traits_ISequence_nint___0__
  commentId: M:Numbersome.ArithmeticExtensions.Sum``1(System.Traits.ISequence{nint,``0})
  name.vb: Sum(Of TEnumerator)(ISequence(Of nint, TEnumerator))
  fullName: Numbersome.ArithmeticExtensions.Sum<TEnumerator>(System.Traits.ISequence<nint, TEnumerator>)
  fullName.vb: Numbersome.ArithmeticExtensions.Sum(Of TEnumerator)(System.Traits.ISequence(Of nint, TEnumerator))
  nameWithType: ArithmeticExtensions.Sum<TEnumerator>(ISequence<nint, TEnumerator>)
  nameWithType.vb: ArithmeticExtensions.Sum(Of TEnumerator)(ISequence(Of nint, TEnumerator))
- uid: Numbersome.ArithmeticExtensions.Sum``1(System.Traits.ISequence{nuint,``0})
  name: Sum<TEnumerator>(ISequence<nuint, TEnumerator>)
  href: api/Numbersome.ArithmeticExtensions.html#Numbersome_ArithmeticExtensions_Sum__1_System_Traits_ISequence_nuint___0__
  commentId: M:Numbersome.ArithmeticExtensions.Sum``1(System.Traits.ISequence{nuint,``0})
  name.vb: Sum(Of TEnumerator)(ISequence(Of nuint, TEnumerator))
  fullName: Numbersome.ArithmeticExtensions.Sum<TEnumerator>(System.Traits.ISequence<nuint, TEnumerator>)
  fullName.vb: Numbersome.ArithmeticExtensions.Sum(Of TEnumerator)(System.Traits.ISequence(Of nuint, TEnumerator))
  nameWithType: ArithmeticExtensions.Sum<TEnumerator>(ISequence<nuint, TEnumerator>)
  nameWithType.vb: ArithmeticExtensions.Sum(Of TEnumerator)(ISequence(Of nuint, TEnumerator))
- uid: Numbersome.ArithmeticExtensions.Sum``1(System.Traits.ISequence{System.Byte,``0})
  name: Sum<TEnumerator>(ISequence<Byte, TEnumerator>)
  href: api/Numbersome.ArithmeticExtensions.html#Numbersome_ArithmeticExtensions_Sum__1_System_Traits_ISequence_System_Byte___0__
  commentId: M:Numbersome.ArithmeticExtensions.Sum``1(System.Traits.ISequence{System.Byte,``0})
  name.vb: Sum(Of TEnumerator)(ISequence(Of Byte, TEnumerator))
  fullName: Numbersome.ArithmeticExtensions.Sum<TEnumerator>(System.Traits.ISequence<System.Byte, TEnumerator>)
  fullName.vb: Numbersome.ArithmeticExtensions.Sum(Of TEnumerator)(System.Traits.ISequence(Of System.Byte, TEnumerator))
  nameWithType: ArithmeticExtensions.Sum<TEnumerator>(ISequence<Byte, TEnumerator>)
  nameWithType.vb: ArithmeticExtensions.Sum(Of TEnumerator)(ISequence(Of Byte, TEnumerator))
- uid: Numbersome.ArithmeticExtensions.Sum``1(System.Traits.ISequence{System.Double,``0})
  name: Sum<TEnumerator>(ISequence<Double, TEnumerator>)
  href: api/Numbersome.ArithmeticExtensions.html#Numbersome_ArithmeticExtensions_Sum__1_System_Traits_ISequence_System_Double___0__
  commentId: M:Numbersome.ArithmeticExtensions.Sum``1(System.Traits.ISequence{System.Double,``0})
  name.vb: Sum(Of TEnumerator)(ISequence(Of Double, TEnumerator))
  fullName: Numbersome.ArithmeticExtensions.Sum<TEnumerator>(System.Traits.ISequence<System.Double, TEnumerator>)
  fullName.vb: Numbersome.ArithmeticExtensions.Sum(Of TEnumerator)(System.Traits.ISequence(Of System.Double, TEnumerator))
  nameWithType: ArithmeticExtensions.Sum<TEnumerator>(ISequence<Double, TEnumerator>)
  nameWithType.vb: ArithmeticExtensions.Sum(Of TEnumerator)(ISequence(Of Double, TEnumerator))
- uid: Numbersome.ArithmeticExtensions.Sum``1(System.Traits.ISequence{System.Int16,``0})
  name: Sum<TEnumerator>(ISequence<Int16, TEnumerator>)
  href: api/Numbersome.ArithmeticExtensions.html#Numbersome_ArithmeticExtensions_Sum__1_System_Traits_ISequence_System_Int16___0__
  commentId: M:Numbersome.ArithmeticExtensions.Sum``1(System.Traits.ISequence{System.Int16,``0})
  name.vb: Sum(Of TEnumerator)(ISequence(Of Int16, TEnumerator))
  fullName: Numbersome.ArithmeticExtensions.Sum<TEnumerator>(System.Traits.ISequence<System.Int16, TEnumerator>)
  fullName.vb: Numbersome.ArithmeticExtensions.Sum(Of TEnumerator)(System.Traits.ISequence(Of System.Int16, TEnumerator))
  nameWithType: ArithmeticExtensions.Sum<TEnumerator>(ISequence<Int16, TEnumerator>)
  nameWithType.vb: ArithmeticExtensions.Sum(Of TEnumerator)(ISequence(Of Int16, TEnumerator))
- uid: Numbersome.ArithmeticExtensions.Sum``1(System.Traits.ISequence{System.Int32,``0})
  name: Sum<TEnumerator>(ISequence<Int32, TEnumerator>)
  href: api/Numbersome.ArithmeticExtensions.html#Numbersome_ArithmeticExtensions_Sum__1_System_Traits_ISequence_System_Int32___0__
  commentId: M:Numbersome.ArithmeticExtensions.Sum``1(System.Traits.ISequence{System.Int32,``0})
  name.vb: Sum(Of TEnumerator)(ISequence(Of Int32, TEnumerator))
  fullName: Numbersome.ArithmeticExtensions.Sum<TEnumerator>(System.Traits.ISequence<System.Int32, TEnumerator>)
  fullName.vb: Numbersome.ArithmeticExtensions.Sum(Of TEnumerator)(System.Traits.ISequence(Of System.Int32, TEnumerator))
  nameWithType: ArithmeticExtensions.Sum<TEnumerator>(ISequence<Int32, TEnumerator>)
  nameWithType.vb: ArithmeticExtensions.Sum(Of TEnumerator)(ISequence(Of Int32, TEnumerator))
- uid: Numbersome.ArithmeticExtensions.Sum``1(System.Traits.ISequence{System.Int64,``0})
  name: Sum<TEnumerator>(ISequence<Int64, TEnumerator>)
  href: api/Numbersome.ArithmeticExtensions.html#Numbersome_ArithmeticExtensions_Sum__1_System_Traits_ISequence_System_Int64___0__
  commentId: M:Numbersome.ArithmeticExtensions.Sum``1(System.Traits.ISequence{System.Int64,``0})
  name.vb: Sum(Of TEnumerator)(ISequence(Of Int64, TEnumerator))
  fullName: Numbersome.ArithmeticExtensions.Sum<TEnumerator>(System.Traits.ISequence<System.Int64, TEnumerator>)
  fullName.vb: Numbersome.ArithmeticExtensions.Sum(Of TEnumerator)(System.Traits.ISequence(Of System.Int64, TEnumerator))
  nameWithType: ArithmeticExtensions.Sum<TEnumerator>(ISequence<Int64, TEnumerator>)
  nameWithType.vb: ArithmeticExtensions.Sum(Of TEnumerator)(ISequence(Of Int64, TEnumerator))
- uid: Numbersome.ArithmeticExtensions.Sum``1(System.Traits.ISequence{System.SByte,``0})
  name: Sum<TEnumerator>(ISequence<SByte, TEnumerator>)
  href: api/Numbersome.ArithmeticExtensions.html#Numbersome_ArithmeticExtensions_Sum__1_System_Traits_ISequence_System_SByte___0__
  commentId: M:Numbersome.ArithmeticExtensions.Sum``1(System.Traits.ISequence{System.SByte,``0})
  name.vb: Sum(Of TEnumerator)(ISequence(Of SByte, TEnumerator))
  fullName: Numbersome.ArithmeticExtensions.Sum<TEnumerator>(System.Traits.ISequence<System.SByte, TEnumerator>)
  fullName.vb: Numbersome.ArithmeticExtensions.Sum(Of TEnumerator)(System.Traits.ISequence(Of System.SByte, TEnumerator))
  nameWithType: ArithmeticExtensions.Sum<TEnumerator>(ISequence<SByte, TEnumerator>)
  nameWithType.vb: ArithmeticExtensions.Sum(Of TEnumerator)(ISequence(Of SByte, TEnumerator))
- uid: Numbersome.ArithmeticExtensions.Sum``1(System.Traits.ISequence{System.Single,``0})
  name: Sum<TEnumerator>(ISequence<Single, TEnumerator>)
  href: api/Numbersome.ArithmeticExtensions.html#Numbersome_ArithmeticExtensions_Sum__1_System_Traits_ISequence_System_Single___0__
  commentId: M:Numbersome.ArithmeticExtensions.Sum``1(System.Traits.ISequence{System.Single,``0})
  name.vb: Sum(Of TEnumerator)(ISequence(Of Single, TEnumerator))
  fullName: Numbersome.ArithmeticExtensions.Sum<TEnumerator>(System.Traits.ISequence<System.Single, TEnumerator>)
  fullName.vb: Numbersome.ArithmeticExtensions.Sum(Of TEnumerator)(System.Traits.ISequence(Of System.Single, TEnumerator))
  nameWithType: ArithmeticExtensions.Sum<TEnumerator>(ISequence<Single, TEnumerator>)
  nameWithType.vb: ArithmeticExtensions.Sum(Of TEnumerator)(ISequence(Of Single, TEnumerator))
- uid: Numbersome.ArithmeticExtensions.Sum``1(System.Traits.ISequence{System.UInt16,``0})
  name: Sum<TEnumerator>(ISequence<UInt16, TEnumerator>)
  href: api/Numbersome.ArithmeticExtensions.html#Numbersome_ArithmeticExtensions_Sum__1_System_Traits_ISequence_System_UInt16___0__
  commentId: M:Numbersome.ArithmeticExtensions.Sum``1(System.Traits.ISequence{System.UInt16,``0})
  name.vb: Sum(Of TEnumerator)(ISequence(Of UInt16, TEnumerator))
  fullName: Numbersome.ArithmeticExtensions.Sum<TEnumerator>(System.Traits.ISequence<System.UInt16, TEnumerator>)
  fullName.vb: Numbersome.ArithmeticExtensions.Sum(Of TEnumerator)(System.Traits.ISequence(Of System.UInt16, TEnumerator))
  nameWithType: ArithmeticExtensions.Sum<TEnumerator>(ISequence<UInt16, TEnumerator>)
  nameWithType.vb: ArithmeticExtensions.Sum(Of TEnumerator)(ISequence(Of UInt16, TEnumerator))
- uid: Numbersome.ArithmeticExtensions.Sum``1(System.Traits.ISequence{System.UInt32,``0})
  name: Sum<TEnumerator>(ISequence<UInt32, TEnumerator>)
  href: api/Numbersome.ArithmeticExtensions.html#Numbersome_ArithmeticExtensions_Sum__1_System_Traits_ISequence_System_UInt32___0__
  commentId: M:Numbersome.ArithmeticExtensions.Sum``1(System.Traits.ISequence{System.UInt32,``0})
  name.vb: Sum(Of TEnumerator)(ISequence(Of UInt32, TEnumerator))
  fullName: Numbersome.ArithmeticExtensions.Sum<TEnumerator>(System.Traits.ISequence<System.UInt32, TEnumerator>)
  fullName.vb: Numbersome.ArithmeticExtensions.Sum(Of TEnumerator)(System.Traits.ISequence(Of System.UInt32, TEnumerator))
  nameWithType: ArithmeticExtensions.Sum<TEnumerator>(ISequence<UInt32, TEnumerator>)
  nameWithType.vb: ArithmeticExtensions.Sum(Of TEnumerator)(ISequence(Of UInt32, TEnumerator))
- uid: Numbersome.ArithmeticExtensions.Sum``1(System.Traits.ISequence{System.UInt64,``0})
  name: Sum<TEnumerator>(ISequence<UInt64, TEnumerator>)
  href: api/Numbersome.ArithmeticExtensions.html#Numbersome_ArithmeticExtensions_Sum__1_System_Traits_ISequence_System_UInt64___0__
  commentId: M:Numbersome.ArithmeticExtensions.Sum``1(System.Traits.ISequence{System.UInt64,``0})
  name.vb: Sum(Of TEnumerator)(ISequence(Of UInt64, TEnumerator))
  fullName: Numbersome.ArithmeticExtensions.Sum<TEnumerator>(System.Traits.ISequence<System.UInt64, TEnumerator>)
  fullName.vb: Numbersome.ArithmeticExtensions.Sum(Of TEnumerator)(System.Traits.ISequence(Of System.UInt64, TEnumerator))
  nameWithType: ArithmeticExtensions.Sum<TEnumerator>(ISequence<UInt64, TEnumerator>)
  nameWithType.vb: ArithmeticExtensions.Sum(Of TEnumerator)(ISequence(Of UInt64, TEnumerator))
- uid: Numbersome.Counter`1
  name: Counter<TElement>
  href: api/Numbersome.Counter-1.html
  commentId: T:Numbersome.Counter`1
  name.vb: Counter(Of TElement)
  fullName: Numbersome.Counter<TElement>
  fullName.vb: Numbersome.Counter(Of TElement)
  nameWithType: Counter<TElement>
  nameWithType.vb: Counter(Of TElement)
- uid: Numbersome.Counter`1.#ctor
  name: Counter()
  href: api/Numbersome.Counter-1.html#Numbersome_Counter_1__ctor
  commentId: M:Numbersome.Counter`1.#ctor
  fullName: Numbersome.Counter<TElement>.Counter()
  fullName.vb: Numbersome.Counter(Of TElement).Counter()
  nameWithType: Counter<TElement>.Counter()
  nameWithType.vb: Counter(Of TElement).Counter()
- uid: Numbersome.Counter`1.#ctor*
  name: Counter
  href: api/Numbersome.Counter-1.html#Numbersome_Counter_1__ctor_
  commentId: Overload:Numbersome.Counter`1.#ctor
  isSpec: "True"
  fullName: Numbersome.Counter<TElement>.Counter
  fullName.vb: Numbersome.Counter(Of TElement).Counter
  nameWithType: Counter<TElement>.Counter
  nameWithType.vb: Counter(Of TElement).Counter
- uid: Numbersome.Counter`1.Add(`0)
  name: Add(TElement)
  href: api/Numbersome.Counter-1.html#Numbersome_Counter_1_Add__0_
  commentId: M:Numbersome.Counter`1.Add(`0)
  fullName: Numbersome.Counter<TElement>.Add(TElement)
  fullName.vb: Numbersome.Counter(Of TElement).Add(TElement)
  nameWithType: Counter<TElement>.Add(TElement)
  nameWithType.vb: Counter(Of TElement).Add(TElement)
- uid: Numbersome.Counter`1.Add*
  name: Add
  href: api/Numbersome.Counter-1.html#Numbersome_Counter_1_Add_
  commentId: Overload:Numbersome.Counter`1.Add
  isSpec: "True"
  fullName: Numbersome.Counter<TElement>.Add
  fullName.vb: Numbersome.Counter(Of TElement).Add
  nameWithType: Counter<TElement>.Add
  nameWithType.vb: Counter(Of TElement).Add
- uid: Numbersome.Counter`1.Clear
  name: Clear()
  href: api/Numbersome.Counter-1.html#Numbersome_Counter_1_Clear
  commentId: M:Numbersome.Counter`1.Clear
  fullName: Numbersome.Counter<TElement>.Clear()
  fullName.vb: Numbersome.Counter(Of TElement).Clear()
  nameWithType: Counter<TElement>.Clear()
  nameWithType.vb: Counter(Of TElement).Clear()
- uid: Numbersome.Counter`1.Clear*
  name: Clear
  href: api/Numbersome.Counter-1.html#Numbersome_Counter_1_Clear_
  commentId: Overload:Numbersome.Counter`1.Clear
  isSpec: "True"
  fullName: Numbersome.Counter<TElement>.Clear
  fullName.vb: Numbersome.Counter(Of TElement).Clear
  nameWithType: Counter<TElement>.Clear
  nameWithType.vb: Counter(Of TElement).Clear
- uid: Numbersome.Counter`1.Contains(`0)
  name: Contains(TElement)
  href: api/Numbersome.Counter-1.html#Numbersome_Counter_1_Contains__0_
  commentId: M:Numbersome.Counter`1.Contains(`0)
  fullName: Numbersome.Counter<TElement>.Contains(TElement)
  fullName.vb: Numbersome.Counter(Of TElement).Contains(TElement)
  nameWithType: Counter<TElement>.Contains(TElement)
  nameWithType.vb: Counter(Of TElement).Contains(TElement)
- uid: Numbersome.Counter`1.Contains*
  name: Contains
  href: api/Numbersome.Counter-1.html#Numbersome_Counter_1_Contains_
  commentId: Overload:Numbersome.Counter`1.Contains
  isSpec: "True"
  fullName: Numbersome.Counter<TElement>.Contains
  fullName.vb: Numbersome.Counter(Of TElement).Contains
  nameWithType: Counter<TElement>.Contains
  nameWithType.vb: Counter(Of TElement).Contains
- uid: Numbersome.Counter`1.Count
  name: Count
  href: api/Numbersome.Counter-1.html#Numbersome_Counter_1_Count
  commentId: P:Numbersome.Counter`1.Count
  fullName: Numbersome.Counter<TElement>.Count
  fullName.vb: Numbersome.Counter(Of TElement).Count
  nameWithType: Counter<TElement>.Count
  nameWithType.vb: Counter(Of TElement).Count
- uid: Numbersome.Counter`1.Count*
  name: Count
  href: api/Numbersome.Counter-1.html#Numbersome_Counter_1_Count_
  commentId: Overload:Numbersome.Counter`1.Count
  isSpec: "True"
  fullName: Numbersome.Counter<TElement>.Count
  fullName.vb: Numbersome.Counter(Of TElement).Count
  nameWithType: Counter<TElement>.Count
  nameWithType.vb: Counter(Of TElement).Count
- uid: Numbersome.Counter`1.GetEnumerator
  name: GetEnumerator()
  href: api/Numbersome.Counter-1.html#Numbersome_Counter_1_GetEnumerator
  commentId: M:Numbersome.Counter`1.GetEnumerator
  fullName: Numbersome.Counter<TElement>.GetEnumerator()
  fullName.vb: Numbersome.Counter(Of TElement).GetEnumerator()
  nameWithType: Counter<TElement>.GetEnumerator()
  nameWithType.vb: Counter(Of TElement).GetEnumerator()
- uid: Numbersome.Counter`1.GetEnumerator*
  name: GetEnumerator
  href: api/Numbersome.Counter-1.html#Numbersome_Counter_1_GetEnumerator_
  commentId: Overload:Numbersome.Counter`1.GetEnumerator
  isSpec: "True"
  fullName: Numbersome.Counter<TElement>.GetEnumerator
  fullName.vb: Numbersome.Counter(Of TElement).GetEnumerator
  nameWithType: Counter<TElement>.GetEnumerator
  nameWithType.vb: Counter(Of TElement).GetEnumerator
- uid: Numbersome.Counter`1.Highest
  name: Highest
  href: api/Numbersome.Counter-1.html#Numbersome_Counter_1_Highest
  commentId: P:Numbersome.Counter`1.Highest
  fullName: Numbersome.Counter<TElement>.Highest
  fullName.vb: Numbersome.Counter(Of TElement).Highest
  nameWithType: Counter<TElement>.Highest
  nameWithType.vb: Counter(Of TElement).Highest
- uid: Numbersome.Counter`1.Highest*
  name: Highest
  href: api/Numbersome.Counter-1.html#Numbersome_Counter_1_Highest_
  commentId: Overload:Numbersome.Counter`1.Highest
  isSpec: "True"
  fullName: Numbersome.Counter<TElement>.Highest
  fullName.vb: Numbersome.Counter(Of TElement).Highest
  nameWithType: Counter<TElement>.Highest
  nameWithType.vb: Counter(Of TElement).Highest
- uid: Numbersome.Counter`1.Item(`0)
  name: Item[TElement]
  href: api/Numbersome.Counter-1.html#Numbersome_Counter_1_Item__0_
  commentId: P:Numbersome.Counter`1.Item(`0)
  name.vb: Item(TElement)
  fullName: Numbersome.Counter<TElement>.Item[TElement]
  fullName.vb: Numbersome.Counter(Of TElement).Item(TElement)
  nameWithType: Counter<TElement>.Item[TElement]
  nameWithType.vb: Counter(Of TElement).Item(TElement)
- uid: Numbersome.Counter`1.Item*
  name: Item
  href: api/Numbersome.Counter-1.html#Numbersome_Counter_1_Item_
  commentId: Overload:Numbersome.Counter`1.Item
  isSpec: "True"
  fullName: Numbersome.Counter<TElement>.Item
  fullName.vb: Numbersome.Counter(Of TElement).Item
  nameWithType: Counter<TElement>.Item
  nameWithType.vb: Counter(Of TElement).Item
- uid: Numbersome.Counter`1.Lowest
  name: Lowest
  href: api/Numbersome.Counter-1.html#Numbersome_Counter_1_Lowest
  commentId: P:Numbersome.Counter`1.Lowest
  fullName: Numbersome.Counter<TElement>.Lowest
  fullName.vb: Numbersome.Counter(Of TElement).Lowest
  nameWithType: Counter<TElement>.Lowest
  nameWithType.vb: Counter(Of TElement).Lowest
- uid: Numbersome.Counter`1.Lowest*
  name: Lowest
  href: api/Numbersome.Counter-1.html#Numbersome_Counter_1_Lowest_
  commentId: Overload:Numbersome.Counter`1.Lowest
  isSpec: "True"
  fullName: Numbersome.Counter<TElement>.Lowest
  fullName.vb: Numbersome.Counter(Of TElement).Lowest
  nameWithType: Counter<TElement>.Lowest
  nameWithType.vb: Counter(Of TElement).Lowest
- uid: Numbersome.Counter`1.System#Collections#Generic#IEnumerable{(TElementElement,nintCount)}#GetEnumerator
  name: IEnumerable<(TElement Element, nint Count)>.GetEnumerator()
  href: api/Numbersome.Counter-1.html#Numbersome_Counter_1_System_Collections_Generic_IEnumerable__TElementElement_nintCount___GetEnumerator
  commentId: M:Numbersome.Counter`1.System#Collections#Generic#IEnumerable{(TElementElement,nintCount)}#GetEnumerator
  name.vb: System.Collections.Generic.IEnumerable<(TElementElement,nintCount)>.GetEnumerator()
  fullName: Numbersome.Counter<TElement>.System.Collections.Generic.IEnumerable<System.ValueTuple<TElement, nint>>.GetEnumerator()
  fullName.vb: Numbersome.Counter(Of TElement).System.Collections.Generic.IEnumerable<(TElementElement,nintCount)>.GetEnumerator()
  nameWithType: Counter<TElement>.IEnumerable<(TElement Element, nint Count)>.GetEnumerator()
  nameWithType.vb: Counter(Of TElement).System.Collections.Generic.IEnumerable<(TElementElement,nintCount)>.GetEnumerator()
- uid: Numbersome.Counter`1.System#Collections#Generic#IEnumerable{*
  name: IEnumerable<(TElement Element, nint Count)>.GetEnumerator
  href: api/Numbersome.Counter-1.html#Numbersome_Counter_1_System_Collections_Generic_IEnumerable__
  commentId: Overload:Numbersome.Counter`1.System#Collections#Generic#IEnumerable{
  isSpec: "True"
  name.vb: System.Collections.Generic.IEnumerable<(TElementElement,nintCount)>.GetEnumerator
  fullName: Numbersome.Counter<TElement>.System.Collections.Generic.IEnumerable<System.ValueTuple<TElement, nint>>.GetEnumerator
  fullName.vb: Numbersome.Counter(Of TElement).System.Collections.Generic.IEnumerable<(TElementElement,nintCount)>.GetEnumerator
  nameWithType: Counter<TElement>.IEnumerable<(TElement Element, nint Count)>.GetEnumerator
  nameWithType.vb: Counter(Of TElement).System.Collections.Generic.IEnumerable<(TElementElement,nintCount)>.GetEnumerator
- uid: Numbersome.Counter`1.System#Collections#IEnumerable#GetEnumerator
  name: IEnumerable.GetEnumerator()
  href: api/Numbersome.Counter-1.html#Numbersome_Counter_1_System_Collections_IEnumerable_GetEnumerator
  commentId: M:Numbersome.Counter`1.System#Collections#IEnumerable#GetEnumerator
  name.vb: System.Collections.IEnumerable.GetEnumerator()
  fullName: Numbersome.Counter<TElement>.System.Collections.IEnumerable.GetEnumerator()
  fullName.vb: Numbersome.Counter(Of TElement).System.Collections.IEnumerable.GetEnumerator()
  nameWithType: Counter<TElement>.IEnumerable.GetEnumerator()
  nameWithType.vb: Counter(Of TElement).System.Collections.IEnumerable.GetEnumerator()
- uid: Numbersome.Counter`1.System#Collections#IEnumerable#GetEnumerator*
  name: IEnumerable.GetEnumerator
  href: api/Numbersome.Counter-1.html#Numbersome_Counter_1_System_Collections_IEnumerable_GetEnumerator_
  commentId: Overload:Numbersome.Counter`1.System#Collections#IEnumerable#GetEnumerator
  isSpec: "True"
  name.vb: System.Collections.IEnumerable.GetEnumerator
  fullName: Numbersome.Counter<TElement>.System.Collections.IEnumerable.GetEnumerator
  fullName.vb: Numbersome.Counter(Of TElement).System.Collections.IEnumerable.GetEnumerator
  nameWithType: Counter<TElement>.IEnumerable.GetEnumerator
  nameWithType.vb: Counter(Of TElement).System.Collections.IEnumerable.GetEnumerator
- uid: Numbersome.Counter`1.ToString
  name: ToString()
  href: api/Numbersome.Counter-1.html#Numbersome_Counter_1_ToString
  commentId: M:Numbersome.Counter`1.ToString
  fullName: Numbersome.Counter<TElement>.ToString()
  fullName.vb: Numbersome.Counter(Of TElement).ToString()
  nameWithType: Counter<TElement>.ToString()
  nameWithType.vb: Counter(Of TElement).ToString()
- uid: Numbersome.Counter`1.ToString(nint)
  name: ToString(nint)
  href: api/Numbersome.Counter-1.html#Numbersome_Counter_1_ToString_nint_
  commentId: M:Numbersome.Counter`1.ToString(nint)
  fullName: Numbersome.Counter<TElement>.ToString(nint)
  fullName.vb: Numbersome.Counter(Of TElement).ToString(nint)
  nameWithType: Counter<TElement>.ToString(nint)
  nameWithType.vb: Counter(Of TElement).ToString(nint)
- uid: Numbersome.Counter`1.ToString*
  name: ToString
  href: api/Numbersome.Counter-1.html#Numbersome_Counter_1_ToString_
  commentId: Overload:Numbersome.Counter`1.ToString
  isSpec: "True"
  fullName: Numbersome.Counter<TElement>.ToString
  fullName.vb: Numbersome.Counter(Of TElement).ToString
  nameWithType: Counter<TElement>.ToString
  nameWithType.vb: Counter(Of TElement).ToString
- uid: Numbersome.Random
  name: Random
  href: api/Numbersome.Random.html
  commentId: T:Numbersome.Random
  fullName: Numbersome.Random
  nameWithType: Random
- uid: Numbersome.Random.#ctor
  name: Random()
  href: api/Numbersome.Random.html#Numbersome_Random__ctor
  commentId: M:Numbersome.Random.#ctor
  fullName: Numbersome.Random.Random()
  nameWithType: Random.Random()
- uid: Numbersome.Random.#ctor(Numbersome.Random.Generator)
  name: Random(Random.Generator)
  href: api/Numbersome.Random.html#Numbersome_Random__ctor_Numbersome_Random_Generator_
  commentId: M:Numbersome.Random.#ctor(Numbersome.Random.Generator)
  fullName: Numbersome.Random.Random(Numbersome.Random.Generator)
  nameWithType: Random.Random(Random.Generator)
- uid: Numbersome.Random.#ctor(System.Int32)
  name: Random(Int32)
  href: api/Numbersome.Random.html#Numbersome_Random__ctor_System_Int32_
  commentId: M:Numbersome.Random.#ctor(System.Int32)
  fullName: Numbersome.Random.Random(System.Int32)
  nameWithType: Random.Random(Int32)
- uid: Numbersome.Random.#ctor*
  name: Random
  href: api/Numbersome.Random.html#Numbersome_Random__ctor_
  commentId: Overload:Numbersome.Random.#ctor
  isSpec: "True"
  fullName: Numbersome.Random.Random
  nameWithType: Random.Random
- uid: Numbersome.Random.Generator
  name: Random.Generator
  href: api/Numbersome.Random.Generator.html
  commentId: T:Numbersome.Random.Generator
  fullName: Numbersome.Random.Generator
  nameWithType: Random.Generator
- uid: Numbersome.Random.Generator.#ctor
  name: Generator()
  href: api/Numbersome.Random.Generator.html#Numbersome_Random_Generator__ctor
  commentId: M:Numbersome.Random.Generator.#ctor
  fullName: Numbersome.Random.Generator.Generator()
  nameWithType: Random.Generator.Generator()
- uid: Numbersome.Random.Generator.#ctor*
  name: Generator
  href: api/Numbersome.Random.Generator.html#Numbersome_Random_Generator__ctor_
  commentId: Overload:Numbersome.Random.Generator.#ctor
  isSpec: "True"
  fullName: Numbersome.Random.Generator.Generator
  nameWithType: Random.Generator.Generator
- uid: Numbersome.Random.Generator.Readable
  name: Readable
  href: api/Numbersome.Random.Generator.html#Numbersome_Random_Generator_Readable
  commentId: P:Numbersome.Random.Generator.Readable
  fullName: Numbersome.Random.Generator.Readable
  nameWithType: Random.Generator.Readable
- uid: Numbersome.Random.Generator.Readable*
  name: Readable
  href: api/Numbersome.Random.Generator.html#Numbersome_Random_Generator_Readable_
  commentId: Overload:Numbersome.Random.Generator.Readable
  isSpec: "True"
  fullName: Numbersome.Random.Generator.Readable
  nameWithType: Random.Generator.Readable
- uid: Numbersome.Random.Generator.Seek(nint)
  name: Seek(nint)
  href: api/Numbersome.Random.Generator.html#Numbersome_Random_Generator_Seek_nint_
  commentId: M:Numbersome.Random.Generator.Seek(nint)
  fullName: Numbersome.Random.Generator.Seek(nint)
  nameWithType: Random.Generator.Seek(nint)
- uid: Numbersome.Random.Generator.Seek*
  name: Seek
  href: api/Numbersome.Random.Generator.html#Numbersome_Random_Generator_Seek_
  commentId: Overload:Numbersome.Random.Generator.Seek
  isSpec: "True"
  fullName: Numbersome.Random.Generator.Seek
  nameWithType: Random.Generator.Seek
- uid: Numbersome.Random.Generator.Seekable
  name: Seekable
  href: api/Numbersome.Random.Generator.html#Numbersome_Random_Generator_Seekable
  commentId: P:Numbersome.Random.Generator.Seekable
  fullName: Numbersome.Random.Generator.Seekable
  nameWithType: Random.Generator.Seekable
- uid: Numbersome.Random.Generator.Seekable*
  name: Seekable
  href: api/Numbersome.Random.Generator.html#Numbersome_Random_Generator_Seekable_
  commentId: Overload:Numbersome.Random.Generator.Seekable
  isSpec: "True"
  fullName: Numbersome.Random.Generator.Seekable
  nameWithType: Random.Generator.Seekable
- uid: Numbersome.Random.Generator.Writable
  name: Writable
  href: api/Numbersome.Random.Generator.html#Numbersome_Random_Generator_Writable
  commentId: P:Numbersome.Random.Generator.Writable
  fullName: Numbersome.Random.Generator.Writable
  nameWithType: Random.Generator.Writable
- uid: Numbersome.Random.Generator.Writable*
  name: Writable
  href: api/Numbersome.Random.Generator.html#Numbersome_Random_Generator_Writable_
  commentId: Overload:Numbersome.Random.Generator.Writable
  isSpec: "True"
  fullName: Numbersome.Random.Generator.Writable
  nameWithType: Random.Generator.Writable
- uid: Numbersome.Random.Generator.Write(System.Byte)
  name: Write(Byte)
  href: api/Numbersome.Random.Generator.html#Numbersome_Random_Generator_Write_System_Byte_
  commentId: M:Numbersome.Random.Generator.Write(System.Byte)
  fullName: Numbersome.Random.Generator.Write(System.Byte)
  nameWithType: Random.Generator.Write(Byte)
- uid: Numbersome.Random.Generator.Write*
  name: Write
  href: api/Numbersome.Random.Generator.html#Numbersome_Random_Generator_Write_
  commentId: Overload:Numbersome.Random.Generator.Write
  isSpec: "True"
  fullName: Numbersome.Random.Generator.Write
  nameWithType: Random.Generator.Write
- uid: Numbersome.Random.Next
  name: Next()
  href: api/Numbersome.Random.html#Numbersome_Random_Next
  commentId: M:Numbersome.Random.Next
  fullName: Numbersome.Random.Next()
  nameWithType: Random.Next()
- uid: Numbersome.Random.Next(System.Int32)
  name: Next(Int32)
  href: api/Numbersome.Random.html#Numbersome_Random_Next_System_Int32_
  commentId: M:Numbersome.Random.Next(System.Int32)
  fullName: Numbersome.Random.Next(System.Int32)
  nameWithType: Random.Next(Int32)
- uid: Numbersome.Random.Next(System.Int32,System.Int32)
  name: Next(Int32, Int32)
  href: api/Numbersome.Random.html#Numbersome_Random_Next_System_Int32_System_Int32_
  commentId: M:Numbersome.Random.Next(System.Int32,System.Int32)
  fullName: Numbersome.Random.Next(System.Int32, System.Int32)
  nameWithType: Random.Next(Int32, Int32)
- uid: Numbersome.Random.Next*
  name: Next
  href: api/Numbersome.Random.html#Numbersome_Random_Next_
  commentId: Overload:Numbersome.Random.Next
  isSpec: "True"
  fullName: Numbersome.Random.Next
  nameWithType: Random.Next
- uid: Numbersome.Random.NextBoolean
  name: NextBoolean()
  href: api/Numbersome.Random.html#Numbersome_Random_NextBoolean
  commentId: M:Numbersome.Random.NextBoolean
  fullName: Numbersome.Random.NextBoolean()
  nameWithType: Random.NextBoolean()
- uid: Numbersome.Random.NextBoolean*
  name: NextBoolean
  href: api/Numbersome.Random.html#Numbersome_Random_NextBoolean_
  commentId: Overload:Numbersome.Random.NextBoolean
  isSpec: "True"
  fullName: Numbersome.Random.NextBoolean
  nameWithType: Random.NextBoolean
- uid: Numbersome.Random.NextBooleans(nint)
  name: NextBooleans(nint)
  href: api/Numbersome.Random.html#Numbersome_Random_NextBooleans_nint_
  commentId: M:Numbersome.Random.NextBooleans(nint)
  fullName: Numbersome.Random.NextBooleans(nint)
  nameWithType: Random.NextBooleans(nint)
- uid: Numbersome.Random.NextBooleans(System.Boolean[])
  name: NextBooleans(Boolean[])
  href: api/Numbersome.Random.html#Numbersome_Random_NextBooleans_System_Boolean___
  commentId: M:Numbersome.Random.NextBooleans(System.Boolean[])
  name.vb: NextBooleans(Boolean())
  fullName: Numbersome.Random.NextBooleans(System.Boolean[])
  fullName.vb: Numbersome.Random.NextBooleans(System.Boolean())
  nameWithType: Random.NextBooleans(Boolean[])
  nameWithType.vb: Random.NextBooleans(Boolean())
- uid: Numbersome.Random.NextBooleans(System.Memory{System.Boolean})
  name: NextBooleans(Memory<Boolean>)
  href: api/Numbersome.Random.html#Numbersome_Random_NextBooleans_System_Memory_System_Boolean__
  commentId: M:Numbersome.Random.NextBooleans(System.Memory{System.Boolean})
  name.vb: NextBooleans(Memory(Of Boolean))
  fullName: Numbersome.Random.NextBooleans(System.Memory<System.Boolean>)
  fullName.vb: Numbersome.Random.NextBooleans(System.Memory(Of System.Boolean))
  nameWithType: Random.NextBooleans(Memory<Boolean>)
  nameWithType.vb: Random.NextBooleans(Memory(Of Boolean))
- uid: Numbersome.Random.NextBooleans(System.Span{System.Boolean})
  name: NextBooleans(Span<Boolean>)
  href: api/Numbersome.Random.html#Numbersome_Random_NextBooleans_System_Span_System_Boolean__
  commentId: M:Numbersome.Random.NextBooleans(System.Span{System.Boolean})
  name.vb: NextBooleans(Span(Of Boolean))
  fullName: Numbersome.Random.NextBooleans(System.Span<System.Boolean>)
  fullName.vb: Numbersome.Random.NextBooleans(System.Span(Of System.Boolean))
  nameWithType: Random.NextBooleans(Span<Boolean>)
  nameWithType.vb: Random.NextBooleans(Span(Of Boolean))
- uid: Numbersome.Random.NextBooleans*
  name: NextBooleans
  href: api/Numbersome.Random.html#Numbersome_Random_NextBooleans_
  commentId: Overload:Numbersome.Random.NextBooleans
  isSpec: "True"
  fullName: Numbersome.Random.NextBooleans
  nameWithType: Random.NextBooleans
- uid: Numbersome.Random.NextByte
  name: NextByte()
  href: api/Numbersome.Random.html#Numbersome_Random_NextByte
  commentId: M:Numbersome.Random.NextByte
  fullName: Numbersome.Random.NextByte()
  nameWithType: Random.NextByte()
- uid: Numbersome.Random.NextByte(System.Byte,System.Byte)
  name: NextByte(Byte, Byte)
  href: api/Numbersome.Random.html#Numbersome_Random_NextByte_System_Byte_System_Byte_
  commentId: M:Numbersome.Random.NextByte(System.Byte,System.Byte)
  fullName: Numbersome.Random.NextByte(System.Byte, System.Byte)
  nameWithType: Random.NextByte(Byte, Byte)
- uid: Numbersome.Random.NextByte*
  name: NextByte
  href: api/Numbersome.Random.html#Numbersome_Random_NextByte_
  commentId: Overload:Numbersome.Random.NextByte
  isSpec: "True"
  fullName: Numbersome.Random.NextByte
  nameWithType: Random.NextByte
- uid: Numbersome.Random.NextBytes(nint)
  name: NextBytes(nint)
  href: api/Numbersome.Random.html#Numbersome_Random_NextBytes_nint_
  commentId: M:Numbersome.Random.NextBytes(nint)
  fullName: Numbersome.Random.NextBytes(nint)
  nameWithType: Random.NextBytes(nint)
- uid: Numbersome.Random.NextBytes(nint,System.Byte,System.Byte)
  name: NextBytes(nint, Byte, Byte)
  href: api/Numbersome.Random.html#Numbersome_Random_NextBytes_nint_System_Byte_System_Byte_
  commentId: M:Numbersome.Random.NextBytes(nint,System.Byte,System.Byte)
  fullName: Numbersome.Random.NextBytes(nint, System.Byte, System.Byte)
  nameWithType: Random.NextBytes(nint, Byte, Byte)
- uid: Numbersome.Random.NextBytes(System.Byte[])
  name: NextBytes(Byte[])
  href: api/Numbersome.Random.html#Numbersome_Random_NextBytes_System_Byte___
  commentId: M:Numbersome.Random.NextBytes(System.Byte[])
  name.vb: NextBytes(Byte())
  fullName: Numbersome.Random.NextBytes(System.Byte[])
  fullName.vb: Numbersome.Random.NextBytes(System.Byte())
  nameWithType: Random.NextBytes(Byte[])
  nameWithType.vb: Random.NextBytes(Byte())
- uid: Numbersome.Random.NextBytes(System.Memory{System.Byte})
  name: NextBytes(Memory<Byte>)
  href: api/Numbersome.Random.html#Numbersome_Random_NextBytes_System_Memory_System_Byte__
  commentId: M:Numbersome.Random.NextBytes(System.Memory{System.Byte})
  name.vb: NextBytes(Memory(Of Byte))
  fullName: Numbersome.Random.NextBytes(System.Memory<System.Byte>)
  fullName.vb: Numbersome.Random.NextBytes(System.Memory(Of System.Byte))
  nameWithType: Random.NextBytes(Memory<Byte>)
  nameWithType.vb: Random.NextBytes(Memory(Of Byte))
- uid: Numbersome.Random.NextBytes(System.Span{System.Byte})
  name: NextBytes(Span<Byte>)
  href: api/Numbersome.Random.html#Numbersome_Random_NextBytes_System_Span_System_Byte__
  commentId: M:Numbersome.Random.NextBytes(System.Span{System.Byte})
  name.vb: NextBytes(Span(Of Byte))
  fullName: Numbersome.Random.NextBytes(System.Span<System.Byte>)
  fullName.vb: Numbersome.Random.NextBytes(System.Span(Of System.Byte))
  nameWithType: Random.NextBytes(Span<Byte>)
  nameWithType.vb: Random.NextBytes(Span(Of Byte))
- uid: Numbersome.Random.NextBytes*
  name: NextBytes
  href: api/Numbersome.Random.html#Numbersome_Random_NextBytes_
  commentId: Overload:Numbersome.Random.NextBytes
  isSpec: "True"
  fullName: Numbersome.Random.NextBytes
  nameWithType: Random.NextBytes
- uid: Numbersome.Random.NextChar
  name: NextChar()
  href: api/Numbersome.Random.html#Numbersome_Random_NextChar
  commentId: M:Numbersome.Random.NextChar
  fullName: Numbersome.Random.NextChar()
  nameWithType: Random.NextChar()
- uid: Numbersome.Random.NextChar(System.Char,System.Char)
  name: NextChar(Char, Char)
  href: api/Numbersome.Random.html#Numbersome_Random_NextChar_System_Char_System_Char_
  commentId: M:Numbersome.Random.NextChar(System.Char,System.Char)
  fullName: Numbersome.Random.NextChar(System.Char, System.Char)
  nameWithType: Random.NextChar(Char, Char)
- uid: Numbersome.Random.NextChar*
  name: NextChar
  href: api/Numbersome.Random.html#Numbersome_Random_NextChar_
  commentId: Overload:Numbersome.Random.NextChar
  isSpec: "True"
  fullName: Numbersome.Random.NextChar
  nameWithType: Random.NextChar
- uid: Numbersome.Random.NextChars(nint)
  name: NextChars(nint)
  href: api/Numbersome.Random.html#Numbersome_Random_NextChars_nint_
  commentId: M:Numbersome.Random.NextChars(nint)
  fullName: Numbersome.Random.NextChars(nint)
  nameWithType: Random.NextChars(nint)
- uid: Numbersome.Random.NextChars(nint,System.Char,System.Char)
  name: NextChars(nint, Char, Char)
  href: api/Numbersome.Random.html#Numbersome_Random_NextChars_nint_System_Char_System_Char_
  commentId: M:Numbersome.Random.NextChars(nint,System.Char,System.Char)
  fullName: Numbersome.Random.NextChars(nint, System.Char, System.Char)
  nameWithType: Random.NextChars(nint, Char, Char)
- uid: Numbersome.Random.NextChars(System.Char[])
  name: NextChars(Char[])
  href: api/Numbersome.Random.html#Numbersome_Random_NextChars_System_Char___
  commentId: M:Numbersome.Random.NextChars(System.Char[])
  name.vb: NextChars(Char())
  fullName: Numbersome.Random.NextChars(System.Char[])
  fullName.vb: Numbersome.Random.NextChars(System.Char())
  nameWithType: Random.NextChars(Char[])
  nameWithType.vb: Random.NextChars(Char())
- uid: Numbersome.Random.NextChars(System.Memory{System.Char})
  name: NextChars(Memory<Char>)
  href: api/Numbersome.Random.html#Numbersome_Random_NextChars_System_Memory_System_Char__
  commentId: M:Numbersome.Random.NextChars(System.Memory{System.Char})
  name.vb: NextChars(Memory(Of Char))
  fullName: Numbersome.Random.NextChars(System.Memory<System.Char>)
  fullName.vb: Numbersome.Random.NextChars(System.Memory(Of System.Char))
  nameWithType: Random.NextChars(Memory<Char>)
  nameWithType.vb: Random.NextChars(Memory(Of Char))
- uid: Numbersome.Random.NextChars(System.Span{System.Char})
  name: NextChars(Span<Char>)
  href: api/Numbersome.Random.html#Numbersome_Random_NextChars_System_Span_System_Char__
  commentId: M:Numbersome.Random.NextChars(System.Span{System.Char})
  name.vb: NextChars(Span(Of Char))
  fullName: Numbersome.Random.NextChars(System.Span<System.Char>)
  fullName.vb: Numbersome.Random.NextChars(System.Span(Of System.Char))
  nameWithType: Random.NextChars(Span<Char>)
  nameWithType.vb: Random.NextChars(Span(Of Char))
- uid: Numbersome.Random.NextChars*
  name: NextChars
  href: api/Numbersome.Random.html#Numbersome_Random_NextChars_
  commentId: Overload:Numbersome.Random.NextChars
  isSpec: "True"
  fullName: Numbersome.Random.NextChars
  nameWithType: Random.NextChars
- uid: Numbersome.Random.NextDecimal
  name: NextDecimal()
  href: api/Numbersome.Random.html#Numbersome_Random_NextDecimal
  commentId: M:Numbersome.Random.NextDecimal
  fullName: Numbersome.Random.NextDecimal()
  nameWithType: Random.NextDecimal()
- uid: Numbersome.Random.NextDecimal(System.Decimal,System.Decimal)
  name: NextDecimal(Decimal, Decimal)
  href: api/Numbersome.Random.html#Numbersome_Random_NextDecimal_System_Decimal_System_Decimal_
  commentId: M:Numbersome.Random.NextDecimal(System.Decimal,System.Decimal)
  fullName: Numbersome.Random.NextDecimal(System.Decimal, System.Decimal)
  nameWithType: Random.NextDecimal(Decimal, Decimal)
- uid: Numbersome.Random.NextDecimal*
  name: NextDecimal
  href: api/Numbersome.Random.html#Numbersome_Random_NextDecimal_
  commentId: Overload:Numbersome.Random.NextDecimal
  isSpec: "True"
  fullName: Numbersome.Random.NextDecimal
  nameWithType: Random.NextDecimal
- uid: Numbersome.Random.NextDecimals(nint)
  name: NextDecimals(nint)
  href: api/Numbersome.Random.html#Numbersome_Random_NextDecimals_nint_
  commentId: M:Numbersome.Random.NextDecimals(nint)
  fullName: Numbersome.Random.NextDecimals(nint)
  nameWithType: Random.NextDecimals(nint)
- uid: Numbersome.Random.NextDecimals(nint,System.Decimal,System.Decimal)
  name: NextDecimals(nint, Decimal, Decimal)
  href: api/Numbersome.Random.html#Numbersome_Random_NextDecimals_nint_System_Decimal_System_Decimal_
  commentId: M:Numbersome.Random.NextDecimals(nint,System.Decimal,System.Decimal)
  fullName: Numbersome.Random.NextDecimals(nint, System.Decimal, System.Decimal)
  nameWithType: Random.NextDecimals(nint, Decimal, Decimal)
- uid: Numbersome.Random.NextDecimals(System.Decimal[])
  name: NextDecimals(Decimal[])
  href: api/Numbersome.Random.html#Numbersome_Random_NextDecimals_System_Decimal___
  commentId: M:Numbersome.Random.NextDecimals(System.Decimal[])
  name.vb: NextDecimals(Decimal())
  fullName: Numbersome.Random.NextDecimals(System.Decimal[])
  fullName.vb: Numbersome.Random.NextDecimals(System.Decimal())
  nameWithType: Random.NextDecimals(Decimal[])
  nameWithType.vb: Random.NextDecimals(Decimal())
- uid: Numbersome.Random.NextDecimals(System.Memory{System.Decimal})
  name: NextDecimals(Memory<Decimal>)
  href: api/Numbersome.Random.html#Numbersome_Random_NextDecimals_System_Memory_System_Decimal__
  commentId: M:Numbersome.Random.NextDecimals(System.Memory{System.Decimal})
  name.vb: NextDecimals(Memory(Of Decimal))
  fullName: Numbersome.Random.NextDecimals(System.Memory<System.Decimal>)
  fullName.vb: Numbersome.Random.NextDecimals(System.Memory(Of System.Decimal))
  nameWithType: Random.NextDecimals(Memory<Decimal>)
  nameWithType.vb: Random.NextDecimals(Memory(Of Decimal))
- uid: Numbersome.Random.NextDecimals(System.Span{System.Decimal})
  name: NextDecimals(Span<Decimal>)
  href: api/Numbersome.Random.html#Numbersome_Random_NextDecimals_System_Span_System_Decimal__
  commentId: M:Numbersome.Random.NextDecimals(System.Span{System.Decimal})
  name.vb: NextDecimals(Span(Of Decimal))
  fullName: Numbersome.Random.NextDecimals(System.Span<System.Decimal>)
  fullName.vb: Numbersome.Random.NextDecimals(System.Span(Of System.Decimal))
  nameWithType: Random.NextDecimals(Span<Decimal>)
  nameWithType.vb: Random.NextDecimals(Span(Of Decimal))
- uid: Numbersome.Random.NextDecimals*
  name: NextDecimals
  href: api/Numbersome.Random.html#Numbersome_Random_NextDecimals_
  commentId: Overload:Numbersome.Random.NextDecimals
  isSpec: "True"
  fullName: Numbersome.Random.NextDecimals
  nameWithType: Random.NextDecimals
- uid: Numbersome.Random.NextDouble
  name: NextDouble()
  href: api/Numbersome.Random.html#Numbersome_Random_NextDouble
  commentId: M:Numbersome.Random.NextDouble
  fullName: Numbersome.Random.NextDouble()
  nameWithType: Random.NextDouble()
- uid: Numbersome.Random.NextDouble(nint)
  name: NextDouble(nint)
  href: api/Numbersome.Random.html#Numbersome_Random_NextDouble_nint_
  commentId: M:Numbersome.Random.NextDouble(nint)
  fullName: Numbersome.Random.NextDouble(nint)
  nameWithType: Random.NextDouble(nint)
- uid: Numbersome.Random.NextDouble(System.Double,System.Double)
  name: NextDouble(Double, Double)
  href: api/Numbersome.Random.html#Numbersome_Random_NextDouble_System_Double_System_Double_
  commentId: M:Numbersome.Random.NextDouble(System.Double,System.Double)
  fullName: Numbersome.Random.NextDouble(System.Double, System.Double)
  nameWithType: Random.NextDouble(Double, Double)
- uid: Numbersome.Random.NextDouble*
  name: NextDouble
  href: api/Numbersome.Random.html#Numbersome_Random_NextDouble_
  commentId: Overload:Numbersome.Random.NextDouble
  isSpec: "True"
  fullName: Numbersome.Random.NextDouble
  nameWithType: Random.NextDouble
- uid: Numbersome.Random.NextDoubles(nint,System.Double,System.Double)
  name: NextDoubles(nint, Double, Double)
  href: api/Numbersome.Random.html#Numbersome_Random_NextDoubles_nint_System_Double_System_Double_
  commentId: M:Numbersome.Random.NextDoubles(nint,System.Double,System.Double)
  fullName: Numbersome.Random.NextDoubles(nint, System.Double, System.Double)
  nameWithType: Random.NextDoubles(nint, Double, Double)
- uid: Numbersome.Random.NextDoubles(System.Double[])
  name: NextDoubles(Double[])
  href: api/Numbersome.Random.html#Numbersome_Random_NextDoubles_System_Double___
  commentId: M:Numbersome.Random.NextDoubles(System.Double[])
  name.vb: NextDoubles(Double())
  fullName: Numbersome.Random.NextDoubles(System.Double[])
  fullName.vb: Numbersome.Random.NextDoubles(System.Double())
  nameWithType: Random.NextDoubles(Double[])
  nameWithType.vb: Random.NextDoubles(Double())
- uid: Numbersome.Random.NextDoubles(System.Memory{System.Double})
  name: NextDoubles(Memory<Double>)
  href: api/Numbersome.Random.html#Numbersome_Random_NextDoubles_System_Memory_System_Double__
  commentId: M:Numbersome.Random.NextDoubles(System.Memory{System.Double})
  name.vb: NextDoubles(Memory(Of Double))
  fullName: Numbersome.Random.NextDoubles(System.Memory<System.Double>)
  fullName.vb: Numbersome.Random.NextDoubles(System.Memory(Of System.Double))
  nameWithType: Random.NextDoubles(Memory<Double>)
  nameWithType.vb: Random.NextDoubles(Memory(Of Double))
- uid: Numbersome.Random.NextDoubles(System.Span{System.Double})
  name: NextDoubles(Span<Double>)
  href: api/Numbersome.Random.html#Numbersome_Random_NextDoubles_System_Span_System_Double__
  commentId: M:Numbersome.Random.NextDoubles(System.Span{System.Double})
  name.vb: NextDoubles(Span(Of Double))
  fullName: Numbersome.Random.NextDoubles(System.Span<System.Double>)
  fullName.vb: Numbersome.Random.NextDoubles(System.Span(Of System.Double))
  nameWithType: Random.NextDoubles(Span<Double>)
  nameWithType.vb: Random.NextDoubles(Span(Of Double))
- uid: Numbersome.Random.NextDoubles*
  name: NextDoubles
  href: api/Numbersome.Random.html#Numbersome_Random_NextDoubles_
  commentId: Overload:Numbersome.Random.NextDoubles
  isSpec: "True"
  fullName: Numbersome.Random.NextDoubles
  nameWithType: Random.NextDoubles
- uid: Numbersome.Random.NextInt16
  name: NextInt16()
  href: api/Numbersome.Random.html#Numbersome_Random_NextInt16
  commentId: M:Numbersome.Random.NextInt16
  fullName: Numbersome.Random.NextInt16()
  nameWithType: Random.NextInt16()
- uid: Numbersome.Random.NextInt16(System.Int16,System.Int16)
  name: NextInt16(Int16, Int16)
  href: api/Numbersome.Random.html#Numbersome_Random_NextInt16_System_Int16_System_Int16_
  commentId: M:Numbersome.Random.NextInt16(System.Int16,System.Int16)
  fullName: Numbersome.Random.NextInt16(System.Int16, System.Int16)
  nameWithType: Random.NextInt16(Int16, Int16)
- uid: Numbersome.Random.NextInt16*
  name: NextInt16
  href: api/Numbersome.Random.html#Numbersome_Random_NextInt16_
  commentId: Overload:Numbersome.Random.NextInt16
  isSpec: "True"
  fullName: Numbersome.Random.NextInt16
  nameWithType: Random.NextInt16
- uid: Numbersome.Random.NextInt16s(nint)
  name: NextInt16s(nint)
  href: api/Numbersome.Random.html#Numbersome_Random_NextInt16s_nint_
  commentId: M:Numbersome.Random.NextInt16s(nint)
  fullName: Numbersome.Random.NextInt16s(nint)
  nameWithType: Random.NextInt16s(nint)
- uid: Numbersome.Random.NextInt16s(nint,System.Int16,System.Int16)
  name: NextInt16s(nint, Int16, Int16)
  href: api/Numbersome.Random.html#Numbersome_Random_NextInt16s_nint_System_Int16_System_Int16_
  commentId: M:Numbersome.Random.NextInt16s(nint,System.Int16,System.Int16)
  fullName: Numbersome.Random.NextInt16s(nint, System.Int16, System.Int16)
  nameWithType: Random.NextInt16s(nint, Int16, Int16)
- uid: Numbersome.Random.NextInt16s(System.Int16[])
  name: NextInt16s(Int16[])
  href: api/Numbersome.Random.html#Numbersome_Random_NextInt16s_System_Int16___
  commentId: M:Numbersome.Random.NextInt16s(System.Int16[])
  name.vb: NextInt16s(Int16())
  fullName: Numbersome.Random.NextInt16s(System.Int16[])
  fullName.vb: Numbersome.Random.NextInt16s(System.Int16())
  nameWithType: Random.NextInt16s(Int16[])
  nameWithType.vb: Random.NextInt16s(Int16())
- uid: Numbersome.Random.NextInt16s(System.Memory{System.Int16})
  name: NextInt16s(Memory<Int16>)
  href: api/Numbersome.Random.html#Numbersome_Random_NextInt16s_System_Memory_System_Int16__
  commentId: M:Numbersome.Random.NextInt16s(System.Memory{System.Int16})
  name.vb: NextInt16s(Memory(Of Int16))
  fullName: Numbersome.Random.NextInt16s(System.Memory<System.Int16>)
  fullName.vb: Numbersome.Random.NextInt16s(System.Memory(Of System.Int16))
  nameWithType: Random.NextInt16s(Memory<Int16>)
  nameWithType.vb: Random.NextInt16s(Memory(Of Int16))
- uid: Numbersome.Random.NextInt16s(System.Span{System.Int16})
  name: NextInt16s(Span<Int16>)
  href: api/Numbersome.Random.html#Numbersome_Random_NextInt16s_System_Span_System_Int16__
  commentId: M:Numbersome.Random.NextInt16s(System.Span{System.Int16})
  name.vb: NextInt16s(Span(Of Int16))
  fullName: Numbersome.Random.NextInt16s(System.Span<System.Int16>)
  fullName.vb: Numbersome.Random.NextInt16s(System.Span(Of System.Int16))
  nameWithType: Random.NextInt16s(Span<Int16>)
  nameWithType.vb: Random.NextInt16s(Span(Of Int16))
- uid: Numbersome.Random.NextInt16s*
  name: NextInt16s
  href: api/Numbersome.Random.html#Numbersome_Random_NextInt16s_
  commentId: Overload:Numbersome.Random.NextInt16s
  isSpec: "True"
  fullName: Numbersome.Random.NextInt16s
  nameWithType: Random.NextInt16s
- uid: Numbersome.Random.NextInt32
  name: NextInt32()
  href: api/Numbersome.Random.html#Numbersome_Random_NextInt32
  commentId: M:Numbersome.Random.NextInt32
  fullName: Numbersome.Random.NextInt32()
  nameWithType: Random.NextInt32()
- uid: Numbersome.Random.NextInt32(System.Int32,System.Int32)
  name: NextInt32(Int32, Int32)
  href: api/Numbersome.Random.html#Numbersome_Random_NextInt32_System_Int32_System_Int32_
  commentId: M:Numbersome.Random.NextInt32(System.Int32,System.Int32)
  fullName: Numbersome.Random.NextInt32(System.Int32, System.Int32)
  nameWithType: Random.NextInt32(Int32, Int32)
- uid: Numbersome.Random.NextInt32*
  name: NextInt32
  href: api/Numbersome.Random.html#Numbersome_Random_NextInt32_
  commentId: Overload:Numbersome.Random.NextInt32
  isSpec: "True"
  fullName: Numbersome.Random.NextInt32
  nameWithType: Random.NextInt32
- uid: Numbersome.Random.NextInt32s(nint)
  name: NextInt32s(nint)
  href: api/Numbersome.Random.html#Numbersome_Random_NextInt32s_nint_
  commentId: M:Numbersome.Random.NextInt32s(nint)
  fullName: Numbersome.Random.NextInt32s(nint)
  nameWithType: Random.NextInt32s(nint)
- uid: Numbersome.Random.NextInt32s(nint,System.Int32,System.Int32)
  name: NextInt32s(nint, Int32, Int32)
  href: api/Numbersome.Random.html#Numbersome_Random_NextInt32s_nint_System_Int32_System_Int32_
  commentId: M:Numbersome.Random.NextInt32s(nint,System.Int32,System.Int32)
  fullName: Numbersome.Random.NextInt32s(nint, System.Int32, System.Int32)
  nameWithType: Random.NextInt32s(nint, Int32, Int32)
- uid: Numbersome.Random.NextInt32s(System.Int32[])
  name: NextInt32s(Int32[])
  href: api/Numbersome.Random.html#Numbersome_Random_NextInt32s_System_Int32___
  commentId: M:Numbersome.Random.NextInt32s(System.Int32[])
  name.vb: NextInt32s(Int32())
  fullName: Numbersome.Random.NextInt32s(System.Int32[])
  fullName.vb: Numbersome.Random.NextInt32s(System.Int32())
  nameWithType: Random.NextInt32s(Int32[])
  nameWithType.vb: Random.NextInt32s(Int32())
- uid: Numbersome.Random.NextInt32s(System.Memory{System.Int32})
  name: NextInt32s(Memory<Int32>)
  href: api/Numbersome.Random.html#Numbersome_Random_NextInt32s_System_Memory_System_Int32__
  commentId: M:Numbersome.Random.NextInt32s(System.Memory{System.Int32})
  name.vb: NextInt32s(Memory(Of Int32))
  fullName: Numbersome.Random.NextInt32s(System.Memory<System.Int32>)
  fullName.vb: Numbersome.Random.NextInt32s(System.Memory(Of System.Int32))
  nameWithType: Random.NextInt32s(Memory<Int32>)
  nameWithType.vb: Random.NextInt32s(Memory(Of Int32))
- uid: Numbersome.Random.NextInt32s(System.Span{System.Int32})
  name: NextInt32s(Span<Int32>)
  href: api/Numbersome.Random.html#Numbersome_Random_NextInt32s_System_Span_System_Int32__
  commentId: M:Numbersome.Random.NextInt32s(System.Span{System.Int32})
  name.vb: NextInt32s(Span(Of Int32))
  fullName: Numbersome.Random.NextInt32s(System.Span<System.Int32>)
  fullName.vb: Numbersome.Random.NextInt32s(System.Span(Of System.Int32))
  nameWithType: Random.NextInt32s(Span<Int32>)
  nameWithType.vb: Random.NextInt32s(Span(Of Int32))
- uid: Numbersome.Random.NextInt32s*
  name: NextInt32s
  href: api/Numbersome.Random.html#Numbersome_Random_NextInt32s_
  commentId: Overload:Numbersome.Random.NextInt32s
  isSpec: "True"
  fullName: Numbersome.Random.NextInt32s
  nameWithType: Random.NextInt32s
- uid: Numbersome.Random.NextInt64
  name: NextInt64()
  href: api/Numbersome.Random.html#Numbersome_Random_NextInt64
  commentId: M:Numbersome.Random.NextInt64
  fullName: Numbersome.Random.NextInt64()
  nameWithType: Random.NextInt64()
- uid: Numbersome.Random.NextInt64(System.Int64,System.Int64)
  name: NextInt64(Int64, Int64)
  href: api/Numbersome.Random.html#Numbersome_Random_NextInt64_System_Int64_System_Int64_
  commentId: M:Numbersome.Random.NextInt64(System.Int64,System.Int64)
  fullName: Numbersome.Random.NextInt64(System.Int64, System.Int64)
  nameWithType: Random.NextInt64(Int64, Int64)
- uid: Numbersome.Random.NextInt64*
  name: NextInt64
  href: api/Numbersome.Random.html#Numbersome_Random_NextInt64_
  commentId: Overload:Numbersome.Random.NextInt64
  isSpec: "True"
  fullName: Numbersome.Random.NextInt64
  nameWithType: Random.NextInt64
- uid: Numbersome.Random.NextInt64s(nint)
  name: NextInt64s(nint)
  href: api/Numbersome.Random.html#Numbersome_Random_NextInt64s_nint_
  commentId: M:Numbersome.Random.NextInt64s(nint)
  fullName: Numbersome.Random.NextInt64s(nint)
  nameWithType: Random.NextInt64s(nint)
- uid: Numbersome.Random.NextInt64s(nint,System.Int64,System.Int64)
  name: NextInt64s(nint, Int64, Int64)
  href: api/Numbersome.Random.html#Numbersome_Random_NextInt64s_nint_System_Int64_System_Int64_
  commentId: M:Numbersome.Random.NextInt64s(nint,System.Int64,System.Int64)
  fullName: Numbersome.Random.NextInt64s(nint, System.Int64, System.Int64)
  nameWithType: Random.NextInt64s(nint, Int64, Int64)
- uid: Numbersome.Random.NextInt64s(System.Int64[])
  name: NextInt64s(Int64[])
  href: api/Numbersome.Random.html#Numbersome_Random_NextInt64s_System_Int64___
  commentId: M:Numbersome.Random.NextInt64s(System.Int64[])
  name.vb: NextInt64s(Int64())
  fullName: Numbersome.Random.NextInt64s(System.Int64[])
  fullName.vb: Numbersome.Random.NextInt64s(System.Int64())
  nameWithType: Random.NextInt64s(Int64[])
  nameWithType.vb: Random.NextInt64s(Int64())
- uid: Numbersome.Random.NextInt64s(System.Memory{System.Int64})
  name: NextInt64s(Memory<Int64>)
  href: api/Numbersome.Random.html#Numbersome_Random_NextInt64s_System_Memory_System_Int64__
  commentId: M:Numbersome.Random.NextInt64s(System.Memory{System.Int64})
  name.vb: NextInt64s(Memory(Of Int64))
  fullName: Numbersome.Random.NextInt64s(System.Memory<System.Int64>)
  fullName.vb: Numbersome.Random.NextInt64s(System.Memory(Of System.Int64))
  nameWithType: Random.NextInt64s(Memory<Int64>)
  nameWithType.vb: Random.NextInt64s(Memory(Of Int64))
- uid: Numbersome.Random.NextInt64s(System.Span{System.Int64})
  name: NextInt64s(Span<Int64>)
  href: api/Numbersome.Random.html#Numbersome_Random_NextInt64s_System_Span_System_Int64__
  commentId: M:Numbersome.Random.NextInt64s(System.Span{System.Int64})
  name.vb: NextInt64s(Span(Of Int64))
  fullName: Numbersome.Random.NextInt64s(System.Span<System.Int64>)
  fullName.vb: Numbersome.Random.NextInt64s(System.Span(Of System.Int64))
  nameWithType: Random.NextInt64s(Span<Int64>)
  nameWithType.vb: Random.NextInt64s(Span(Of Int64))
- uid: Numbersome.Random.NextInt64s*
  name: NextInt64s
  href: api/Numbersome.Random.html#Numbersome_Random_NextInt64s_
  commentId: Overload:Numbersome.Random.NextInt64s
  isSpec: "True"
  fullName: Numbersome.Random.NextInt64s
  nameWithType: Random.NextInt64s
- uid: Numbersome.Random.NextIntPtr
  name: NextIntPtr()
  href: api/Numbersome.Random.html#Numbersome_Random_NextIntPtr
  commentId: M:Numbersome.Random.NextIntPtr
  fullName: Numbersome.Random.NextIntPtr()
  nameWithType: Random.NextIntPtr()
- uid: Numbersome.Random.NextIntPtr(System.IntPtr,System.IntPtr)
  name: NextIntPtr(IntPtr, IntPtr)
  href: api/Numbersome.Random.html#Numbersome_Random_NextIntPtr_System_IntPtr_System_IntPtr_
  commentId: M:Numbersome.Random.NextIntPtr(System.IntPtr,System.IntPtr)
  fullName: Numbersome.Random.NextIntPtr(System.IntPtr, System.IntPtr)
  nameWithType: Random.NextIntPtr(IntPtr, IntPtr)
- uid: Numbersome.Random.NextIntPtr*
  name: NextIntPtr
  href: api/Numbersome.Random.html#Numbersome_Random_NextIntPtr_
  commentId: Overload:Numbersome.Random.NextIntPtr
  isSpec: "True"
  fullName: Numbersome.Random.NextIntPtr
  nameWithType: Random.NextIntPtr
- uid: Numbersome.Random.NextIntPtrs(nint)
  name: NextIntPtrs(nint)
  href: api/Numbersome.Random.html#Numbersome_Random_NextIntPtrs_nint_
  commentId: M:Numbersome.Random.NextIntPtrs(nint)
  fullName: Numbersome.Random.NextIntPtrs(nint)
  nameWithType: Random.NextIntPtrs(nint)
- uid: Numbersome.Random.NextIntPtrs(nint,System.IntPtr,System.IntPtr)
  name: NextIntPtrs(nint, IntPtr, IntPtr)
  href: api/Numbersome.Random.html#Numbersome_Random_NextIntPtrs_nint_System_IntPtr_System_IntPtr_
  commentId: M:Numbersome.Random.NextIntPtrs(nint,System.IntPtr,System.IntPtr)
  fullName: Numbersome.Random.NextIntPtrs(nint, System.IntPtr, System.IntPtr)
  nameWithType: Random.NextIntPtrs(nint, IntPtr, IntPtr)
- uid: Numbersome.Random.NextIntPtrs(System.IntPtr[])
  name: NextIntPtrs(IntPtr[])
  href: api/Numbersome.Random.html#Numbersome_Random_NextIntPtrs_System_IntPtr___
  commentId: M:Numbersome.Random.NextIntPtrs(System.IntPtr[])
  name.vb: NextIntPtrs(IntPtr())
  fullName: Numbersome.Random.NextIntPtrs(System.IntPtr[])
  fullName.vb: Numbersome.Random.NextIntPtrs(System.IntPtr())
  nameWithType: Random.NextIntPtrs(IntPtr[])
  nameWithType.vb: Random.NextIntPtrs(IntPtr())
- uid: Numbersome.Random.NextIntPtrs(System.Memory{System.IntPtr})
  name: NextIntPtrs(Memory<IntPtr>)
  href: api/Numbersome.Random.html#Numbersome_Random_NextIntPtrs_System_Memory_System_IntPtr__
  commentId: M:Numbersome.Random.NextIntPtrs(System.Memory{System.IntPtr})
  name.vb: NextIntPtrs(Memory(Of IntPtr))
  fullName: Numbersome.Random.NextIntPtrs(System.Memory<System.IntPtr>)
  fullName.vb: Numbersome.Random.NextIntPtrs(System.Memory(Of System.IntPtr))
  nameWithType: Random.NextIntPtrs(Memory<IntPtr>)
  nameWithType.vb: Random.NextIntPtrs(Memory(Of IntPtr))
- uid: Numbersome.Random.NextIntPtrs(System.Span{System.IntPtr})
  name: NextIntPtrs(Span<IntPtr>)
  href: api/Numbersome.Random.html#Numbersome_Random_NextIntPtrs_System_Span_System_IntPtr__
  commentId: M:Numbersome.Random.NextIntPtrs(System.Span{System.IntPtr})
  name.vb: NextIntPtrs(Span(Of IntPtr))
  fullName: Numbersome.Random.NextIntPtrs(System.Span<System.IntPtr>)
  fullName.vb: Numbersome.Random.NextIntPtrs(System.Span(Of System.IntPtr))
  nameWithType: Random.NextIntPtrs(Span<IntPtr>)
  nameWithType.vb: Random.NextIntPtrs(Span(Of IntPtr))
- uid: Numbersome.Random.NextIntPtrs*
  name: NextIntPtrs
  href: api/Numbersome.Random.html#Numbersome_Random_NextIntPtrs_
  commentId: Overload:Numbersome.Random.NextIntPtrs
  isSpec: "True"
  fullName: Numbersome.Random.NextIntPtrs
  nameWithType: Random.NextIntPtrs
- uid: Numbersome.Random.NextSByte
  name: NextSByte()
  href: api/Numbersome.Random.html#Numbersome_Random_NextSByte
  commentId: M:Numbersome.Random.NextSByte
  fullName: Numbersome.Random.NextSByte()
  nameWithType: Random.NextSByte()
- uid: Numbersome.Random.NextSByte(System.SByte,System.SByte)
  name: NextSByte(SByte, SByte)
  href: api/Numbersome.Random.html#Numbersome_Random_NextSByte_System_SByte_System_SByte_
  commentId: M:Numbersome.Random.NextSByte(System.SByte,System.SByte)
  fullName: Numbersome.Random.NextSByte(System.SByte, System.SByte)
  nameWithType: Random.NextSByte(SByte, SByte)
- uid: Numbersome.Random.NextSByte*
  name: NextSByte
  href: api/Numbersome.Random.html#Numbersome_Random_NextSByte_
  commentId: Overload:Numbersome.Random.NextSByte
  isSpec: "True"
  fullName: Numbersome.Random.NextSByte
  nameWithType: Random.NextSByte
- uid: Numbersome.Random.NextSBytes(nint)
  name: NextSBytes(nint)
  href: api/Numbersome.Random.html#Numbersome_Random_NextSBytes_nint_
  commentId: M:Numbersome.Random.NextSBytes(nint)
  fullName: Numbersome.Random.NextSBytes(nint)
  nameWithType: Random.NextSBytes(nint)
- uid: Numbersome.Random.NextSBytes(nint,System.SByte,System.SByte)
  name: NextSBytes(nint, SByte, SByte)
  href: api/Numbersome.Random.html#Numbersome_Random_NextSBytes_nint_System_SByte_System_SByte_
  commentId: M:Numbersome.Random.NextSBytes(nint,System.SByte,System.SByte)
  fullName: Numbersome.Random.NextSBytes(nint, System.SByte, System.SByte)
  nameWithType: Random.NextSBytes(nint, SByte, SByte)
- uid: Numbersome.Random.NextSBytes(System.Memory{System.SByte})
  name: NextSBytes(Memory<SByte>)
  href: api/Numbersome.Random.html#Numbersome_Random_NextSBytes_System_Memory_System_SByte__
  commentId: M:Numbersome.Random.NextSBytes(System.Memory{System.SByte})
  name.vb: NextSBytes(Memory(Of SByte))
  fullName: Numbersome.Random.NextSBytes(System.Memory<System.SByte>)
  fullName.vb: Numbersome.Random.NextSBytes(System.Memory(Of System.SByte))
  nameWithType: Random.NextSBytes(Memory<SByte>)
  nameWithType.vb: Random.NextSBytes(Memory(Of SByte))
- uid: Numbersome.Random.NextSBytes(System.SByte[])
  name: NextSBytes(SByte[])
  href: api/Numbersome.Random.html#Numbersome_Random_NextSBytes_System_SByte___
  commentId: M:Numbersome.Random.NextSBytes(System.SByte[])
  name.vb: NextSBytes(SByte())
  fullName: Numbersome.Random.NextSBytes(System.SByte[])
  fullName.vb: Numbersome.Random.NextSBytes(System.SByte())
  nameWithType: Random.NextSBytes(SByte[])
  nameWithType.vb: Random.NextSBytes(SByte())
- uid: Numbersome.Random.NextSBytes(System.Span{System.SByte})
  name: NextSBytes(Span<SByte>)
  href: api/Numbersome.Random.html#Numbersome_Random_NextSBytes_System_Span_System_SByte__
  commentId: M:Numbersome.Random.NextSBytes(System.Span{System.SByte})
  name.vb: NextSBytes(Span(Of SByte))
  fullName: Numbersome.Random.NextSBytes(System.Span<System.SByte>)
  fullName.vb: Numbersome.Random.NextSBytes(System.Span(Of System.SByte))
  nameWithType: Random.NextSBytes(Span<SByte>)
  nameWithType.vb: Random.NextSBytes(Span(Of SByte))
- uid: Numbersome.Random.NextSBytes*
  name: NextSBytes
  href: api/Numbersome.Random.html#Numbersome_Random_NextSBytes_
  commentId: Overload:Numbersome.Random.NextSBytes
  isSpec: "True"
  fullName: Numbersome.Random.NextSBytes
  nameWithType: Random.NextSBytes
- uid: Numbersome.Random.NextSingle
  name: NextSingle()
  href: api/Numbersome.Random.html#Numbersome_Random_NextSingle
  commentId: M:Numbersome.Random.NextSingle
  fullName: Numbersome.Random.NextSingle()
  nameWithType: Random.NextSingle()
- uid: Numbersome.Random.NextSingle(System.Single,System.Single)
  name: NextSingle(Single, Single)
  href: api/Numbersome.Random.html#Numbersome_Random_NextSingle_System_Single_System_Single_
  commentId: M:Numbersome.Random.NextSingle(System.Single,System.Single)
  fullName: Numbersome.Random.NextSingle(System.Single, System.Single)
  nameWithType: Random.NextSingle(Single, Single)
- uid: Numbersome.Random.NextSingle*
  name: NextSingle
  href: api/Numbersome.Random.html#Numbersome_Random_NextSingle_
  commentId: Overload:Numbersome.Random.NextSingle
  isSpec: "True"
  fullName: Numbersome.Random.NextSingle
  nameWithType: Random.NextSingle
- uid: Numbersome.Random.NextSingles(nint)
  name: NextSingles(nint)
  href: api/Numbersome.Random.html#Numbersome_Random_NextSingles_nint_
  commentId: M:Numbersome.Random.NextSingles(nint)
  fullName: Numbersome.Random.NextSingles(nint)
  nameWithType: Random.NextSingles(nint)
- uid: Numbersome.Random.NextSingles(nint,System.Single,System.Single)
  name: NextSingles(nint, Single, Single)
  href: api/Numbersome.Random.html#Numbersome_Random_NextSingles_nint_System_Single_System_Single_
  commentId: M:Numbersome.Random.NextSingles(nint,System.Single,System.Single)
  fullName: Numbersome.Random.NextSingles(nint, System.Single, System.Single)
  nameWithType: Random.NextSingles(nint, Single, Single)
- uid: Numbersome.Random.NextSingles(System.Memory{System.Single})
  name: NextSingles(Memory<Single>)
  href: api/Numbersome.Random.html#Numbersome_Random_NextSingles_System_Memory_System_Single__
  commentId: M:Numbersome.Random.NextSingles(System.Memory{System.Single})
  name.vb: NextSingles(Memory(Of Single))
  fullName: Numbersome.Random.NextSingles(System.Memory<System.Single>)
  fullName.vb: Numbersome.Random.NextSingles(System.Memory(Of System.Single))
  nameWithType: Random.NextSingles(Memory<Single>)
  nameWithType.vb: Random.NextSingles(Memory(Of Single))
- uid: Numbersome.Random.NextSingles(System.Single[])
  name: NextSingles(Single[])
  href: api/Numbersome.Random.html#Numbersome_Random_NextSingles_System_Single___
  commentId: M:Numbersome.Random.NextSingles(System.Single[])
  name.vb: NextSingles(Single())
  fullName: Numbersome.Random.NextSingles(System.Single[])
  fullName.vb: Numbersome.Random.NextSingles(System.Single())
  nameWithType: Random.NextSingles(Single[])
  nameWithType.vb: Random.NextSingles(Single())
- uid: Numbersome.Random.NextSingles(System.Span{System.Single})
  name: NextSingles(Span<Single>)
  href: api/Numbersome.Random.html#Numbersome_Random_NextSingles_System_Span_System_Single__
  commentId: M:Numbersome.Random.NextSingles(System.Span{System.Single})
  name.vb: NextSingles(Span(Of Single))
  fullName: Numbersome.Random.NextSingles(System.Span<System.Single>)
  fullName.vb: Numbersome.Random.NextSingles(System.Span(Of System.Single))
  nameWithType: Random.NextSingles(Span<Single>)
  nameWithType.vb: Random.NextSingles(Span(Of Single))
- uid: Numbersome.Random.NextSingles*
  name: NextSingles
  href: api/Numbersome.Random.html#Numbersome_Random_NextSingles_
  commentId: Overload:Numbersome.Random.NextSingles
  isSpec: "True"
  fullName: Numbersome.Random.NextSingles
  nameWithType: Random.NextSingles
- uid: Numbersome.Random.NextUInt16
  name: NextUInt16()
  href: api/Numbersome.Random.html#Numbersome_Random_NextUInt16
  commentId: M:Numbersome.Random.NextUInt16
  fullName: Numbersome.Random.NextUInt16()
  nameWithType: Random.NextUInt16()
- uid: Numbersome.Random.NextUInt16(System.UInt16,System.UInt16)
  name: NextUInt16(UInt16, UInt16)
  href: api/Numbersome.Random.html#Numbersome_Random_NextUInt16_System_UInt16_System_UInt16_
  commentId: M:Numbersome.Random.NextUInt16(System.UInt16,System.UInt16)
  fullName: Numbersome.Random.NextUInt16(System.UInt16, System.UInt16)
  nameWithType: Random.NextUInt16(UInt16, UInt16)
- uid: Numbersome.Random.NextUInt16*
  name: NextUInt16
  href: api/Numbersome.Random.html#Numbersome_Random_NextUInt16_
  commentId: Overload:Numbersome.Random.NextUInt16
  isSpec: "True"
  fullName: Numbersome.Random.NextUInt16
  nameWithType: Random.NextUInt16
- uid: Numbersome.Random.NextUInt16s(nint)
  name: NextUInt16s(nint)
  href: api/Numbersome.Random.html#Numbersome_Random_NextUInt16s_nint_
  commentId: M:Numbersome.Random.NextUInt16s(nint)
  fullName: Numbersome.Random.NextUInt16s(nint)
  nameWithType: Random.NextUInt16s(nint)
- uid: Numbersome.Random.NextUInt16s(nint,System.UInt16,System.UInt16)
  name: NextUInt16s(nint, UInt16, UInt16)
  href: api/Numbersome.Random.html#Numbersome_Random_NextUInt16s_nint_System_UInt16_System_UInt16_
  commentId: M:Numbersome.Random.NextUInt16s(nint,System.UInt16,System.UInt16)
  fullName: Numbersome.Random.NextUInt16s(nint, System.UInt16, System.UInt16)
  nameWithType: Random.NextUInt16s(nint, UInt16, UInt16)
- uid: Numbersome.Random.NextUInt16s(System.Memory{System.UInt16})
  name: NextUInt16s(Memory<UInt16>)
  href: api/Numbersome.Random.html#Numbersome_Random_NextUInt16s_System_Memory_System_UInt16__
  commentId: M:Numbersome.Random.NextUInt16s(System.Memory{System.UInt16})
  name.vb: NextUInt16s(Memory(Of UInt16))
  fullName: Numbersome.Random.NextUInt16s(System.Memory<System.UInt16>)
  fullName.vb: Numbersome.Random.NextUInt16s(System.Memory(Of System.UInt16))
  nameWithType: Random.NextUInt16s(Memory<UInt16>)
  nameWithType.vb: Random.NextUInt16s(Memory(Of UInt16))
- uid: Numbersome.Random.NextUInt16s(System.Span{System.UInt16})
  name: NextUInt16s(Span<UInt16>)
  href: api/Numbersome.Random.html#Numbersome_Random_NextUInt16s_System_Span_System_UInt16__
  commentId: M:Numbersome.Random.NextUInt16s(System.Span{System.UInt16})
  name.vb: NextUInt16s(Span(Of UInt16))
  fullName: Numbersome.Random.NextUInt16s(System.Span<System.UInt16>)
  fullName.vb: Numbersome.Random.NextUInt16s(System.Span(Of System.UInt16))
  nameWithType: Random.NextUInt16s(Span<UInt16>)
  nameWithType.vb: Random.NextUInt16s(Span(Of UInt16))
- uid: Numbersome.Random.NextUInt16s(System.UInt16[])
  name: NextUInt16s(UInt16[])
  href: api/Numbersome.Random.html#Numbersome_Random_NextUInt16s_System_UInt16___
  commentId: M:Numbersome.Random.NextUInt16s(System.UInt16[])
  name.vb: NextUInt16s(UInt16())
  fullName: Numbersome.Random.NextUInt16s(System.UInt16[])
  fullName.vb: Numbersome.Random.NextUInt16s(System.UInt16())
  nameWithType: Random.NextUInt16s(UInt16[])
  nameWithType.vb: Random.NextUInt16s(UInt16())
- uid: Numbersome.Random.NextUInt16s*
  name: NextUInt16s
  href: api/Numbersome.Random.html#Numbersome_Random_NextUInt16s_
  commentId: Overload:Numbersome.Random.NextUInt16s
  isSpec: "True"
  fullName: Numbersome.Random.NextUInt16s
  nameWithType: Random.NextUInt16s
- uid: Numbersome.Random.NextUInt32
  name: NextUInt32()
  href: api/Numbersome.Random.html#Numbersome_Random_NextUInt32
  commentId: M:Numbersome.Random.NextUInt32
  fullName: Numbersome.Random.NextUInt32()
  nameWithType: Random.NextUInt32()
- uid: Numbersome.Random.NextUInt32(System.UInt32,System.UInt32)
  name: NextUInt32(UInt32, UInt32)
  href: api/Numbersome.Random.html#Numbersome_Random_NextUInt32_System_UInt32_System_UInt32_
  commentId: M:Numbersome.Random.NextUInt32(System.UInt32,System.UInt32)
  fullName: Numbersome.Random.NextUInt32(System.UInt32, System.UInt32)
  nameWithType: Random.NextUInt32(UInt32, UInt32)
- uid: Numbersome.Random.NextUInt32*
  name: NextUInt32
  href: api/Numbersome.Random.html#Numbersome_Random_NextUInt32_
  commentId: Overload:Numbersome.Random.NextUInt32
  isSpec: "True"
  fullName: Numbersome.Random.NextUInt32
  nameWithType: Random.NextUInt32
- uid: Numbersome.Random.NextUInt32s(nint)
  name: NextUInt32s(nint)
  href: api/Numbersome.Random.html#Numbersome_Random_NextUInt32s_nint_
  commentId: M:Numbersome.Random.NextUInt32s(nint)
  fullName: Numbersome.Random.NextUInt32s(nint)
  nameWithType: Random.NextUInt32s(nint)
- uid: Numbersome.Random.NextUInt32s(nint,System.UInt32,System.UInt32)
  name: NextUInt32s(nint, UInt32, UInt32)
  href: api/Numbersome.Random.html#Numbersome_Random_NextUInt32s_nint_System_UInt32_System_UInt32_
  commentId: M:Numbersome.Random.NextUInt32s(nint,System.UInt32,System.UInt32)
  fullName: Numbersome.Random.NextUInt32s(nint, System.UInt32, System.UInt32)
  nameWithType: Random.NextUInt32s(nint, UInt32, UInt32)
- uid: Numbersome.Random.NextUInt32s(System.Memory{System.UInt32})
  name: NextUInt32s(Memory<UInt32>)
  href: api/Numbersome.Random.html#Numbersome_Random_NextUInt32s_System_Memory_System_UInt32__
  commentId: M:Numbersome.Random.NextUInt32s(System.Memory{System.UInt32})
  name.vb: NextUInt32s(Memory(Of UInt32))
  fullName: Numbersome.Random.NextUInt32s(System.Memory<System.UInt32>)
  fullName.vb: Numbersome.Random.NextUInt32s(System.Memory(Of System.UInt32))
  nameWithType: Random.NextUInt32s(Memory<UInt32>)
  nameWithType.vb: Random.NextUInt32s(Memory(Of UInt32))
- uid: Numbersome.Random.NextUInt32s(System.Span{System.UInt32})
  name: NextUInt32s(Span<UInt32>)
  href: api/Numbersome.Random.html#Numbersome_Random_NextUInt32s_System_Span_System_UInt32__
  commentId: M:Numbersome.Random.NextUInt32s(System.Span{System.UInt32})
  name.vb: NextUInt32s(Span(Of UInt32))
  fullName: Numbersome.Random.NextUInt32s(System.Span<System.UInt32>)
  fullName.vb: Numbersome.Random.NextUInt32s(System.Span(Of System.UInt32))
  nameWithType: Random.NextUInt32s(Span<UInt32>)
  nameWithType.vb: Random.NextUInt32s(Span(Of UInt32))
- uid: Numbersome.Random.NextUInt32s(System.UInt32[])
  name: NextUInt32s(UInt32[])
  href: api/Numbersome.Random.html#Numbersome_Random_NextUInt32s_System_UInt32___
  commentId: M:Numbersome.Random.NextUInt32s(System.UInt32[])
  name.vb: NextUInt32s(UInt32())
  fullName: Numbersome.Random.NextUInt32s(System.UInt32[])
  fullName.vb: Numbersome.Random.NextUInt32s(System.UInt32())
  nameWithType: Random.NextUInt32s(UInt32[])
  nameWithType.vb: Random.NextUInt32s(UInt32())
- uid: Numbersome.Random.NextUInt32s*
  name: NextUInt32s
  href: api/Numbersome.Random.html#Numbersome_Random_NextUInt32s_
  commentId: Overload:Numbersome.Random.NextUInt32s
  isSpec: "True"
  fullName: Numbersome.Random.NextUInt32s
  nameWithType: Random.NextUInt32s
- uid: Numbersome.Random.NextUInt64
  name: NextUInt64()
  href: api/Numbersome.Random.html#Numbersome_Random_NextUInt64
  commentId: M:Numbersome.Random.NextUInt64
  fullName: Numbersome.Random.NextUInt64()
  nameWithType: Random.NextUInt64()
- uid: Numbersome.Random.NextUInt64(System.UInt64,System.UInt64)
  name: NextUInt64(UInt64, UInt64)
  href: api/Numbersome.Random.html#Numbersome_Random_NextUInt64_System_UInt64_System_UInt64_
  commentId: M:Numbersome.Random.NextUInt64(System.UInt64,System.UInt64)
  fullName: Numbersome.Random.NextUInt64(System.UInt64, System.UInt64)
  nameWithType: Random.NextUInt64(UInt64, UInt64)
- uid: Numbersome.Random.NextUInt64*
  name: NextUInt64
  href: api/Numbersome.Random.html#Numbersome_Random_NextUInt64_
  commentId: Overload:Numbersome.Random.NextUInt64
  isSpec: "True"
  fullName: Numbersome.Random.NextUInt64
  nameWithType: Random.NextUInt64
- uid: Numbersome.Random.NextUInt64s(nint)
  name: NextUInt64s(nint)
  href: api/Numbersome.Random.html#Numbersome_Random_NextUInt64s_nint_
  commentId: M:Numbersome.Random.NextUInt64s(nint)
  fullName: Numbersome.Random.NextUInt64s(nint)
  nameWithType: Random.NextUInt64s(nint)
- uid: Numbersome.Random.NextUInt64s(nint,System.UInt64,System.UInt64)
  name: NextUInt64s(nint, UInt64, UInt64)
  href: api/Numbersome.Random.html#Numbersome_Random_NextUInt64s_nint_System_UInt64_System_UInt64_
  commentId: M:Numbersome.Random.NextUInt64s(nint,System.UInt64,System.UInt64)
  fullName: Numbersome.Random.NextUInt64s(nint, System.UInt64, System.UInt64)
  nameWithType: Random.NextUInt64s(nint, UInt64, UInt64)
- uid: Numbersome.Random.NextUInt64s(System.Memory{System.UInt64})
  name: NextUInt64s(Memory<UInt64>)
  href: api/Numbersome.Random.html#Numbersome_Random_NextUInt64s_System_Memory_System_UInt64__
  commentId: M:Numbersome.Random.NextUInt64s(System.Memory{System.UInt64})
  name.vb: NextUInt64s(Memory(Of UInt64))
  fullName: Numbersome.Random.NextUInt64s(System.Memory<System.UInt64>)
  fullName.vb: Numbersome.Random.NextUInt64s(System.Memory(Of System.UInt64))
  nameWithType: Random.NextUInt64s(Memory<UInt64>)
  nameWithType.vb: Random.NextUInt64s(Memory(Of UInt64))
- uid: Numbersome.Random.NextUInt64s(System.Span{System.UInt64})
  name: NextUInt64s(Span<UInt64>)
  href: api/Numbersome.Random.html#Numbersome_Random_NextUInt64s_System_Span_System_UInt64__
  commentId: M:Numbersome.Random.NextUInt64s(System.Span{System.UInt64})
  name.vb: NextUInt64s(Span(Of UInt64))
  fullName: Numbersome.Random.NextUInt64s(System.Span<System.UInt64>)
  fullName.vb: Numbersome.Random.NextUInt64s(System.Span(Of System.UInt64))
  nameWithType: Random.NextUInt64s(Span<UInt64>)
  nameWithType.vb: Random.NextUInt64s(Span(Of UInt64))
- uid: Numbersome.Random.NextUInt64s(System.UInt64[])
  name: NextUInt64s(UInt64[])
  href: api/Numbersome.Random.html#Numbersome_Random_NextUInt64s_System_UInt64___
  commentId: M:Numbersome.Random.NextUInt64s(System.UInt64[])
  name.vb: NextUInt64s(UInt64())
  fullName: Numbersome.Random.NextUInt64s(System.UInt64[])
  fullName.vb: Numbersome.Random.NextUInt64s(System.UInt64())
  nameWithType: Random.NextUInt64s(UInt64[])
  nameWithType.vb: Random.NextUInt64s(UInt64())
- uid: Numbersome.Random.NextUInt64s*
  name: NextUInt64s
  href: api/Numbersome.Random.html#Numbersome_Random_NextUInt64s_
  commentId: Overload:Numbersome.Random.NextUInt64s
  isSpec: "True"
  fullName: Numbersome.Random.NextUInt64s
  nameWithType: Random.NextUInt64s
- uid: Numbersome.Random.NextUIntPtr
  name: NextUIntPtr()
  href: api/Numbersome.Random.html#Numbersome_Random_NextUIntPtr
  commentId: M:Numbersome.Random.NextUIntPtr
  fullName: Numbersome.Random.NextUIntPtr()
  nameWithType: Random.NextUIntPtr()
- uid: Numbersome.Random.NextUIntPtr(System.UIntPtr,System.UIntPtr)
  name: NextUIntPtr(UIntPtr, UIntPtr)
  href: api/Numbersome.Random.html#Numbersome_Random_NextUIntPtr_System_UIntPtr_System_UIntPtr_
  commentId: M:Numbersome.Random.NextUIntPtr(System.UIntPtr,System.UIntPtr)
  fullName: Numbersome.Random.NextUIntPtr(System.UIntPtr, System.UIntPtr)
  nameWithType: Random.NextUIntPtr(UIntPtr, UIntPtr)
- uid: Numbersome.Random.NextUIntPtr*
  name: NextUIntPtr
  href: api/Numbersome.Random.html#Numbersome_Random_NextUIntPtr_
  commentId: Overload:Numbersome.Random.NextUIntPtr
  isSpec: "True"
  fullName: Numbersome.Random.NextUIntPtr
  nameWithType: Random.NextUIntPtr
- uid: Numbersome.Random.NextUIntPtrs(nint)
  name: NextUIntPtrs(nint)
  href: api/Numbersome.Random.html#Numbersome_Random_NextUIntPtrs_nint_
  commentId: M:Numbersome.Random.NextUIntPtrs(nint)
  fullName: Numbersome.Random.NextUIntPtrs(nint)
  nameWithType: Random.NextUIntPtrs(nint)
- uid: Numbersome.Random.NextUIntPtrs(nint,System.UIntPtr,System.UIntPtr)
  name: NextUIntPtrs(nint, UIntPtr, UIntPtr)
  href: api/Numbersome.Random.html#Numbersome_Random_NextUIntPtrs_nint_System_UIntPtr_System_UIntPtr_
  commentId: M:Numbersome.Random.NextUIntPtrs(nint,System.UIntPtr,System.UIntPtr)
  fullName: Numbersome.Random.NextUIntPtrs(nint, System.UIntPtr, System.UIntPtr)
  nameWithType: Random.NextUIntPtrs(nint, UIntPtr, UIntPtr)
- uid: Numbersome.Random.NextUIntPtrs(System.Memory{System.UIntPtr})
  name: NextUIntPtrs(Memory<UIntPtr>)
  href: api/Numbersome.Random.html#Numbersome_Random_NextUIntPtrs_System_Memory_System_UIntPtr__
  commentId: M:Numbersome.Random.NextUIntPtrs(System.Memory{System.UIntPtr})
  name.vb: NextUIntPtrs(Memory(Of UIntPtr))
  fullName: Numbersome.Random.NextUIntPtrs(System.Memory<System.UIntPtr>)
  fullName.vb: Numbersome.Random.NextUIntPtrs(System.Memory(Of System.UIntPtr))
  nameWithType: Random.NextUIntPtrs(Memory<UIntPtr>)
  nameWithType.vb: Random.NextUIntPtrs(Memory(Of UIntPtr))
- uid: Numbersome.Random.NextUIntPtrs(System.Span{System.UIntPtr})
  name: NextUIntPtrs(Span<UIntPtr>)
  href: api/Numbersome.Random.html#Numbersome_Random_NextUIntPtrs_System_Span_System_UIntPtr__
  commentId: M:Numbersome.Random.NextUIntPtrs(System.Span{System.UIntPtr})
  name.vb: NextUIntPtrs(Span(Of UIntPtr))
  fullName: Numbersome.Random.NextUIntPtrs(System.Span<System.UIntPtr>)
  fullName.vb: Numbersome.Random.NextUIntPtrs(System.Span(Of System.UIntPtr))
  nameWithType: Random.NextUIntPtrs(Span<UIntPtr>)
  nameWithType.vb: Random.NextUIntPtrs(Span(Of UIntPtr))
- uid: Numbersome.Random.NextUIntPtrs(System.UIntPtr[])
  name: NextUIntPtrs(UIntPtr[])
  href: api/Numbersome.Random.html#Numbersome_Random_NextUIntPtrs_System_UIntPtr___
  commentId: M:Numbersome.Random.NextUIntPtrs(System.UIntPtr[])
  name.vb: NextUIntPtrs(UIntPtr())
  fullName: Numbersome.Random.NextUIntPtrs(System.UIntPtr[])
  fullName.vb: Numbersome.Random.NextUIntPtrs(System.UIntPtr())
  nameWithType: Random.NextUIntPtrs(UIntPtr[])
  nameWithType.vb: Random.NextUIntPtrs(UIntPtr())
- uid: Numbersome.Random.NextUIntPtrs*
  name: NextUIntPtrs
  href: api/Numbersome.Random.html#Numbersome_Random_NextUIntPtrs_
  commentId: Overload:Numbersome.Random.NextUIntPtrs
  isSpec: "True"
  fullName: Numbersome.Random.NextUIntPtrs
  nameWithType: Random.NextUIntPtrs
- uid: Numbersome.Set`1
  name: Set<TElement>
  href: api/Numbersome.Set-1.html
  commentId: T:Numbersome.Set`1
  name.vb: Set(Of TElement)
  fullName: Numbersome.Set<TElement>
  fullName.vb: Numbersome.Set(Of TElement)
  nameWithType: Set<TElement>
  nameWithType.vb: Set(Of TElement)
- uid: Numbersome.Set`1.#ctor(`0[])
  name: Set(TElement[])
  href: api/Numbersome.Set-1.html#Numbersome_Set_1__ctor__0___
  commentId: M:Numbersome.Set`1.#ctor(`0[])
  name.vb: Set(TElement())
  fullName: Numbersome.Set<TElement>.Set(TElement[])
  fullName.vb: Numbersome.Set(Of TElement).Set(TElement())
  nameWithType: Set<TElement>.Set(TElement[])
  nameWithType.vb: Set(Of TElement).Set(TElement())
- uid: Numbersome.Set`1.#ctor(System.Predicate{`0})
  name: Set(Predicate<TElement>)
  href: api/Numbersome.Set-1.html#Numbersome_Set_1__ctor_System_Predicate__0__
  commentId: M:Numbersome.Set`1.#ctor(System.Predicate{`0})
  name.vb: Set(Predicate(Of TElement))
  fullName: Numbersome.Set<TElement>.Set(System.Predicate<TElement>)
  fullName.vb: Numbersome.Set(Of TElement).Set(System.Predicate(Of TElement))
  nameWithType: Set<TElement>.Set(Predicate<TElement>)
  nameWithType.vb: Set(Of TElement).Set(Predicate(Of TElement))
- uid: Numbersome.Set`1.#ctor(System.Traits.IContains{`0})
  name: Set(IContains<TElement>)
  href: api/Numbersome.Set-1.html#Numbersome_Set_1__ctor_System_Traits_IContains__0__
  commentId: M:Numbersome.Set`1.#ctor(System.Traits.IContains{`0})
  name.vb: Set(IContains(Of TElement))
  fullName: Numbersome.Set<TElement>.Set(System.Traits.IContains<TElement>)
  fullName.vb: Numbersome.Set(Of TElement).Set(System.Traits.IContains(Of TElement))
  nameWithType: Set<TElement>.Set(IContains<TElement>)
  nameWithType.vb: Set(Of TElement).Set(IContains(Of TElement))
- uid: Numbersome.Set`1.#ctor*
  name: Set
  href: api/Numbersome.Set-1.html#Numbersome_Set_1__ctor_
  commentId: Overload:Numbersome.Set`1.#ctor
  isSpec: "True"
  fullName: Numbersome.Set<TElement>.Set
  fullName.vb: Numbersome.Set(Of TElement).Set
  nameWithType: Set<TElement>.Set
  nameWithType.vb: Set(Of TElement).Set
- uid: Numbersome.Set`1.Compliment(Numbersome.Set{`0})
  name: Compliment(Set<TElement>)
  href: api/Numbersome.Set-1.html#Numbersome_Set_1_Compliment_Numbersome_Set__0__
  commentId: M:Numbersome.Set`1.Compliment(Numbersome.Set{`0})
  name.vb: Compliment(Set(Of TElement))
  fullName: Numbersome.Set<TElement>.Compliment(Numbersome.Set<TElement>)
  fullName.vb: Numbersome.Set(Of TElement).Compliment(Numbersome.Set(Of TElement))
  nameWithType: Set<TElement>.Compliment(Set<TElement>)
  nameWithType.vb: Set(Of TElement).Compliment(Set(Of TElement))
- uid: Numbersome.Set`1.Compliment*
  name: Compliment
  href: api/Numbersome.Set-1.html#Numbersome_Set_1_Compliment_
  commentId: Overload:Numbersome.Set`1.Compliment
  isSpec: "True"
  fullName: Numbersome.Set<TElement>.Compliment
  fullName.vb: Numbersome.Set(Of TElement).Compliment
  nameWithType: Set<TElement>.Compliment
  nameWithType.vb: Set(Of TElement).Compliment
- uid: Numbersome.Set`1.Contains(`0)
  name: Contains(TElement)
  href: api/Numbersome.Set-1.html#Numbersome_Set_1_Contains__0_
  commentId: M:Numbersome.Set`1.Contains(`0)
  fullName: Numbersome.Set<TElement>.Contains(TElement)
  fullName.vb: Numbersome.Set(Of TElement).Contains(TElement)
  nameWithType: Set<TElement>.Contains(TElement)
  nameWithType.vb: Set(Of TElement).Contains(TElement)
- uid: Numbersome.Set`1.Contains*
  name: Contains
  href: api/Numbersome.Set-1.html#Numbersome_Set_1_Contains_
  commentId: Overload:Numbersome.Set`1.Contains
  isSpec: "True"
  fullName: Numbersome.Set<TElement>.Contains
  fullName.vb: Numbersome.Set(Of TElement).Contains
  nameWithType: Set<TElement>.Contains
  nameWithType.vb: Set(Of TElement).Contains
- uid: Numbersome.Set`1.Difference(Numbersome.Set{`0},Numbersome.Set{`0})
  name: Difference(Set<TElement>, Set<TElement>)
  href: api/Numbersome.Set-1.html#Numbersome_Set_1_Difference_Numbersome_Set__0__Numbersome_Set__0__
  commentId: M:Numbersome.Set`1.Difference(Numbersome.Set{`0},Numbersome.Set{`0})
  name.vb: Difference(Set(Of TElement), Set(Of TElement))
  fullName: Numbersome.Set<TElement>.Difference(Numbersome.Set<TElement>, Numbersome.Set<TElement>)
  fullName.vb: Numbersome.Set(Of TElement).Difference(Numbersome.Set(Of TElement), Numbersome.Set(Of TElement))
  nameWithType: Set<TElement>.Difference(Set<TElement>, Set<TElement>)
  nameWithType.vb: Set(Of TElement).Difference(Set(Of TElement), Set(Of TElement))
- uid: Numbersome.Set`1.Difference*
  name: Difference
  href: api/Numbersome.Set-1.html#Numbersome_Set_1_Difference_
  commentId: Overload:Numbersome.Set`1.Difference
  isSpec: "True"
  fullName: Numbersome.Set<TElement>.Difference
  fullName.vb: Numbersome.Set(Of TElement).Difference
  nameWithType: Set<TElement>.Difference
  nameWithType.vb: Set(Of TElement).Difference
- uid: Numbersome.Set`1.Disjunction(Numbersome.Set{`0},Numbersome.Set{`0})
  name: Disjunction(Set<TElement>, Set<TElement>)
  href: api/Numbersome.Set-1.html#Numbersome_Set_1_Disjunction_Numbersome_Set__0__Numbersome_Set__0__
  commentId: M:Numbersome.Set`1.Disjunction(Numbersome.Set{`0},Numbersome.Set{`0})
  name.vb: Disjunction(Set(Of TElement), Set(Of TElement))
  fullName: Numbersome.Set<TElement>.Disjunction(Numbersome.Set<TElement>, Numbersome.Set<TElement>)
  fullName.vb: Numbersome.Set(Of TElement).Disjunction(Numbersome.Set(Of TElement), Numbersome.Set(Of TElement))
  nameWithType: Set<TElement>.Disjunction(Set<TElement>, Set<TElement>)
  nameWithType.vb: Set(Of TElement).Disjunction(Set(Of TElement), Set(Of TElement))
- uid: Numbersome.Set`1.Disjunction*
  name: Disjunction
  href: api/Numbersome.Set-1.html#Numbersome_Set_1_Disjunction_
  commentId: Overload:Numbersome.Set`1.Disjunction
  isSpec: "True"
  fullName: Numbersome.Set<TElement>.Disjunction
  fullName.vb: Numbersome.Set(Of TElement).Disjunction
  nameWithType: Set<TElement>.Disjunction
  nameWithType.vb: Set(Of TElement).Disjunction
- uid: Numbersome.Set`1.Empty
  name: Empty
  href: api/Numbersome.Set-1.html#Numbersome_Set_1_Empty
  commentId: P:Numbersome.Set`1.Empty
  fullName: Numbersome.Set<TElement>.Empty
  fullName.vb: Numbersome.Set(Of TElement).Empty
  nameWithType: Set<TElement>.Empty
  nameWithType.vb: Set(Of TElement).Empty
- uid: Numbersome.Set`1.Empty*
  name: Empty
  href: api/Numbersome.Set-1.html#Numbersome_Set_1_Empty_
  commentId: Overload:Numbersome.Set`1.Empty
  isSpec: "True"
  fullName: Numbersome.Set<TElement>.Empty
  fullName.vb: Numbersome.Set(Of TElement).Empty
  nameWithType: Set<TElement>.Empty
  nameWithType.vb: Set(Of TElement).Empty
- uid: Numbersome.Set`1.Intersection(Numbersome.Set{`0},Numbersome.Set{`0})
  name: Intersection(Set<TElement>, Set<TElement>)
  href: api/Numbersome.Set-1.html#Numbersome_Set_1_Intersection_Numbersome_Set__0__Numbersome_Set__0__
  commentId: M:Numbersome.Set`1.Intersection(Numbersome.Set{`0},Numbersome.Set{`0})
  name.vb: Intersection(Set(Of TElement), Set(Of TElement))
  fullName: Numbersome.Set<TElement>.Intersection(Numbersome.Set<TElement>, Numbersome.Set<TElement>)
  fullName.vb: Numbersome.Set(Of TElement).Intersection(Numbersome.Set(Of TElement), Numbersome.Set(Of TElement))
  nameWithType: Set<TElement>.Intersection(Set<TElement>, Set<TElement>)
  nameWithType.vb: Set(Of TElement).Intersection(Set(Of TElement), Set(Of TElement))
- uid: Numbersome.Set`1.Intersection*
  name: Intersection
  href: api/Numbersome.Set-1.html#Numbersome_Set_1_Intersection_
  commentId: Overload:Numbersome.Set`1.Intersection
  isSpec: "True"
  fullName: Numbersome.Set<TElement>.Intersection
  fullName.vb: Numbersome.Set(Of TElement).Intersection
  nameWithType: Set<TElement>.Intersection
  nameWithType.vb: Set(Of TElement).Intersection
- uid: Numbersome.Set`1.op_BitwiseAnd(Numbersome.Set{`0},Numbersome.Set{`0})
  name: BitwiseAnd(Set<TElement>, Set<TElement>)
  href: api/Numbersome.Set-1.html#Numbersome_Set_1_op_BitwiseAnd_Numbersome_Set__0__Numbersome_Set__0__
  commentId: M:Numbersome.Set`1.op_BitwiseAnd(Numbersome.Set{`0},Numbersome.Set{`0})
  name.vb: BitwiseAnd(Set(Of TElement), Set(Of TElement))
  fullName: Numbersome.Set<TElement>.BitwiseAnd(Numbersome.Set<TElement>, Numbersome.Set<TElement>)
  fullName.vb: Numbersome.Set(Of TElement).BitwiseAnd(Numbersome.Set(Of TElement), Numbersome.Set(Of TElement))
  nameWithType: Set<TElement>.BitwiseAnd(Set<TElement>, Set<TElement>)
  nameWithType.vb: Set(Of TElement).BitwiseAnd(Set(Of TElement), Set(Of TElement))
- uid: Numbersome.Set`1.op_BitwiseAnd*
  name: BitwiseAnd
  href: api/Numbersome.Set-1.html#Numbersome_Set_1_op_BitwiseAnd_
  commentId: Overload:Numbersome.Set`1.op_BitwiseAnd
  isSpec: "True"
  fullName: Numbersome.Set<TElement>.BitwiseAnd
  fullName.vb: Numbersome.Set(Of TElement).BitwiseAnd
  nameWithType: Set<TElement>.BitwiseAnd
  nameWithType.vb: Set(Of TElement).BitwiseAnd
- uid: Numbersome.Set`1.op_BitwiseOr(Numbersome.Set{`0},Numbersome.Set{`0})
  name: BitwiseOr(Set<TElement>, Set<TElement>)
  href: api/Numbersome.Set-1.html#Numbersome_Set_1_op_BitwiseOr_Numbersome_Set__0__Numbersome_Set__0__
  commentId: M:Numbersome.Set`1.op_BitwiseOr(Numbersome.Set{`0},Numbersome.Set{`0})
  name.vb: BitwiseOr(Set(Of TElement), Set(Of TElement))
  fullName: Numbersome.Set<TElement>.BitwiseOr(Numbersome.Set<TElement>, Numbersome.Set<TElement>)
  fullName.vb: Numbersome.Set(Of TElement).BitwiseOr(Numbersome.Set(Of TElement), Numbersome.Set(Of TElement))
  nameWithType: Set<TElement>.BitwiseOr(Set<TElement>, Set<TElement>)
  nameWithType.vb: Set(Of TElement).BitwiseOr(Set(Of TElement), Set(Of TElement))
- uid: Numbersome.Set`1.op_BitwiseOr*
  name: BitwiseOr
  href: api/Numbersome.Set-1.html#Numbersome_Set_1_op_BitwiseOr_
  commentId: Overload:Numbersome.Set`1.op_BitwiseOr
  isSpec: "True"
  fullName: Numbersome.Set<TElement>.BitwiseOr
  fullName.vb: Numbersome.Set(Of TElement).BitwiseOr
  nameWithType: Set<TElement>.BitwiseOr
  nameWithType.vb: Set(Of TElement).BitwiseOr
- uid: Numbersome.Set`1.op_ExclusiveOr(Numbersome.Set{`0},Numbersome.Set{`0})
  name: ExclusiveOr(Set<TElement>, Set<TElement>)
  href: api/Numbersome.Set-1.html#Numbersome_Set_1_op_ExclusiveOr_Numbersome_Set__0__Numbersome_Set__0__
  commentId: M:Numbersome.Set`1.op_ExclusiveOr(Numbersome.Set{`0},Numbersome.Set{`0})
  name.vb: ExclusiveOr(Set(Of TElement), Set(Of TElement))
  fullName: Numbersome.Set<TElement>.ExclusiveOr(Numbersome.Set<TElement>, Numbersome.Set<TElement>)
  fullName.vb: Numbersome.Set(Of TElement).ExclusiveOr(Numbersome.Set(Of TElement), Numbersome.Set(Of TElement))
  nameWithType: Set<TElement>.ExclusiveOr(Set<TElement>, Set<TElement>)
  nameWithType.vb: Set(Of TElement).ExclusiveOr(Set(Of TElement), Set(Of TElement))
- uid: Numbersome.Set`1.op_ExclusiveOr*
  name: ExclusiveOr
  href: api/Numbersome.Set-1.html#Numbersome_Set_1_op_ExclusiveOr_
  commentId: Overload:Numbersome.Set`1.op_ExclusiveOr
  isSpec: "True"
  fullName: Numbersome.Set<TElement>.ExclusiveOr
  fullName.vb: Numbersome.Set(Of TElement).ExclusiveOr
  nameWithType: Set<TElement>.ExclusiveOr
  nameWithType.vb: Set(Of TElement).ExclusiveOr
- uid: Numbersome.Set`1.op_LogicalNot(Numbersome.Set{`0})
  name: LogicalNot(Set<TElement>)
  href: api/Numbersome.Set-1.html#Numbersome_Set_1_op_LogicalNot_Numbersome_Set__0__
  commentId: M:Numbersome.Set`1.op_LogicalNot(Numbersome.Set{`0})
  name.vb: LogicalNot(Set(Of TElement))
  fullName: Numbersome.Set<TElement>.LogicalNot(Numbersome.Set<TElement>)
  fullName.vb: Numbersome.Set(Of TElement).LogicalNot(Numbersome.Set(Of TElement))
  nameWithType: Set<TElement>.LogicalNot(Set<TElement>)
  nameWithType.vb: Set(Of TElement).LogicalNot(Set(Of TElement))
- uid: Numbersome.Set`1.op_LogicalNot*
  name: LogicalNot
  href: api/Numbersome.Set-1.html#Numbersome_Set_1_op_LogicalNot_
  commentId: Overload:Numbersome.Set`1.op_LogicalNot
  isSpec: "True"
  fullName: Numbersome.Set<TElement>.LogicalNot
  fullName.vb: Numbersome.Set(Of TElement).LogicalNot
  nameWithType: Set<TElement>.LogicalNot
  nameWithType.vb: Set(Of TElement).LogicalNot
- uid: Numbersome.Set`1.op_Subtraction(Numbersome.Set{`0},Numbersome.Set{`0})
  name: Subtraction(Set<TElement>, Set<TElement>)
  href: api/Numbersome.Set-1.html#Numbersome_Set_1_op_Subtraction_Numbersome_Set__0__Numbersome_Set__0__
  commentId: M:Numbersome.Set`1.op_Subtraction(Numbersome.Set{`0},Numbersome.Set{`0})
  name.vb: Subtraction(Set(Of TElement), Set(Of TElement))
  fullName: Numbersome.Set<TElement>.Subtraction(Numbersome.Set<TElement>, Numbersome.Set<TElement>)
  fullName.vb: Numbersome.Set(Of TElement).Subtraction(Numbersome.Set(Of TElement), Numbersome.Set(Of TElement))
  nameWithType: Set<TElement>.Subtraction(Set<TElement>, Set<TElement>)
  nameWithType.vb: Set(Of TElement).Subtraction(Set(Of TElement), Set(Of TElement))
- uid: Numbersome.Set`1.op_Subtraction*
  name: Subtraction
  href: api/Numbersome.Set-1.html#Numbersome_Set_1_op_Subtraction_
  commentId: Overload:Numbersome.Set`1.op_Subtraction
  isSpec: "True"
  fullName: Numbersome.Set<TElement>.Subtraction
  fullName.vb: Numbersome.Set(Of TElement).Subtraction
  nameWithType: Set<TElement>.Subtraction
  nameWithType.vb: Set(Of TElement).Subtraction
- uid: Numbersome.Set`1.Predicate
  name: Predicate
  href: api/Numbersome.Set-1.html#Numbersome_Set_1_Predicate
  commentId: F:Numbersome.Set`1.Predicate
  fullName: Numbersome.Set<TElement>.Predicate
  fullName.vb: Numbersome.Set(Of TElement).Predicate
  nameWithType: Set<TElement>.Predicate
  nameWithType.vb: Set(Of TElement).Predicate
- uid: Numbersome.Set`1.Range*
  name: Range
  href: api/Numbersome.Set-1.html#Numbersome_Set_1_Range_
  commentId: Overload:Numbersome.Set`1.Range
  isSpec: "True"
  fullName: Numbersome.Set<TElement>.Range
  fullName.vb: Numbersome.Set(Of TElement).Range
  nameWithType: Set<TElement>.Range
  nameWithType.vb: Set(Of TElement).Range
- uid: Numbersome.Set`1.Range``1(``0,``0)
  name: Range<TElement>(TElement, TElement)
  href: api/Numbersome.Set-1.html#Numbersome_Set_1_Range__1___0___0_
  commentId: M:Numbersome.Set`1.Range``1(``0,``0)
  name.vb: Range(Of TElement)(TElement, TElement)
  fullName: Numbersome.Set<TElement>.Range<TElement>(TElement, TElement)
  fullName.vb: Numbersome.Set(Of TElement).Range(Of TElement)(TElement, TElement)
  nameWithType: Set<TElement>.Range<TElement>(TElement, TElement)
  nameWithType.vb: Set(Of TElement).Range(Of TElement)(TElement, TElement)
- uid: Numbersome.Set`1.Union(Numbersome.Set{`0},Numbersome.Set{`0})
  name: Union(Set<TElement>, Set<TElement>)
  href: api/Numbersome.Set-1.html#Numbersome_Set_1_Union_Numbersome_Set__0__Numbersome_Set__0__
  commentId: M:Numbersome.Set`1.Union(Numbersome.Set{`0},Numbersome.Set{`0})
  name.vb: Union(Set(Of TElement), Set(Of TElement))
  fullName: Numbersome.Set<TElement>.Union(Numbersome.Set<TElement>, Numbersome.Set<TElement>)
  fullName.vb: Numbersome.Set(Of TElement).Union(Numbersome.Set(Of TElement), Numbersome.Set(Of TElement))
  nameWithType: Set<TElement>.Union(Set<TElement>, Set<TElement>)
  nameWithType.vb: Set(Of TElement).Union(Set(Of TElement), Set(Of TElement))
- uid: Numbersome.Set`1.Union*
  name: Union
  href: api/Numbersome.Set-1.html#Numbersome_Set_1_Union_
  commentId: Overload:Numbersome.Set`1.Union
  isSpec: "True"
  fullName: Numbersome.Set<TElement>.Union
  fullName.vb: Numbersome.Set(Of TElement).Union
  nameWithType: Set<TElement>.Union
  nameWithType.vb: Set(Of TElement).Union
- uid: Numbersome.Set`1.Universe
  name: Universe
  href: api/Numbersome.Set-1.html#Numbersome_Set_1_Universe
  commentId: P:Numbersome.Set`1.Universe
  fullName: Numbersome.Set<TElement>.Universe
  fullName.vb: Numbersome.Set(Of TElement).Universe
  nameWithType: Set<TElement>.Universe
  nameWithType.vb: Set(Of TElement).Universe
- uid: Numbersome.Set`1.Universe*
  name: Universe
  href: api/Numbersome.Set-1.html#Numbersome_Set_1_Universe_
  commentId: Overload:Numbersome.Set`1.Universe
  isSpec: "True"
  fullName: Numbersome.Set<TElement>.Universe
  fullName.vb: Numbersome.Set(Of TElement).Universe
  nameWithType: Set<TElement>.Universe
  nameWithType.vb: Set(Of TElement).Universe
- uid: Numbersome.StatisticExtensions
  name: StatisticExtensions
  href: api/Numbersome.StatisticExtensions.html
  commentId: T:Numbersome.StatisticExtensions
  fullName: Numbersome.StatisticExtensions
  nameWithType: StatisticExtensions
- uid: Numbersome.StatisticExtensions.ArithmeticMean*
  name: ArithmeticMean
  href: api/Numbersome.StatisticExtensions.html#Numbersome_StatisticExtensions_ArithmeticMean_
  commentId: Overload:Numbersome.StatisticExtensions.ArithmeticMean
  isSpec: "True"
  fullName: Numbersome.StatisticExtensions.ArithmeticMean
  nameWithType: StatisticExtensions.ArithmeticMean
- uid: Numbersome.StatisticExtensions.ArithmeticMean``1(System.Traits.ISequence{Byte,``0})
  name: ArithmeticMean<TEnumerator>(ISequence<Byte, TEnumerator>)
  href: api/Numbersome.StatisticExtensions.html#Numbersome_StatisticExtensions_ArithmeticMean__1_System_Traits_ISequence_Byte___0__
  commentId: M:Numbersome.StatisticExtensions.ArithmeticMean``1(System.Traits.ISequence{Byte,``0})
  name.vb: ArithmeticMean(Of TEnumerator)(ISequence(Of Byte, TEnumerator))
  fullName: Numbersome.StatisticExtensions.ArithmeticMean<TEnumerator>(System.Traits.ISequence<Byte, TEnumerator>)
  fullName.vb: Numbersome.StatisticExtensions.ArithmeticMean(Of TEnumerator)(System.Traits.ISequence(Of Byte, TEnumerator))
  nameWithType: StatisticExtensions.ArithmeticMean<TEnumerator>(ISequence<Byte, TEnumerator>)
  nameWithType.vb: StatisticExtensions.ArithmeticMean(Of TEnumerator)(ISequence(Of Byte, TEnumerator))
- uid: Numbersome.StatisticExtensions.ArithmeticMean``1(System.Traits.ISequence{Double,``0})
  name: ArithmeticMean<TEnumerator>(ISequence<Double, TEnumerator>)
  href: api/Numbersome.StatisticExtensions.html#Numbersome_StatisticExtensions_ArithmeticMean__1_System_Traits_ISequence_Double___0__
  commentId: M:Numbersome.StatisticExtensions.ArithmeticMean``1(System.Traits.ISequence{Double,``0})
  name.vb: ArithmeticMean(Of TEnumerator)(ISequence(Of Double, TEnumerator))
  fullName: Numbersome.StatisticExtensions.ArithmeticMean<TEnumerator>(System.Traits.ISequence<Double, TEnumerator>)
  fullName.vb: Numbersome.StatisticExtensions.ArithmeticMean(Of TEnumerator)(System.Traits.ISequence(Of Double, TEnumerator))
  nameWithType: StatisticExtensions.ArithmeticMean<TEnumerator>(ISequence<Double, TEnumerator>)
  nameWithType.vb: StatisticExtensions.ArithmeticMean(Of TEnumerator)(ISequence(Of Double, TEnumerator))
- uid: Numbersome.StatisticExtensions.ArithmeticMean``1(System.Traits.ISequence{Int16,``0})
  name: ArithmeticMean<TEnumerator>(ISequence<Int16, TEnumerator>)
  href: api/Numbersome.StatisticExtensions.html#Numbersome_StatisticExtensions_ArithmeticMean__1_System_Traits_ISequence_Int16___0__
  commentId: M:Numbersome.StatisticExtensions.ArithmeticMean``1(System.Traits.ISequence{Int16,``0})
  name.vb: ArithmeticMean(Of TEnumerator)(ISequence(Of Int16, TEnumerator))
  fullName: Numbersome.StatisticExtensions.ArithmeticMean<TEnumerator>(System.Traits.ISequence<Int16, TEnumerator>)
  fullName.vb: Numbersome.StatisticExtensions.ArithmeticMean(Of TEnumerator)(System.Traits.ISequence(Of Int16, TEnumerator))
  nameWithType: StatisticExtensions.ArithmeticMean<TEnumerator>(ISequence<Int16, TEnumerator>)
  nameWithType.vb: StatisticExtensions.ArithmeticMean(Of TEnumerator)(ISequence(Of Int16, TEnumerator))
- uid: Numbersome.StatisticExtensions.ArithmeticMean``1(System.Traits.ISequence{Int32,``0})
  name: ArithmeticMean<TEnumerator>(ISequence<Int32, TEnumerator>)
  href: api/Numbersome.StatisticExtensions.html#Numbersome_StatisticExtensions_ArithmeticMean__1_System_Traits_ISequence_Int32___0__
  commentId: M:Numbersome.StatisticExtensions.ArithmeticMean``1(System.Traits.ISequence{Int32,``0})
  name.vb: ArithmeticMean(Of TEnumerator)(ISequence(Of Int32, TEnumerator))
  fullName: Numbersome.StatisticExtensions.ArithmeticMean<TEnumerator>(System.Traits.ISequence<Int32, TEnumerator>)
  fullName.vb: Numbersome.StatisticExtensions.ArithmeticMean(Of TEnumerator)(System.Traits.ISequence(Of Int32, TEnumerator))
  nameWithType: StatisticExtensions.ArithmeticMean<TEnumerator>(ISequence<Int32, TEnumerator>)
  nameWithType.vb: StatisticExtensions.ArithmeticMean(Of TEnumerator)(ISequence(Of Int32, TEnumerator))
- uid: Numbersome.StatisticExtensions.ArithmeticMean``1(System.Traits.ISequence{Int64,``0})
  name: ArithmeticMean<TEnumerator>(ISequence<Int64, TEnumerator>)
  href: api/Numbersome.StatisticExtensions.html#Numbersome_StatisticExtensions_ArithmeticMean__1_System_Traits_ISequence_Int64___0__
  commentId: M:Numbersome.StatisticExtensions.ArithmeticMean``1(System.Traits.ISequence{Int64,``0})
  name.vb: ArithmeticMean(Of TEnumerator)(ISequence(Of Int64, TEnumerator))
  fullName: Numbersome.StatisticExtensions.ArithmeticMean<TEnumerator>(System.Traits.ISequence<Int64, TEnumerator>)
  fullName.vb: Numbersome.StatisticExtensions.ArithmeticMean(Of TEnumerator)(System.Traits.ISequence(Of Int64, TEnumerator))
  nameWithType: StatisticExtensions.ArithmeticMean<TEnumerator>(ISequence<Int64, TEnumerator>)
  nameWithType.vb: StatisticExtensions.ArithmeticMean(Of TEnumerator)(ISequence(Of Int64, TEnumerator))
- uid: Numbersome.StatisticExtensions.ArithmeticMean``1(System.Traits.ISequence{nint,``0})
  name: ArithmeticMean<TEnumerator>(ISequence<nint, TEnumerator>)
  href: api/Numbersome.StatisticExtensions.html#Numbersome_StatisticExtensions_ArithmeticMean__1_System_Traits_ISequence_nint___0__
  commentId: M:Numbersome.StatisticExtensions.ArithmeticMean``1(System.Traits.ISequence{nint,``0})
  name.vb: ArithmeticMean(Of TEnumerator)(ISequence(Of nint, TEnumerator))
  fullName: Numbersome.StatisticExtensions.ArithmeticMean<TEnumerator>(System.Traits.ISequence<nint, TEnumerator>)
  fullName.vb: Numbersome.StatisticExtensions.ArithmeticMean(Of TEnumerator)(System.Traits.ISequence(Of nint, TEnumerator))
  nameWithType: StatisticExtensions.ArithmeticMean<TEnumerator>(ISequence<nint, TEnumerator>)
  nameWithType.vb: StatisticExtensions.ArithmeticMean(Of TEnumerator)(ISequence(Of nint, TEnumerator))
- uid: Numbersome.StatisticExtensions.ArithmeticMean``1(System.Traits.ISequence{nuint,``0})
  name: ArithmeticMean<TEnumerator>(ISequence<nuint, TEnumerator>)
  href: api/Numbersome.StatisticExtensions.html#Numbersome_StatisticExtensions_ArithmeticMean__1_System_Traits_ISequence_nuint___0__
  commentId: M:Numbersome.StatisticExtensions.ArithmeticMean``1(System.Traits.ISequence{nuint,``0})
  name.vb: ArithmeticMean(Of TEnumerator)(ISequence(Of nuint, TEnumerator))
  fullName: Numbersome.StatisticExtensions.ArithmeticMean<TEnumerator>(System.Traits.ISequence<nuint, TEnumerator>)
  fullName.vb: Numbersome.StatisticExtensions.ArithmeticMean(Of TEnumerator)(System.Traits.ISequence(Of nuint, TEnumerator))
  nameWithType: StatisticExtensions.ArithmeticMean<TEnumerator>(ISequence<nuint, TEnumerator>)
  nameWithType.vb: StatisticExtensions.ArithmeticMean(Of TEnumerator)(ISequence(Of nuint, TEnumerator))
- uid: Numbersome.StatisticExtensions.ArithmeticMean``1(System.Traits.ISequence{SByte,``0})
  name: ArithmeticMean<TEnumerator>(ISequence<SByte, TEnumerator>)
  href: api/Numbersome.StatisticExtensions.html#Numbersome_StatisticExtensions_ArithmeticMean__1_System_Traits_ISequence_SByte___0__
  commentId: M:Numbersome.StatisticExtensions.ArithmeticMean``1(System.Traits.ISequence{SByte,``0})
  name.vb: ArithmeticMean(Of TEnumerator)(ISequence(Of SByte, TEnumerator))
  fullName: Numbersome.StatisticExtensions.ArithmeticMean<TEnumerator>(System.Traits.ISequence<SByte, TEnumerator>)
  fullName.vb: Numbersome.StatisticExtensions.ArithmeticMean(Of TEnumerator)(System.Traits.ISequence(Of SByte, TEnumerator))
  nameWithType: StatisticExtensions.ArithmeticMean<TEnumerator>(ISequence<SByte, TEnumerator>)
  nameWithType.vb: StatisticExtensions.ArithmeticMean(Of TEnumerator)(ISequence(Of SByte, TEnumerator))
- uid: Numbersome.StatisticExtensions.ArithmeticMean``1(System.Traits.ISequence{Single,``0})
  name: ArithmeticMean<TEnumerator>(ISequence<Single, TEnumerator>)
  href: api/Numbersome.StatisticExtensions.html#Numbersome_StatisticExtensions_ArithmeticMean__1_System_Traits_ISequence_Single___0__
  commentId: M:Numbersome.StatisticExtensions.ArithmeticMean``1(System.Traits.ISequence{Single,``0})
  name.vb: ArithmeticMean(Of TEnumerator)(ISequence(Of Single, TEnumerator))
  fullName: Numbersome.StatisticExtensions.ArithmeticMean<TEnumerator>(System.Traits.ISequence<Single, TEnumerator>)
  fullName.vb: Numbersome.StatisticExtensions.ArithmeticMean(Of TEnumerator)(System.Traits.ISequence(Of Single, TEnumerator))
  nameWithType: StatisticExtensions.ArithmeticMean<TEnumerator>(ISequence<Single, TEnumerator>)
  nameWithType.vb: StatisticExtensions.ArithmeticMean(Of TEnumerator)(ISequence(Of Single, TEnumerator))
- uid: Numbersome.StatisticExtensions.ArithmeticMean``1(System.Traits.ISequence{UInt16,``0})
  name: ArithmeticMean<TEnumerator>(ISequence<UInt16, TEnumerator>)
  href: api/Numbersome.StatisticExtensions.html#Numbersome_StatisticExtensions_ArithmeticMean__1_System_Traits_ISequence_UInt16___0__
  commentId: M:Numbersome.StatisticExtensions.ArithmeticMean``1(System.Traits.ISequence{UInt16,``0})
  name.vb: ArithmeticMean(Of TEnumerator)(ISequence(Of UInt16, TEnumerator))
  fullName: Numbersome.StatisticExtensions.ArithmeticMean<TEnumerator>(System.Traits.ISequence<UInt16, TEnumerator>)
  fullName.vb: Numbersome.StatisticExtensions.ArithmeticMean(Of TEnumerator)(System.Traits.ISequence(Of UInt16, TEnumerator))
  nameWithType: StatisticExtensions.ArithmeticMean<TEnumerator>(ISequence<UInt16, TEnumerator>)
  nameWithType.vb: StatisticExtensions.ArithmeticMean(Of TEnumerator)(ISequence(Of UInt16, TEnumerator))
- uid: Numbersome.StatisticExtensions.ArithmeticMean``1(System.Traits.ISequence{UInt32,``0})
  name: ArithmeticMean<TEnumerator>(ISequence<UInt32, TEnumerator>)
  href: api/Numbersome.StatisticExtensions.html#Numbersome_StatisticExtensions_ArithmeticMean__1_System_Traits_ISequence_UInt32___0__
  commentId: M:Numbersome.StatisticExtensions.ArithmeticMean``1(System.Traits.ISequence{UInt32,``0})
  name.vb: ArithmeticMean(Of TEnumerator)(ISequence(Of UInt32, TEnumerator))
  fullName: Numbersome.StatisticExtensions.ArithmeticMean<TEnumerator>(System.Traits.ISequence<UInt32, TEnumerator>)
  fullName.vb: Numbersome.StatisticExtensions.ArithmeticMean(Of TEnumerator)(System.Traits.ISequence(Of UInt32, TEnumerator))
  nameWithType: StatisticExtensions.ArithmeticMean<TEnumerator>(ISequence<UInt32, TEnumerator>)
  nameWithType.vb: StatisticExtensions.ArithmeticMean(Of TEnumerator)(ISequence(Of UInt32, TEnumerator))
- uid: Numbersome.StatisticExtensions.ArithmeticMean``1(System.Traits.ISequence{UInt64,``0})
  name: ArithmeticMean<TEnumerator>(ISequence<UInt64, TEnumerator>)
  href: api/Numbersome.StatisticExtensions.html#Numbersome_StatisticExtensions_ArithmeticMean__1_System_Traits_ISequence_UInt64___0__
  commentId: M:Numbersome.StatisticExtensions.ArithmeticMean``1(System.Traits.ISequence{UInt64,``0})
  name.vb: ArithmeticMean(Of TEnumerator)(ISequence(Of UInt64, TEnumerator))
  fullName: Numbersome.StatisticExtensions.ArithmeticMean<TEnumerator>(System.Traits.ISequence<UInt64, TEnumerator>)
  fullName.vb: Numbersome.StatisticExtensions.ArithmeticMean(Of TEnumerator)(System.Traits.ISequence(Of UInt64, TEnumerator))
  nameWithType: StatisticExtensions.ArithmeticMean<TEnumerator>(ISequence<UInt64, TEnumerator>)
  nameWithType.vb: StatisticExtensions.ArithmeticMean(Of TEnumerator)(ISequence(Of UInt64, TEnumerator))
- uid: Numbersome.StatisticExtensions.GeometricMean*
  name: GeometricMean
  href: api/Numbersome.StatisticExtensions.html#Numbersome_StatisticExtensions_GeometricMean_
  commentId: Overload:Numbersome.StatisticExtensions.GeometricMean
  isSpec: "True"
  fullName: Numbersome.StatisticExtensions.GeometricMean
  nameWithType: StatisticExtensions.GeometricMean
- uid: Numbersome.StatisticExtensions.GeometricMean``1(System.Traits.ISequence{Byte,``0})
  name: GeometricMean<TEnumerator>(ISequence<Byte, TEnumerator>)
  href: api/Numbersome.StatisticExtensions.html#Numbersome_StatisticExtensions_GeometricMean__1_System_Traits_ISequence_Byte___0__
  commentId: M:Numbersome.StatisticExtensions.GeometricMean``1(System.Traits.ISequence{Byte,``0})
  name.vb: GeometricMean(Of TEnumerator)(ISequence(Of Byte, TEnumerator))
  fullName: Numbersome.StatisticExtensions.GeometricMean<TEnumerator>(System.Traits.ISequence<Byte, TEnumerator>)
  fullName.vb: Numbersome.StatisticExtensions.GeometricMean(Of TEnumerator)(System.Traits.ISequence(Of Byte, TEnumerator))
  nameWithType: StatisticExtensions.GeometricMean<TEnumerator>(ISequence<Byte, TEnumerator>)
  nameWithType.vb: StatisticExtensions.GeometricMean(Of TEnumerator)(ISequence(Of Byte, TEnumerator))
- uid: Numbersome.StatisticExtensions.GeometricMean``1(System.Traits.ISequence{Double,``0})
  name: GeometricMean<TEnumerator>(ISequence<Double, TEnumerator>)
  href: api/Numbersome.StatisticExtensions.html#Numbersome_StatisticExtensions_GeometricMean__1_System_Traits_ISequence_Double___0__
  commentId: M:Numbersome.StatisticExtensions.GeometricMean``1(System.Traits.ISequence{Double,``0})
  name.vb: GeometricMean(Of TEnumerator)(ISequence(Of Double, TEnumerator))
  fullName: Numbersome.StatisticExtensions.GeometricMean<TEnumerator>(System.Traits.ISequence<Double, TEnumerator>)
  fullName.vb: Numbersome.StatisticExtensions.GeometricMean(Of TEnumerator)(System.Traits.ISequence(Of Double, TEnumerator))
  nameWithType: StatisticExtensions.GeometricMean<TEnumerator>(ISequence<Double, TEnumerator>)
  nameWithType.vb: StatisticExtensions.GeometricMean(Of TEnumerator)(ISequence(Of Double, TEnumerator))
- uid: Numbersome.StatisticExtensions.GeometricMean``1(System.Traits.ISequence{Int16,``0})
  name: GeometricMean<TEnumerator>(ISequence<Int16, TEnumerator>)
  href: api/Numbersome.StatisticExtensions.html#Numbersome_StatisticExtensions_GeometricMean__1_System_Traits_ISequence_Int16___0__
  commentId: M:Numbersome.StatisticExtensions.GeometricMean``1(System.Traits.ISequence{Int16,``0})
  name.vb: GeometricMean(Of TEnumerator)(ISequence(Of Int16, TEnumerator))
  fullName: Numbersome.StatisticExtensions.GeometricMean<TEnumerator>(System.Traits.ISequence<Int16, TEnumerator>)
  fullName.vb: Numbersome.StatisticExtensions.GeometricMean(Of TEnumerator)(System.Traits.ISequence(Of Int16, TEnumerator))
  nameWithType: StatisticExtensions.GeometricMean<TEnumerator>(ISequence<Int16, TEnumerator>)
  nameWithType.vb: StatisticExtensions.GeometricMean(Of TEnumerator)(ISequence(Of Int16, TEnumerator))
- uid: Numbersome.StatisticExtensions.GeometricMean``1(System.Traits.ISequence{Int32,``0})
  name: GeometricMean<TEnumerator>(ISequence<Int32, TEnumerator>)
  href: api/Numbersome.StatisticExtensions.html#Numbersome_StatisticExtensions_GeometricMean__1_System_Traits_ISequence_Int32___0__
  commentId: M:Numbersome.StatisticExtensions.GeometricMean``1(System.Traits.ISequence{Int32,``0})
  name.vb: GeometricMean(Of TEnumerator)(ISequence(Of Int32, TEnumerator))
  fullName: Numbersome.StatisticExtensions.GeometricMean<TEnumerator>(System.Traits.ISequence<Int32, TEnumerator>)
  fullName.vb: Numbersome.StatisticExtensions.GeometricMean(Of TEnumerator)(System.Traits.ISequence(Of Int32, TEnumerator))
  nameWithType: StatisticExtensions.GeometricMean<TEnumerator>(ISequence<Int32, TEnumerator>)
  nameWithType.vb: StatisticExtensions.GeometricMean(Of TEnumerator)(ISequence(Of Int32, TEnumerator))
- uid: Numbersome.StatisticExtensions.GeometricMean``1(System.Traits.ISequence{Int64,``0})
  name: GeometricMean<TEnumerator>(ISequence<Int64, TEnumerator>)
  href: api/Numbersome.StatisticExtensions.html#Numbersome_StatisticExtensions_GeometricMean__1_System_Traits_ISequence_Int64___0__
  commentId: M:Numbersome.StatisticExtensions.GeometricMean``1(System.Traits.ISequence{Int64,``0})
  name.vb: GeometricMean(Of TEnumerator)(ISequence(Of Int64, TEnumerator))
  fullName: Numbersome.StatisticExtensions.GeometricMean<TEnumerator>(System.Traits.ISequence<Int64, TEnumerator>)
  fullName.vb: Numbersome.StatisticExtensions.GeometricMean(Of TEnumerator)(System.Traits.ISequence(Of Int64, TEnumerator))
  nameWithType: StatisticExtensions.GeometricMean<TEnumerator>(ISequence<Int64, TEnumerator>)
  nameWithType.vb: StatisticExtensions.GeometricMean(Of TEnumerator)(ISequence(Of Int64, TEnumerator))
- uid: Numbersome.StatisticExtensions.GeometricMean``1(System.Traits.ISequence{nint,``0})
  name: GeometricMean<TEnumerator>(ISequence<nint, TEnumerator>)
  href: api/Numbersome.StatisticExtensions.html#Numbersome_StatisticExtensions_GeometricMean__1_System_Traits_ISequence_nint___0__
  commentId: M:Numbersome.StatisticExtensions.GeometricMean``1(System.Traits.ISequence{nint,``0})
  name.vb: GeometricMean(Of TEnumerator)(ISequence(Of nint, TEnumerator))
  fullName: Numbersome.StatisticExtensions.GeometricMean<TEnumerator>(System.Traits.ISequence<nint, TEnumerator>)
  fullName.vb: Numbersome.StatisticExtensions.GeometricMean(Of TEnumerator)(System.Traits.ISequence(Of nint, TEnumerator))
  nameWithType: StatisticExtensions.GeometricMean<TEnumerator>(ISequence<nint, TEnumerator>)
  nameWithType.vb: StatisticExtensions.GeometricMean(Of TEnumerator)(ISequence(Of nint, TEnumerator))
- uid: Numbersome.StatisticExtensions.GeometricMean``1(System.Traits.ISequence{nuint,``0})
  name: GeometricMean<TEnumerator>(ISequence<nuint, TEnumerator>)
  href: api/Numbersome.StatisticExtensions.html#Numbersome_StatisticExtensions_GeometricMean__1_System_Traits_ISequence_nuint___0__
  commentId: M:Numbersome.StatisticExtensions.GeometricMean``1(System.Traits.ISequence{nuint,``0})
  name.vb: GeometricMean(Of TEnumerator)(ISequence(Of nuint, TEnumerator))
  fullName: Numbersome.StatisticExtensions.GeometricMean<TEnumerator>(System.Traits.ISequence<nuint, TEnumerator>)
  fullName.vb: Numbersome.StatisticExtensions.GeometricMean(Of TEnumerator)(System.Traits.ISequence(Of nuint, TEnumerator))
  nameWithType: StatisticExtensions.GeometricMean<TEnumerator>(ISequence<nuint, TEnumerator>)
  nameWithType.vb: StatisticExtensions.GeometricMean(Of TEnumerator)(ISequence(Of nuint, TEnumerator))
- uid: Numbersome.StatisticExtensions.GeometricMean``1(System.Traits.ISequence{SByte,``0})
  name: GeometricMean<TEnumerator>(ISequence<SByte, TEnumerator>)
  href: api/Numbersome.StatisticExtensions.html#Numbersome_StatisticExtensions_GeometricMean__1_System_Traits_ISequence_SByte___0__
  commentId: M:Numbersome.StatisticExtensions.GeometricMean``1(System.Traits.ISequence{SByte,``0})
  name.vb: GeometricMean(Of TEnumerator)(ISequence(Of SByte, TEnumerator))
  fullName: Numbersome.StatisticExtensions.GeometricMean<TEnumerator>(System.Traits.ISequence<SByte, TEnumerator>)
  fullName.vb: Numbersome.StatisticExtensions.GeometricMean(Of TEnumerator)(System.Traits.ISequence(Of SByte, TEnumerator))
  nameWithType: StatisticExtensions.GeometricMean<TEnumerator>(ISequence<SByte, TEnumerator>)
  nameWithType.vb: StatisticExtensions.GeometricMean(Of TEnumerator)(ISequence(Of SByte, TEnumerator))
- uid: Numbersome.StatisticExtensions.GeometricMean``1(System.Traits.ISequence{Single,``0})
  name: GeometricMean<TEnumerator>(ISequence<Single, TEnumerator>)
  href: api/Numbersome.StatisticExtensions.html#Numbersome_StatisticExtensions_GeometricMean__1_System_Traits_ISequence_Single___0__
  commentId: M:Numbersome.StatisticExtensions.GeometricMean``1(System.Traits.ISequence{Single,``0})
  name.vb: GeometricMean(Of TEnumerator)(ISequence(Of Single, TEnumerator))
  fullName: Numbersome.StatisticExtensions.GeometricMean<TEnumerator>(System.Traits.ISequence<Single, TEnumerator>)
  fullName.vb: Numbersome.StatisticExtensions.GeometricMean(Of TEnumerator)(System.Traits.ISequence(Of Single, TEnumerator))
  nameWithType: StatisticExtensions.GeometricMean<TEnumerator>(ISequence<Single, TEnumerator>)
  nameWithType.vb: StatisticExtensions.GeometricMean(Of TEnumerator)(ISequence(Of Single, TEnumerator))
- uid: Numbersome.StatisticExtensions.GeometricMean``1(System.Traits.ISequence{UInt16,``0})
  name: GeometricMean<TEnumerator>(ISequence<UInt16, TEnumerator>)
  href: api/Numbersome.StatisticExtensions.html#Numbersome_StatisticExtensions_GeometricMean__1_System_Traits_ISequence_UInt16___0__
  commentId: M:Numbersome.StatisticExtensions.GeometricMean``1(System.Traits.ISequence{UInt16,``0})
  name.vb: GeometricMean(Of TEnumerator)(ISequence(Of UInt16, TEnumerator))
  fullName: Numbersome.StatisticExtensions.GeometricMean<TEnumerator>(System.Traits.ISequence<UInt16, TEnumerator>)
  fullName.vb: Numbersome.StatisticExtensions.GeometricMean(Of TEnumerator)(System.Traits.ISequence(Of UInt16, TEnumerator))
  nameWithType: StatisticExtensions.GeometricMean<TEnumerator>(ISequence<UInt16, TEnumerator>)
  nameWithType.vb: StatisticExtensions.GeometricMean(Of TEnumerator)(ISequence(Of UInt16, TEnumerator))
- uid: Numbersome.StatisticExtensions.GeometricMean``1(System.Traits.ISequence{UInt32,``0})
  name: GeometricMean<TEnumerator>(ISequence<UInt32, TEnumerator>)
  href: api/Numbersome.StatisticExtensions.html#Numbersome_StatisticExtensions_GeometricMean__1_System_Traits_ISequence_UInt32___0__
  commentId: M:Numbersome.StatisticExtensions.GeometricMean``1(System.Traits.ISequence{UInt32,``0})
  name.vb: GeometricMean(Of TEnumerator)(ISequence(Of UInt32, TEnumerator))
  fullName: Numbersome.StatisticExtensions.GeometricMean<TEnumerator>(System.Traits.ISequence<UInt32, TEnumerator>)
  fullName.vb: Numbersome.StatisticExtensions.GeometricMean(Of TEnumerator)(System.Traits.ISequence(Of UInt32, TEnumerator))
  nameWithType: StatisticExtensions.GeometricMean<TEnumerator>(ISequence<UInt32, TEnumerator>)
  nameWithType.vb: StatisticExtensions.GeometricMean(Of TEnumerator)(ISequence(Of UInt32, TEnumerator))
- uid: Numbersome.StatisticExtensions.GeometricMean``1(System.Traits.ISequence{UInt64,``0})
  name: GeometricMean<TEnumerator>(ISequence<UInt64, TEnumerator>)
  href: api/Numbersome.StatisticExtensions.html#Numbersome_StatisticExtensions_GeometricMean__1_System_Traits_ISequence_UInt64___0__
  commentId: M:Numbersome.StatisticExtensions.GeometricMean``1(System.Traits.ISequence{UInt64,``0})
  name.vb: GeometricMean(Of TEnumerator)(ISequence(Of UInt64, TEnumerator))
  fullName: Numbersome.StatisticExtensions.GeometricMean<TEnumerator>(System.Traits.ISequence<UInt64, TEnumerator>)
  fullName.vb: Numbersome.StatisticExtensions.GeometricMean(Of TEnumerator)(System.Traits.ISequence(Of UInt64, TEnumerator))
  nameWithType: StatisticExtensions.GeometricMean<TEnumerator>(ISequence<UInt64, TEnumerator>)
  nameWithType.vb: StatisticExtensions.GeometricMean(Of TEnumerator)(ISequence(Of UInt64, TEnumerator))
- uid: Numbersome.StatisticExtensions.Max*
  name: Max
  href: api/Numbersome.StatisticExtensions.html#Numbersome_StatisticExtensions_Max_
  commentId: Overload:Numbersome.StatisticExtensions.Max
  isSpec: "True"
  fullName: Numbersome.StatisticExtensions.Max
  nameWithType: StatisticExtensions.Max
- uid: Numbersome.StatisticExtensions.Max``1(System.Traits.ISequence{Byte,``0})
  name: Max<TEnumerator>(ISequence<Byte, TEnumerator>)
  href: api/Numbersome.StatisticExtensions.html#Numbersome_StatisticExtensions_Max__1_System_Traits_ISequence_Byte___0__
  commentId: M:Numbersome.StatisticExtensions.Max``1(System.Traits.ISequence{Byte,``0})
  name.vb: Max(Of TEnumerator)(ISequence(Of Byte, TEnumerator))
  fullName: Numbersome.StatisticExtensions.Max<TEnumerator>(System.Traits.ISequence<Byte, TEnumerator>)
  fullName.vb: Numbersome.StatisticExtensions.Max(Of TEnumerator)(System.Traits.ISequence(Of Byte, TEnumerator))
  nameWithType: StatisticExtensions.Max<TEnumerator>(ISequence<Byte, TEnumerator>)
  nameWithType.vb: StatisticExtensions.Max(Of TEnumerator)(ISequence(Of Byte, TEnumerator))
- uid: Numbersome.StatisticExtensions.Max``1(System.Traits.ISequence{Double,``0})
  name: Max<TEnumerator>(ISequence<Double, TEnumerator>)
  href: api/Numbersome.StatisticExtensions.html#Numbersome_StatisticExtensions_Max__1_System_Traits_ISequence_Double___0__
  commentId: M:Numbersome.StatisticExtensions.Max``1(System.Traits.ISequence{Double,``0})
  name.vb: Max(Of TEnumerator)(ISequence(Of Double, TEnumerator))
  fullName: Numbersome.StatisticExtensions.Max<TEnumerator>(System.Traits.ISequence<Double, TEnumerator>)
  fullName.vb: Numbersome.StatisticExtensions.Max(Of TEnumerator)(System.Traits.ISequence(Of Double, TEnumerator))
  nameWithType: StatisticExtensions.Max<TEnumerator>(ISequence<Double, TEnumerator>)
  nameWithType.vb: StatisticExtensions.Max(Of TEnumerator)(ISequence(Of Double, TEnumerator))
- uid: Numbersome.StatisticExtensions.Max``1(System.Traits.ISequence{Int16,``0})
  name: Max<TEnumerator>(ISequence<Int16, TEnumerator>)
  href: api/Numbersome.StatisticExtensions.html#Numbersome_StatisticExtensions_Max__1_System_Traits_ISequence_Int16___0__
  commentId: M:Numbersome.StatisticExtensions.Max``1(System.Traits.ISequence{Int16,``0})
  name.vb: Max(Of TEnumerator)(ISequence(Of Int16, TEnumerator))
  fullName: Numbersome.StatisticExtensions.Max<TEnumerator>(System.Traits.ISequence<Int16, TEnumerator>)
  fullName.vb: Numbersome.StatisticExtensions.Max(Of TEnumerator)(System.Traits.ISequence(Of Int16, TEnumerator))
  nameWithType: StatisticExtensions.Max<TEnumerator>(ISequence<Int16, TEnumerator>)
  nameWithType.vb: StatisticExtensions.Max(Of TEnumerator)(ISequence(Of Int16, TEnumerator))
- uid: Numbersome.StatisticExtensions.Max``1(System.Traits.ISequence{Int32,``0})
  name: Max<TEnumerator>(ISequence<Int32, TEnumerator>)
  href: api/Numbersome.StatisticExtensions.html#Numbersome_StatisticExtensions_Max__1_System_Traits_ISequence_Int32___0__
  commentId: M:Numbersome.StatisticExtensions.Max``1(System.Traits.ISequence{Int32,``0})
  name.vb: Max(Of TEnumerator)(ISequence(Of Int32, TEnumerator))
  fullName: Numbersome.StatisticExtensions.Max<TEnumerator>(System.Traits.ISequence<Int32, TEnumerator>)
  fullName.vb: Numbersome.StatisticExtensions.Max(Of TEnumerator)(System.Traits.ISequence(Of Int32, TEnumerator))
  nameWithType: StatisticExtensions.Max<TEnumerator>(ISequence<Int32, TEnumerator>)
  nameWithType.vb: StatisticExtensions.Max(Of TEnumerator)(ISequence(Of Int32, TEnumerator))
- uid: Numbersome.StatisticExtensions.Max``1(System.Traits.ISequence{Int64,``0})
  name: Max<TEnumerator>(ISequence<Int64, TEnumerator>)
  href: api/Numbersome.StatisticExtensions.html#Numbersome_StatisticExtensions_Max__1_System_Traits_ISequence_Int64___0__
  commentId: M:Numbersome.StatisticExtensions.Max``1(System.Traits.ISequence{Int64,``0})
  name.vb: Max(Of TEnumerator)(ISequence(Of Int64, TEnumerator))
  fullName: Numbersome.StatisticExtensions.Max<TEnumerator>(System.Traits.ISequence<Int64, TEnumerator>)
  fullName.vb: Numbersome.StatisticExtensions.Max(Of TEnumerator)(System.Traits.ISequence(Of Int64, TEnumerator))
  nameWithType: StatisticExtensions.Max<TEnumerator>(ISequence<Int64, TEnumerator>)
  nameWithType.vb: StatisticExtensions.Max(Of TEnumerator)(ISequence(Of Int64, TEnumerator))
- uid: Numbersome.StatisticExtensions.Max``1(System.Traits.ISequence{nint,``0})
  name: Max<TEnumerator>(ISequence<nint, TEnumerator>)
  href: api/Numbersome.StatisticExtensions.html#Numbersome_StatisticExtensions_Max__1_System_Traits_ISequence_nint___0__
  commentId: M:Numbersome.StatisticExtensions.Max``1(System.Traits.ISequence{nint,``0})
  name.vb: Max(Of TEnumerator)(ISequence(Of nint, TEnumerator))
  fullName: Numbersome.StatisticExtensions.Max<TEnumerator>(System.Traits.ISequence<nint, TEnumerator>)
  fullName.vb: Numbersome.StatisticExtensions.Max(Of TEnumerator)(System.Traits.ISequence(Of nint, TEnumerator))
  nameWithType: StatisticExtensions.Max<TEnumerator>(ISequence<nint, TEnumerator>)
  nameWithType.vb: StatisticExtensions.Max(Of TEnumerator)(ISequence(Of nint, TEnumerator))
- uid: Numbersome.StatisticExtensions.Max``1(System.Traits.ISequence{nuint,``0})
  name: Max<TEnumerator>(ISequence<nuint, TEnumerator>)
  href: api/Numbersome.StatisticExtensions.html#Numbersome_StatisticExtensions_Max__1_System_Traits_ISequence_nuint___0__
  commentId: M:Numbersome.StatisticExtensions.Max``1(System.Traits.ISequence{nuint,``0})
  name.vb: Max(Of TEnumerator)(ISequence(Of nuint, TEnumerator))
  fullName: Numbersome.StatisticExtensions.Max<TEnumerator>(System.Traits.ISequence<nuint, TEnumerator>)
  fullName.vb: Numbersome.StatisticExtensions.Max(Of TEnumerator)(System.Traits.ISequence(Of nuint, TEnumerator))
  nameWithType: StatisticExtensions.Max<TEnumerator>(ISequence<nuint, TEnumerator>)
  nameWithType.vb: StatisticExtensions.Max(Of TEnumerator)(ISequence(Of nuint, TEnumerator))
- uid: Numbersome.StatisticExtensions.Max``1(System.Traits.ISequence{SByte,``0})
  name: Max<TEnumerator>(ISequence<SByte, TEnumerator>)
  href: api/Numbersome.StatisticExtensions.html#Numbersome_StatisticExtensions_Max__1_System_Traits_ISequence_SByte___0__
  commentId: M:Numbersome.StatisticExtensions.Max``1(System.Traits.ISequence{SByte,``0})
  name.vb: Max(Of TEnumerator)(ISequence(Of SByte, TEnumerator))
  fullName: Numbersome.StatisticExtensions.Max<TEnumerator>(System.Traits.ISequence<SByte, TEnumerator>)
  fullName.vb: Numbersome.StatisticExtensions.Max(Of TEnumerator)(System.Traits.ISequence(Of SByte, TEnumerator))
  nameWithType: StatisticExtensions.Max<TEnumerator>(ISequence<SByte, TEnumerator>)
  nameWithType.vb: StatisticExtensions.Max(Of TEnumerator)(ISequence(Of SByte, TEnumerator))
- uid: Numbersome.StatisticExtensions.Max``1(System.Traits.ISequence{Single,``0})
  name: Max<TEnumerator>(ISequence<Single, TEnumerator>)
  href: api/Numbersome.StatisticExtensions.html#Numbersome_StatisticExtensions_Max__1_System_Traits_ISequence_Single___0__
  commentId: M:Numbersome.StatisticExtensions.Max``1(System.Traits.ISequence{Single,``0})
  name.vb: Max(Of TEnumerator)(ISequence(Of Single, TEnumerator))
  fullName: Numbersome.StatisticExtensions.Max<TEnumerator>(System.Traits.ISequence<Single, TEnumerator>)
  fullName.vb: Numbersome.StatisticExtensions.Max(Of TEnumerator)(System.Traits.ISequence(Of Single, TEnumerator))
  nameWithType: StatisticExtensions.Max<TEnumerator>(ISequence<Single, TEnumerator>)
  nameWithType.vb: StatisticExtensions.Max(Of TEnumerator)(ISequence(Of Single, TEnumerator))
- uid: Numbersome.StatisticExtensions.Max``1(System.Traits.ISequence{UInt16,``0})
  name: Max<TEnumerator>(ISequence<UInt16, TEnumerator>)
  href: api/Numbersome.StatisticExtensions.html#Numbersome_StatisticExtensions_Max__1_System_Traits_ISequence_UInt16___0__
  commentId: M:Numbersome.StatisticExtensions.Max``1(System.Traits.ISequence{UInt16,``0})
  name.vb: Max(Of TEnumerator)(ISequence(Of UInt16, TEnumerator))
  fullName: Numbersome.StatisticExtensions.Max<TEnumerator>(System.Traits.ISequence<UInt16, TEnumerator>)
  fullName.vb: Numbersome.StatisticExtensions.Max(Of TEnumerator)(System.Traits.ISequence(Of UInt16, TEnumerator))
  nameWithType: StatisticExtensions.Max<TEnumerator>(ISequence<UInt16, TEnumerator>)
  nameWithType.vb: StatisticExtensions.Max(Of TEnumerator)(ISequence(Of UInt16, TEnumerator))
- uid: Numbersome.StatisticExtensions.Max``1(System.Traits.ISequence{UInt32,``0})
  name: Max<TEnumerator>(ISequence<UInt32, TEnumerator>)
  href: api/Numbersome.StatisticExtensions.html#Numbersome_StatisticExtensions_Max__1_System_Traits_ISequence_UInt32___0__
  commentId: M:Numbersome.StatisticExtensions.Max``1(System.Traits.ISequence{UInt32,``0})
  name.vb: Max(Of TEnumerator)(ISequence(Of UInt32, TEnumerator))
  fullName: Numbersome.StatisticExtensions.Max<TEnumerator>(System.Traits.ISequence<UInt32, TEnumerator>)
  fullName.vb: Numbersome.StatisticExtensions.Max(Of TEnumerator)(System.Traits.ISequence(Of UInt32, TEnumerator))
  nameWithType: StatisticExtensions.Max<TEnumerator>(ISequence<UInt32, TEnumerator>)
  nameWithType.vb: StatisticExtensions.Max(Of TEnumerator)(ISequence(Of UInt32, TEnumerator))
- uid: Numbersome.StatisticExtensions.Max``1(System.Traits.ISequence{UInt64,``0})
  name: Max<TEnumerator>(ISequence<UInt64, TEnumerator>)
  href: api/Numbersome.StatisticExtensions.html#Numbersome_StatisticExtensions_Max__1_System_Traits_ISequence_UInt64___0__
  commentId: M:Numbersome.StatisticExtensions.Max``1(System.Traits.ISequence{UInt64,``0})
  name.vb: Max(Of TEnumerator)(ISequence(Of UInt64, TEnumerator))
  fullName: Numbersome.StatisticExtensions.Max<TEnumerator>(System.Traits.ISequence<UInt64, TEnumerator>)
  fullName.vb: Numbersome.StatisticExtensions.Max(Of TEnumerator)(System.Traits.ISequence(Of UInt64, TEnumerator))
  nameWithType: StatisticExtensions.Max<TEnumerator>(ISequence<UInt64, TEnumerator>)
  nameWithType.vb: StatisticExtensions.Max(Of TEnumerator)(ISequence(Of UInt64, TEnumerator))
- uid: Numbersome.StatisticExtensions.Min*
  name: Min
  href: api/Numbersome.StatisticExtensions.html#Numbersome_StatisticExtensions_Min_
  commentId: Overload:Numbersome.StatisticExtensions.Min
  isSpec: "True"
  fullName: Numbersome.StatisticExtensions.Min
  nameWithType: StatisticExtensions.Min
- uid: Numbersome.StatisticExtensions.Min``1(System.Traits.ISequence{Byte,``0})
  name: Min<TEnumerator>(ISequence<Byte, TEnumerator>)
  href: api/Numbersome.StatisticExtensions.html#Numbersome_StatisticExtensions_Min__1_System_Traits_ISequence_Byte___0__
  commentId: M:Numbersome.StatisticExtensions.Min``1(System.Traits.ISequence{Byte,``0})
  name.vb: Min(Of TEnumerator)(ISequence(Of Byte, TEnumerator))
  fullName: Numbersome.StatisticExtensions.Min<TEnumerator>(System.Traits.ISequence<Byte, TEnumerator>)
  fullName.vb: Numbersome.StatisticExtensions.Min(Of TEnumerator)(System.Traits.ISequence(Of Byte, TEnumerator))
  nameWithType: StatisticExtensions.Min<TEnumerator>(ISequence<Byte, TEnumerator>)
  nameWithType.vb: StatisticExtensions.Min(Of TEnumerator)(ISequence(Of Byte, TEnumerator))
- uid: Numbersome.StatisticExtensions.Min``1(System.Traits.ISequence{Double,``0})
  name: Min<TEnumerator>(ISequence<Double, TEnumerator>)
  href: api/Numbersome.StatisticExtensions.html#Numbersome_StatisticExtensions_Min__1_System_Traits_ISequence_Double___0__
  commentId: M:Numbersome.StatisticExtensions.Min``1(System.Traits.ISequence{Double,``0})
  name.vb: Min(Of TEnumerator)(ISequence(Of Double, TEnumerator))
  fullName: Numbersome.StatisticExtensions.Min<TEnumerator>(System.Traits.ISequence<Double, TEnumerator>)
  fullName.vb: Numbersome.StatisticExtensions.Min(Of TEnumerator)(System.Traits.ISequence(Of Double, TEnumerator))
  nameWithType: StatisticExtensions.Min<TEnumerator>(ISequence<Double, TEnumerator>)
  nameWithType.vb: StatisticExtensions.Min(Of TEnumerator)(ISequence(Of Double, TEnumerator))
- uid: Numbersome.StatisticExtensions.Min``1(System.Traits.ISequence{Int16,``0})
  name: Min<TEnumerator>(ISequence<Int16, TEnumerator>)
  href: api/Numbersome.StatisticExtensions.html#Numbersome_StatisticExtensions_Min__1_System_Traits_ISequence_Int16___0__
  commentId: M:Numbersome.StatisticExtensions.Min``1(System.Traits.ISequence{Int16,``0})
  name.vb: Min(Of TEnumerator)(ISequence(Of Int16, TEnumerator))
  fullName: Numbersome.StatisticExtensions.Min<TEnumerator>(System.Traits.ISequence<Int16, TEnumerator>)
  fullName.vb: Numbersome.StatisticExtensions.Min(Of TEnumerator)(System.Traits.ISequence(Of Int16, TEnumerator))
  nameWithType: StatisticExtensions.Min<TEnumerator>(ISequence<Int16, TEnumerator>)
  nameWithType.vb: StatisticExtensions.Min(Of TEnumerator)(ISequence(Of Int16, TEnumerator))
- uid: Numbersome.StatisticExtensions.Min``1(System.Traits.ISequence{Int32,``0})
  name: Min<TEnumerator>(ISequence<Int32, TEnumerator>)
  href: api/Numbersome.StatisticExtensions.html#Numbersome_StatisticExtensions_Min__1_System_Traits_ISequence_Int32___0__
  commentId: M:Numbersome.StatisticExtensions.Min``1(System.Traits.ISequence{Int32,``0})
  name.vb: Min(Of TEnumerator)(ISequence(Of Int32, TEnumerator))
  fullName: Numbersome.StatisticExtensions.Min<TEnumerator>(System.Traits.ISequence<Int32, TEnumerator>)
  fullName.vb: Numbersome.StatisticExtensions.Min(Of TEnumerator)(System.Traits.ISequence(Of Int32, TEnumerator))
  nameWithType: StatisticExtensions.Min<TEnumerator>(ISequence<Int32, TEnumerator>)
  nameWithType.vb: StatisticExtensions.Min(Of TEnumerator)(ISequence(Of Int32, TEnumerator))
- uid: Numbersome.StatisticExtensions.Min``1(System.Traits.ISequence{Int64,``0})
  name: Min<TEnumerator>(ISequence<Int64, TEnumerator>)
  href: api/Numbersome.StatisticExtensions.html#Numbersome_StatisticExtensions_Min__1_System_Traits_ISequence_Int64___0__
  commentId: M:Numbersome.StatisticExtensions.Min``1(System.Traits.ISequence{Int64,``0})
  name.vb: Min(Of TEnumerator)(ISequence(Of Int64, TEnumerator))
  fullName: Numbersome.StatisticExtensions.Min<TEnumerator>(System.Traits.ISequence<Int64, TEnumerator>)
  fullName.vb: Numbersome.StatisticExtensions.Min(Of TEnumerator)(System.Traits.ISequence(Of Int64, TEnumerator))
  nameWithType: StatisticExtensions.Min<TEnumerator>(ISequence<Int64, TEnumerator>)
  nameWithType.vb: StatisticExtensions.Min(Of TEnumerator)(ISequence(Of Int64, TEnumerator))
- uid: Numbersome.StatisticExtensions.Min``1(System.Traits.ISequence{nint,``0})
  name: Min<TEnumerator>(ISequence<nint, TEnumerator>)
  href: api/Numbersome.StatisticExtensions.html#Numbersome_StatisticExtensions_Min__1_System_Traits_ISequence_nint___0__
  commentId: M:Numbersome.StatisticExtensions.Min``1(System.Traits.ISequence{nint,``0})
  name.vb: Min(Of TEnumerator)(ISequence(Of nint, TEnumerator))
  fullName: Numbersome.StatisticExtensions.Min<TEnumerator>(System.Traits.ISequence<nint, TEnumerator>)
  fullName.vb: Numbersome.StatisticExtensions.Min(Of TEnumerator)(System.Traits.ISequence(Of nint, TEnumerator))
  nameWithType: StatisticExtensions.Min<TEnumerator>(ISequence<nint, TEnumerator>)
  nameWithType.vb: StatisticExtensions.Min(Of TEnumerator)(ISequence(Of nint, TEnumerator))
- uid: Numbersome.StatisticExtensions.Min``1(System.Traits.ISequence{nuint,``0})
  name: Min<TEnumerator>(ISequence<nuint, TEnumerator>)
  href: api/Numbersome.StatisticExtensions.html#Numbersome_StatisticExtensions_Min__1_System_Traits_ISequence_nuint___0__
  commentId: M:Numbersome.StatisticExtensions.Min``1(System.Traits.ISequence{nuint,``0})
  name.vb: Min(Of TEnumerator)(ISequence(Of nuint, TEnumerator))
  fullName: Numbersome.StatisticExtensions.Min<TEnumerator>(System.Traits.ISequence<nuint, TEnumerator>)
  fullName.vb: Numbersome.StatisticExtensions.Min(Of TEnumerator)(System.Traits.ISequence(Of nuint, TEnumerator))
  nameWithType: StatisticExtensions.Min<TEnumerator>(ISequence<nuint, TEnumerator>)
  nameWithType.vb: StatisticExtensions.Min(Of TEnumerator)(ISequence(Of nuint, TEnumerator))
- uid: Numbersome.StatisticExtensions.Min``1(System.Traits.ISequence{SByte,``0})
  name: Min<TEnumerator>(ISequence<SByte, TEnumerator>)
  href: api/Numbersome.StatisticExtensions.html#Numbersome_StatisticExtensions_Min__1_System_Traits_ISequence_SByte___0__
  commentId: M:Numbersome.StatisticExtensions.Min``1(System.Traits.ISequence{SByte,``0})
  name.vb: Min(Of TEnumerator)(ISequence(Of SByte, TEnumerator))
  fullName: Numbersome.StatisticExtensions.Min<TEnumerator>(System.Traits.ISequence<SByte, TEnumerator>)
  fullName.vb: Numbersome.StatisticExtensions.Min(Of TEnumerator)(System.Traits.ISequence(Of SByte, TEnumerator))
  nameWithType: StatisticExtensions.Min<TEnumerator>(ISequence<SByte, TEnumerator>)
  nameWithType.vb: StatisticExtensions.Min(Of TEnumerator)(ISequence(Of SByte, TEnumerator))
- uid: Numbersome.StatisticExtensions.Min``1(System.Traits.ISequence{Single,``0})
  name: Min<TEnumerator>(ISequence<Single, TEnumerator>)
  href: api/Numbersome.StatisticExtensions.html#Numbersome_StatisticExtensions_Min__1_System_Traits_ISequence_Single___0__
  commentId: M:Numbersome.StatisticExtensions.Min``1(System.Traits.ISequence{Single,``0})
  name.vb: Min(Of TEnumerator)(ISequence(Of Single, TEnumerator))
  fullName: Numbersome.StatisticExtensions.Min<TEnumerator>(System.Traits.ISequence<Single, TEnumerator>)
  fullName.vb: Numbersome.StatisticExtensions.Min(Of TEnumerator)(System.Traits.ISequence(Of Single, TEnumerator))
  nameWithType: StatisticExtensions.Min<TEnumerator>(ISequence<Single, TEnumerator>)
  nameWithType.vb: StatisticExtensions.Min(Of TEnumerator)(ISequence(Of Single, TEnumerator))
- uid: Numbersome.StatisticExtensions.Min``1(System.Traits.ISequence{UInt16,``0})
  name: Min<TEnumerator>(ISequence<UInt16, TEnumerator>)
  href: api/Numbersome.StatisticExtensions.html#Numbersome_StatisticExtensions_Min__1_System_Traits_ISequence_UInt16___0__
  commentId: M:Numbersome.StatisticExtensions.Min``1(System.Traits.ISequence{UInt16,``0})
  name.vb: Min(Of TEnumerator)(ISequence(Of UInt16, TEnumerator))
  fullName: Numbersome.StatisticExtensions.Min<TEnumerator>(System.Traits.ISequence<UInt16, TEnumerator>)
  fullName.vb: Numbersome.StatisticExtensions.Min(Of TEnumerator)(System.Traits.ISequence(Of UInt16, TEnumerator))
  nameWithType: StatisticExtensions.Min<TEnumerator>(ISequence<UInt16, TEnumerator>)
  nameWithType.vb: StatisticExtensions.Min(Of TEnumerator)(ISequence(Of UInt16, TEnumerator))
- uid: Numbersome.StatisticExtensions.Min``1(System.Traits.ISequence{UInt32,``0})
  name: Min<TEnumerator>(ISequence<UInt32, TEnumerator>)
  href: api/Numbersome.StatisticExtensions.html#Numbersome_StatisticExtensions_Min__1_System_Traits_ISequence_UInt32___0__
  commentId: M:Numbersome.StatisticExtensions.Min``1(System.Traits.ISequence{UInt32,``0})
  name.vb: Min(Of TEnumerator)(ISequence(Of UInt32, TEnumerator))
  fullName: Numbersome.StatisticExtensions.Min<TEnumerator>(System.Traits.ISequence<UInt32, TEnumerator>)
  fullName.vb: Numbersome.StatisticExtensions.Min(Of TEnumerator)(System.Traits.ISequence(Of UInt32, TEnumerator))
  nameWithType: StatisticExtensions.Min<TEnumerator>(ISequence<UInt32, TEnumerator>)
  nameWithType.vb: StatisticExtensions.Min(Of TEnumerator)(ISequence(Of UInt32, TEnumerator))
- uid: Numbersome.StatisticExtensions.Min``1(System.Traits.ISequence{UInt64,``0})
  name: Min<TEnumerator>(ISequence<UInt64, TEnumerator>)
  href: api/Numbersome.StatisticExtensions.html#Numbersome_StatisticExtensions_Min__1_System_Traits_ISequence_UInt64___0__
  commentId: M:Numbersome.StatisticExtensions.Min``1(System.Traits.ISequence{UInt64,``0})
  name.vb: Min(Of TEnumerator)(ISequence(Of UInt64, TEnumerator))
  fullName: Numbersome.StatisticExtensions.Min<TEnumerator>(System.Traits.ISequence<UInt64, TEnumerator>)
  fullName.vb: Numbersome.StatisticExtensions.Min(Of TEnumerator)(System.Traits.ISequence(Of UInt64, TEnumerator))
  nameWithType: StatisticExtensions.Min<TEnumerator>(ISequence<UInt64, TEnumerator>)
  nameWithType.vb: StatisticExtensions.Min(Of TEnumerator)(ISequence(Of UInt64, TEnumerator))
- uid: Numbersome.StatisticsExtensions
  name: StatisticsExtensions
  href: api/Numbersome.StatisticsExtensions.html
  commentId: T:Numbersome.StatisticsExtensions
  fullName: Numbersome.StatisticsExtensions
  nameWithType: StatisticsExtensions
- uid: Numbersome.StatisticsExtensions.Mode*
  name: Mode
  href: api/Numbersome.StatisticsExtensions.html#Numbersome_StatisticsExtensions_Mode_
  commentId: Overload:Numbersome.StatisticsExtensions.Mode
  isSpec: "True"
  fullName: Numbersome.StatisticsExtensions.Mode
  nameWithType: StatisticsExtensions.Mode
- uid: Numbersome.StatisticsExtensions.Mode``2(System.Traits.ISequence{``0,``1})
  name: Mode<TElement, TEnumerator>(ISequence<TElement, TEnumerator>)
  href: api/Numbersome.StatisticsExtensions.html#Numbersome_StatisticsExtensions_Mode__2_System_Traits_ISequence___0___1__
  commentId: M:Numbersome.StatisticsExtensions.Mode``2(System.Traits.ISequence{``0,``1})
  name.vb: Mode(Of TElement, TEnumerator)(ISequence(Of TElement, TEnumerator))
  fullName: Numbersome.StatisticsExtensions.Mode<TElement, TEnumerator>(System.Traits.ISequence<TElement, TEnumerator>)
  fullName.vb: Numbersome.StatisticsExtensions.Mode(Of TElement, TEnumerator)(System.Traits.ISequence(Of TElement, TEnumerator))
  nameWithType: StatisticsExtensions.Mode<TElement, TEnumerator>(ISequence<TElement, TEnumerator>)
  nameWithType.vb: StatisticsExtensions.Mode(Of TElement, TEnumerator)(ISequence(Of TElement, TEnumerator))
- uid: Streamy
  name: Streamy
  href: api/Streamy.html
  commentId: N:Streamy
  fullName: Streamy
  nameWithType: Streamy
- uid: Streamy.Bases
  name: Streamy.Bases
  href: api/Streamy.Bases.html
  commentId: N:Streamy.Bases
  fullName: Streamy.Bases
  nameWithType: Streamy.Bases
- uid: Streamy.Bases.StreamBase
  name: StreamBase
  href: api/Streamy.Bases.StreamBase.html
  commentId: T:Streamy.Bases.StreamBase
  fullName: Streamy.Bases.StreamBase
  nameWithType: StreamBase
- uid: Streamy.Bases.StreamBase.Add(System.Byte)
  name: Add(Byte)
  href: api/Streamy.Bases.StreamBase.html#Streamy_Bases_StreamBase_Add_System_Byte_
  commentId: M:Streamy.Bases.StreamBase.Add(System.Byte)
  fullName: Streamy.Bases.StreamBase.Add(System.Byte)
  nameWithType: StreamBase.Add(Byte)
- uid: Streamy.Bases.StreamBase.Add*
  name: Add
  href: api/Streamy.Bases.StreamBase.html#Streamy_Bases_StreamBase_Add_
  commentId: Overload:Streamy.Bases.StreamBase.Add
  isSpec: "True"
  fullName: Streamy.Bases.StreamBase.Add
  nameWithType: StreamBase.Add
- uid: Streamy.Bases.StreamBase.Dispose
  name: Dispose()
  href: api/Streamy.Bases.StreamBase.html#Streamy_Bases_StreamBase_Dispose
  commentId: M:Streamy.Bases.StreamBase.Dispose
  fullName: Streamy.Bases.StreamBase.Dispose()
  nameWithType: StreamBase.Dispose()
- uid: Streamy.Bases.StreamBase.Dispose(System.Boolean)
  name: Dispose(Boolean)
  href: api/Streamy.Bases.StreamBase.html#Streamy_Bases_StreamBase_Dispose_System_Boolean_
  commentId: M:Streamy.Bases.StreamBase.Dispose(System.Boolean)
  fullName: Streamy.Bases.StreamBase.Dispose(System.Boolean)
  nameWithType: StreamBase.Dispose(Boolean)
- uid: Streamy.Bases.StreamBase.Dispose*
  name: Dispose
  href: api/Streamy.Bases.StreamBase.html#Streamy_Bases_StreamBase_Dispose_
  commentId: Overload:Streamy.Bases.StreamBase.Dispose
  isSpec: "True"
  fullName: Streamy.Bases.StreamBase.Dispose
  nameWithType: StreamBase.Dispose
- uid: Streamy.Bases.StreamBase.Disposed
  name: Disposed
  href: api/Streamy.Bases.StreamBase.html#Streamy_Bases_StreamBase_Disposed
  commentId: P:Streamy.Bases.StreamBase.Disposed
  fullName: Streamy.Bases.StreamBase.Disposed
  nameWithType: StreamBase.Disposed
- uid: Streamy.Bases.StreamBase.Disposed*
  name: Disposed
  href: api/Streamy.Bases.StreamBase.html#Streamy_Bases_StreamBase_Disposed_
  commentId: Overload:Streamy.Bases.StreamBase.Disposed
  isSpec: "True"
  fullName: Streamy.Bases.StreamBase.Disposed
  nameWithType: StreamBase.Disposed
- uid: Streamy.Bases.StreamBase.DisposeManaged
  name: DisposeManaged()
  href: api/Streamy.Bases.StreamBase.html#Streamy_Bases_StreamBase_DisposeManaged
  commentId: M:Streamy.Bases.StreamBase.DisposeManaged
  fullName: Streamy.Bases.StreamBase.DisposeManaged()
  nameWithType: StreamBase.DisposeManaged()
- uid: Streamy.Bases.StreamBase.DisposeManaged*
  name: DisposeManaged
  href: api/Streamy.Bases.StreamBase.html#Streamy_Bases_StreamBase_DisposeManaged_
  commentId: Overload:Streamy.Bases.StreamBase.DisposeManaged
  isSpec: "True"
  fullName: Streamy.Bases.StreamBase.DisposeManaged
  nameWithType: StreamBase.DisposeManaged
- uid: Streamy.Bases.StreamBase.DisposeUnmanaged
  name: DisposeUnmanaged()
  href: api/Streamy.Bases.StreamBase.html#Streamy_Bases_StreamBase_DisposeUnmanaged
  commentId: M:Streamy.Bases.StreamBase.DisposeUnmanaged
  fullName: Streamy.Bases.StreamBase.DisposeUnmanaged()
  nameWithType: StreamBase.DisposeUnmanaged()
- uid: Streamy.Bases.StreamBase.DisposeUnmanaged*
  name: DisposeUnmanaged
  href: api/Streamy.Bases.StreamBase.html#Streamy_Bases_StreamBase_DisposeUnmanaged_
  commentId: Overload:Streamy.Bases.StreamBase.DisposeUnmanaged
  isSpec: "True"
  fullName: Streamy.Bases.StreamBase.DisposeUnmanaged
  nameWithType: StreamBase.DisposeUnmanaged
- uid: Streamy.Bases.StreamBase.Finalize
  name: Finalize()
  href: api/Streamy.Bases.StreamBase.html#Streamy_Bases_StreamBase_Finalize
  commentId: M:Streamy.Bases.StreamBase.Finalize
  fullName: Streamy.Bases.StreamBase.Finalize()
  nameWithType: StreamBase.Finalize()
- uid: Streamy.Bases.StreamBase.Finalize*
  name: Finalize
  href: api/Streamy.Bases.StreamBase.html#Streamy_Bases_StreamBase_Finalize_
  commentId: Overload:Streamy.Bases.StreamBase.Finalize
  isSpec: "True"
  fullName: Streamy.Bases.StreamBase.Finalize
  nameWithType: StreamBase.Finalize
- uid: Streamy.Bases.StreamBase.NullLargeFields
  name: NullLargeFields()
  href: api/Streamy.Bases.StreamBase.html#Streamy_Bases_StreamBase_NullLargeFields
  commentId: M:Streamy.Bases.StreamBase.NullLargeFields
  fullName: Streamy.Bases.StreamBase.NullLargeFields()
  nameWithType: StreamBase.NullLargeFields()
- uid: Streamy.Bases.StreamBase.NullLargeFields*
  name: NullLargeFields
  href: api/Streamy.Bases.StreamBase.html#Streamy_Bases_StreamBase_NullLargeFields_
  commentId: Overload:Streamy.Bases.StreamBase.NullLargeFields
  isSpec: "True"
  fullName: Streamy.Bases.StreamBase.NullLargeFields
  nameWithType: StreamBase.NullLargeFields
- uid: Streamy.Bases.StreamBase.Position
  name: Position
  href: api/Streamy.Bases.StreamBase.html#Streamy_Bases_StreamBase_Position
  commentId: P:Streamy.Bases.StreamBase.Position
  fullName: Streamy.Bases.StreamBase.Position
  nameWithType: StreamBase.Position
- uid: Streamy.Bases.StreamBase.Position*
  name: Position
  href: api/Streamy.Bases.StreamBase.html#Streamy_Bases_StreamBase_Position_
  commentId: Overload:Streamy.Bases.StreamBase.Position
  isSpec: "True"
  fullName: Streamy.Bases.StreamBase.Position
  nameWithType: StreamBase.Position
- uid: Streamy.Bases.StreamBase.Read(System.Byte@)
  name: Read(out Byte)
  href: api/Streamy.Bases.StreamBase.html#Streamy_Bases_StreamBase_Read_System_Byte__
  commentId: M:Streamy.Bases.StreamBase.Read(System.Byte@)
  name.vb: Read(ByRef Byte)
  fullName: Streamy.Bases.StreamBase.Read(out System.Byte)
  fullName.vb: Streamy.Bases.StreamBase.Read(ByRef System.Byte)
  nameWithType: StreamBase.Read(out Byte)
  nameWithType.vb: StreamBase.Read(ByRef Byte)
- uid: Streamy.Bases.StreamBase.Read*
  name: Read
  href: api/Streamy.Bases.StreamBase.html#Streamy_Bases_StreamBase_Read_
  commentId: Overload:Streamy.Bases.StreamBase.Read
  isSpec: "True"
  fullName: Streamy.Bases.StreamBase.Read
  nameWithType: StreamBase.Read
- uid: Streamy.Bases.StreamBase.Readable
  name: Readable
  href: api/Streamy.Bases.StreamBase.html#Streamy_Bases_StreamBase_Readable
  commentId: P:Streamy.Bases.StreamBase.Readable
  fullName: Streamy.Bases.StreamBase.Readable
  nameWithType: StreamBase.Readable
- uid: Streamy.Bases.StreamBase.Readable*
  name: Readable
  href: api/Streamy.Bases.StreamBase.html#Streamy_Bases_StreamBase_Readable_
  commentId: Overload:Streamy.Bases.StreamBase.Readable
  isSpec: "True"
  fullName: Streamy.Bases.StreamBase.Readable
  nameWithType: StreamBase.Readable
- uid: Streamy.Bases.StreamBase.Seek(nint)
  name: Seek(nint)
  href: api/Streamy.Bases.StreamBase.html#Streamy_Bases_StreamBase_Seek_nint_
  commentId: M:Streamy.Bases.StreamBase.Seek(nint)
  fullName: Streamy.Bases.StreamBase.Seek(nint)
  nameWithType: StreamBase.Seek(nint)
- uid: Streamy.Bases.StreamBase.Seek*
  name: Seek
  href: api/Streamy.Bases.StreamBase.html#Streamy_Bases_StreamBase_Seek_
  commentId: Overload:Streamy.Bases.StreamBase.Seek
  isSpec: "True"
  fullName: Streamy.Bases.StreamBase.Seek
  nameWithType: StreamBase.Seek
- uid: Streamy.Bases.StreamBase.Seekable
  name: Seekable
  href: api/Streamy.Bases.StreamBase.html#Streamy_Bases_StreamBase_Seekable
  commentId: P:Streamy.Bases.StreamBase.Seekable
  fullName: Streamy.Bases.StreamBase.Seekable
  nameWithType: StreamBase.Seekable
- uid: Streamy.Bases.StreamBase.Seekable*
  name: Seekable
  href: api/Streamy.Bases.StreamBase.html#Streamy_Bases_StreamBase_Seekable_
  commentId: Overload:Streamy.Bases.StreamBase.Seekable
  isSpec: "True"
  fullName: Streamy.Bases.StreamBase.Seekable
  nameWithType: StreamBase.Seekable
- uid: Streamy.Bases.StreamBase.ToString
  name: ToString()
  href: api/Streamy.Bases.StreamBase.html#Streamy_Bases_StreamBase_ToString
  commentId: M:Streamy.Bases.StreamBase.ToString
  fullName: Streamy.Bases.StreamBase.ToString()
  nameWithType: StreamBase.ToString()
- uid: Streamy.Bases.StreamBase.ToString*
  name: ToString
  href: api/Streamy.Bases.StreamBase.html#Streamy_Bases_StreamBase_ToString_
  commentId: Overload:Streamy.Bases.StreamBase.ToString
  isSpec: "True"
  fullName: Streamy.Bases.StreamBase.ToString
  nameWithType: StreamBase.ToString
- uid: Streamy.Bases.StreamBase.Writable
  name: Writable
  href: api/Streamy.Bases.StreamBase.html#Streamy_Bases_StreamBase_Writable
  commentId: P:Streamy.Bases.StreamBase.Writable
  fullName: Streamy.Bases.StreamBase.Writable
  nameWithType: StreamBase.Writable
- uid: Streamy.Bases.StreamBase.Writable*
  name: Writable
  href: api/Streamy.Bases.StreamBase.html#Streamy_Bases_StreamBase_Writable_
  commentId: Overload:Streamy.Bases.StreamBase.Writable
  isSpec: "True"
  fullName: Streamy.Bases.StreamBase.Writable
  nameWithType: StreamBase.Writable
- uid: Streamy.Bases.StreamBase.Write(System.Byte)
  name: Write(Byte)
  href: api/Streamy.Bases.StreamBase.html#Streamy_Bases_StreamBase_Write_System_Byte_
  commentId: M:Streamy.Bases.StreamBase.Write(System.Byte)
  fullName: Streamy.Bases.StreamBase.Write(System.Byte)
  nameWithType: StreamBase.Write(Byte)
- uid: Streamy.Bases.StreamBase.Write*
  name: Write
  href: api/Streamy.Bases.StreamBase.html#Streamy_Bases_StreamBase_Write_
  commentId: Overload:Streamy.Bases.StreamBase.Write
  isSpec: "True"
  fullName: Streamy.Bases.StreamBase.Write
  nameWithType: StreamBase.Write
- uid: Streamy.Buffers
  name: Streamy.Buffers
  href: api/Streamy.Buffers.html
  commentId: N:Streamy.Buffers
  fullName: Streamy.Buffers
  nameWithType: Streamy.Buffers
- uid: Streamy.Buffers.IReadBuffer
  name: IReadBuffer
  href: api/Streamy.Buffers.IReadBuffer.html
  commentId: T:Streamy.Buffers.IReadBuffer
  fullName: Streamy.Buffers.IReadBuffer
  nameWithType: IReadBuffer
- uid: Streamy.Buffers.IReadBuffer.Peek(System.Byte[]@,nint)
  name: Peek(out Byte[], nint)
  href: api/Streamy.Buffers.IReadBuffer.html#Streamy_Buffers_IReadBuffer_Peek_System_Byte____nint_
  commentId: M:Streamy.Buffers.IReadBuffer.Peek(System.Byte[]@,nint)
  name.vb: Peek(ByRef Byte(), nint)
  fullName: Streamy.Buffers.IReadBuffer.Peek(out System.Byte[], nint)
  fullName.vb: Streamy.Buffers.IReadBuffer.Peek(ByRef System.Byte(), nint)
  nameWithType: IReadBuffer.Peek(out Byte[], nint)
  nameWithType.vb: IReadBuffer.Peek(ByRef Byte(), nint)
- uid: Streamy.Buffers.IReadBuffer.Peek*
  name: Peek
  href: api/Streamy.Buffers.IReadBuffer.html#Streamy_Buffers_IReadBuffer_Peek_
  commentId: Overload:Streamy.Buffers.IReadBuffer.Peek
  isSpec: "True"
  fullName: Streamy.Buffers.IReadBuffer.Peek
  nameWithType: IReadBuffer.Peek
- uid: Streamy.Buffers.IWriteBuffer
  name: IWriteBuffer
  href: api/Streamy.Buffers.IWriteBuffer.html
  commentId: T:Streamy.Buffers.IWriteBuffer
  fullName: Streamy.Buffers.IWriteBuffer
  nameWithType: IWriteBuffer
- uid: Streamy.CharStream
  name: CharStream
  href: api/Streamy.CharStream.html
  commentId: T:Streamy.CharStream
  fullName: Streamy.CharStream
  nameWithType: CharStream
- uid: Streamy.CharStream.#ctor(Streamy.Bases.StreamBase,Streamy.Buffers.IReadBuffer,Streamy.Buffers.IWriteBuffer,Streamy.Encoding)
  name: CharStream(StreamBase, IReadBuffer, IWriteBuffer, Encoding)
  href: api/Streamy.CharStream.html#Streamy_CharStream__ctor_Streamy_Bases_StreamBase_Streamy_Buffers_IReadBuffer_Streamy_Buffers_IWriteBuffer_Streamy_Encoding_
  commentId: M:Streamy.CharStream.#ctor(Streamy.Bases.StreamBase,Streamy.Buffers.IReadBuffer,Streamy.Buffers.IWriteBuffer,Streamy.Encoding)
  fullName: Streamy.CharStream.CharStream(Streamy.Bases.StreamBase, Streamy.Buffers.IReadBuffer, Streamy.Buffers.IWriteBuffer, Streamy.Encoding)
  nameWithType: CharStream.CharStream(StreamBase, IReadBuffer, IWriteBuffer, Encoding)
- uid: Streamy.CharStream.#ctor(System.Byte[])
  name: CharStream(Byte[])
  href: api/Streamy.CharStream.html#Streamy_CharStream__ctor_System_Byte___
  commentId: M:Streamy.CharStream.#ctor(System.Byte[])
  name.vb: CharStream(Byte())
  fullName: Streamy.CharStream.CharStream(System.Byte[])
  fullName.vb: Streamy.CharStream.CharStream(System.Byte())
  nameWithType: CharStream.CharStream(Byte[])
  nameWithType.vb: CharStream.CharStream(Byte())
- uid: Streamy.CharStream.#ctor(System.Byte[],Streamy.Encoding)
  name: CharStream(Byte[], Encoding)
  href: api/Streamy.CharStream.html#Streamy_CharStream__ctor_System_Byte___Streamy_Encoding_
  commentId: M:Streamy.CharStream.#ctor(System.Byte[],Streamy.Encoding)
  name.vb: CharStream(Byte(), Encoding)
  fullName: Streamy.CharStream.CharStream(System.Byte[], Streamy.Encoding)
  fullName.vb: Streamy.CharStream.CharStream(System.Byte(), Streamy.Encoding)
  nameWithType: CharStream.CharStream(Byte[], Encoding)
  nameWithType.vb: CharStream.CharStream(Byte(), Encoding)
- uid: Streamy.CharStream.#ctor(System.Memory{System.Byte})
  name: CharStream(Memory<Byte>)
  href: api/Streamy.CharStream.html#Streamy_CharStream__ctor_System_Memory_System_Byte__
  commentId: M:Streamy.CharStream.#ctor(System.Memory{System.Byte})
  name.vb: CharStream(Memory(Of Byte))
  fullName: Streamy.CharStream.CharStream(System.Memory<System.Byte>)
  fullName.vb: Streamy.CharStream.CharStream(System.Memory(Of System.Byte))
  nameWithType: CharStream.CharStream(Memory<Byte>)
  nameWithType.vb: CharStream.CharStream(Memory(Of Byte))
- uid: Streamy.CharStream.#ctor(System.Memory{System.Byte},Streamy.Encoding)
  name: CharStream(Memory<Byte>, Encoding)
  href: api/Streamy.CharStream.html#Streamy_CharStream__ctor_System_Memory_System_Byte__Streamy_Encoding_
  commentId: M:Streamy.CharStream.#ctor(System.Memory{System.Byte},Streamy.Encoding)
  name.vb: CharStream(Memory(Of Byte), Encoding)
  fullName: Streamy.CharStream.CharStream(System.Memory<System.Byte>, Streamy.Encoding)
  fullName.vb: Streamy.CharStream.CharStream(System.Memory(Of System.Byte), Streamy.Encoding)
  nameWithType: CharStream.CharStream(Memory<Byte>, Encoding)
  nameWithType.vb: CharStream.CharStream(Memory(Of Byte), Encoding)
- uid: Streamy.CharStream.#ctor(System.ReadOnlyMemory{System.Byte})
  name: CharStream(ReadOnlyMemory<Byte>)
  href: api/Streamy.CharStream.html#Streamy_CharStream__ctor_System_ReadOnlyMemory_System_Byte__
  commentId: M:Streamy.CharStream.#ctor(System.ReadOnlyMemory{System.Byte})
  name.vb: CharStream(ReadOnlyMemory(Of Byte))
  fullName: Streamy.CharStream.CharStream(System.ReadOnlyMemory<System.Byte>)
  fullName.vb: Streamy.CharStream.CharStream(System.ReadOnlyMemory(Of System.Byte))
  nameWithType: CharStream.CharStream(ReadOnlyMemory<Byte>)
  nameWithType.vb: CharStream.CharStream(ReadOnlyMemory(Of Byte))
- uid: Streamy.CharStream.#ctor(System.ReadOnlyMemory{System.Byte},Streamy.Encoding)
  name: CharStream(ReadOnlyMemory<Byte>, Encoding)
  href: api/Streamy.CharStream.html#Streamy_CharStream__ctor_System_ReadOnlyMemory_System_Byte__Streamy_Encoding_
  commentId: M:Streamy.CharStream.#ctor(System.ReadOnlyMemory{System.Byte},Streamy.Encoding)
  name.vb: CharStream(ReadOnlyMemory(Of Byte), Encoding)
  fullName: Streamy.CharStream.CharStream(System.ReadOnlyMemory<System.Byte>, Streamy.Encoding)
  fullName.vb: Streamy.CharStream.CharStream(System.ReadOnlyMemory(Of System.Byte), Streamy.Encoding)
  nameWithType: CharStream.CharStream(ReadOnlyMemory<Byte>, Encoding)
  nameWithType.vb: CharStream.CharStream(ReadOnlyMemory(Of Byte), Encoding)
- uid: Streamy.CharStream.#ctor*
  name: CharStream
  href: api/Streamy.CharStream.html#Streamy_CharStream__ctor_
  commentId: Overload:Streamy.CharStream.#ctor
  isSpec: "True"
  fullName: Streamy.CharStream.CharStream
  nameWithType: CharStream.CharStream
- uid: Streamy.CharStream.Add(System.Char)
  name: Add(Char)
  href: api/Streamy.CharStream.html#Streamy_CharStream_Add_System_Char_
  commentId: M:Streamy.CharStream.Add(System.Char)
  fullName: Streamy.CharStream.Add(System.Char)
  nameWithType: CharStream.Add(Char)
- uid: Streamy.CharStream.Add*
  name: Add
  href: api/Streamy.CharStream.html#Streamy_CharStream_Add_
  commentId: Overload:Streamy.CharStream.Add
  isSpec: "True"
  fullName: Streamy.CharStream.Add
  nameWithType: CharStream.Add
- uid: Streamy.CharStream.Encoding
  name: Encoding
  href: api/Streamy.CharStream.html#Streamy_CharStream_Encoding
  commentId: P:Streamy.CharStream.Encoding
  fullName: Streamy.CharStream.Encoding
  nameWithType: CharStream.Encoding
- uid: Streamy.CharStream.Encoding*
  name: Encoding
  href: api/Streamy.CharStream.html#Streamy_CharStream_Encoding_
  commentId: Overload:Streamy.CharStream.Encoding
  isSpec: "True"
  fullName: Streamy.CharStream.Encoding
  nameWithType: CharStream.Encoding
- uid: Streamy.CharStream.Peek(System.Char@)
  name: Peek(out Char)
  href: api/Streamy.CharStream.html#Streamy_CharStream_Peek_System_Char__
  commentId: M:Streamy.CharStream.Peek(System.Char@)
  name.vb: Peek(ByRef Char)
  fullName: Streamy.CharStream.Peek(out System.Char)
  fullName.vb: Streamy.CharStream.Peek(ByRef System.Char)
  nameWithType: CharStream.Peek(out Char)
  nameWithType.vb: CharStream.Peek(ByRef Char)
- uid: Streamy.CharStream.Peek*
  name: Peek
  href: api/Streamy.CharStream.html#Streamy_CharStream_Peek_
  commentId: Overload:Streamy.CharStream.Peek
  isSpec: "True"
  fullName: Streamy.CharStream.Peek
  nameWithType: CharStream.Peek
- uid: Streamy.CharStream.Position
  name: Position
  href: api/Streamy.CharStream.html#Streamy_CharStream_Position
  commentId: P:Streamy.CharStream.Position
  fullName: Streamy.CharStream.Position
  nameWithType: CharStream.Position
- uid: Streamy.CharStream.Position*
  name: Position
  href: api/Streamy.CharStream.html#Streamy_CharStream_Position_
  commentId: Overload:Streamy.CharStream.Position
  isSpec: "True"
  fullName: Streamy.CharStream.Position
  nameWithType: CharStream.Position
- uid: Streamy.CharStream.Read(System.Char@)
  name: Read(out Char)
  href: api/Streamy.CharStream.html#Streamy_CharStream_Read_System_Char__
  commentId: M:Streamy.CharStream.Read(System.Char@)
  name.vb: Read(ByRef Char)
  fullName: Streamy.CharStream.Read(out System.Char)
  fullName.vb: Streamy.CharStream.Read(ByRef System.Char)
  nameWithType: CharStream.Read(out Char)
  nameWithType.vb: CharStream.Read(ByRef Char)
- uid: Streamy.CharStream.Read*
  name: Read
  href: api/Streamy.CharStream.html#Streamy_CharStream_Read_
  commentId: Overload:Streamy.CharStream.Read
  isSpec: "True"
  fullName: Streamy.CharStream.Read
  nameWithType: CharStream.Read
- uid: Streamy.CharStream.Seek(nint)
  name: Seek(nint)
  href: api/Streamy.CharStream.html#Streamy_CharStream_Seek_nint_
  commentId: M:Streamy.CharStream.Seek(nint)
  fullName: Streamy.CharStream.Seek(nint)
  nameWithType: CharStream.Seek(nint)
- uid: Streamy.CharStream.Seek*
  name: Seek
  href: api/Streamy.CharStream.html#Streamy_CharStream_Seek_
  commentId: Overload:Streamy.CharStream.Seek
  isSpec: "True"
  fullName: Streamy.CharStream.Seek
  nameWithType: CharStream.Seek
- uid: Streamy.CharStream.Write(System.Char)
  name: Write(Char)
  href: api/Streamy.CharStream.html#Streamy_CharStream_Write_System_Char_
  commentId: M:Streamy.CharStream.Write(System.Char)
  fullName: Streamy.CharStream.Write(System.Char)
  nameWithType: CharStream.Write(Char)
- uid: Streamy.CharStream.Write*
  name: Write
  href: api/Streamy.CharStream.html#Streamy_CharStream_Write_
  commentId: Overload:Streamy.CharStream.Write
  isSpec: "True"
  fullName: Streamy.CharStream.Write
  nameWithType: CharStream.Write
- uid: Streamy.Encoding
  name: Encoding
  href: api/Streamy.Encoding.html
  commentId: T:Streamy.Encoding
  fullName: Streamy.Encoding
  nameWithType: Encoding
- uid: Streamy.Encoding.Unknown
  name: Unknown
  href: api/Streamy.Encoding.html#Streamy_Encoding_Unknown
  commentId: F:Streamy.Encoding.Unknown
  fullName: Streamy.Encoding.Unknown
  nameWithType: Encoding.Unknown
- uid: Streamy.Encoding.UTF16BE
  name: UTF16BE
  href: api/Streamy.Encoding.html#Streamy_Encoding_UTF16BE
  commentId: F:Streamy.Encoding.UTF16BE
  fullName: Streamy.Encoding.UTF16BE
  nameWithType: Encoding.UTF16BE
- uid: Streamy.Encoding.UTF16LE
  name: UTF16LE
  href: api/Streamy.Encoding.html#Streamy_Encoding_UTF16LE
  commentId: F:Streamy.Encoding.UTF16LE
  fullName: Streamy.Encoding.UTF16LE
  nameWithType: Encoding.UTF16LE
- uid: Streamy.Encoding.UTF32BE
  name: UTF32BE
  href: api/Streamy.Encoding.html#Streamy_Encoding_UTF32BE
  commentId: F:Streamy.Encoding.UTF32BE
  fullName: Streamy.Encoding.UTF32BE
  nameWithType: Encoding.UTF32BE
- uid: Streamy.Encoding.UTF32LE
  name: UTF32LE
  href: api/Streamy.Encoding.html#Streamy_Encoding_UTF32LE
  commentId: F:Streamy.Encoding.UTF32LE
  fullName: Streamy.Encoding.UTF32LE
  nameWithType: Encoding.UTF32LE
- uid: Streamy.Encoding.UTF8
  name: UTF8
  href: api/Streamy.Encoding.html#Streamy_Encoding_UTF8
  commentId: F:Streamy.Encoding.UTF8
  fullName: Streamy.Encoding.UTF8
  nameWithType: Encoding.UTF8
- uid: Streamy.Endian
  name: Endian
  href: api/Streamy.Endian.html
  commentId: T:Streamy.Endian
  fullName: Streamy.Endian
  nameWithType: Endian
- uid: Streamy.Endian.Big
  name: Big
  href: api/Streamy.Endian.html#Streamy_Endian_Big
  commentId: F:Streamy.Endian.Big
  fullName: Streamy.Endian.Big
  nameWithType: Endian.Big
- uid: Streamy.Endian.Little
  name: Little
  href: api/Streamy.Endian.html#Streamy_Endian_Little
  commentId: F:Streamy.Endian.Little
  fullName: Streamy.Endian.Little
  nameWithType: Endian.Little
- uid: Streamy.Endian.Unknown
  name: Unknown
  href: api/Streamy.Endian.html#Streamy_Endian_Unknown
  commentId: F:Streamy.Endian.Unknown
  fullName: Streamy.Endian.Unknown
  nameWithType: Endian.Unknown
- uid: Streamy.Stream
  name: Stream
  href: api/Streamy.Stream.html
  commentId: T:Streamy.Stream
  fullName: Streamy.Stream
  nameWithType: Stream
- uid: Streamy.Stream.#ctor(Streamy.Bases.StreamBase)
  name: Stream(StreamBase)
  href: api/Streamy.Stream.html#Streamy_Stream__ctor_Streamy_Bases_StreamBase_
  commentId: M:Streamy.Stream.#ctor(Streamy.Bases.StreamBase)
  fullName: Streamy.Stream.Stream(Streamy.Bases.StreamBase)
  nameWithType: Stream.Stream(StreamBase)
- uid: Streamy.Stream.#ctor(Streamy.Bases.StreamBase,Streamy.Buffers.IReadBuffer,Streamy.Buffers.IWriteBuffer,Streamy.Endian)
  name: Stream(StreamBase, IReadBuffer, IWriteBuffer, Endian)
  href: api/Streamy.Stream.html#Streamy_Stream__ctor_Streamy_Bases_StreamBase_Streamy_Buffers_IReadBuffer_Streamy_Buffers_IWriteBuffer_Streamy_Endian_
  commentId: M:Streamy.Stream.#ctor(Streamy.Bases.StreamBase,Streamy.Buffers.IReadBuffer,Streamy.Buffers.IWriteBuffer,Streamy.Endian)
  fullName: Streamy.Stream.Stream(Streamy.Bases.StreamBase, Streamy.Buffers.IReadBuffer, Streamy.Buffers.IWriteBuffer, Streamy.Endian)
  nameWithType: Stream.Stream(StreamBase, IReadBuffer, IWriteBuffer, Endian)
- uid: Streamy.Stream.#ctor(System.Byte[])
  name: Stream(Byte[])
  href: api/Streamy.Stream.html#Streamy_Stream__ctor_System_Byte___
  commentId: M:Streamy.Stream.#ctor(System.Byte[])
  name.vb: Stream(Byte())
  fullName: Streamy.Stream.Stream(System.Byte[])
  fullName.vb: Streamy.Stream.Stream(System.Byte())
  nameWithType: Stream.Stream(Byte[])
  nameWithType.vb: Stream.Stream(Byte())
- uid: Streamy.Stream.#ctor(System.Byte[],Streamy.Endian)
  name: Stream(Byte[], Endian)
  href: api/Streamy.Stream.html#Streamy_Stream__ctor_System_Byte___Streamy_Endian_
  commentId: M:Streamy.Stream.#ctor(System.Byte[],Streamy.Endian)
  name.vb: Stream(Byte(), Endian)
  fullName: Streamy.Stream.Stream(System.Byte[], Streamy.Endian)
  fullName.vb: Streamy.Stream.Stream(System.Byte(), Streamy.Endian)
  nameWithType: Stream.Stream(Byte[], Endian)
  nameWithType.vb: Stream.Stream(Byte(), Endian)
- uid: Streamy.Stream.#ctor(System.Memory{System.Byte})
  name: Stream(Memory<Byte>)
  href: api/Streamy.Stream.html#Streamy_Stream__ctor_System_Memory_System_Byte__
  commentId: M:Streamy.Stream.#ctor(System.Memory{System.Byte})
  name.vb: Stream(Memory(Of Byte))
  fullName: Streamy.Stream.Stream(System.Memory<System.Byte>)
  fullName.vb: Streamy.Stream.Stream(System.Memory(Of System.Byte))
  nameWithType: Stream.Stream(Memory<Byte>)
  nameWithType.vb: Stream.Stream(Memory(Of Byte))
- uid: Streamy.Stream.#ctor(System.Memory{System.Byte},Streamy.Endian)
  name: Stream(Memory<Byte>, Endian)
  href: api/Streamy.Stream.html#Streamy_Stream__ctor_System_Memory_System_Byte__Streamy_Endian_
  commentId: M:Streamy.Stream.#ctor(System.Memory{System.Byte},Streamy.Endian)
  name.vb: Stream(Memory(Of Byte), Endian)
  fullName: Streamy.Stream.Stream(System.Memory<System.Byte>, Streamy.Endian)
  fullName.vb: Streamy.Stream.Stream(System.Memory(Of System.Byte), Streamy.Endian)
  nameWithType: Stream.Stream(Memory<Byte>, Endian)
  nameWithType.vb: Stream.Stream(Memory(Of Byte), Endian)
- uid: Streamy.Stream.#ctor(System.ReadOnlyMemory{System.Byte})
  name: Stream(ReadOnlyMemory<Byte>)
  href: api/Streamy.Stream.html#Streamy_Stream__ctor_System_ReadOnlyMemory_System_Byte__
  commentId: M:Streamy.Stream.#ctor(System.ReadOnlyMemory{System.Byte})
  name.vb: Stream(ReadOnlyMemory(Of Byte))
  fullName: Streamy.Stream.Stream(System.ReadOnlyMemory<System.Byte>)
  fullName.vb: Streamy.Stream.Stream(System.ReadOnlyMemory(Of System.Byte))
  nameWithType: Stream.Stream(ReadOnlyMemory<Byte>)
  nameWithType.vb: Stream.Stream(ReadOnlyMemory(Of Byte))
- uid: Streamy.Stream.#ctor(System.ReadOnlyMemory{System.Byte},Streamy.Endian)
  name: Stream(ReadOnlyMemory<Byte>, Endian)
  href: api/Streamy.Stream.html#Streamy_Stream__ctor_System_ReadOnlyMemory_System_Byte__Streamy_Endian_
  commentId: M:Streamy.Stream.#ctor(System.ReadOnlyMemory{System.Byte},Streamy.Endian)
  name.vb: Stream(ReadOnlyMemory(Of Byte), Endian)
  fullName: Streamy.Stream.Stream(System.ReadOnlyMemory<System.Byte>, Streamy.Endian)
  fullName.vb: Streamy.Stream.Stream(System.ReadOnlyMemory(Of System.Byte), Streamy.Endian)
  nameWithType: Stream.Stream(ReadOnlyMemory<Byte>, Endian)
  nameWithType.vb: Stream.Stream(ReadOnlyMemory(Of Byte), Endian)
- uid: Streamy.Stream.#ctor*
  name: Stream
  href: api/Streamy.Stream.html#Streamy_Stream__ctor_
  commentId: Overload:Streamy.Stream.#ctor
  isSpec: "True"
  fullName: Streamy.Stream.Stream
  nameWithType: Stream.Stream
- uid: Streamy.Stream.Add(System.Boolean)
  name: Add(Boolean)
  href: api/Streamy.Stream.html#Streamy_Stream_Add_System_Boolean_
  commentId: M:Streamy.Stream.Add(System.Boolean)
  fullName: Streamy.Stream.Add(System.Boolean)
  nameWithType: Stream.Add(Boolean)
- uid: Streamy.Stream.Add(System.Byte)
  name: Add(Byte)
  href: api/Streamy.Stream.html#Streamy_Stream_Add_System_Byte_
  commentId: M:Streamy.Stream.Add(System.Byte)
  fullName: Streamy.Stream.Add(System.Byte)
  nameWithType: Stream.Add(Byte)
- uid: Streamy.Stream.Add(System.Decimal)
  name: Add(Decimal)
  href: api/Streamy.Stream.html#Streamy_Stream_Add_System_Decimal_
  commentId: M:Streamy.Stream.Add(System.Decimal)
  fullName: Streamy.Stream.Add(System.Decimal)
  nameWithType: Stream.Add(Decimal)
- uid: Streamy.Stream.Add(System.Double)
  name: Add(Double)
  href: api/Streamy.Stream.html#Streamy_Stream_Add_System_Double_
  commentId: M:Streamy.Stream.Add(System.Double)
  fullName: Streamy.Stream.Add(System.Double)
  nameWithType: Stream.Add(Double)
- uid: Streamy.Stream.Add(System.Int16)
  name: Add(Int16)
  href: api/Streamy.Stream.html#Streamy_Stream_Add_System_Int16_
  commentId: M:Streamy.Stream.Add(System.Int16)
  fullName: Streamy.Stream.Add(System.Int16)
  nameWithType: Stream.Add(Int16)
- uid: Streamy.Stream.Add(System.Int32)
  name: Add(Int32)
  href: api/Streamy.Stream.html#Streamy_Stream_Add_System_Int32_
  commentId: M:Streamy.Stream.Add(System.Int32)
  fullName: Streamy.Stream.Add(System.Int32)
  nameWithType: Stream.Add(Int32)
- uid: Streamy.Stream.Add(System.Int64)
  name: Add(Int64)
  href: api/Streamy.Stream.html#Streamy_Stream_Add_System_Int64_
  commentId: M:Streamy.Stream.Add(System.Int64)
  fullName: Streamy.Stream.Add(System.Int64)
  nameWithType: Stream.Add(Int64)
- uid: Streamy.Stream.Add(System.SByte)
  name: Add(SByte)
  href: api/Streamy.Stream.html#Streamy_Stream_Add_System_SByte_
  commentId: M:Streamy.Stream.Add(System.SByte)
  fullName: Streamy.Stream.Add(System.SByte)
  nameWithType: Stream.Add(SByte)
- uid: Streamy.Stream.Add(System.Single)
  name: Add(Single)
  href: api/Streamy.Stream.html#Streamy_Stream_Add_System_Single_
  commentId: M:Streamy.Stream.Add(System.Single)
  fullName: Streamy.Stream.Add(System.Single)
  nameWithType: Stream.Add(Single)
- uid: Streamy.Stream.Add(System.UInt16)
  name: Add(UInt16)
  href: api/Streamy.Stream.html#Streamy_Stream_Add_System_UInt16_
  commentId: M:Streamy.Stream.Add(System.UInt16)
  fullName: Streamy.Stream.Add(System.UInt16)
  nameWithType: Stream.Add(UInt16)
- uid: Streamy.Stream.Add(System.UInt32)
  name: Add(UInt32)
  href: api/Streamy.Stream.html#Streamy_Stream_Add_System_UInt32_
  commentId: M:Streamy.Stream.Add(System.UInt32)
  fullName: Streamy.Stream.Add(System.UInt32)
  nameWithType: Stream.Add(UInt32)
- uid: Streamy.Stream.Add(System.UInt64)
  name: Add(UInt64)
  href: api/Streamy.Stream.html#Streamy_Stream_Add_System_UInt64_
  commentId: M:Streamy.Stream.Add(System.UInt64)
  fullName: Streamy.Stream.Add(System.UInt64)
  nameWithType: Stream.Add(UInt64)
- uid: Streamy.Stream.Add*
  name: Add
  href: api/Streamy.Stream.html#Streamy_Stream_Add_
  commentId: Overload:Streamy.Stream.Add
  isSpec: "True"
  fullName: Streamy.Stream.Add
  nameWithType: Stream.Add
- uid: Streamy.Stream.Disposed
  name: Disposed
  href: api/Streamy.Stream.html#Streamy_Stream_Disposed
  commentId: P:Streamy.Stream.Disposed
  fullName: Streamy.Stream.Disposed
  nameWithType: Stream.Disposed
- uid: Streamy.Stream.Disposed*
  name: Disposed
  href: api/Streamy.Stream.html#Streamy_Stream_Disposed_
  commentId: Overload:Streamy.Stream.Disposed
  isSpec: "True"
  fullName: Streamy.Stream.Disposed
  nameWithType: Stream.Disposed
- uid: Streamy.Stream.DisposeManaged
  name: DisposeManaged()
  href: api/Streamy.Stream.html#Streamy_Stream_DisposeManaged
  commentId: M:Streamy.Stream.DisposeManaged
  fullName: Streamy.Stream.DisposeManaged()
  nameWithType: Stream.DisposeManaged()
- uid: Streamy.Stream.DisposeManaged*
  name: DisposeManaged
  href: api/Streamy.Stream.html#Streamy_Stream_DisposeManaged_
  commentId: Overload:Streamy.Stream.DisposeManaged
  isSpec: "True"
  fullName: Streamy.Stream.DisposeManaged
  nameWithType: Stream.DisposeManaged
- uid: Streamy.Stream.DisposeUnmanaged
  name: DisposeUnmanaged()
  href: api/Streamy.Stream.html#Streamy_Stream_DisposeUnmanaged
  commentId: M:Streamy.Stream.DisposeUnmanaged
  fullName: Streamy.Stream.DisposeUnmanaged()
  nameWithType: Stream.DisposeUnmanaged()
- uid: Streamy.Stream.DisposeUnmanaged*
  name: DisposeUnmanaged
  href: api/Streamy.Stream.html#Streamy_Stream_DisposeUnmanaged_
  commentId: Overload:Streamy.Stream.DisposeUnmanaged
  isSpec: "True"
  fullName: Streamy.Stream.DisposeUnmanaged
  nameWithType: Stream.DisposeUnmanaged
- uid: Streamy.Stream.Endianness
  name: Endianness
  href: api/Streamy.Stream.html#Streamy_Stream_Endianness
  commentId: P:Streamy.Stream.Endianness
  fullName: Streamy.Stream.Endianness
  nameWithType: Stream.Endianness
- uid: Streamy.Stream.Endianness*
  name: Endianness
  href: api/Streamy.Stream.html#Streamy_Stream_Endianness_
  commentId: Overload:Streamy.Stream.Endianness
  isSpec: "True"
  fullName: Streamy.Stream.Endianness
  nameWithType: Stream.Endianness
- uid: Streamy.Stream.Finalize
  name: Finalize()
  href: api/Streamy.Stream.html#Streamy_Stream_Finalize
  commentId: M:Streamy.Stream.Finalize
  fullName: Streamy.Stream.Finalize()
  nameWithType: Stream.Finalize()
- uid: Streamy.Stream.Finalize*
  name: Finalize
  href: api/Streamy.Stream.html#Streamy_Stream_Finalize_
  commentId: Overload:Streamy.Stream.Finalize
  isSpec: "True"
  fullName: Streamy.Stream.Finalize
  nameWithType: Stream.Finalize
- uid: Streamy.Stream.NullLargeFields
  name: NullLargeFields()
  href: api/Streamy.Stream.html#Streamy_Stream_NullLargeFields
  commentId: M:Streamy.Stream.NullLargeFields
  fullName: Streamy.Stream.NullLargeFields()
  nameWithType: Stream.NullLargeFields()
- uid: Streamy.Stream.NullLargeFields*
  name: NullLargeFields
  href: api/Streamy.Stream.html#Streamy_Stream_NullLargeFields_
  commentId: Overload:Streamy.Stream.NullLargeFields
  isSpec: "True"
  fullName: Streamy.Stream.NullLargeFields
  nameWithType: Stream.NullLargeFields
- uid: Streamy.Stream.Peek(System.Boolean@)
  name: Peek(out Boolean)
  href: api/Streamy.Stream.html#Streamy_Stream_Peek_System_Boolean__
  commentId: M:Streamy.Stream.Peek(System.Boolean@)
  name.vb: Peek(ByRef Boolean)
  fullName: Streamy.Stream.Peek(out System.Boolean)
  fullName.vb: Streamy.Stream.Peek(ByRef System.Boolean)
  nameWithType: Stream.Peek(out Boolean)
  nameWithType.vb: Stream.Peek(ByRef Boolean)
- uid: Streamy.Stream.Peek(System.Byte@)
  name: Peek(out Byte)
  href: api/Streamy.Stream.html#Streamy_Stream_Peek_System_Byte__
  commentId: M:Streamy.Stream.Peek(System.Byte@)
  name.vb: Peek(ByRef Byte)
  fullName: Streamy.Stream.Peek(out System.Byte)
  fullName.vb: Streamy.Stream.Peek(ByRef System.Byte)
  nameWithType: Stream.Peek(out Byte)
  nameWithType.vb: Stream.Peek(ByRef Byte)
- uid: Streamy.Stream.Peek(System.Decimal@)
  name: Peek(out Decimal)
  href: api/Streamy.Stream.html#Streamy_Stream_Peek_System_Decimal__
  commentId: M:Streamy.Stream.Peek(System.Decimal@)
  name.vb: Peek(ByRef Decimal)
  fullName: Streamy.Stream.Peek(out System.Decimal)
  fullName.vb: Streamy.Stream.Peek(ByRef System.Decimal)
  nameWithType: Stream.Peek(out Decimal)
  nameWithType.vb: Stream.Peek(ByRef Decimal)
- uid: Streamy.Stream.Peek(System.Double@)
  name: Peek(out Double)
  href: api/Streamy.Stream.html#Streamy_Stream_Peek_System_Double__
  commentId: M:Streamy.Stream.Peek(System.Double@)
  name.vb: Peek(ByRef Double)
  fullName: Streamy.Stream.Peek(out System.Double)
  fullName.vb: Streamy.Stream.Peek(ByRef System.Double)
  nameWithType: Stream.Peek(out Double)
  nameWithType.vb: Stream.Peek(ByRef Double)
- uid: Streamy.Stream.Peek(System.Int16@)
  name: Peek(out Int16)
  href: api/Streamy.Stream.html#Streamy_Stream_Peek_System_Int16__
  commentId: M:Streamy.Stream.Peek(System.Int16@)
  name.vb: Peek(ByRef Int16)
  fullName: Streamy.Stream.Peek(out System.Int16)
  fullName.vb: Streamy.Stream.Peek(ByRef System.Int16)
  nameWithType: Stream.Peek(out Int16)
  nameWithType.vb: Stream.Peek(ByRef Int16)
- uid: Streamy.Stream.Peek(System.Int32@)
  name: Peek(out Int32)
  href: api/Streamy.Stream.html#Streamy_Stream_Peek_System_Int32__
  commentId: M:Streamy.Stream.Peek(System.Int32@)
  name.vb: Peek(ByRef Int32)
  fullName: Streamy.Stream.Peek(out System.Int32)
  fullName.vb: Streamy.Stream.Peek(ByRef System.Int32)
  nameWithType: Stream.Peek(out Int32)
  nameWithType.vb: Stream.Peek(ByRef Int32)
- uid: Streamy.Stream.Peek(System.Int64@)
  name: Peek(out Int64)
  href: api/Streamy.Stream.html#Streamy_Stream_Peek_System_Int64__
  commentId: M:Streamy.Stream.Peek(System.Int64@)
  name.vb: Peek(ByRef Int64)
  fullName: Streamy.Stream.Peek(out System.Int64)
  fullName.vb: Streamy.Stream.Peek(ByRef System.Int64)
  nameWithType: Stream.Peek(out Int64)
  nameWithType.vb: Stream.Peek(ByRef Int64)
- uid: Streamy.Stream.Peek(System.SByte@)
  name: Peek(out SByte)
  href: api/Streamy.Stream.html#Streamy_Stream_Peek_System_SByte__
  commentId: M:Streamy.Stream.Peek(System.SByte@)
  name.vb: Peek(ByRef SByte)
  fullName: Streamy.Stream.Peek(out System.SByte)
  fullName.vb: Streamy.Stream.Peek(ByRef System.SByte)
  nameWithType: Stream.Peek(out SByte)
  nameWithType.vb: Stream.Peek(ByRef SByte)
- uid: Streamy.Stream.Peek(System.Single@)
  name: Peek(out Single)
  href: api/Streamy.Stream.html#Streamy_Stream_Peek_System_Single__
  commentId: M:Streamy.Stream.Peek(System.Single@)
  name.vb: Peek(ByRef Single)
  fullName: Streamy.Stream.Peek(out System.Single)
  fullName.vb: Streamy.Stream.Peek(ByRef System.Single)
  nameWithType: Stream.Peek(out Single)
  nameWithType.vb: Stream.Peek(ByRef Single)
- uid: Streamy.Stream.Peek(System.UInt16@)
  name: Peek(out UInt16)
  href: api/Streamy.Stream.html#Streamy_Stream_Peek_System_UInt16__
  commentId: M:Streamy.Stream.Peek(System.UInt16@)
  name.vb: Peek(ByRef UInt16)
  fullName: Streamy.Stream.Peek(out System.UInt16)
  fullName.vb: Streamy.Stream.Peek(ByRef System.UInt16)
  nameWithType: Stream.Peek(out UInt16)
  nameWithType.vb: Stream.Peek(ByRef UInt16)
- uid: Streamy.Stream.Peek(System.UInt32@)
  name: Peek(out UInt32)
  href: api/Streamy.Stream.html#Streamy_Stream_Peek_System_UInt32__
  commentId: M:Streamy.Stream.Peek(System.UInt32@)
  name.vb: Peek(ByRef UInt32)
  fullName: Streamy.Stream.Peek(out System.UInt32)
  fullName.vb: Streamy.Stream.Peek(ByRef System.UInt32)
  nameWithType: Stream.Peek(out UInt32)
  nameWithType.vb: Stream.Peek(ByRef UInt32)
- uid: Streamy.Stream.Peek(System.UInt64@)
  name: Peek(out UInt64)
  href: api/Streamy.Stream.html#Streamy_Stream_Peek_System_UInt64__
  commentId: M:Streamy.Stream.Peek(System.UInt64@)
  name.vb: Peek(ByRef UInt64)
  fullName: Streamy.Stream.Peek(out System.UInt64)
  fullName.vb: Streamy.Stream.Peek(ByRef System.UInt64)
  nameWithType: Stream.Peek(out UInt64)
  nameWithType.vb: Stream.Peek(ByRef UInt64)
- uid: Streamy.Stream.Peek*
  name: Peek
  href: api/Streamy.Stream.html#Streamy_Stream_Peek_
  commentId: Overload:Streamy.Stream.Peek
  isSpec: "True"
  fullName: Streamy.Stream.Peek
  nameWithType: Stream.Peek
- uid: Streamy.Stream.Position
  name: Position
  href: api/Streamy.Stream.html#Streamy_Stream_Position
  commentId: P:Streamy.Stream.Position
  fullName: Streamy.Stream.Position
  nameWithType: Stream.Position
- uid: Streamy.Stream.Position*
  name: Position
  href: api/Streamy.Stream.html#Streamy_Stream_Position_
  commentId: Overload:Streamy.Stream.Position
  isSpec: "True"
  fullName: Streamy.Stream.Position
  nameWithType: Stream.Position
- uid: Streamy.Stream.Read(System.Boolean@)
  name: Read(out Boolean)
  href: api/Streamy.Stream.html#Streamy_Stream_Read_System_Boolean__
  commentId: M:Streamy.Stream.Read(System.Boolean@)
  name.vb: Read(ByRef Boolean)
  fullName: Streamy.Stream.Read(out System.Boolean)
  fullName.vb: Streamy.Stream.Read(ByRef System.Boolean)
  nameWithType: Stream.Read(out Boolean)
  nameWithType.vb: Stream.Read(ByRef Boolean)
- uid: Streamy.Stream.Read(System.Byte@)
  name: Read(out Byte)
  href: api/Streamy.Stream.html#Streamy_Stream_Read_System_Byte__
  commentId: M:Streamy.Stream.Read(System.Byte@)
  name.vb: Read(ByRef Byte)
  fullName: Streamy.Stream.Read(out System.Byte)
  fullName.vb: Streamy.Stream.Read(ByRef System.Byte)
  nameWithType: Stream.Read(out Byte)
  nameWithType.vb: Stream.Read(ByRef Byte)
- uid: Streamy.Stream.Read(System.Decimal@)
  name: Read(out Decimal)
  href: api/Streamy.Stream.html#Streamy_Stream_Read_System_Decimal__
  commentId: M:Streamy.Stream.Read(System.Decimal@)
  name.vb: Read(ByRef Decimal)
  fullName: Streamy.Stream.Read(out System.Decimal)
  fullName.vb: Streamy.Stream.Read(ByRef System.Decimal)
  nameWithType: Stream.Read(out Decimal)
  nameWithType.vb: Stream.Read(ByRef Decimal)
- uid: Streamy.Stream.Read(System.Double@)
  name: Read(out Double)
  href: api/Streamy.Stream.html#Streamy_Stream_Read_System_Double__
  commentId: M:Streamy.Stream.Read(System.Double@)
  name.vb: Read(ByRef Double)
  fullName: Streamy.Stream.Read(out System.Double)
  fullName.vb: Streamy.Stream.Read(ByRef System.Double)
  nameWithType: Stream.Read(out Double)
  nameWithType.vb: Stream.Read(ByRef Double)
- uid: Streamy.Stream.Read(System.Int16@)
  name: Read(out Int16)
  href: api/Streamy.Stream.html#Streamy_Stream_Read_System_Int16__
  commentId: M:Streamy.Stream.Read(System.Int16@)
  name.vb: Read(ByRef Int16)
  fullName: Streamy.Stream.Read(out System.Int16)
  fullName.vb: Streamy.Stream.Read(ByRef System.Int16)
  nameWithType: Stream.Read(out Int16)
  nameWithType.vb: Stream.Read(ByRef Int16)
- uid: Streamy.Stream.Read(System.Int32@)
  name: Read(out Int32)
  href: api/Streamy.Stream.html#Streamy_Stream_Read_System_Int32__
  commentId: M:Streamy.Stream.Read(System.Int32@)
  name.vb: Read(ByRef Int32)
  fullName: Streamy.Stream.Read(out System.Int32)
  fullName.vb: Streamy.Stream.Read(ByRef System.Int32)
  nameWithType: Stream.Read(out Int32)
  nameWithType.vb: Stream.Read(ByRef Int32)
- uid: Streamy.Stream.Read(System.Int64@)
  name: Read(out Int64)
  href: api/Streamy.Stream.html#Streamy_Stream_Read_System_Int64__
  commentId: M:Streamy.Stream.Read(System.Int64@)
  name.vb: Read(ByRef Int64)
  fullName: Streamy.Stream.Read(out System.Int64)
  fullName.vb: Streamy.Stream.Read(ByRef System.Int64)
  nameWithType: Stream.Read(out Int64)
  nameWithType.vb: Stream.Read(ByRef Int64)
- uid: Streamy.Stream.Read(System.SByte@)
  name: Read(out SByte)
  href: api/Streamy.Stream.html#Streamy_Stream_Read_System_SByte__
  commentId: M:Streamy.Stream.Read(System.SByte@)
  name.vb: Read(ByRef SByte)
  fullName: Streamy.Stream.Read(out System.SByte)
  fullName.vb: Streamy.Stream.Read(ByRef System.SByte)
  nameWithType: Stream.Read(out SByte)
  nameWithType.vb: Stream.Read(ByRef SByte)
- uid: Streamy.Stream.Read(System.Single@)
  name: Read(out Single)
  href: api/Streamy.Stream.html#Streamy_Stream_Read_System_Single__
  commentId: M:Streamy.Stream.Read(System.Single@)
  name.vb: Read(ByRef Single)
  fullName: Streamy.Stream.Read(out System.Single)
  fullName.vb: Streamy.Stream.Read(ByRef System.Single)
  nameWithType: Stream.Read(out Single)
  nameWithType.vb: Stream.Read(ByRef Single)
- uid: Streamy.Stream.Read(System.UInt16@)
  name: Read(out UInt16)
  href: api/Streamy.Stream.html#Streamy_Stream_Read_System_UInt16__
  commentId: M:Streamy.Stream.Read(System.UInt16@)
  name.vb: Read(ByRef UInt16)
  fullName: Streamy.Stream.Read(out System.UInt16)
  fullName.vb: Streamy.Stream.Read(ByRef System.UInt16)
  nameWithType: Stream.Read(out UInt16)
  nameWithType.vb: Stream.Read(ByRef UInt16)
- uid: Streamy.Stream.Read(System.UInt32@)
  name: Read(out UInt32)
  href: api/Streamy.Stream.html#Streamy_Stream_Read_System_UInt32__
  commentId: M:Streamy.Stream.Read(System.UInt32@)
  name.vb: Read(ByRef UInt32)
  fullName: Streamy.Stream.Read(out System.UInt32)
  fullName.vb: Streamy.Stream.Read(ByRef System.UInt32)
  nameWithType: Stream.Read(out UInt32)
  nameWithType.vb: Stream.Read(ByRef UInt32)
- uid: Streamy.Stream.Read(System.UInt64@)
  name: Read(out UInt64)
  href: api/Streamy.Stream.html#Streamy_Stream_Read_System_UInt64__
  commentId: M:Streamy.Stream.Read(System.UInt64@)
  name.vb: Read(ByRef UInt64)
  fullName: Streamy.Stream.Read(out System.UInt64)
  fullName.vb: Streamy.Stream.Read(ByRef System.UInt64)
  nameWithType: Stream.Read(out UInt64)
  nameWithType.vb: Stream.Read(ByRef UInt64)
- uid: Streamy.Stream.Read*
  name: Read
  href: api/Streamy.Stream.html#Streamy_Stream_Read_
  commentId: Overload:Streamy.Stream.Read
  isSpec: "True"
  fullName: Streamy.Stream.Read
  nameWithType: Stream.Read
- uid: Streamy.Stream.Readable
  name: Readable
  href: api/Streamy.Stream.html#Streamy_Stream_Readable
  commentId: P:Streamy.Stream.Readable
  fullName: Streamy.Stream.Readable
  nameWithType: Stream.Readable
- uid: Streamy.Stream.Readable*
  name: Readable
  href: api/Streamy.Stream.html#Streamy_Stream_Readable_
  commentId: Overload:Streamy.Stream.Readable
  isSpec: "True"
  fullName: Streamy.Stream.Readable
  nameWithType: Stream.Readable
- uid: Streamy.Stream.Seek(nint)
  name: Seek(nint)
  href: api/Streamy.Stream.html#Streamy_Stream_Seek_nint_
  commentId: M:Streamy.Stream.Seek(nint)
  fullName: Streamy.Stream.Seek(nint)
  nameWithType: Stream.Seek(nint)
- uid: Streamy.Stream.Seek*
  name: Seek
  href: api/Streamy.Stream.html#Streamy_Stream_Seek_
  commentId: Overload:Streamy.Stream.Seek
  isSpec: "True"
  fullName: Streamy.Stream.Seek
  nameWithType: Stream.Seek
- uid: Streamy.Stream.Seekable
  name: Seekable
  href: api/Streamy.Stream.html#Streamy_Stream_Seekable
  commentId: P:Streamy.Stream.Seekable
  fullName: Streamy.Stream.Seekable
  nameWithType: Stream.Seekable
- uid: Streamy.Stream.Seekable*
  name: Seekable
  href: api/Streamy.Stream.html#Streamy_Stream_Seekable_
  commentId: Overload:Streamy.Stream.Seekable
  isSpec: "True"
  fullName: Streamy.Stream.Seekable
  nameWithType: Stream.Seekable
- uid: Streamy.Stream.Sink
  name: Sink
  href: api/Streamy.Stream.html#Streamy_Stream_Sink
  commentId: F:Streamy.Stream.Sink
  fullName: Streamy.Stream.Sink
  nameWithType: Stream.Sink
- uid: Streamy.Stream.Source
  name: Source
  href: api/Streamy.Stream.html#Streamy_Stream_Source
  commentId: F:Streamy.Stream.Source
  fullName: Streamy.Stream.Source
  nameWithType: Stream.Source
- uid: Streamy.Stream.System#IDisposable#Dispose
  name: IDisposable.Dispose()
  href: api/Streamy.Stream.html#Streamy_Stream_System_IDisposable_Dispose
  commentId: M:Streamy.Stream.System#IDisposable#Dispose
  name.vb: System.IDisposable.Dispose()
  fullName: Streamy.Stream.System.IDisposable.Dispose()
  nameWithType: Stream.IDisposable.Dispose()
  nameWithType.vb: Stream.System.IDisposable.Dispose()
- uid: Streamy.Stream.System#IDisposable#Dispose*
  name: IDisposable.Dispose
  href: api/Streamy.Stream.html#Streamy_Stream_System_IDisposable_Dispose_
  commentId: Overload:Streamy.Stream.System#IDisposable#Dispose
  isSpec: "True"
  name.vb: System.IDisposable.Dispose
  fullName: Streamy.Stream.System.IDisposable.Dispose
  nameWithType: Stream.IDisposable.Dispose
  nameWithType.vb: Stream.System.IDisposable.Dispose
- uid: Streamy.Stream.System#Traits#IControlled#Dispose(System.Boolean)
  name: IControlled.Dispose(Boolean)
  href: api/Streamy.Stream.html#Streamy_Stream_System_Traits_IControlled_Dispose_System_Boolean_
  commentId: M:Streamy.Stream.System#Traits#IControlled#Dispose(System.Boolean)
  name.vb: System.Traits.IControlled.Dispose(Boolean)
  fullName: Streamy.Stream.System.Traits.IControlled.Dispose(System.Boolean)
  nameWithType: Stream.IControlled.Dispose(Boolean)
  nameWithType.vb: Stream.System.Traits.IControlled.Dispose(Boolean)
- uid: Streamy.Stream.System#Traits#IControlled#Dispose*
  name: IControlled.Dispose
  href: api/Streamy.Stream.html#Streamy_Stream_System_Traits_IControlled_Dispose_
  commentId: Overload:Streamy.Stream.System#Traits#IControlled#Dispose
  isSpec: "True"
  name.vb: System.Traits.IControlled.Dispose
  fullName: Streamy.Stream.System.Traits.IControlled.Dispose
  nameWithType: Stream.IControlled.Dispose
  nameWithType.vb: Stream.System.Traits.IControlled.Dispose
- uid: Streamy.Stream.System#Traits#IControlled#Disposed
  name: IControlled.Disposed
  href: api/Streamy.Stream.html#Streamy_Stream_System_Traits_IControlled_Disposed
  commentId: P:Streamy.Stream.System#Traits#IControlled#Disposed
  name.vb: System.Traits.IControlled.Disposed
  fullName: Streamy.Stream.System.Traits.IControlled.Disposed
  nameWithType: Stream.IControlled.Disposed
  nameWithType.vb: Stream.System.Traits.IControlled.Disposed
- uid: Streamy.Stream.System#Traits#IControlled#Disposed*
  name: IControlled.Disposed
  href: api/Streamy.Stream.html#Streamy_Stream_System_Traits_IControlled_Disposed_
  commentId: Overload:Streamy.Stream.System#Traits#IControlled#Disposed
  isSpec: "True"
  name.vb: System.Traits.IControlled.Disposed
  fullName: Streamy.Stream.System.Traits.IControlled.Disposed
  nameWithType: Stream.IControlled.Disposed
  nameWithType.vb: Stream.System.Traits.IControlled.Disposed
- uid: Streamy.Stream.System#Traits#IControlled#DisposeManaged
  name: IControlled.DisposeManaged()
  href: api/Streamy.Stream.html#Streamy_Stream_System_Traits_IControlled_DisposeManaged
  commentId: M:Streamy.Stream.System#Traits#IControlled#DisposeManaged
  name.vb: System.Traits.IControlled.DisposeManaged()
  fullName: Streamy.Stream.System.Traits.IControlled.DisposeManaged()
  nameWithType: Stream.IControlled.DisposeManaged()
  nameWithType.vb: Stream.System.Traits.IControlled.DisposeManaged()
- uid: Streamy.Stream.System#Traits#IControlled#DisposeManaged*
  name: IControlled.DisposeManaged
  href: api/Streamy.Stream.html#Streamy_Stream_System_Traits_IControlled_DisposeManaged_
  commentId: Overload:Streamy.Stream.System#Traits#IControlled#DisposeManaged
  isSpec: "True"
  name.vb: System.Traits.IControlled.DisposeManaged
  fullName: Streamy.Stream.System.Traits.IControlled.DisposeManaged
  nameWithType: Stream.IControlled.DisposeManaged
  nameWithType.vb: Stream.System.Traits.IControlled.DisposeManaged
- uid: Streamy.Stream.System#Traits#IControlled#DisposeUnmanaged
  name: IControlled.DisposeUnmanaged()
  href: api/Streamy.Stream.html#Streamy_Stream_System_Traits_IControlled_DisposeUnmanaged
  commentId: M:Streamy.Stream.System#Traits#IControlled#DisposeUnmanaged
  name.vb: System.Traits.IControlled.DisposeUnmanaged()
  fullName: Streamy.Stream.System.Traits.IControlled.DisposeUnmanaged()
  nameWithType: Stream.IControlled.DisposeUnmanaged()
  nameWithType.vb: Stream.System.Traits.IControlled.DisposeUnmanaged()
- uid: Streamy.Stream.System#Traits#IControlled#DisposeUnmanaged*
  name: IControlled.DisposeUnmanaged
  href: api/Streamy.Stream.html#Streamy_Stream_System_Traits_IControlled_DisposeUnmanaged_
  commentId: Overload:Streamy.Stream.System#Traits#IControlled#DisposeUnmanaged
  isSpec: "True"
  name.vb: System.Traits.IControlled.DisposeUnmanaged
  fullName: Streamy.Stream.System.Traits.IControlled.DisposeUnmanaged
  nameWithType: Stream.IControlled.DisposeUnmanaged
  nameWithType.vb: Stream.System.Traits.IControlled.DisposeUnmanaged
- uid: Streamy.Stream.System#Traits#IControlled#NullLargeFields
  name: IControlled.NullLargeFields()
  href: api/Streamy.Stream.html#Streamy_Stream_System_Traits_IControlled_NullLargeFields
  commentId: M:Streamy.Stream.System#Traits#IControlled#NullLargeFields
  name.vb: System.Traits.IControlled.NullLargeFields()
  fullName: Streamy.Stream.System.Traits.IControlled.NullLargeFields()
  nameWithType: Stream.IControlled.NullLargeFields()
  nameWithType.vb: Stream.System.Traits.IControlled.NullLargeFields()
- uid: Streamy.Stream.System#Traits#IControlled#NullLargeFields*
  name: IControlled.NullLargeFields
  href: api/Streamy.Stream.html#Streamy_Stream_System_Traits_IControlled_NullLargeFields_
  commentId: Overload:Streamy.Stream.System#Traits#IControlled#NullLargeFields
  isSpec: "True"
  name.vb: System.Traits.IControlled.NullLargeFields
  fullName: Streamy.Stream.System.Traits.IControlled.NullLargeFields
  nameWithType: Stream.IControlled.NullLargeFields
  nameWithType.vb: Stream.System.Traits.IControlled.NullLargeFields
- uid: Streamy.Stream.ToString
  name: ToString()
  href: api/Streamy.Stream.html#Streamy_Stream_ToString
  commentId: M:Streamy.Stream.ToString
  fullName: Streamy.Stream.ToString()
  nameWithType: Stream.ToString()
- uid: Streamy.Stream.ToString*
  name: ToString
  href: api/Streamy.Stream.html#Streamy_Stream_ToString_
  commentId: Overload:Streamy.Stream.ToString
  isSpec: "True"
  fullName: Streamy.Stream.ToString
  nameWithType: Stream.ToString
- uid: Streamy.Stream.Writable
  name: Writable
  href: api/Streamy.Stream.html#Streamy_Stream_Writable
  commentId: P:Streamy.Stream.Writable
  fullName: Streamy.Stream.Writable
  nameWithType: Stream.Writable
- uid: Streamy.Stream.Writable*
  name: Writable
  href: api/Streamy.Stream.html#Streamy_Stream_Writable_
  commentId: Overload:Streamy.Stream.Writable
  isSpec: "True"
  fullName: Streamy.Stream.Writable
  nameWithType: Stream.Writable
- uid: Streamy.Stream.Write(System.Boolean)
  name: Write(Boolean)
  href: api/Streamy.Stream.html#Streamy_Stream_Write_System_Boolean_
  commentId: M:Streamy.Stream.Write(System.Boolean)
  fullName: Streamy.Stream.Write(System.Boolean)
  nameWithType: Stream.Write(Boolean)
- uid: Streamy.Stream.Write(System.Byte)
  name: Write(Byte)
  href: api/Streamy.Stream.html#Streamy_Stream_Write_System_Byte_
  commentId: M:Streamy.Stream.Write(System.Byte)
  fullName: Streamy.Stream.Write(System.Byte)
  nameWithType: Stream.Write(Byte)
- uid: Streamy.Stream.Write(System.Decimal)
  name: Write(Decimal)
  href: api/Streamy.Stream.html#Streamy_Stream_Write_System_Decimal_
  commentId: M:Streamy.Stream.Write(System.Decimal)
  fullName: Streamy.Stream.Write(System.Decimal)
  nameWithType: Stream.Write(Decimal)
- uid: Streamy.Stream.Write(System.Double)
  name: Write(Double)
  href: api/Streamy.Stream.html#Streamy_Stream_Write_System_Double_
  commentId: M:Streamy.Stream.Write(System.Double)
  fullName: Streamy.Stream.Write(System.Double)
  nameWithType: Stream.Write(Double)
- uid: Streamy.Stream.Write(System.Int16)
  name: Write(Int16)
  href: api/Streamy.Stream.html#Streamy_Stream_Write_System_Int16_
  commentId: M:Streamy.Stream.Write(System.Int16)
  fullName: Streamy.Stream.Write(System.Int16)
  nameWithType: Stream.Write(Int16)
- uid: Streamy.Stream.Write(System.Int32)
  name: Write(Int32)
  href: api/Streamy.Stream.html#Streamy_Stream_Write_System_Int32_
  commentId: M:Streamy.Stream.Write(System.Int32)
  fullName: Streamy.Stream.Write(System.Int32)
  nameWithType: Stream.Write(Int32)
- uid: Streamy.Stream.Write(System.Int64)
  name: Write(Int64)
  href: api/Streamy.Stream.html#Streamy_Stream_Write_System_Int64_
  commentId: M:Streamy.Stream.Write(System.Int64)
  fullName: Streamy.Stream.Write(System.Int64)
  nameWithType: Stream.Write(Int64)
- uid: Streamy.Stream.Write(System.SByte)
  name: Write(SByte)
  href: api/Streamy.Stream.html#Streamy_Stream_Write_System_SByte_
  commentId: M:Streamy.Stream.Write(System.SByte)
  fullName: Streamy.Stream.Write(System.SByte)
  nameWithType: Stream.Write(SByte)
- uid: Streamy.Stream.Write(System.Single)
  name: Write(Single)
  href: api/Streamy.Stream.html#Streamy_Stream_Write_System_Single_
  commentId: M:Streamy.Stream.Write(System.Single)
  fullName: Streamy.Stream.Write(System.Single)
  nameWithType: Stream.Write(Single)
- uid: Streamy.Stream.Write(System.UInt16)
  name: Write(UInt16)
  href: api/Streamy.Stream.html#Streamy_Stream_Write_System_UInt16_
  commentId: M:Streamy.Stream.Write(System.UInt16)
  fullName: Streamy.Stream.Write(System.UInt16)
  nameWithType: Stream.Write(UInt16)
- uid: Streamy.Stream.Write(System.UInt32)
  name: Write(UInt32)
  href: api/Streamy.Stream.html#Streamy_Stream_Write_System_UInt32_
  commentId: M:Streamy.Stream.Write(System.UInt32)
  fullName: Streamy.Stream.Write(System.UInt32)
  nameWithType: Stream.Write(UInt32)
- uid: Streamy.Stream.Write(System.UInt64)
  name: Write(UInt64)
  href: api/Streamy.Stream.html#Streamy_Stream_Write_System_UInt64_
  commentId: M:Streamy.Stream.Write(System.UInt64)
  fullName: Streamy.Stream.Write(System.UInt64)
  nameWithType: Stream.Write(UInt64)
- uid: Streamy.Stream.Write*
  name: Write
  href: api/Streamy.Stream.html#Streamy_Stream_Write_
  commentId: Overload:Streamy.Stream.Write
  isSpec: "True"
  fullName: Streamy.Stream.Write
  nameWithType: Stream.Write
- uid: Stringier
  name: Stringier
  href: api/Stringier.html
  commentId: N:Stringier
  fullName: Stringier
  nameWithType: Stringier
- uid: Stringier.Case
  name: Case
  href: api/Stringier.Case.html
  commentId: T:Stringier.Case
  fullName: Stringier.Case
  nameWithType: Case
- uid: Stringier.Case.Insensitive
  name: Insensitive
  href: api/Stringier.Case.html#Stringier_Case_Insensitive
  commentId: F:Stringier.Case.Insensitive
  fullName: Stringier.Case.Insensitive
  nameWithType: Case.Insensitive
- uid: Stringier.Case.Sensitive
  name: Sensitive
  href: api/Stringier.Case.html#Stringier_Case_Sensitive
  commentId: F:Stringier.Case.Sensitive
  fullName: Stringier.Case.Sensitive
  nameWithType: Case.Sensitive
- uid: Stringier.Category
  name: Category
  href: api/Stringier.Category.html
  commentId: T:Stringier.Category
  fullName: Stringier.Category
  nameWithType: Category
- uid: Stringier.Category.#ctor(System.Globalization.UnicodeCategory)
  name: Category(UnicodeCategory)
  href: api/Stringier.Category.html#Stringier_Category__ctor_System_Globalization_UnicodeCategory_
  commentId: M:Stringier.Category.#ctor(System.Globalization.UnicodeCategory)
  fullName: Stringier.Category.Category(System.Globalization.UnicodeCategory)
  nameWithType: Category.Category(UnicodeCategory)
- uid: Stringier.Category.#ctor(System.Predicate{System.Text.Rune})
  name: Category(Predicate<Rune>)
  href: api/Stringier.Category.html#Stringier_Category__ctor_System_Predicate_System_Text_Rune__
  commentId: M:Stringier.Category.#ctor(System.Predicate{System.Text.Rune})
  name.vb: Category(Predicate(Of Rune))
  fullName: Stringier.Category.Category(System.Predicate<System.Text.Rune>)
  fullName.vb: Stringier.Category.Category(System.Predicate(Of System.Text.Rune))
  nameWithType: Category.Category(Predicate<Rune>)
  nameWithType.vb: Category.Category(Predicate(Of Rune))
- uid: Stringier.Category.#ctor(System.Text.Rune[])
  name: Category(Rune[])
  href: api/Stringier.Category.html#Stringier_Category__ctor_System_Text_Rune___
  commentId: M:Stringier.Category.#ctor(System.Text.Rune[])
  name.vb: Category(Rune())
  fullName: Stringier.Category.Category(System.Text.Rune[])
  fullName.vb: Stringier.Category.Category(System.Text.Rune())
  nameWithType: Category.Category(Rune[])
  nameWithType.vb: Category.Category(Rune())
- uid: Stringier.Category.#ctor(System.Traits.IContains{System.Text.Rune})
  name: Category(IContains<Rune>)
  href: api/Stringier.Category.html#Stringier_Category__ctor_System_Traits_IContains_System_Text_Rune__
  commentId: M:Stringier.Category.#ctor(System.Traits.IContains{System.Text.Rune})
  name.vb: Category(IContains(Of Rune))
  fullName: Stringier.Category.Category(System.Traits.IContains<System.Text.Rune>)
  fullName.vb: Stringier.Category.Category(System.Traits.IContains(Of System.Text.Rune))
  nameWithType: Category.Category(IContains<Rune>)
  nameWithType.vb: Category.Category(IContains(Of Rune))
- uid: Stringier.Category.#ctor(System.Unicode.ContributoryProperties)
  name: Category(ContributoryProperties)
  href: api/Stringier.Category.html#Stringier_Category__ctor_System_Unicode_ContributoryProperties_
  commentId: M:Stringier.Category.#ctor(System.Unicode.ContributoryProperties)
  fullName: Stringier.Category.Category(System.Unicode.ContributoryProperties)
  nameWithType: Category.Category(ContributoryProperties)
- uid: Stringier.Category.#ctor*
  name: Category
  href: api/Stringier.Category.html#Stringier_Category__ctor_
  commentId: Overload:Stringier.Category.#ctor
  isSpec: "True"
  fullName: Stringier.Category.Category
  nameWithType: Category.Category
- uid: Stringier.Category.BoxDrawing
  name: BoxDrawing
  href: api/Stringier.Category.html#Stringier_Category_BoxDrawing
  commentId: P:Stringier.Category.BoxDrawing
  fullName: Stringier.Category.BoxDrawing
  nameWithType: Category.BoxDrawing
- uid: Stringier.Category.BoxDrawing*
  name: BoxDrawing
  href: api/Stringier.Category.html#Stringier_Category_BoxDrawing_
  commentId: Overload:Stringier.Category.BoxDrawing
  isSpec: "True"
  fullName: Stringier.Category.BoxDrawing
  nameWithType: Category.BoxDrawing
- uid: Stringier.Category.CasedLetter
  name: CasedLetter
  href: api/Stringier.Category.html#Stringier_Category_CasedLetter
  commentId: P:Stringier.Category.CasedLetter
  fullName: Stringier.Category.CasedLetter
  nameWithType: Category.CasedLetter
- uid: Stringier.Category.CasedLetter*
  name: CasedLetter
  href: api/Stringier.Category.html#Stringier_Category_CasedLetter_
  commentId: Overload:Stringier.Category.CasedLetter
  isSpec: "True"
  fullName: Stringier.Category.CasedLetter
  nameWithType: Category.CasedLetter
- uid: Stringier.Category.ClosePunctuation
  name: ClosePunctuation
  href: api/Stringier.Category.html#Stringier_Category_ClosePunctuation
  commentId: P:Stringier.Category.ClosePunctuation
  fullName: Stringier.Category.ClosePunctuation
  nameWithType: Category.ClosePunctuation
- uid: Stringier.Category.ClosePunctuation*
  name: ClosePunctuation
  href: api/Stringier.Category.html#Stringier_Category_ClosePunctuation_
  commentId: Overload:Stringier.Category.ClosePunctuation
  isSpec: "True"
  fullName: Stringier.Category.ClosePunctuation
  nameWithType: Category.ClosePunctuation
- uid: Stringier.Category.ConnectorPunctuation
  name: ConnectorPunctuation
  href: api/Stringier.Category.html#Stringier_Category_ConnectorPunctuation
  commentId: P:Stringier.Category.ConnectorPunctuation
  fullName: Stringier.Category.ConnectorPunctuation
  nameWithType: Category.ConnectorPunctuation
- uid: Stringier.Category.ConnectorPunctuation*
  name: ConnectorPunctuation
  href: api/Stringier.Category.html#Stringier_Category_ConnectorPunctuation_
  commentId: Overload:Stringier.Category.ConnectorPunctuation
  isSpec: "True"
  fullName: Stringier.Category.ConnectorPunctuation
  nameWithType: Category.ConnectorPunctuation
- uid: Stringier.Category.Contains(System.Char)
  name: Contains(Char)
  href: api/Stringier.Category.html#Stringier_Category_Contains_System_Char_
  commentId: M:Stringier.Category.Contains(System.Char)
  fullName: Stringier.Category.Contains(System.Char)
  nameWithType: Category.Contains(Char)
- uid: Stringier.Category.Contains*
  name: Contains
  href: api/Stringier.Category.html#Stringier_Category_Contains_
  commentId: Overload:Stringier.Category.Contains
  isSpec: "True"
  fullName: Stringier.Category.Contains
  nameWithType: Category.Contains
- uid: Stringier.Category.Control
  name: Control
  href: api/Stringier.Category.html#Stringier_Category_Control
  commentId: P:Stringier.Category.Control
  fullName: Stringier.Category.Control
  nameWithType: Category.Control
- uid: Stringier.Category.Control*
  name: Control
  href: api/Stringier.Category.html#Stringier_Category_Control_
  commentId: Overload:Stringier.Category.Control
  isSpec: "True"
  fullName: Stringier.Category.Control
  nameWithType: Category.Control
- uid: Stringier.Category.CurrencySymbol
  name: CurrencySymbol
  href: api/Stringier.Category.html#Stringier_Category_CurrencySymbol
  commentId: P:Stringier.Category.CurrencySymbol
  fullName: Stringier.Category.CurrencySymbol
  nameWithType: Category.CurrencySymbol
- uid: Stringier.Category.CurrencySymbol*
  name: CurrencySymbol
  href: api/Stringier.Category.html#Stringier_Category_CurrencySymbol_
  commentId: Overload:Stringier.Category.CurrencySymbol
  isSpec: "True"
  fullName: Stringier.Category.CurrencySymbol
  nameWithType: Category.CurrencySymbol
- uid: Stringier.Category.DashPunctuation
  name: DashPunctuation
  href: api/Stringier.Category.html#Stringier_Category_DashPunctuation
  commentId: P:Stringier.Category.DashPunctuation
  fullName: Stringier.Category.DashPunctuation
  nameWithType: Category.DashPunctuation
- uid: Stringier.Category.DashPunctuation*
  name: DashPunctuation
  href: api/Stringier.Category.html#Stringier_Category_DashPunctuation_
  commentId: Overload:Stringier.Category.DashPunctuation
  isSpec: "True"
  fullName: Stringier.Category.DashPunctuation
  nameWithType: Category.DashPunctuation
- uid: Stringier.Category.DecimalNumber
  name: DecimalNumber
  href: api/Stringier.Category.html#Stringier_Category_DecimalNumber
  commentId: P:Stringier.Category.DecimalNumber
  fullName: Stringier.Category.DecimalNumber
  nameWithType: Category.DecimalNumber
- uid: Stringier.Category.DecimalNumber*
  name: DecimalNumber
  href: api/Stringier.Category.html#Stringier_Category_DecimalNumber_
  commentId: Overload:Stringier.Category.DecimalNumber
  isSpec: "True"
  fullName: Stringier.Category.DecimalNumber
  nameWithType: Category.DecimalNumber
- uid: Stringier.Category.Empty
  name: Empty
  href: api/Stringier.Category.html#Stringier_Category_Empty
  commentId: P:Stringier.Category.Empty
  fullName: Stringier.Category.Empty
  nameWithType: Category.Empty
- uid: Stringier.Category.Empty*
  name: Empty
  href: api/Stringier.Category.html#Stringier_Category_Empty_
  commentId: Overload:Stringier.Category.Empty
  isSpec: "True"
  fullName: Stringier.Category.Empty
  nameWithType: Category.Empty
- uid: Stringier.Category.EnclosingMark
  name: EnclosingMark
  href: api/Stringier.Category.html#Stringier_Category_EnclosingMark
  commentId: P:Stringier.Category.EnclosingMark
  fullName: Stringier.Category.EnclosingMark
  nameWithType: Category.EnclosingMark
- uid: Stringier.Category.EnclosingMark*
  name: EnclosingMark
  href: api/Stringier.Category.html#Stringier_Category_EnclosingMark_
  commentId: Overload:Stringier.Category.EnclosingMark
  isSpec: "True"
  fullName: Stringier.Category.EnclosingMark
  nameWithType: Category.EnclosingMark
- uid: Stringier.Category.FinalPunctuation
  name: FinalPunctuation
  href: api/Stringier.Category.html#Stringier_Category_FinalPunctuation
  commentId: P:Stringier.Category.FinalPunctuation
  fullName: Stringier.Category.FinalPunctuation
  nameWithType: Category.FinalPunctuation
- uid: Stringier.Category.FinalPunctuation*
  name: FinalPunctuation
  href: api/Stringier.Category.html#Stringier_Category_FinalPunctuation_
  commentId: Overload:Stringier.Category.FinalPunctuation
  isSpec: "True"
  fullName: Stringier.Category.FinalPunctuation
  nameWithType: Category.FinalPunctuation
- uid: Stringier.Category.Format
  name: Format
  href: api/Stringier.Category.html#Stringier_Category_Format
  commentId: P:Stringier.Category.Format
  fullName: Stringier.Category.Format
  nameWithType: Category.Format
- uid: Stringier.Category.Format*
  name: Format
  href: api/Stringier.Category.html#Stringier_Category_Format_
  commentId: Overload:Stringier.Category.Format
  isSpec: "True"
  fullName: Stringier.Category.Format
  nameWithType: Category.Format
- uid: Stringier.Category.HexadecimalNumber
  name: HexadecimalNumber
  href: api/Stringier.Category.html#Stringier_Category_HexadecimalNumber
  commentId: P:Stringier.Category.HexadecimalNumber
  fullName: Stringier.Category.HexadecimalNumber
  nameWithType: Category.HexadecimalNumber
- uid: Stringier.Category.HexadecimalNumber*
  name: HexadecimalNumber
  href: api/Stringier.Category.html#Stringier_Category_HexadecimalNumber_
  commentId: Overload:Stringier.Category.HexadecimalNumber
  isSpec: "True"
  fullName: Stringier.Category.HexadecimalNumber
  nameWithType: Category.HexadecimalNumber
- uid: Stringier.Category.InitialPunctuation
  name: InitialPunctuation
  href: api/Stringier.Category.html#Stringier_Category_InitialPunctuation
  commentId: P:Stringier.Category.InitialPunctuation
  fullName: Stringier.Category.InitialPunctuation
  nameWithType: Category.InitialPunctuation
- uid: Stringier.Category.InitialPunctuation*
  name: InitialPunctuation
  href: api/Stringier.Category.html#Stringier_Category_InitialPunctuation_
  commentId: Overload:Stringier.Category.InitialPunctuation
  isSpec: "True"
  fullName: Stringier.Category.InitialPunctuation
  nameWithType: Category.InitialPunctuation
- uid: Stringier.Category.Letter
  name: Letter
  href: api/Stringier.Category.html#Stringier_Category_Letter
  commentId: P:Stringier.Category.Letter
  fullName: Stringier.Category.Letter
  nameWithType: Category.Letter
- uid: Stringier.Category.Letter*
  name: Letter
  href: api/Stringier.Category.html#Stringier_Category_Letter_
  commentId: Overload:Stringier.Category.Letter
  isSpec: "True"
  fullName: Stringier.Category.Letter
  nameWithType: Category.Letter
- uid: Stringier.Category.LetterNumber
  name: LetterNumber
  href: api/Stringier.Category.html#Stringier_Category_LetterNumber
  commentId: P:Stringier.Category.LetterNumber
  fullName: Stringier.Category.LetterNumber
  nameWithType: Category.LetterNumber
- uid: Stringier.Category.LetterNumber*
  name: LetterNumber
  href: api/Stringier.Category.html#Stringier_Category_LetterNumber_
  commentId: Overload:Stringier.Category.LetterNumber
  isSpec: "True"
  fullName: Stringier.Category.LetterNumber
  nameWithType: Category.LetterNumber
- uid: Stringier.Category.LineSeparator
  name: LineSeparator
  href: api/Stringier.Category.html#Stringier_Category_LineSeparator
  commentId: P:Stringier.Category.LineSeparator
  fullName: Stringier.Category.LineSeparator
  nameWithType: Category.LineSeparator
- uid: Stringier.Category.LineSeparator*
  name: LineSeparator
  href: api/Stringier.Category.html#Stringier_Category_LineSeparator_
  commentId: Overload:Stringier.Category.LineSeparator
  isSpec: "True"
  fullName: Stringier.Category.LineSeparator
  nameWithType: Category.LineSeparator
- uid: Stringier.Category.LowercaseLetter
  name: LowercaseLetter
  href: api/Stringier.Category.html#Stringier_Category_LowercaseLetter
  commentId: P:Stringier.Category.LowercaseLetter
  fullName: Stringier.Category.LowercaseLetter
  nameWithType: Category.LowercaseLetter
- uid: Stringier.Category.LowercaseLetter*
  name: LowercaseLetter
  href: api/Stringier.Category.html#Stringier_Category_LowercaseLetter_
  commentId: Overload:Stringier.Category.LowercaseLetter
  isSpec: "True"
  fullName: Stringier.Category.LowercaseLetter
  nameWithType: Category.LowercaseLetter
- uid: Stringier.Category.Mark
  name: Mark
  href: api/Stringier.Category.html#Stringier_Category_Mark
  commentId: P:Stringier.Category.Mark
  fullName: Stringier.Category.Mark
  nameWithType: Category.Mark
- uid: Stringier.Category.Mark*
  name: Mark
  href: api/Stringier.Category.html#Stringier_Category_Mark_
  commentId: Overload:Stringier.Category.Mark
  isSpec: "True"
  fullName: Stringier.Category.Mark
  nameWithType: Category.Mark
- uid: Stringier.Category.MathSymbol
  name: MathSymbol
  href: api/Stringier.Category.html#Stringier_Category_MathSymbol
  commentId: P:Stringier.Category.MathSymbol
  fullName: Stringier.Category.MathSymbol
  nameWithType: Category.MathSymbol
- uid: Stringier.Category.MathSymbol*
  name: MathSymbol
  href: api/Stringier.Category.html#Stringier_Category_MathSymbol_
  commentId: Overload:Stringier.Category.MathSymbol
  isSpec: "True"
  fullName: Stringier.Category.MathSymbol
  nameWithType: Category.MathSymbol
- uid: Stringier.Category.ModifierLetter
  name: ModifierLetter
  href: api/Stringier.Category.html#Stringier_Category_ModifierLetter
  commentId: P:Stringier.Category.ModifierLetter
  fullName: Stringier.Category.ModifierLetter
  nameWithType: Category.ModifierLetter
- uid: Stringier.Category.ModifierLetter*
  name: ModifierLetter
  href: api/Stringier.Category.html#Stringier_Category_ModifierLetter_
  commentId: Overload:Stringier.Category.ModifierLetter
  isSpec: "True"
  fullName: Stringier.Category.ModifierLetter
  nameWithType: Category.ModifierLetter
- uid: Stringier.Category.ModifierSymbol
  name: ModifierSymbol
  href: api/Stringier.Category.html#Stringier_Category_ModifierSymbol
  commentId: P:Stringier.Category.ModifierSymbol
  fullName: Stringier.Category.ModifierSymbol
  nameWithType: Category.ModifierSymbol
- uid: Stringier.Category.ModifierSymbol*
  name: ModifierSymbol
  href: api/Stringier.Category.html#Stringier_Category_ModifierSymbol_
  commentId: Overload:Stringier.Category.ModifierSymbol
  isSpec: "True"
  fullName: Stringier.Category.ModifierSymbol
  nameWithType: Category.ModifierSymbol
- uid: Stringier.Category.NonspacingMark
  name: NonspacingMark
  href: api/Stringier.Category.html#Stringier_Category_NonspacingMark
  commentId: P:Stringier.Category.NonspacingMark
  fullName: Stringier.Category.NonspacingMark
  nameWithType: Category.NonspacingMark
- uid: Stringier.Category.NonspacingMark*
  name: NonspacingMark
  href: api/Stringier.Category.html#Stringier_Category_NonspacingMark_
  commentId: Overload:Stringier.Category.NonspacingMark
  isSpec: "True"
  fullName: Stringier.Category.NonspacingMark
  nameWithType: Category.NonspacingMark
- uid: Stringier.Category.Number
  name: Number
  href: api/Stringier.Category.html#Stringier_Category_Number
  commentId: P:Stringier.Category.Number
  fullName: Stringier.Category.Number
  nameWithType: Category.Number
- uid: Stringier.Category.Number*
  name: Number
  href: api/Stringier.Category.html#Stringier_Category_Number_
  commentId: Overload:Stringier.Category.Number
  isSpec: "True"
  fullName: Stringier.Category.Number
  nameWithType: Category.Number
- uid: Stringier.Category.op_BitwiseAnd(Stringier.Category,Stringier.Category)
  name: BitwiseAnd(Category, Category)
  href: api/Stringier.Category.html#Stringier_Category_op_BitwiseAnd_Stringier_Category_Stringier_Category_
  commentId: M:Stringier.Category.op_BitwiseAnd(Stringier.Category,Stringier.Category)
  fullName: Stringier.Category.BitwiseAnd(Stringier.Category, Stringier.Category)
  nameWithType: Category.BitwiseAnd(Category, Category)
- uid: Stringier.Category.op_BitwiseAnd*
  name: BitwiseAnd
  href: api/Stringier.Category.html#Stringier_Category_op_BitwiseAnd_
  commentId: Overload:Stringier.Category.op_BitwiseAnd
  isSpec: "True"
  fullName: Stringier.Category.BitwiseAnd
  nameWithType: Category.BitwiseAnd
- uid: Stringier.Category.op_BitwiseOr(Stringier.Category,Stringier.Category)
  name: BitwiseOr(Category, Category)
  href: api/Stringier.Category.html#Stringier_Category_op_BitwiseOr_Stringier_Category_Stringier_Category_
  commentId: M:Stringier.Category.op_BitwiseOr(Stringier.Category,Stringier.Category)
  fullName: Stringier.Category.BitwiseOr(Stringier.Category, Stringier.Category)
  nameWithType: Category.BitwiseOr(Category, Category)
- uid: Stringier.Category.op_BitwiseOr*
  name: BitwiseOr
  href: api/Stringier.Category.html#Stringier_Category_op_BitwiseOr_
  commentId: Overload:Stringier.Category.op_BitwiseOr
  isSpec: "True"
  fullName: Stringier.Category.BitwiseOr
  nameWithType: Category.BitwiseOr
- uid: Stringier.Category.op_ExclusiveOr(Stringier.Category,Stringier.Category)
  name: ExclusiveOr(Category, Category)
  href: api/Stringier.Category.html#Stringier_Category_op_ExclusiveOr_Stringier_Category_Stringier_Category_
  commentId: M:Stringier.Category.op_ExclusiveOr(Stringier.Category,Stringier.Category)
  fullName: Stringier.Category.ExclusiveOr(Stringier.Category, Stringier.Category)
  nameWithType: Category.ExclusiveOr(Category, Category)
- uid: Stringier.Category.op_ExclusiveOr*
  name: ExclusiveOr
  href: api/Stringier.Category.html#Stringier_Category_op_ExclusiveOr_
  commentId: Overload:Stringier.Category.op_ExclusiveOr
  isSpec: "True"
  fullName: Stringier.Category.ExclusiveOr
  nameWithType: Category.ExclusiveOr
- uid: Stringier.Category.op_Implicit(System.Globalization.UnicodeCategory)~Stringier.Category
  name: Implicit(UnicodeCategory to Category)
  href: api/Stringier.Category.html#Stringier_Category_op_Implicit_System_Globalization_UnicodeCategory__Stringier_Category
  commentId: M:Stringier.Category.op_Implicit(System.Globalization.UnicodeCategory)~Stringier.Category
  name.vb: Widening(UnicodeCategory to Category)
  fullName: Stringier.Category.Implicit(System.Globalization.UnicodeCategory to Stringier.Category)
  fullName.vb: Stringier.Category.Widening(System.Globalization.UnicodeCategory to Stringier.Category)
  nameWithType: Category.Implicit(UnicodeCategory to Category)
  nameWithType.vb: Category.Widening(UnicodeCategory to Category)
- uid: Stringier.Category.op_Implicit(System.Unicode.ContributoryProperties)~Stringier.Category
  name: Implicit(ContributoryProperties to Category)
  href: api/Stringier.Category.html#Stringier_Category_op_Implicit_System_Unicode_ContributoryProperties__Stringier_Category
  commentId: M:Stringier.Category.op_Implicit(System.Unicode.ContributoryProperties)~Stringier.Category
  name.vb: Widening(ContributoryProperties to Category)
  fullName: Stringier.Category.Implicit(System.Unicode.ContributoryProperties to Stringier.Category)
  fullName.vb: Stringier.Category.Widening(System.Unicode.ContributoryProperties to Stringier.Category)
  nameWithType: Category.Implicit(ContributoryProperties to Category)
  nameWithType.vb: Category.Widening(ContributoryProperties to Category)
- uid: Stringier.Category.op_Implicit*
  name: Implicit
  href: api/Stringier.Category.html#Stringier_Category_op_Implicit_
  commentId: Overload:Stringier.Category.op_Implicit
  isSpec: "True"
  name.vb: Widening
  fullName: Stringier.Category.Implicit
  fullName.vb: Stringier.Category.Widening
  nameWithType: Category.Implicit
  nameWithType.vb: Category.Widening
- uid: Stringier.Category.op_LogicalNot(Stringier.Category)
  name: LogicalNot(Category)
  href: api/Stringier.Category.html#Stringier_Category_op_LogicalNot_Stringier_Category_
  commentId: M:Stringier.Category.op_LogicalNot(Stringier.Category)
  fullName: Stringier.Category.LogicalNot(Stringier.Category)
  nameWithType: Category.LogicalNot(Category)
- uid: Stringier.Category.op_LogicalNot*
  name: LogicalNot
  href: api/Stringier.Category.html#Stringier_Category_op_LogicalNot_
  commentId: Overload:Stringier.Category.op_LogicalNot
  isSpec: "True"
  fullName: Stringier.Category.LogicalNot
  nameWithType: Category.LogicalNot
- uid: Stringier.Category.op_Subtraction(Stringier.Category,Stringier.Category)
  name: Subtraction(Category, Category)
  href: api/Stringier.Category.html#Stringier_Category_op_Subtraction_Stringier_Category_Stringier_Category_
  commentId: M:Stringier.Category.op_Subtraction(Stringier.Category,Stringier.Category)
  fullName: Stringier.Category.Subtraction(Stringier.Category, Stringier.Category)
  nameWithType: Category.Subtraction(Category, Category)
- uid: Stringier.Category.op_Subtraction*
  name: Subtraction
  href: api/Stringier.Category.html#Stringier_Category_op_Subtraction_
  commentId: Overload:Stringier.Category.op_Subtraction
  isSpec: "True"
  fullName: Stringier.Category.Subtraction
  nameWithType: Category.Subtraction
- uid: Stringier.Category.OpenPunctuation
  name: OpenPunctuation
  href: api/Stringier.Category.html#Stringier_Category_OpenPunctuation
  commentId: P:Stringier.Category.OpenPunctuation
  fullName: Stringier.Category.OpenPunctuation
  nameWithType: Category.OpenPunctuation
- uid: Stringier.Category.OpenPunctuation*
  name: OpenPunctuation
  href: api/Stringier.Category.html#Stringier_Category_OpenPunctuation_
  commentId: Overload:Stringier.Category.OpenPunctuation
  isSpec: "True"
  fullName: Stringier.Category.OpenPunctuation
  nameWithType: Category.OpenPunctuation
- uid: Stringier.Category.Other
  name: Other
  href: api/Stringier.Category.html#Stringier_Category_Other
  commentId: P:Stringier.Category.Other
  fullName: Stringier.Category.Other
  nameWithType: Category.Other
- uid: Stringier.Category.Other*
  name: Other
  href: api/Stringier.Category.html#Stringier_Category_Other_
  commentId: Overload:Stringier.Category.Other
  isSpec: "True"
  fullName: Stringier.Category.Other
  nameWithType: Category.Other
- uid: Stringier.Category.OtherLetter
  name: OtherLetter
  href: api/Stringier.Category.html#Stringier_Category_OtherLetter
  commentId: P:Stringier.Category.OtherLetter
  fullName: Stringier.Category.OtherLetter
  nameWithType: Category.OtherLetter
- uid: Stringier.Category.OtherLetter*
  name: OtherLetter
  href: api/Stringier.Category.html#Stringier_Category_OtherLetter_
  commentId: Overload:Stringier.Category.OtherLetter
  isSpec: "True"
  fullName: Stringier.Category.OtherLetter
  nameWithType: Category.OtherLetter
- uid: Stringier.Category.OtherNumber
  name: OtherNumber
  href: api/Stringier.Category.html#Stringier_Category_OtherNumber
  commentId: P:Stringier.Category.OtherNumber
  fullName: Stringier.Category.OtherNumber
  nameWithType: Category.OtherNumber
- uid: Stringier.Category.OtherNumber*
  name: OtherNumber
  href: api/Stringier.Category.html#Stringier_Category_OtherNumber_
  commentId: Overload:Stringier.Category.OtherNumber
  isSpec: "True"
  fullName: Stringier.Category.OtherNumber
  nameWithType: Category.OtherNumber
- uid: Stringier.Category.OtherPunctuation
  name: OtherPunctuation
  href: api/Stringier.Category.html#Stringier_Category_OtherPunctuation
  commentId: P:Stringier.Category.OtherPunctuation
  fullName: Stringier.Category.OtherPunctuation
  nameWithType: Category.OtherPunctuation
- uid: Stringier.Category.OtherPunctuation*
  name: OtherPunctuation
  href: api/Stringier.Category.html#Stringier_Category_OtherPunctuation_
  commentId: Overload:Stringier.Category.OtherPunctuation
  isSpec: "True"
  fullName: Stringier.Category.OtherPunctuation
  nameWithType: Category.OtherPunctuation
- uid: Stringier.Category.OtherSymbol
  name: OtherSymbol
  href: api/Stringier.Category.html#Stringier_Category_OtherSymbol
  commentId: P:Stringier.Category.OtherSymbol
  fullName: Stringier.Category.OtherSymbol
  nameWithType: Category.OtherSymbol
- uid: Stringier.Category.OtherSymbol*
  name: OtherSymbol
  href: api/Stringier.Category.html#Stringier_Category_OtherSymbol_
  commentId: Overload:Stringier.Category.OtherSymbol
  isSpec: "True"
  fullName: Stringier.Category.OtherSymbol
  nameWithType: Category.OtherSymbol
- uid: Stringier.Category.ParagraphSeparator
  name: ParagraphSeparator
  href: api/Stringier.Category.html#Stringier_Category_ParagraphSeparator
  commentId: P:Stringier.Category.ParagraphSeparator
  fullName: Stringier.Category.ParagraphSeparator
  nameWithType: Category.ParagraphSeparator
- uid: Stringier.Category.ParagraphSeparator*
  name: ParagraphSeparator
  href: api/Stringier.Category.html#Stringier_Category_ParagraphSeparator_
  commentId: Overload:Stringier.Category.ParagraphSeparator
  isSpec: "True"
  fullName: Stringier.Category.ParagraphSeparator
  nameWithType: Category.ParagraphSeparator
- uid: Stringier.Category.PrivateUse
  name: PrivateUse
  href: api/Stringier.Category.html#Stringier_Category_PrivateUse
  commentId: P:Stringier.Category.PrivateUse
  fullName: Stringier.Category.PrivateUse
  nameWithType: Category.PrivateUse
- uid: Stringier.Category.PrivateUse*
  name: PrivateUse
  href: api/Stringier.Category.html#Stringier_Category_PrivateUse_
  commentId: Overload:Stringier.Category.PrivateUse
  isSpec: "True"
  fullName: Stringier.Category.PrivateUse
  nameWithType: Category.PrivateUse
- uid: Stringier.Category.Punctuation
  name: Punctuation
  href: api/Stringier.Category.html#Stringier_Category_Punctuation
  commentId: P:Stringier.Category.Punctuation
  fullName: Stringier.Category.Punctuation
  nameWithType: Category.Punctuation
- uid: Stringier.Category.Punctuation*
  name: Punctuation
  href: api/Stringier.Category.html#Stringier_Category_Punctuation_
  commentId: Overload:Stringier.Category.Punctuation
  isSpec: "True"
  fullName: Stringier.Category.Punctuation
  nameWithType: Category.Punctuation
- uid: Stringier.Category.Range(System.Char,System.Char)
  name: Range(Char, Char)
  href: api/Stringier.Category.html#Stringier_Category_Range_System_Char_System_Char_
  commentId: M:Stringier.Category.Range(System.Char,System.Char)
  fullName: Stringier.Category.Range(System.Char, System.Char)
  nameWithType: Category.Range(Char, Char)
- uid: Stringier.Category.Range(System.Text.Rune,System.Text.Rune)
  name: Range(Rune, Rune)
  href: api/Stringier.Category.html#Stringier_Category_Range_System_Text_Rune_System_Text_Rune_
  commentId: M:Stringier.Category.Range(System.Text.Rune,System.Text.Rune)
  fullName: Stringier.Category.Range(System.Text.Rune, System.Text.Rune)
  nameWithType: Category.Range(Rune, Rune)
- uid: Stringier.Category.Range*
  name: Range
  href: api/Stringier.Category.html#Stringier_Category_Range_
  commentId: Overload:Stringier.Category.Range
  isSpec: "True"
  fullName: Stringier.Category.Range
  nameWithType: Category.Range
- uid: Stringier.Category.Separator
  name: Separator
  href: api/Stringier.Category.html#Stringier_Category_Separator
  commentId: P:Stringier.Category.Separator
  fullName: Stringier.Category.Separator
  nameWithType: Category.Separator
- uid: Stringier.Category.Separator*
  name: Separator
  href: api/Stringier.Category.html#Stringier_Category_Separator_
  commentId: Overload:Stringier.Category.Separator
  isSpec: "True"
  fullName: Stringier.Category.Separator
  nameWithType: Category.Separator
- uid: Stringier.Category.SpaceSeparator
  name: SpaceSeparator
  href: api/Stringier.Category.html#Stringier_Category_SpaceSeparator
  commentId: P:Stringier.Category.SpaceSeparator
  fullName: Stringier.Category.SpaceSeparator
  nameWithType: Category.SpaceSeparator
- uid: Stringier.Category.SpaceSeparator*
  name: SpaceSeparator
  href: api/Stringier.Category.html#Stringier_Category_SpaceSeparator_
  commentId: Overload:Stringier.Category.SpaceSeparator
  isSpec: "True"
  fullName: Stringier.Category.SpaceSeparator
  nameWithType: Category.SpaceSeparator
- uid: Stringier.Category.SpacingMark
  name: SpacingMark
  href: api/Stringier.Category.html#Stringier_Category_SpacingMark
  commentId: P:Stringier.Category.SpacingMark
  fullName: Stringier.Category.SpacingMark
  nameWithType: Category.SpacingMark
- uid: Stringier.Category.SpacingMark*
  name: SpacingMark
  href: api/Stringier.Category.html#Stringier_Category_SpacingMark_
  commentId: Overload:Stringier.Category.SpacingMark
  isSpec: "True"
  fullName: Stringier.Category.SpacingMark
  nameWithType: Category.SpacingMark
- uid: Stringier.Category.Subscript
  name: Subscript
  href: api/Stringier.Category.html#Stringier_Category_Subscript
  commentId: P:Stringier.Category.Subscript
  fullName: Stringier.Category.Subscript
  nameWithType: Category.Subscript
- uid: Stringier.Category.Subscript*
  name: Subscript
  href: api/Stringier.Category.html#Stringier_Category_Subscript_
  commentId: Overload:Stringier.Category.Subscript
  isSpec: "True"
  fullName: Stringier.Category.Subscript
  nameWithType: Category.Subscript
- uid: Stringier.Category.Superscript
  name: Superscript
  href: api/Stringier.Category.html#Stringier_Category_Superscript
  commentId: P:Stringier.Category.Superscript
  fullName: Stringier.Category.Superscript
  nameWithType: Category.Superscript
- uid: Stringier.Category.Superscript*
  name: Superscript
  href: api/Stringier.Category.html#Stringier_Category_Superscript_
  commentId: Overload:Stringier.Category.Superscript
  isSpec: "True"
  fullName: Stringier.Category.Superscript
  nameWithType: Category.Superscript
- uid: Stringier.Category.Surrogate
  name: Surrogate
  href: api/Stringier.Category.html#Stringier_Category_Surrogate
  commentId: P:Stringier.Category.Surrogate
  fullName: Stringier.Category.Surrogate
  nameWithType: Category.Surrogate
- uid: Stringier.Category.Surrogate*
  name: Surrogate
  href: api/Stringier.Category.html#Stringier_Category_Surrogate_
  commentId: Overload:Stringier.Category.Surrogate
  isSpec: "True"
  fullName: Stringier.Category.Surrogate
  nameWithType: Category.Surrogate
- uid: Stringier.Category.Symbol
  name: Symbol
  href: api/Stringier.Category.html#Stringier_Category_Symbol
  commentId: P:Stringier.Category.Symbol
  fullName: Stringier.Category.Symbol
  nameWithType: Category.Symbol
- uid: Stringier.Category.Symbol*
  name: Symbol
  href: api/Stringier.Category.html#Stringier_Category_Symbol_
  commentId: Overload:Stringier.Category.Symbol
  isSpec: "True"
  fullName: Stringier.Category.Symbol
  nameWithType: Category.Symbol
- uid: Stringier.Category.TitlecaseLetter
  name: TitlecaseLetter
  href: api/Stringier.Category.html#Stringier_Category_TitlecaseLetter
  commentId: P:Stringier.Category.TitlecaseLetter
  fullName: Stringier.Category.TitlecaseLetter
  nameWithType: Category.TitlecaseLetter
- uid: Stringier.Category.TitlecaseLetter*
  name: TitlecaseLetter
  href: api/Stringier.Category.html#Stringier_Category_TitlecaseLetter_
  commentId: Overload:Stringier.Category.TitlecaseLetter
  isSpec: "True"
  fullName: Stringier.Category.TitlecaseLetter
  nameWithType: Category.TitlecaseLetter
- uid: Stringier.Category.Unassigned
  name: Unassigned
  href: api/Stringier.Category.html#Stringier_Category_Unassigned
  commentId: P:Stringier.Category.Unassigned
  fullName: Stringier.Category.Unassigned
  nameWithType: Category.Unassigned
- uid: Stringier.Category.Unassigned*
  name: Unassigned
  href: api/Stringier.Category.html#Stringier_Category_Unassigned_
  commentId: Overload:Stringier.Category.Unassigned
  isSpec: "True"
  fullName: Stringier.Category.Unassigned
  nameWithType: Category.Unassigned
- uid: Stringier.Category.Universe
  name: Universe
  href: api/Stringier.Category.html#Stringier_Category_Universe
  commentId: P:Stringier.Category.Universe
  fullName: Stringier.Category.Universe
  nameWithType: Category.Universe
- uid: Stringier.Category.Universe*
  name: Universe
  href: api/Stringier.Category.html#Stringier_Category_Universe_
  commentId: Overload:Stringier.Category.Universe
  isSpec: "True"
  fullName: Stringier.Category.Universe
  nameWithType: Category.Universe
- uid: Stringier.Category.UppercaseLetter
  name: UppercaseLetter
  href: api/Stringier.Category.html#Stringier_Category_UppercaseLetter
  commentId: P:Stringier.Category.UppercaseLetter
  fullName: Stringier.Category.UppercaseLetter
  nameWithType: Category.UppercaseLetter
- uid: Stringier.Category.UppercaseLetter*
  name: UppercaseLetter
  href: api/Stringier.Category.html#Stringier_Category_UppercaseLetter_
  commentId: Overload:Stringier.Category.UppercaseLetter
  isSpec: "True"
  fullName: Stringier.Category.UppercaseLetter
  nameWithType: Category.UppercaseLetter
- uid: Stringier.Category.WhiteSpace
  name: WhiteSpace
  href: api/Stringier.Category.html#Stringier_Category_WhiteSpace
  commentId: P:Stringier.Category.WhiteSpace
  fullName: Stringier.Category.WhiteSpace
  nameWithType: Category.WhiteSpace
- uid: Stringier.Category.WhiteSpace*
  name: WhiteSpace
  href: api/Stringier.Category.html#Stringier_Category_WhiteSpace_
  commentId: Overload:Stringier.Category.WhiteSpace
  isSpec: "True"
  fullName: Stringier.Category.WhiteSpace
  nameWithType: Category.WhiteSpace
- uid: Stringier.EditDistance
  name: EditDistance
  href: api/Stringier.EditDistance.html
  commentId: T:Stringier.EditDistance
  fullName: Stringier.EditDistance
  nameWithType: EditDistance
- uid: Stringier.EditDistance.Hamming(System.Char*,System.Int32,System.Char*,System.Int32)
  name: Hamming(Char*, Int32, Char*, Int32)
  href: api/Stringier.EditDistance.html#Stringier_EditDistance_Hamming_System_Char__System_Int32_System_Char__System_Int32_
  commentId: M:Stringier.EditDistance.Hamming(System.Char*,System.Int32,System.Char*,System.Int32)
  fullName: Stringier.EditDistance.Hamming(System.Char*, System.Int32, System.Char*, System.Int32)
  nameWithType: EditDistance.Hamming(Char*, Int32, Char*, Int32)
- uid: Stringier.EditDistance.Hamming(System.Char*,System.Int32,System.Char*,System.Int32,Stringier.Case)
  name: Hamming(Char*, Int32, Char*, Int32, Case)
  href: api/Stringier.EditDistance.html#Stringier_EditDistance_Hamming_System_Char__System_Int32_System_Char__System_Int32_Stringier_Case_
  commentId: M:Stringier.EditDistance.Hamming(System.Char*,System.Int32,System.Char*,System.Int32,Stringier.Case)
  fullName: Stringier.EditDistance.Hamming(System.Char*, System.Int32, System.Char*, System.Int32, Stringier.Case)
  nameWithType: EditDistance.Hamming(Char*, Int32, Char*, Int32, Case)
- uid: Stringier.EditDistance.Hamming(System.Char*,System.Int32,System.Char[])
  name: Hamming(Char*, Int32, Char[])
  href: api/Stringier.EditDistance.html#Stringier_EditDistance_Hamming_System_Char__System_Int32_System_Char___
  commentId: M:Stringier.EditDistance.Hamming(System.Char*,System.Int32,System.Char[])
  name.vb: Hamming(Char*, Int32, Char())
  fullName: Stringier.EditDistance.Hamming(System.Char*, System.Int32, System.Char[])
  fullName.vb: Stringier.EditDistance.Hamming(System.Char*, System.Int32, System.Char())
  nameWithType: EditDistance.Hamming(Char*, Int32, Char[])
  nameWithType.vb: EditDistance.Hamming(Char*, Int32, Char())
- uid: Stringier.EditDistance.Hamming(System.Char*,System.Int32,System.Char[],Stringier.Case)
  name: Hamming(Char*, Int32, Char[], Case)
  href: api/Stringier.EditDistance.html#Stringier_EditDistance_Hamming_System_Char__System_Int32_System_Char___Stringier_Case_
  commentId: M:Stringier.EditDistance.Hamming(System.Char*,System.Int32,System.Char[],Stringier.Case)
  name.vb: Hamming(Char*, Int32, Char(), Case)
  fullName: Stringier.EditDistance.Hamming(System.Char*, System.Int32, System.Char[], Stringier.Case)
  fullName.vb: Stringier.EditDistance.Hamming(System.Char*, System.Int32, System.Char(), Stringier.Case)
  nameWithType: EditDistance.Hamming(Char*, Int32, Char[], Case)
  nameWithType.vb: EditDistance.Hamming(Char*, Int32, Char(), Case)
- uid: Stringier.EditDistance.Hamming(System.Char*,System.Int32,System.Memory{System.Char})
  name: Hamming(Char*, Int32, Memory<Char>)
  href: api/Stringier.EditDistance.html#Stringier_EditDistance_Hamming_System_Char__System_Int32_System_Memory_System_Char__
  commentId: M:Stringier.EditDistance.Hamming(System.Char*,System.Int32,System.Memory{System.Char})
  name.vb: Hamming(Char*, Int32, Memory(Of Char))
  fullName: Stringier.EditDistance.Hamming(System.Char*, System.Int32, System.Memory<System.Char>)
  fullName.vb: Stringier.EditDistance.Hamming(System.Char*, System.Int32, System.Memory(Of System.Char))
  nameWithType: EditDistance.Hamming(Char*, Int32, Memory<Char>)
  nameWithType.vb: EditDistance.Hamming(Char*, Int32, Memory(Of Char))
- uid: Stringier.EditDistance.Hamming(System.Char*,System.Int32,System.Memory{System.Char},Stringier.Case)
  name: Hamming(Char*, Int32, Memory<Char>, Case)
  href: api/Stringier.EditDistance.html#Stringier_EditDistance_Hamming_System_Char__System_Int32_System_Memory_System_Char__Stringier_Case_
  commentId: M:Stringier.EditDistance.Hamming(System.Char*,System.Int32,System.Memory{System.Char},Stringier.Case)
  name.vb: Hamming(Char*, Int32, Memory(Of Char), Case)
  fullName: Stringier.EditDistance.Hamming(System.Char*, System.Int32, System.Memory<System.Char>, Stringier.Case)
  fullName.vb: Stringier.EditDistance.Hamming(System.Char*, System.Int32, System.Memory(Of System.Char), Stringier.Case)
  nameWithType: EditDistance.Hamming(Char*, Int32, Memory<Char>, Case)
  nameWithType.vb: EditDistance.Hamming(Char*, Int32, Memory(Of Char), Case)
- uid: Stringier.EditDistance.Hamming(System.Char*,System.Int32,System.ReadOnlyMemory{System.Char})
  name: Hamming(Char*, Int32, ReadOnlyMemory<Char>)
  href: api/Stringier.EditDistance.html#Stringier_EditDistance_Hamming_System_Char__System_Int32_System_ReadOnlyMemory_System_Char__
  commentId: M:Stringier.EditDistance.Hamming(System.Char*,System.Int32,System.ReadOnlyMemory{System.Char})
  name.vb: Hamming(Char*, Int32, ReadOnlyMemory(Of Char))
  fullName: Stringier.EditDistance.Hamming(System.Char*, System.Int32, System.ReadOnlyMemory<System.Char>)
  fullName.vb: Stringier.EditDistance.Hamming(System.Char*, System.Int32, System.ReadOnlyMemory(Of System.Char))
  nameWithType: EditDistance.Hamming(Char*, Int32, ReadOnlyMemory<Char>)
  nameWithType.vb: EditDistance.Hamming(Char*, Int32, ReadOnlyMemory(Of Char))
- uid: Stringier.EditDistance.Hamming(System.Char*,System.Int32,System.ReadOnlyMemory{System.Char},Stringier.Case)
  name: Hamming(Char*, Int32, ReadOnlyMemory<Char>, Case)
  href: api/Stringier.EditDistance.html#Stringier_EditDistance_Hamming_System_Char__System_Int32_System_ReadOnlyMemory_System_Char__Stringier_Case_
  commentId: M:Stringier.EditDistance.Hamming(System.Char*,System.Int32,System.ReadOnlyMemory{System.Char},Stringier.Case)
  name.vb: Hamming(Char*, Int32, ReadOnlyMemory(Of Char), Case)
  fullName: Stringier.EditDistance.Hamming(System.Char*, System.Int32, System.ReadOnlyMemory<System.Char>, Stringier.Case)
  fullName.vb: Stringier.EditDistance.Hamming(System.Char*, System.Int32, System.ReadOnlyMemory(Of System.Char), Stringier.Case)
  nameWithType: EditDistance.Hamming(Char*, Int32, ReadOnlyMemory<Char>, Case)
  nameWithType.vb: EditDistance.Hamming(Char*, Int32, ReadOnlyMemory(Of Char), Case)
- uid: Stringier.EditDistance.Hamming(System.Char*,System.Int32,System.ReadOnlySpan{System.Char})
  name: Hamming(Char*, Int32, ReadOnlySpan<Char>)
  href: api/Stringier.EditDistance.html#Stringier_EditDistance_Hamming_System_Char__System_Int32_System_ReadOnlySpan_System_Char__
  commentId: M:Stringier.EditDistance.Hamming(System.Char*,System.Int32,System.ReadOnlySpan{System.Char})
  name.vb: Hamming(Char*, Int32, ReadOnlySpan(Of Char))
  fullName: Stringier.EditDistance.Hamming(System.Char*, System.Int32, System.ReadOnlySpan<System.Char>)
  fullName.vb: Stringier.EditDistance.Hamming(System.Char*, System.Int32, System.ReadOnlySpan(Of System.Char))
  nameWithType: EditDistance.Hamming(Char*, Int32, ReadOnlySpan<Char>)
  nameWithType.vb: EditDistance.Hamming(Char*, Int32, ReadOnlySpan(Of Char))
- uid: Stringier.EditDistance.Hamming(System.Char*,System.Int32,System.ReadOnlySpan{System.Char},Stringier.Case)
  name: Hamming(Char*, Int32, ReadOnlySpan<Char>, Case)
  href: api/Stringier.EditDistance.html#Stringier_EditDistance_Hamming_System_Char__System_Int32_System_ReadOnlySpan_System_Char__Stringier_Case_
  commentId: M:Stringier.EditDistance.Hamming(System.Char*,System.Int32,System.ReadOnlySpan{System.Char},Stringier.Case)
  name.vb: Hamming(Char*, Int32, ReadOnlySpan(Of Char), Case)
  fullName: Stringier.EditDistance.Hamming(System.Char*, System.Int32, System.ReadOnlySpan<System.Char>, Stringier.Case)
  fullName.vb: Stringier.EditDistance.Hamming(System.Char*, System.Int32, System.ReadOnlySpan(Of System.Char), Stringier.Case)
  nameWithType: EditDistance.Hamming(Char*, Int32, ReadOnlySpan<Char>, Case)
  nameWithType.vb: EditDistance.Hamming(Char*, Int32, ReadOnlySpan(Of Char), Case)
- uid: Stringier.EditDistance.Hamming(System.Char*,System.Int32,System.Span{System.Char})
  name: Hamming(Char*, Int32, Span<Char>)
  href: api/Stringier.EditDistance.html#Stringier_EditDistance_Hamming_System_Char__System_Int32_System_Span_System_Char__
  commentId: M:Stringier.EditDistance.Hamming(System.Char*,System.Int32,System.Span{System.Char})
  name.vb: Hamming(Char*, Int32, Span(Of Char))
  fullName: Stringier.EditDistance.Hamming(System.Char*, System.Int32, System.Span<System.Char>)
  fullName.vb: Stringier.EditDistance.Hamming(System.Char*, System.Int32, System.Span(Of System.Char))
  nameWithType: EditDistance.Hamming(Char*, Int32, Span<Char>)
  nameWithType.vb: EditDistance.Hamming(Char*, Int32, Span(Of Char))
- uid: Stringier.EditDistance.Hamming(System.Char*,System.Int32,System.Span{System.Char},Stringier.Case)
  name: Hamming(Char*, Int32, Span<Char>, Case)
  href: api/Stringier.EditDistance.html#Stringier_EditDistance_Hamming_System_Char__System_Int32_System_Span_System_Char__Stringier_Case_
  commentId: M:Stringier.EditDistance.Hamming(System.Char*,System.Int32,System.Span{System.Char},Stringier.Case)
  name.vb: Hamming(Char*, Int32, Span(Of Char), Case)
  fullName: Stringier.EditDistance.Hamming(System.Char*, System.Int32, System.Span<System.Char>, Stringier.Case)
  fullName.vb: Stringier.EditDistance.Hamming(System.Char*, System.Int32, System.Span(Of System.Char), Stringier.Case)
  nameWithType: EditDistance.Hamming(Char*, Int32, Span<Char>, Case)
  nameWithType.vb: EditDistance.Hamming(Char*, Int32, Span(Of Char), Case)
- uid: Stringier.EditDistance.Hamming(System.Char*,System.Int32,System.String)
  name: Hamming(Char*, Int32, String)
  href: api/Stringier.EditDistance.html#Stringier_EditDistance_Hamming_System_Char__System_Int32_System_String_
  commentId: M:Stringier.EditDistance.Hamming(System.Char*,System.Int32,System.String)
  fullName: Stringier.EditDistance.Hamming(System.Char*, System.Int32, System.String)
  nameWithType: EditDistance.Hamming(Char*, Int32, String)
- uid: Stringier.EditDistance.Hamming(System.Char*,System.Int32,System.String,Stringier.Case)
  name: Hamming(Char*, Int32, String, Case)
  href: api/Stringier.EditDistance.html#Stringier_EditDistance_Hamming_System_Char__System_Int32_System_String_Stringier_Case_
  commentId: M:Stringier.EditDistance.Hamming(System.Char*,System.Int32,System.String,Stringier.Case)
  fullName: Stringier.EditDistance.Hamming(System.Char*, System.Int32, System.String, Stringier.Case)
  nameWithType: EditDistance.Hamming(Char*, Int32, String, Case)
- uid: Stringier.EditDistance.Hamming(System.Char[],System.Char*,System.Int32)
  name: Hamming(Char[], Char*, Int32)
  href: api/Stringier.EditDistance.html#Stringier_EditDistance_Hamming_System_Char___System_Char__System_Int32_
  commentId: M:Stringier.EditDistance.Hamming(System.Char[],System.Char*,System.Int32)
  name.vb: Hamming(Char(), Char*, Int32)
  fullName: Stringier.EditDistance.Hamming(System.Char[], System.Char*, System.Int32)
  fullName.vb: Stringier.EditDistance.Hamming(System.Char(), System.Char*, System.Int32)
  nameWithType: EditDistance.Hamming(Char[], Char*, Int32)
  nameWithType.vb: EditDistance.Hamming(Char(), Char*, Int32)
- uid: Stringier.EditDistance.Hamming(System.Char[],System.Char*,System.Int32,Stringier.Case)
  name: Hamming(Char[], Char*, Int32, Case)
  href: api/Stringier.EditDistance.html#Stringier_EditDistance_Hamming_System_Char___System_Char__System_Int32_Stringier_Case_
  commentId: M:Stringier.EditDistance.Hamming(System.Char[],System.Char*,System.Int32,Stringier.Case)
  name.vb: Hamming(Char(), Char*, Int32, Case)
  fullName: Stringier.EditDistance.Hamming(System.Char[], System.Char*, System.Int32, Stringier.Case)
  fullName.vb: Stringier.EditDistance.Hamming(System.Char(), System.Char*, System.Int32, Stringier.Case)
  nameWithType: EditDistance.Hamming(Char[], Char*, Int32, Case)
  nameWithType.vb: EditDistance.Hamming(Char(), Char*, Int32, Case)
- uid: Stringier.EditDistance.Hamming(System.Char[],System.Char[])
  name: Hamming(Char[], Char[])
  href: api/Stringier.EditDistance.html#Stringier_EditDistance_Hamming_System_Char___System_Char___
  commentId: M:Stringier.EditDistance.Hamming(System.Char[],System.Char[])
  name.vb: Hamming(Char(), Char())
  fullName: Stringier.EditDistance.Hamming(System.Char[], System.Char[])
  fullName.vb: Stringier.EditDistance.Hamming(System.Char(), System.Char())
  nameWithType: EditDistance.Hamming(Char[], Char[])
  nameWithType.vb: EditDistance.Hamming(Char(), Char())
- uid: Stringier.EditDistance.Hamming(System.Char[],System.Char[],Stringier.Case)
  name: Hamming(Char[], Char[], Case)
  href: api/Stringier.EditDistance.html#Stringier_EditDistance_Hamming_System_Char___System_Char___Stringier_Case_
  commentId: M:Stringier.EditDistance.Hamming(System.Char[],System.Char[],Stringier.Case)
  name.vb: Hamming(Char(), Char(), Case)
  fullName: Stringier.EditDistance.Hamming(System.Char[], System.Char[], Stringier.Case)
  fullName.vb: Stringier.EditDistance.Hamming(System.Char(), System.Char(), Stringier.Case)
  nameWithType: EditDistance.Hamming(Char[], Char[], Case)
  nameWithType.vb: EditDistance.Hamming(Char(), Char(), Case)
- uid: Stringier.EditDistance.Hamming(System.Char[],System.Memory{System.Char})
  name: Hamming(Char[], Memory<Char>)
  href: api/Stringier.EditDistance.html#Stringier_EditDistance_Hamming_System_Char___System_Memory_System_Char__
  commentId: M:Stringier.EditDistance.Hamming(System.Char[],System.Memory{System.Char})
  name.vb: Hamming(Char(), Memory(Of Char))
  fullName: Stringier.EditDistance.Hamming(System.Char[], System.Memory<System.Char>)
  fullName.vb: Stringier.EditDistance.Hamming(System.Char(), System.Memory(Of System.Char))
  nameWithType: EditDistance.Hamming(Char[], Memory<Char>)
  nameWithType.vb: EditDistance.Hamming(Char(), Memory(Of Char))
- uid: Stringier.EditDistance.Hamming(System.Char[],System.Memory{System.Char},Stringier.Case)
  name: Hamming(Char[], Memory<Char>, Case)
  href: api/Stringier.EditDistance.html#Stringier_EditDistance_Hamming_System_Char___System_Memory_System_Char__Stringier_Case_
  commentId: M:Stringier.EditDistance.Hamming(System.Char[],System.Memory{System.Char},Stringier.Case)
  name.vb: Hamming(Char(), Memory(Of Char), Case)
  fullName: Stringier.EditDistance.Hamming(System.Char[], System.Memory<System.Char>, Stringier.Case)
  fullName.vb: Stringier.EditDistance.Hamming(System.Char(), System.Memory(Of System.Char), Stringier.Case)
  nameWithType: EditDistance.Hamming(Char[], Memory<Char>, Case)
  nameWithType.vb: EditDistance.Hamming(Char(), Memory(Of Char), Case)
- uid: Stringier.EditDistance.Hamming(System.Char[],System.ReadOnlyMemory{System.Char})
  name: Hamming(Char[], ReadOnlyMemory<Char>)
  href: api/Stringier.EditDistance.html#Stringier_EditDistance_Hamming_System_Char___System_ReadOnlyMemory_System_Char__
  commentId: M:Stringier.EditDistance.Hamming(System.Char[],System.ReadOnlyMemory{System.Char})
  name.vb: Hamming(Char(), ReadOnlyMemory(Of Char))
  fullName: Stringier.EditDistance.Hamming(System.Char[], System.ReadOnlyMemory<System.Char>)
  fullName.vb: Stringier.EditDistance.Hamming(System.Char(), System.ReadOnlyMemory(Of System.Char))
  nameWithType: EditDistance.Hamming(Char[], ReadOnlyMemory<Char>)
  nameWithType.vb: EditDistance.Hamming(Char(), ReadOnlyMemory(Of Char))
- uid: Stringier.EditDistance.Hamming(System.Char[],System.ReadOnlyMemory{System.Char},Stringier.Case)
  name: Hamming(Char[], ReadOnlyMemory<Char>, Case)
  href: api/Stringier.EditDistance.html#Stringier_EditDistance_Hamming_System_Char___System_ReadOnlyMemory_System_Char__Stringier_Case_
  commentId: M:Stringier.EditDistance.Hamming(System.Char[],System.ReadOnlyMemory{System.Char},Stringier.Case)
  name.vb: Hamming(Char(), ReadOnlyMemory(Of Char), Case)
  fullName: Stringier.EditDistance.Hamming(System.Char[], System.ReadOnlyMemory<System.Char>, Stringier.Case)
  fullName.vb: Stringier.EditDistance.Hamming(System.Char(), System.ReadOnlyMemory(Of System.Char), Stringier.Case)
  nameWithType: EditDistance.Hamming(Char[], ReadOnlyMemory<Char>, Case)
  nameWithType.vb: EditDistance.Hamming(Char(), ReadOnlyMemory(Of Char), Case)
- uid: Stringier.EditDistance.Hamming(System.Char[],System.ReadOnlySpan{System.Char})
  name: Hamming(Char[], ReadOnlySpan<Char>)
  href: api/Stringier.EditDistance.html#Stringier_EditDistance_Hamming_System_Char___System_ReadOnlySpan_System_Char__
  commentId: M:Stringier.EditDistance.Hamming(System.Char[],System.ReadOnlySpan{System.Char})
  name.vb: Hamming(Char(), ReadOnlySpan(Of Char))
  fullName: Stringier.EditDistance.Hamming(System.Char[], System.ReadOnlySpan<System.Char>)
  fullName.vb: Stringier.EditDistance.Hamming(System.Char(), System.ReadOnlySpan(Of System.Char))
  nameWithType: EditDistance.Hamming(Char[], ReadOnlySpan<Char>)
  nameWithType.vb: EditDistance.Hamming(Char(), ReadOnlySpan(Of Char))
- uid: Stringier.EditDistance.Hamming(System.Char[],System.ReadOnlySpan{System.Char},Stringier.Case)
  name: Hamming(Char[], ReadOnlySpan<Char>, Case)
  href: api/Stringier.EditDistance.html#Stringier_EditDistance_Hamming_System_Char___System_ReadOnlySpan_System_Char__Stringier_Case_
  commentId: M:Stringier.EditDistance.Hamming(System.Char[],System.ReadOnlySpan{System.Char},Stringier.Case)
  name.vb: Hamming(Char(), ReadOnlySpan(Of Char), Case)
  fullName: Stringier.EditDistance.Hamming(System.Char[], System.ReadOnlySpan<System.Char>, Stringier.Case)
  fullName.vb: Stringier.EditDistance.Hamming(System.Char(), System.ReadOnlySpan(Of System.Char), Stringier.Case)
  nameWithType: EditDistance.Hamming(Char[], ReadOnlySpan<Char>, Case)
  nameWithType.vb: EditDistance.Hamming(Char(), ReadOnlySpan(Of Char), Case)
- uid: Stringier.EditDistance.Hamming(System.Char[],System.Span{System.Char})
  name: Hamming(Char[], Span<Char>)
  href: api/Stringier.EditDistance.html#Stringier_EditDistance_Hamming_System_Char___System_Span_System_Char__
  commentId: M:Stringier.EditDistance.Hamming(System.Char[],System.Span{System.Char})
  name.vb: Hamming(Char(), Span(Of Char))
  fullName: Stringier.EditDistance.Hamming(System.Char[], System.Span<System.Char>)
  fullName.vb: Stringier.EditDistance.Hamming(System.Char(), System.Span(Of System.Char))
  nameWithType: EditDistance.Hamming(Char[], Span<Char>)
  nameWithType.vb: EditDistance.Hamming(Char(), Span(Of Char))
- uid: Stringier.EditDistance.Hamming(System.Char[],System.Span{System.Char},Stringier.Case)
  name: Hamming(Char[], Span<Char>, Case)
  href: api/Stringier.EditDistance.html#Stringier_EditDistance_Hamming_System_Char___System_Span_System_Char__Stringier_Case_
  commentId: M:Stringier.EditDistance.Hamming(System.Char[],System.Span{System.Char},Stringier.Case)
  name.vb: Hamming(Char(), Span(Of Char), Case)
  fullName: Stringier.EditDistance.Hamming(System.Char[], System.Span<System.Char>, Stringier.Case)
  fullName.vb: Stringier.EditDistance.Hamming(System.Char(), System.Span(Of System.Char), Stringier.Case)
  nameWithType: EditDistance.Hamming(Char[], Span<Char>, Case)
  nameWithType.vb: EditDistance.Hamming(Char(), Span(Of Char), Case)
- uid: Stringier.EditDistance.Hamming(System.Char[],System.String)
  name: Hamming(Char[], String)
  href: api/Stringier.EditDistance.html#Stringier_EditDistance_Hamming_System_Char___System_String_
  commentId: M:Stringier.EditDistance.Hamming(System.Char[],System.String)
  name.vb: Hamming(Char(), String)
  fullName: Stringier.EditDistance.Hamming(System.Char[], System.String)
  fullName.vb: Stringier.EditDistance.Hamming(System.Char(), System.String)
  nameWithType: EditDistance.Hamming(Char[], String)
  nameWithType.vb: EditDistance.Hamming(Char(), String)
- uid: Stringier.EditDistance.Hamming(System.Char[],System.String,Stringier.Case)
  name: Hamming(Char[], String, Case)
  href: api/Stringier.EditDistance.html#Stringier_EditDistance_Hamming_System_Char___System_String_Stringier_Case_
  commentId: M:Stringier.EditDistance.Hamming(System.Char[],System.String,Stringier.Case)
  name.vb: Hamming(Char(), String, Case)
  fullName: Stringier.EditDistance.Hamming(System.Char[], System.String, Stringier.Case)
  fullName.vb: Stringier.EditDistance.Hamming(System.Char(), System.String, Stringier.Case)
  nameWithType: EditDistance.Hamming(Char[], String, Case)
  nameWithType.vb: EditDistance.Hamming(Char(), String, Case)
- uid: Stringier.EditDistance.Hamming(System.Memory{System.Char},System.Char*,System.Int32)
  name: Hamming(Memory<Char>, Char*, Int32)
  href: api/Stringier.EditDistance.html#Stringier_EditDistance_Hamming_System_Memory_System_Char__System_Char__System_Int32_
  commentId: M:Stringier.EditDistance.Hamming(System.Memory{System.Char},System.Char*,System.Int32)
  name.vb: Hamming(Memory(Of Char), Char*, Int32)
  fullName: Stringier.EditDistance.Hamming(System.Memory<System.Char>, System.Char*, System.Int32)
  fullName.vb: Stringier.EditDistance.Hamming(System.Memory(Of System.Char), System.Char*, System.Int32)
  nameWithType: EditDistance.Hamming(Memory<Char>, Char*, Int32)
  nameWithType.vb: EditDistance.Hamming(Memory(Of Char), Char*, Int32)
- uid: Stringier.EditDistance.Hamming(System.Memory{System.Char},System.Char*,System.Int32,Stringier.Case)
  name: Hamming(Memory<Char>, Char*, Int32, Case)
  href: api/Stringier.EditDistance.html#Stringier_EditDistance_Hamming_System_Memory_System_Char__System_Char__System_Int32_Stringier_Case_
  commentId: M:Stringier.EditDistance.Hamming(System.Memory{System.Char},System.Char*,System.Int32,Stringier.Case)
  name.vb: Hamming(Memory(Of Char), Char*, Int32, Case)
  fullName: Stringier.EditDistance.Hamming(System.Memory<System.Char>, System.Char*, System.Int32, Stringier.Case)
  fullName.vb: Stringier.EditDistance.Hamming(System.Memory(Of System.Char), System.Char*, System.Int32, Stringier.Case)
  nameWithType: EditDistance.Hamming(Memory<Char>, Char*, Int32, Case)
  nameWithType.vb: EditDistance.Hamming(Memory(Of Char), Char*, Int32, Case)
- uid: Stringier.EditDistance.Hamming(System.Memory{System.Char},System.Char[])
  name: Hamming(Memory<Char>, Char[])
  href: api/Stringier.EditDistance.html#Stringier_EditDistance_Hamming_System_Memory_System_Char__System_Char___
  commentId: M:Stringier.EditDistance.Hamming(System.Memory{System.Char},System.Char[])
  name.vb: Hamming(Memory(Of Char), Char())
  fullName: Stringier.EditDistance.Hamming(System.Memory<System.Char>, System.Char[])
  fullName.vb: Stringier.EditDistance.Hamming(System.Memory(Of System.Char), System.Char())
  nameWithType: EditDistance.Hamming(Memory<Char>, Char[])
  nameWithType.vb: EditDistance.Hamming(Memory(Of Char), Char())
- uid: Stringier.EditDistance.Hamming(System.Memory{System.Char},System.Char[],Stringier.Case)
  name: Hamming(Memory<Char>, Char[], Case)
  href: api/Stringier.EditDistance.html#Stringier_EditDistance_Hamming_System_Memory_System_Char__System_Char___Stringier_Case_
  commentId: M:Stringier.EditDistance.Hamming(System.Memory{System.Char},System.Char[],Stringier.Case)
  name.vb: Hamming(Memory(Of Char), Char(), Case)
  fullName: Stringier.EditDistance.Hamming(System.Memory<System.Char>, System.Char[], Stringier.Case)
  fullName.vb: Stringier.EditDistance.Hamming(System.Memory(Of System.Char), System.Char(), Stringier.Case)
  nameWithType: EditDistance.Hamming(Memory<Char>, Char[], Case)
  nameWithType.vb: EditDistance.Hamming(Memory(Of Char), Char(), Case)
- uid: Stringier.EditDistance.Hamming(System.Memory{System.Char},System.Memory{System.Char})
  name: Hamming(Memory<Char>, Memory<Char>)
  href: api/Stringier.EditDistance.html#Stringier_EditDistance_Hamming_System_Memory_System_Char__System_Memory_System_Char__
  commentId: M:Stringier.EditDistance.Hamming(System.Memory{System.Char},System.Memory{System.Char})
  name.vb: Hamming(Memory(Of Char), Memory(Of Char))
  fullName: Stringier.EditDistance.Hamming(System.Memory<System.Char>, System.Memory<System.Char>)
  fullName.vb: Stringier.EditDistance.Hamming(System.Memory(Of System.Char), System.Memory(Of System.Char))
  nameWithType: EditDistance.Hamming(Memory<Char>, Memory<Char>)
  nameWithType.vb: EditDistance.Hamming(Memory(Of Char), Memory(Of Char))
- uid: Stringier.EditDistance.Hamming(System.Memory{System.Char},System.Memory{System.Char},Stringier.Case)
  name: Hamming(Memory<Char>, Memory<Char>, Case)
  href: api/Stringier.EditDistance.html#Stringier_EditDistance_Hamming_System_Memory_System_Char__System_Memory_System_Char__Stringier_Case_
  commentId: M:Stringier.EditDistance.Hamming(System.Memory{System.Char},System.Memory{System.Char},Stringier.Case)
  name.vb: Hamming(Memory(Of Char), Memory(Of Char), Case)
  fullName: Stringier.EditDistance.Hamming(System.Memory<System.Char>, System.Memory<System.Char>, Stringier.Case)
  fullName.vb: Stringier.EditDistance.Hamming(System.Memory(Of System.Char), System.Memory(Of System.Char), Stringier.Case)
  nameWithType: EditDistance.Hamming(Memory<Char>, Memory<Char>, Case)
  nameWithType.vb: EditDistance.Hamming(Memory(Of Char), Memory(Of Char), Case)
- uid: Stringier.EditDistance.Hamming(System.Memory{System.Char},System.ReadOnlyMemory{System.Char})
  name: Hamming(Memory<Char>, ReadOnlyMemory<Char>)
  href: api/Stringier.EditDistance.html#Stringier_EditDistance_Hamming_System_Memory_System_Char__System_ReadOnlyMemory_System_Char__
  commentId: M:Stringier.EditDistance.Hamming(System.Memory{System.Char},System.ReadOnlyMemory{System.Char})
  name.vb: Hamming(Memory(Of Char), ReadOnlyMemory(Of Char))
  fullName: Stringier.EditDistance.Hamming(System.Memory<System.Char>, System.ReadOnlyMemory<System.Char>)
  fullName.vb: Stringier.EditDistance.Hamming(System.Memory(Of System.Char), System.ReadOnlyMemory(Of System.Char))
  nameWithType: EditDistance.Hamming(Memory<Char>, ReadOnlyMemory<Char>)
  nameWithType.vb: EditDistance.Hamming(Memory(Of Char), ReadOnlyMemory(Of Char))
- uid: Stringier.EditDistance.Hamming(System.Memory{System.Char},System.ReadOnlyMemory{System.Char},Stringier.Case)
  name: Hamming(Memory<Char>, ReadOnlyMemory<Char>, Case)
  href: api/Stringier.EditDistance.html#Stringier_EditDistance_Hamming_System_Memory_System_Char__System_ReadOnlyMemory_System_Char__Stringier_Case_
  commentId: M:Stringier.EditDistance.Hamming(System.Memory{System.Char},System.ReadOnlyMemory{System.Char},Stringier.Case)
  name.vb: Hamming(Memory(Of Char), ReadOnlyMemory(Of Char), Case)
  fullName: Stringier.EditDistance.Hamming(System.Memory<System.Char>, System.ReadOnlyMemory<System.Char>, Stringier.Case)
  fullName.vb: Stringier.EditDistance.Hamming(System.Memory(Of System.Char), System.ReadOnlyMemory(Of System.Char), Stringier.Case)
  nameWithType: EditDistance.Hamming(Memory<Char>, ReadOnlyMemory<Char>, Case)
  nameWithType.vb: EditDistance.Hamming(Memory(Of Char), ReadOnlyMemory(Of Char), Case)
- uid: Stringier.EditDistance.Hamming(System.Memory{System.Char},System.ReadOnlySpan{System.Char})
  name: Hamming(Memory<Char>, ReadOnlySpan<Char>)
  href: api/Stringier.EditDistance.html#Stringier_EditDistance_Hamming_System_Memory_System_Char__System_ReadOnlySpan_System_Char__
  commentId: M:Stringier.EditDistance.Hamming(System.Memory{System.Char},System.ReadOnlySpan{System.Char})
  name.vb: Hamming(Memory(Of Char), ReadOnlySpan(Of Char))
  fullName: Stringier.EditDistance.Hamming(System.Memory<System.Char>, System.ReadOnlySpan<System.Char>)
  fullName.vb: Stringier.EditDistance.Hamming(System.Memory(Of System.Char), System.ReadOnlySpan(Of System.Char))
  nameWithType: EditDistance.Hamming(Memory<Char>, ReadOnlySpan<Char>)
  nameWithType.vb: EditDistance.Hamming(Memory(Of Char), ReadOnlySpan(Of Char))
- uid: Stringier.EditDistance.Hamming(System.Memory{System.Char},System.ReadOnlySpan{System.Char},Stringier.Case)
  name: Hamming(Memory<Char>, ReadOnlySpan<Char>, Case)
  href: api/Stringier.EditDistance.html#Stringier_EditDistance_Hamming_System_Memory_System_Char__System_ReadOnlySpan_System_Char__Stringier_Case_
  commentId: M:Stringier.EditDistance.Hamming(System.Memory{System.Char},System.ReadOnlySpan{System.Char},Stringier.Case)
  name.vb: Hamming(Memory(Of Char), ReadOnlySpan(Of Char), Case)
  fullName: Stringier.EditDistance.Hamming(System.Memory<System.Char>, System.ReadOnlySpan<System.Char>, Stringier.Case)
  fullName.vb: Stringier.EditDistance.Hamming(System.Memory(Of System.Char), System.ReadOnlySpan(Of System.Char), Stringier.Case)
  nameWithType: EditDistance.Hamming(Memory<Char>, ReadOnlySpan<Char>, Case)
  nameWithType.vb: EditDistance.Hamming(Memory(Of Char), ReadOnlySpan(Of Char), Case)
- uid: Stringier.EditDistance.Hamming(System.Memory{System.Char},System.Span{System.Char})
  name: Hamming(Memory<Char>, Span<Char>)
  href: api/Stringier.EditDistance.html#Stringier_EditDistance_Hamming_System_Memory_System_Char__System_Span_System_Char__
  commentId: M:Stringier.EditDistance.Hamming(System.Memory{System.Char},System.Span{System.Char})
  name.vb: Hamming(Memory(Of Char), Span(Of Char))
  fullName: Stringier.EditDistance.Hamming(System.Memory<System.Char>, System.Span<System.Char>)
  fullName.vb: Stringier.EditDistance.Hamming(System.Memory(Of System.Char), System.Span(Of System.Char))
  nameWithType: EditDistance.Hamming(Memory<Char>, Span<Char>)
  nameWithType.vb: EditDistance.Hamming(Memory(Of Char), Span(Of Char))
- uid: Stringier.EditDistance.Hamming(System.Memory{System.Char},System.Span{System.Char},Stringier.Case)
  name: Hamming(Memory<Char>, Span<Char>, Case)
  href: api/Stringier.EditDistance.html#Stringier_EditDistance_Hamming_System_Memory_System_Char__System_Span_System_Char__Stringier_Case_
  commentId: M:Stringier.EditDistance.Hamming(System.Memory{System.Char},System.Span{System.Char},Stringier.Case)
  name.vb: Hamming(Memory(Of Char), Span(Of Char), Case)
  fullName: Stringier.EditDistance.Hamming(System.Memory<System.Char>, System.Span<System.Char>, Stringier.Case)
  fullName.vb: Stringier.EditDistance.Hamming(System.Memory(Of System.Char), System.Span(Of System.Char), Stringier.Case)
  nameWithType: EditDistance.Hamming(Memory<Char>, Span<Char>, Case)
  nameWithType.vb: EditDistance.Hamming(Memory(Of Char), Span(Of Char), Case)
- uid: Stringier.EditDistance.Hamming(System.Memory{System.Char},System.String)
  name: Hamming(Memory<Char>, String)
  href: api/Stringier.EditDistance.html#Stringier_EditDistance_Hamming_System_Memory_System_Char__System_String_
  commentId: M:Stringier.EditDistance.Hamming(System.Memory{System.Char},System.String)
  name.vb: Hamming(Memory(Of Char), String)
  fullName: Stringier.EditDistance.Hamming(System.Memory<System.Char>, System.String)
  fullName.vb: Stringier.EditDistance.Hamming(System.Memory(Of System.Char), System.String)
  nameWithType: EditDistance.Hamming(Memory<Char>, String)
  nameWithType.vb: EditDistance.Hamming(Memory(Of Char), String)
- uid: Stringier.EditDistance.Hamming(System.Memory{System.Char},System.String,Stringier.Case)
  name: Hamming(Memory<Char>, String, Case)
  href: api/Stringier.EditDistance.html#Stringier_EditDistance_Hamming_System_Memory_System_Char__System_String_Stringier_Case_
  commentId: M:Stringier.EditDistance.Hamming(System.Memory{System.Char},System.String,Stringier.Case)
  name.vb: Hamming(Memory(Of Char), String, Case)
  fullName: Stringier.EditDistance.Hamming(System.Memory<System.Char>, System.String, Stringier.Case)
  fullName.vb: Stringier.EditDistance.Hamming(System.Memory(Of System.Char), System.String, Stringier.Case)
  nameWithType: EditDistance.Hamming(Memory<Char>, String, Case)
  nameWithType.vb: EditDistance.Hamming(Memory(Of Char), String, Case)
- uid: Stringier.EditDistance.Hamming(System.ReadOnlyMemory{System.Char},System.Char*,System.Int32)
  name: Hamming(ReadOnlyMemory<Char>, Char*, Int32)
  href: api/Stringier.EditDistance.html#Stringier_EditDistance_Hamming_System_ReadOnlyMemory_System_Char__System_Char__System_Int32_
  commentId: M:Stringier.EditDistance.Hamming(System.ReadOnlyMemory{System.Char},System.Char*,System.Int32)
  name.vb: Hamming(ReadOnlyMemory(Of Char), Char*, Int32)
  fullName: Stringier.EditDistance.Hamming(System.ReadOnlyMemory<System.Char>, System.Char*, System.Int32)
  fullName.vb: Stringier.EditDistance.Hamming(System.ReadOnlyMemory(Of System.Char), System.Char*, System.Int32)
  nameWithType: EditDistance.Hamming(ReadOnlyMemory<Char>, Char*, Int32)
  nameWithType.vb: EditDistance.Hamming(ReadOnlyMemory(Of Char), Char*, Int32)
- uid: Stringier.EditDistance.Hamming(System.ReadOnlyMemory{System.Char},System.Char*,System.Int32,Stringier.Case)
  name: Hamming(ReadOnlyMemory<Char>, Char*, Int32, Case)
  href: api/Stringier.EditDistance.html#Stringier_EditDistance_Hamming_System_ReadOnlyMemory_System_Char__System_Char__System_Int32_Stringier_Case_
  commentId: M:Stringier.EditDistance.Hamming(System.ReadOnlyMemory{System.Char},System.Char*,System.Int32,Stringier.Case)
  name.vb: Hamming(ReadOnlyMemory(Of Char), Char*, Int32, Case)
  fullName: Stringier.EditDistance.Hamming(System.ReadOnlyMemory<System.Char>, System.Char*, System.Int32, Stringier.Case)
  fullName.vb: Stringier.EditDistance.Hamming(System.ReadOnlyMemory(Of System.Char), System.Char*, System.Int32, Stringier.Case)
  nameWithType: EditDistance.Hamming(ReadOnlyMemory<Char>, Char*, Int32, Case)
  nameWithType.vb: EditDistance.Hamming(ReadOnlyMemory(Of Char), Char*, Int32, Case)
- uid: Stringier.EditDistance.Hamming(System.ReadOnlyMemory{System.Char},System.Char[])
  name: Hamming(ReadOnlyMemory<Char>, Char[])
  href: api/Stringier.EditDistance.html#Stringier_EditDistance_Hamming_System_ReadOnlyMemory_System_Char__System_Char___
  commentId: M:Stringier.EditDistance.Hamming(System.ReadOnlyMemory{System.Char},System.Char[])
  name.vb: Hamming(ReadOnlyMemory(Of Char), Char())
  fullName: Stringier.EditDistance.Hamming(System.ReadOnlyMemory<System.Char>, System.Char[])
  fullName.vb: Stringier.EditDistance.Hamming(System.ReadOnlyMemory(Of System.Char), System.Char())
  nameWithType: EditDistance.Hamming(ReadOnlyMemory<Char>, Char[])
  nameWithType.vb: EditDistance.Hamming(ReadOnlyMemory(Of Char), Char())
- uid: Stringier.EditDistance.Hamming(System.ReadOnlyMemory{System.Char},System.Char[],Stringier.Case)
  name: Hamming(ReadOnlyMemory<Char>, Char[], Case)
  href: api/Stringier.EditDistance.html#Stringier_EditDistance_Hamming_System_ReadOnlyMemory_System_Char__System_Char___Stringier_Case_
  commentId: M:Stringier.EditDistance.Hamming(System.ReadOnlyMemory{System.Char},System.Char[],Stringier.Case)
  name.vb: Hamming(ReadOnlyMemory(Of Char), Char(), Case)
  fullName: Stringier.EditDistance.Hamming(System.ReadOnlyMemory<System.Char>, System.Char[], Stringier.Case)
  fullName.vb: Stringier.EditDistance.Hamming(System.ReadOnlyMemory(Of System.Char), System.Char(), Stringier.Case)
  nameWithType: EditDistance.Hamming(ReadOnlyMemory<Char>, Char[], Case)
  nameWithType.vb: EditDistance.Hamming(ReadOnlyMemory(Of Char), Char(), Case)
- uid: Stringier.EditDistance.Hamming(System.ReadOnlyMemory{System.Char},System.Memory{System.Char})
  name: Hamming(ReadOnlyMemory<Char>, Memory<Char>)
  href: api/Stringier.EditDistance.html#Stringier_EditDistance_Hamming_System_ReadOnlyMemory_System_Char__System_Memory_System_Char__
  commentId: M:Stringier.EditDistance.Hamming(System.ReadOnlyMemory{System.Char},System.Memory{System.Char})
  name.vb: Hamming(ReadOnlyMemory(Of Char), Memory(Of Char))
  fullName: Stringier.EditDistance.Hamming(System.ReadOnlyMemory<System.Char>, System.Memory<System.Char>)
  fullName.vb: Stringier.EditDistance.Hamming(System.ReadOnlyMemory(Of System.Char), System.Memory(Of System.Char))
  nameWithType: EditDistance.Hamming(ReadOnlyMemory<Char>, Memory<Char>)
  nameWithType.vb: EditDistance.Hamming(ReadOnlyMemory(Of Char), Memory(Of Char))
- uid: Stringier.EditDistance.Hamming(System.ReadOnlyMemory{System.Char},System.Memory{System.Char},Stringier.Case)
  name: Hamming(ReadOnlyMemory<Char>, Memory<Char>, Case)
  href: api/Stringier.EditDistance.html#Stringier_EditDistance_Hamming_System_ReadOnlyMemory_System_Char__System_Memory_System_Char__Stringier_Case_
  commentId: M:Stringier.EditDistance.Hamming(System.ReadOnlyMemory{System.Char},System.Memory{System.Char},Stringier.Case)
  name.vb: Hamming(ReadOnlyMemory(Of Char), Memory(Of Char), Case)
  fullName: Stringier.EditDistance.Hamming(System.ReadOnlyMemory<System.Char>, System.Memory<System.Char>, Stringier.Case)
  fullName.vb: Stringier.EditDistance.Hamming(System.ReadOnlyMemory(Of System.Char), System.Memory(Of System.Char), Stringier.Case)
  nameWithType: EditDistance.Hamming(ReadOnlyMemory<Char>, Memory<Char>, Case)
  nameWithType.vb: EditDistance.Hamming(ReadOnlyMemory(Of Char), Memory(Of Char), Case)
- uid: Stringier.EditDistance.Hamming(System.ReadOnlyMemory{System.Char},System.ReadOnlyMemory{System.Char})
  name: Hamming(ReadOnlyMemory<Char>, ReadOnlyMemory<Char>)
  href: api/Stringier.EditDistance.html#Stringier_EditDistance_Hamming_System_ReadOnlyMemory_System_Char__System_ReadOnlyMemory_System_Char__
  commentId: M:Stringier.EditDistance.Hamming(System.ReadOnlyMemory{System.Char},System.ReadOnlyMemory{System.Char})
  name.vb: Hamming(ReadOnlyMemory(Of Char), ReadOnlyMemory(Of Char))
  fullName: Stringier.EditDistance.Hamming(System.ReadOnlyMemory<System.Char>, System.ReadOnlyMemory<System.Char>)
  fullName.vb: Stringier.EditDistance.Hamming(System.ReadOnlyMemory(Of System.Char), System.ReadOnlyMemory(Of System.Char))
  nameWithType: EditDistance.Hamming(ReadOnlyMemory<Char>, ReadOnlyMemory<Char>)
  nameWithType.vb: EditDistance.Hamming(ReadOnlyMemory(Of Char), ReadOnlyMemory(Of Char))
- uid: Stringier.EditDistance.Hamming(System.ReadOnlyMemory{System.Char},System.ReadOnlyMemory{System.Char},Stringier.Case)
  name: Hamming(ReadOnlyMemory<Char>, ReadOnlyMemory<Char>, Case)
  href: api/Stringier.EditDistance.html#Stringier_EditDistance_Hamming_System_ReadOnlyMemory_System_Char__System_ReadOnlyMemory_System_Char__Stringier_Case_
  commentId: M:Stringier.EditDistance.Hamming(System.ReadOnlyMemory{System.Char},System.ReadOnlyMemory{System.Char},Stringier.Case)
  name.vb: Hamming(ReadOnlyMemory(Of Char), ReadOnlyMemory(Of Char), Case)
  fullName: Stringier.EditDistance.Hamming(System.ReadOnlyMemory<System.Char>, System.ReadOnlyMemory<System.Char>, Stringier.Case)
  fullName.vb: Stringier.EditDistance.Hamming(System.ReadOnlyMemory(Of System.Char), System.ReadOnlyMemory(Of System.Char), Stringier.Case)
  nameWithType: EditDistance.Hamming(ReadOnlyMemory<Char>, ReadOnlyMemory<Char>, Case)
  nameWithType.vb: EditDistance.Hamming(ReadOnlyMemory(Of Char), ReadOnlyMemory(Of Char), Case)
- uid: Stringier.EditDistance.Hamming(System.ReadOnlyMemory{System.Char},System.ReadOnlySpan{System.Char})
  name: Hamming(ReadOnlyMemory<Char>, ReadOnlySpan<Char>)
  href: api/Stringier.EditDistance.html#Stringier_EditDistance_Hamming_System_ReadOnlyMemory_System_Char__System_ReadOnlySpan_System_Char__
  commentId: M:Stringier.EditDistance.Hamming(System.ReadOnlyMemory{System.Char},System.ReadOnlySpan{System.Char})
  name.vb: Hamming(ReadOnlyMemory(Of Char), ReadOnlySpan(Of Char))
  fullName: Stringier.EditDistance.Hamming(System.ReadOnlyMemory<System.Char>, System.ReadOnlySpan<System.Char>)
  fullName.vb: Stringier.EditDistance.Hamming(System.ReadOnlyMemory(Of System.Char), System.ReadOnlySpan(Of System.Char))
  nameWithType: EditDistance.Hamming(ReadOnlyMemory<Char>, ReadOnlySpan<Char>)
  nameWithType.vb: EditDistance.Hamming(ReadOnlyMemory(Of Char), ReadOnlySpan(Of Char))
- uid: Stringier.EditDistance.Hamming(System.ReadOnlyMemory{System.Char},System.ReadOnlySpan{System.Char},Stringier.Case)
  name: Hamming(ReadOnlyMemory<Char>, ReadOnlySpan<Char>, Case)
  href: api/Stringier.EditDistance.html#Stringier_EditDistance_Hamming_System_ReadOnlyMemory_System_Char__System_ReadOnlySpan_System_Char__Stringier_Case_
  commentId: M:Stringier.EditDistance.Hamming(System.ReadOnlyMemory{System.Char},System.ReadOnlySpan{System.Char},Stringier.Case)
  name.vb: Hamming(ReadOnlyMemory(Of Char), ReadOnlySpan(Of Char), Case)
  fullName: Stringier.EditDistance.Hamming(System.ReadOnlyMemory<System.Char>, System.ReadOnlySpan<System.Char>, Stringier.Case)
  fullName.vb: Stringier.EditDistance.Hamming(System.ReadOnlyMemory(Of System.Char), System.ReadOnlySpan(Of System.Char), Stringier.Case)
  nameWithType: EditDistance.Hamming(ReadOnlyMemory<Char>, ReadOnlySpan<Char>, Case)
  nameWithType.vb: EditDistance.Hamming(ReadOnlyMemory(Of Char), ReadOnlySpan(Of Char), Case)
- uid: Stringier.EditDistance.Hamming(System.ReadOnlyMemory{System.Char},System.Span{System.Char})
  name: Hamming(ReadOnlyMemory<Char>, Span<Char>)
  href: api/Stringier.EditDistance.html#Stringier_EditDistance_Hamming_System_ReadOnlyMemory_System_Char__System_Span_System_Char__
  commentId: M:Stringier.EditDistance.Hamming(System.ReadOnlyMemory{System.Char},System.Span{System.Char})
  name.vb: Hamming(ReadOnlyMemory(Of Char), Span(Of Char))
  fullName: Stringier.EditDistance.Hamming(System.ReadOnlyMemory<System.Char>, System.Span<System.Char>)
  fullName.vb: Stringier.EditDistance.Hamming(System.ReadOnlyMemory(Of System.Char), System.Span(Of System.Char))
  nameWithType: EditDistance.Hamming(ReadOnlyMemory<Char>, Span<Char>)
  nameWithType.vb: EditDistance.Hamming(ReadOnlyMemory(Of Char), Span(Of Char))
- uid: Stringier.EditDistance.Hamming(System.ReadOnlyMemory{System.Char},System.Span{System.Char},Stringier.Case)
  name: Hamming(ReadOnlyMemory<Char>, Span<Char>, Case)
  href: api/Stringier.EditDistance.html#Stringier_EditDistance_Hamming_System_ReadOnlyMemory_System_Char__System_Span_System_Char__Stringier_Case_
  commentId: M:Stringier.EditDistance.Hamming(System.ReadOnlyMemory{System.Char},System.Span{System.Char},Stringier.Case)
  name.vb: Hamming(ReadOnlyMemory(Of Char), Span(Of Char), Case)
  fullName: Stringier.EditDistance.Hamming(System.ReadOnlyMemory<System.Char>, System.Span<System.Char>, Stringier.Case)
  fullName.vb: Stringier.EditDistance.Hamming(System.ReadOnlyMemory(Of System.Char), System.Span(Of System.Char), Stringier.Case)
  nameWithType: EditDistance.Hamming(ReadOnlyMemory<Char>, Span<Char>, Case)
  nameWithType.vb: EditDistance.Hamming(ReadOnlyMemory(Of Char), Span(Of Char), Case)
- uid: Stringier.EditDistance.Hamming(System.ReadOnlyMemory{System.Char},System.String)
  name: Hamming(ReadOnlyMemory<Char>, String)
  href: api/Stringier.EditDistance.html#Stringier_EditDistance_Hamming_System_ReadOnlyMemory_System_Char__System_String_
  commentId: M:Stringier.EditDistance.Hamming(System.ReadOnlyMemory{System.Char},System.String)
  name.vb: Hamming(ReadOnlyMemory(Of Char), String)
  fullName: Stringier.EditDistance.Hamming(System.ReadOnlyMemory<System.Char>, System.String)
  fullName.vb: Stringier.EditDistance.Hamming(System.ReadOnlyMemory(Of System.Char), System.String)
  nameWithType: EditDistance.Hamming(ReadOnlyMemory<Char>, String)
  nameWithType.vb: EditDistance.Hamming(ReadOnlyMemory(Of Char), String)
- uid: Stringier.EditDistance.Hamming(System.ReadOnlyMemory{System.Char},System.String,Stringier.Case)
  name: Hamming(ReadOnlyMemory<Char>, String, Case)
  href: api/Stringier.EditDistance.html#Stringier_EditDistance_Hamming_System_ReadOnlyMemory_System_Char__System_String_Stringier_Case_
  commentId: M:Stringier.EditDistance.Hamming(System.ReadOnlyMemory{System.Char},System.String,Stringier.Case)
  name.vb: Hamming(ReadOnlyMemory(Of Char), String, Case)
  fullName: Stringier.EditDistance.Hamming(System.ReadOnlyMemory<System.Char>, System.String, Stringier.Case)
  fullName.vb: Stringier.EditDistance.Hamming(System.ReadOnlyMemory(Of System.Char), System.String, Stringier.Case)
  nameWithType: EditDistance.Hamming(ReadOnlyMemory<Char>, String, Case)
  nameWithType.vb: EditDistance.Hamming(ReadOnlyMemory(Of Char), String, Case)
- uid: Stringier.EditDistance.Hamming(System.ReadOnlySpan{System.Char},System.Char*,System.Int32)
  name: Hamming(ReadOnlySpan<Char>, Char*, Int32)
  href: api/Stringier.EditDistance.html#Stringier_EditDistance_Hamming_System_ReadOnlySpan_System_Char__System_Char__System_Int32_
  commentId: M:Stringier.EditDistance.Hamming(System.ReadOnlySpan{System.Char},System.Char*,System.Int32)
  name.vb: Hamming(ReadOnlySpan(Of Char), Char*, Int32)
  fullName: Stringier.EditDistance.Hamming(System.ReadOnlySpan<System.Char>, System.Char*, System.Int32)
  fullName.vb: Stringier.EditDistance.Hamming(System.ReadOnlySpan(Of System.Char), System.Char*, System.Int32)
  nameWithType: EditDistance.Hamming(ReadOnlySpan<Char>, Char*, Int32)
  nameWithType.vb: EditDistance.Hamming(ReadOnlySpan(Of Char), Char*, Int32)
- uid: Stringier.EditDistance.Hamming(System.ReadOnlySpan{System.Char},System.Char*,System.Int32,Stringier.Case)
  name: Hamming(ReadOnlySpan<Char>, Char*, Int32, Case)
  href: api/Stringier.EditDistance.html#Stringier_EditDistance_Hamming_System_ReadOnlySpan_System_Char__System_Char__System_Int32_Stringier_Case_
  commentId: M:Stringier.EditDistance.Hamming(System.ReadOnlySpan{System.Char},System.Char*,System.Int32,Stringier.Case)
  name.vb: Hamming(ReadOnlySpan(Of Char), Char*, Int32, Case)
  fullName: Stringier.EditDistance.Hamming(System.ReadOnlySpan<System.Char>, System.Char*, System.Int32, Stringier.Case)
  fullName.vb: Stringier.EditDistance.Hamming(System.ReadOnlySpan(Of System.Char), System.Char*, System.Int32, Stringier.Case)
  nameWithType: EditDistance.Hamming(ReadOnlySpan<Char>, Char*, Int32, Case)
  nameWithType.vb: EditDistance.Hamming(ReadOnlySpan(Of Char), Char*, Int32, Case)
- uid: Stringier.EditDistance.Hamming(System.ReadOnlySpan{System.Char},System.Char[])
  name: Hamming(ReadOnlySpan<Char>, Char[])
  href: api/Stringier.EditDistance.html#Stringier_EditDistance_Hamming_System_ReadOnlySpan_System_Char__System_Char___
  commentId: M:Stringier.EditDistance.Hamming(System.ReadOnlySpan{System.Char},System.Char[])
  name.vb: Hamming(ReadOnlySpan(Of Char), Char())
  fullName: Stringier.EditDistance.Hamming(System.ReadOnlySpan<System.Char>, System.Char[])
  fullName.vb: Stringier.EditDistance.Hamming(System.ReadOnlySpan(Of System.Char), System.Char())
  nameWithType: EditDistance.Hamming(ReadOnlySpan<Char>, Char[])
  nameWithType.vb: EditDistance.Hamming(ReadOnlySpan(Of Char), Char())
- uid: Stringier.EditDistance.Hamming(System.ReadOnlySpan{System.Char},System.Char[],Stringier.Case)
  name: Hamming(ReadOnlySpan<Char>, Char[], Case)
  href: api/Stringier.EditDistance.html#Stringier_EditDistance_Hamming_System_ReadOnlySpan_System_Char__System_Char___Stringier_Case_
  commentId: M:Stringier.EditDistance.Hamming(System.ReadOnlySpan{System.Char},System.Char[],Stringier.Case)
  name.vb: Hamming(ReadOnlySpan(Of Char), Char(), Case)
  fullName: Stringier.EditDistance.Hamming(System.ReadOnlySpan<System.Char>, System.Char[], Stringier.Case)
  fullName.vb: Stringier.EditDistance.Hamming(System.ReadOnlySpan(Of System.Char), System.Char(), Stringier.Case)
  nameWithType: EditDistance.Hamming(ReadOnlySpan<Char>, Char[], Case)
  nameWithType.vb: EditDistance.Hamming(ReadOnlySpan(Of Char), Char(), Case)
- uid: Stringier.EditDistance.Hamming(System.ReadOnlySpan{System.Char},System.Memory{System.Char})
  name: Hamming(ReadOnlySpan<Char>, Memory<Char>)
  href: api/Stringier.EditDistance.html#Stringier_EditDistance_Hamming_System_ReadOnlySpan_System_Char__System_Memory_System_Char__
  commentId: M:Stringier.EditDistance.Hamming(System.ReadOnlySpan{System.Char},System.Memory{System.Char})
  name.vb: Hamming(ReadOnlySpan(Of Char), Memory(Of Char))
  fullName: Stringier.EditDistance.Hamming(System.ReadOnlySpan<System.Char>, System.Memory<System.Char>)
  fullName.vb: Stringier.EditDistance.Hamming(System.ReadOnlySpan(Of System.Char), System.Memory(Of System.Char))
  nameWithType: EditDistance.Hamming(ReadOnlySpan<Char>, Memory<Char>)
  nameWithType.vb: EditDistance.Hamming(ReadOnlySpan(Of Char), Memory(Of Char))
- uid: Stringier.EditDistance.Hamming(System.ReadOnlySpan{System.Char},System.Memory{System.Char},Stringier.Case)
  name: Hamming(ReadOnlySpan<Char>, Memory<Char>, Case)
  href: api/Stringier.EditDistance.html#Stringier_EditDistance_Hamming_System_ReadOnlySpan_System_Char__System_Memory_System_Char__Stringier_Case_
  commentId: M:Stringier.EditDistance.Hamming(System.ReadOnlySpan{System.Char},System.Memory{System.Char},Stringier.Case)
  name.vb: Hamming(ReadOnlySpan(Of Char), Memory(Of Char), Case)
  fullName: Stringier.EditDistance.Hamming(System.ReadOnlySpan<System.Char>, System.Memory<System.Char>, Stringier.Case)
  fullName.vb: Stringier.EditDistance.Hamming(System.ReadOnlySpan(Of System.Char), System.Memory(Of System.Char), Stringier.Case)
  nameWithType: EditDistance.Hamming(ReadOnlySpan<Char>, Memory<Char>, Case)
  nameWithType.vb: EditDistance.Hamming(ReadOnlySpan(Of Char), Memory(Of Char), Case)
- uid: Stringier.EditDistance.Hamming(System.ReadOnlySpan{System.Char},System.ReadOnlyMemory{System.Char})
  name: Hamming(ReadOnlySpan<Char>, ReadOnlyMemory<Char>)
  href: api/Stringier.EditDistance.html#Stringier_EditDistance_Hamming_System_ReadOnlySpan_System_Char__System_ReadOnlyMemory_System_Char__
  commentId: M:Stringier.EditDistance.Hamming(System.ReadOnlySpan{System.Char},System.ReadOnlyMemory{System.Char})
  name.vb: Hamming(ReadOnlySpan(Of Char), ReadOnlyMemory(Of Char))
  fullName: Stringier.EditDistance.Hamming(System.ReadOnlySpan<System.Char>, System.ReadOnlyMemory<System.Char>)
  fullName.vb: Stringier.EditDistance.Hamming(System.ReadOnlySpan(Of System.Char), System.ReadOnlyMemory(Of System.Char))
  nameWithType: EditDistance.Hamming(ReadOnlySpan<Char>, ReadOnlyMemory<Char>)
  nameWithType.vb: EditDistance.Hamming(ReadOnlySpan(Of Char), ReadOnlyMemory(Of Char))
- uid: Stringier.EditDistance.Hamming(System.ReadOnlySpan{System.Char},System.ReadOnlyMemory{System.Char},Stringier.Case)
  name: Hamming(ReadOnlySpan<Char>, ReadOnlyMemory<Char>, Case)
  href: api/Stringier.EditDistance.html#Stringier_EditDistance_Hamming_System_ReadOnlySpan_System_Char__System_ReadOnlyMemory_System_Char__Stringier_Case_
  commentId: M:Stringier.EditDistance.Hamming(System.ReadOnlySpan{System.Char},System.ReadOnlyMemory{System.Char},Stringier.Case)
  name.vb: Hamming(ReadOnlySpan(Of Char), ReadOnlyMemory(Of Char), Case)
  fullName: Stringier.EditDistance.Hamming(System.ReadOnlySpan<System.Char>, System.ReadOnlyMemory<System.Char>, Stringier.Case)
  fullName.vb: Stringier.EditDistance.Hamming(System.ReadOnlySpan(Of System.Char), System.ReadOnlyMemory(Of System.Char), Stringier.Case)
  nameWithType: EditDistance.Hamming(ReadOnlySpan<Char>, ReadOnlyMemory<Char>, Case)
  nameWithType.vb: EditDistance.Hamming(ReadOnlySpan(Of Char), ReadOnlyMemory(Of Char), Case)
- uid: Stringier.EditDistance.Hamming(System.ReadOnlySpan{System.Char},System.ReadOnlySpan{System.Char})
  name: Hamming(ReadOnlySpan<Char>, ReadOnlySpan<Char>)
  href: api/Stringier.EditDistance.html#Stringier_EditDistance_Hamming_System_ReadOnlySpan_System_Char__System_ReadOnlySpan_System_Char__
  commentId: M:Stringier.EditDistance.Hamming(System.ReadOnlySpan{System.Char},System.ReadOnlySpan{System.Char})
  name.vb: Hamming(ReadOnlySpan(Of Char), ReadOnlySpan(Of Char))
  fullName: Stringier.EditDistance.Hamming(System.ReadOnlySpan<System.Char>, System.ReadOnlySpan<System.Char>)
  fullName.vb: Stringier.EditDistance.Hamming(System.ReadOnlySpan(Of System.Char), System.ReadOnlySpan(Of System.Char))
  nameWithType: EditDistance.Hamming(ReadOnlySpan<Char>, ReadOnlySpan<Char>)
  nameWithType.vb: EditDistance.Hamming(ReadOnlySpan(Of Char), ReadOnlySpan(Of Char))
- uid: Stringier.EditDistance.Hamming(System.ReadOnlySpan{System.Char},System.ReadOnlySpan{System.Char},Stringier.Case)
  name: Hamming(ReadOnlySpan<Char>, ReadOnlySpan<Char>, Case)
  href: api/Stringier.EditDistance.html#Stringier_EditDistance_Hamming_System_ReadOnlySpan_System_Char__System_ReadOnlySpan_System_Char__Stringier_Case_
  commentId: M:Stringier.EditDistance.Hamming(System.ReadOnlySpan{System.Char},System.ReadOnlySpan{System.Char},Stringier.Case)
  name.vb: Hamming(ReadOnlySpan(Of Char), ReadOnlySpan(Of Char), Case)
  fullName: Stringier.EditDistance.Hamming(System.ReadOnlySpan<System.Char>, System.ReadOnlySpan<System.Char>, Stringier.Case)
  fullName.vb: Stringier.EditDistance.Hamming(System.ReadOnlySpan(Of System.Char), System.ReadOnlySpan(Of System.Char), Stringier.Case)
  nameWithType: EditDistance.Hamming(ReadOnlySpan<Char>, ReadOnlySpan<Char>, Case)
  nameWithType.vb: EditDistance.Hamming(ReadOnlySpan(Of Char), ReadOnlySpan(Of Char), Case)
- uid: Stringier.EditDistance.Hamming(System.ReadOnlySpan{System.Char},System.Span{System.Char})
  name: Hamming(ReadOnlySpan<Char>, Span<Char>)
  href: api/Stringier.EditDistance.html#Stringier_EditDistance_Hamming_System_ReadOnlySpan_System_Char__System_Span_System_Char__
  commentId: M:Stringier.EditDistance.Hamming(System.ReadOnlySpan{System.Char},System.Span{System.Char})
  name.vb: Hamming(ReadOnlySpan(Of Char), Span(Of Char))
  fullName: Stringier.EditDistance.Hamming(System.ReadOnlySpan<System.Char>, System.Span<System.Char>)
  fullName.vb: Stringier.EditDistance.Hamming(System.ReadOnlySpan(Of System.Char), System.Span(Of System.Char))
  nameWithType: EditDistance.Hamming(ReadOnlySpan<Char>, Span<Char>)
  nameWithType.vb: EditDistance.Hamming(ReadOnlySpan(Of Char), Span(Of Char))
- uid: Stringier.EditDistance.Hamming(System.ReadOnlySpan{System.Char},System.Span{System.Char},Stringier.Case)
  name: Hamming(ReadOnlySpan<Char>, Span<Char>, Case)
  href: api/Stringier.EditDistance.html#Stringier_EditDistance_Hamming_System_ReadOnlySpan_System_Char__System_Span_System_Char__Stringier_Case_
  commentId: M:Stringier.EditDistance.Hamming(System.ReadOnlySpan{System.Char},System.Span{System.Char},Stringier.Case)
  name.vb: Hamming(ReadOnlySpan(Of Char), Span(Of Char), Case)
  fullName: Stringier.EditDistance.Hamming(System.ReadOnlySpan<System.Char>, System.Span<System.Char>, Stringier.Case)
  fullName.vb: Stringier.EditDistance.Hamming(System.ReadOnlySpan(Of System.Char), System.Span(Of System.Char), Stringier.Case)
  nameWithType: EditDistance.Hamming(ReadOnlySpan<Char>, Span<Char>, Case)
  nameWithType.vb: EditDistance.Hamming(ReadOnlySpan(Of Char), Span(Of Char), Case)
- uid: Stringier.EditDistance.Hamming(System.ReadOnlySpan{System.Char},System.String)
  name: Hamming(ReadOnlySpan<Char>, String)
  href: api/Stringier.EditDistance.html#Stringier_EditDistance_Hamming_System_ReadOnlySpan_System_Char__System_String_
  commentId: M:Stringier.EditDistance.Hamming(System.ReadOnlySpan{System.Char},System.String)
  name.vb: Hamming(ReadOnlySpan(Of Char), String)
  fullName: Stringier.EditDistance.Hamming(System.ReadOnlySpan<System.Char>, System.String)
  fullName.vb: Stringier.EditDistance.Hamming(System.ReadOnlySpan(Of System.Char), System.String)
  nameWithType: EditDistance.Hamming(ReadOnlySpan<Char>, String)
  nameWithType.vb: EditDistance.Hamming(ReadOnlySpan(Of Char), String)
- uid: Stringier.EditDistance.Hamming(System.ReadOnlySpan{System.Char},System.String,Stringier.Case)
  name: Hamming(ReadOnlySpan<Char>, String, Case)
  href: api/Stringier.EditDistance.html#Stringier_EditDistance_Hamming_System_ReadOnlySpan_System_Char__System_String_Stringier_Case_
  commentId: M:Stringier.EditDistance.Hamming(System.ReadOnlySpan{System.Char},System.String,Stringier.Case)
  name.vb: Hamming(ReadOnlySpan(Of Char), String, Case)
  fullName: Stringier.EditDistance.Hamming(System.ReadOnlySpan<System.Char>, System.String, Stringier.Case)
  fullName.vb: Stringier.EditDistance.Hamming(System.ReadOnlySpan(Of System.Char), System.String, Stringier.Case)
  nameWithType: EditDistance.Hamming(ReadOnlySpan<Char>, String, Case)
  nameWithType.vb: EditDistance.Hamming(ReadOnlySpan(Of Char), String, Case)
- uid: Stringier.EditDistance.Hamming(System.Span{System.Char},System.Char*,System.Int32)
  name: Hamming(Span<Char>, Char*, Int32)
  href: api/Stringier.EditDistance.html#Stringier_EditDistance_Hamming_System_Span_System_Char__System_Char__System_Int32_
  commentId: M:Stringier.EditDistance.Hamming(System.Span{System.Char},System.Char*,System.Int32)
  name.vb: Hamming(Span(Of Char), Char*, Int32)
  fullName: Stringier.EditDistance.Hamming(System.Span<System.Char>, System.Char*, System.Int32)
  fullName.vb: Stringier.EditDistance.Hamming(System.Span(Of System.Char), System.Char*, System.Int32)
  nameWithType: EditDistance.Hamming(Span<Char>, Char*, Int32)
  nameWithType.vb: EditDistance.Hamming(Span(Of Char), Char*, Int32)
- uid: Stringier.EditDistance.Hamming(System.Span{System.Char},System.Char*,System.Int32,Stringier.Case)
  name: Hamming(Span<Char>, Char*, Int32, Case)
  href: api/Stringier.EditDistance.html#Stringier_EditDistance_Hamming_System_Span_System_Char__System_Char__System_Int32_Stringier_Case_
  commentId: M:Stringier.EditDistance.Hamming(System.Span{System.Char},System.Char*,System.Int32,Stringier.Case)
  name.vb: Hamming(Span(Of Char), Char*, Int32, Case)
  fullName: Stringier.EditDistance.Hamming(System.Span<System.Char>, System.Char*, System.Int32, Stringier.Case)
  fullName.vb: Stringier.EditDistance.Hamming(System.Span(Of System.Char), System.Char*, System.Int32, Stringier.Case)
  nameWithType: EditDistance.Hamming(Span<Char>, Char*, Int32, Case)
  nameWithType.vb: EditDistance.Hamming(Span(Of Char), Char*, Int32, Case)
- uid: Stringier.EditDistance.Hamming(System.Span{System.Char},System.Char[])
  name: Hamming(Span<Char>, Char[])
  href: api/Stringier.EditDistance.html#Stringier_EditDistance_Hamming_System_Span_System_Char__System_Char___
  commentId: M:Stringier.EditDistance.Hamming(System.Span{System.Char},System.Char[])
  name.vb: Hamming(Span(Of Char), Char())
  fullName: Stringier.EditDistance.Hamming(System.Span<System.Char>, System.Char[])
  fullName.vb: Stringier.EditDistance.Hamming(System.Span(Of System.Char), System.Char())
  nameWithType: EditDistance.Hamming(Span<Char>, Char[])
  nameWithType.vb: EditDistance.Hamming(Span(Of Char), Char())
- uid: Stringier.EditDistance.Hamming(System.Span{System.Char},System.Char[],Stringier.Case)
  name: Hamming(Span<Char>, Char[], Case)
  href: api/Stringier.EditDistance.html#Stringier_EditDistance_Hamming_System_Span_System_Char__System_Char___Stringier_Case_
  commentId: M:Stringier.EditDistance.Hamming(System.Span{System.Char},System.Char[],Stringier.Case)
  name.vb: Hamming(Span(Of Char), Char(), Case)
  fullName: Stringier.EditDistance.Hamming(System.Span<System.Char>, System.Char[], Stringier.Case)
  fullName.vb: Stringier.EditDistance.Hamming(System.Span(Of System.Char), System.Char(), Stringier.Case)
  nameWithType: EditDistance.Hamming(Span<Char>, Char[], Case)
  nameWithType.vb: EditDistance.Hamming(Span(Of Char), Char(), Case)
- uid: Stringier.EditDistance.Hamming(System.Span{System.Char},System.Memory{System.Char})
  name: Hamming(Span<Char>, Memory<Char>)
  href: api/Stringier.EditDistance.html#Stringier_EditDistance_Hamming_System_Span_System_Char__System_Memory_System_Char__
  commentId: M:Stringier.EditDistance.Hamming(System.Span{System.Char},System.Memory{System.Char})
  name.vb: Hamming(Span(Of Char), Memory(Of Char))
  fullName: Stringier.EditDistance.Hamming(System.Span<System.Char>, System.Memory<System.Char>)
  fullName.vb: Stringier.EditDistance.Hamming(System.Span(Of System.Char), System.Memory(Of System.Char))
  nameWithType: EditDistance.Hamming(Span<Char>, Memory<Char>)
  nameWithType.vb: EditDistance.Hamming(Span(Of Char), Memory(Of Char))
- uid: Stringier.EditDistance.Hamming(System.Span{System.Char},System.Memory{System.Char},Stringier.Case)
  name: Hamming(Span<Char>, Memory<Char>, Case)
  href: api/Stringier.EditDistance.html#Stringier_EditDistance_Hamming_System_Span_System_Char__System_Memory_System_Char__Stringier_Case_
  commentId: M:Stringier.EditDistance.Hamming(System.Span{System.Char},System.Memory{System.Char},Stringier.Case)
  name.vb: Hamming(Span(Of Char), Memory(Of Char), Case)
  fullName: Stringier.EditDistance.Hamming(System.Span<System.Char>, System.Memory<System.Char>, Stringier.Case)
  fullName.vb: Stringier.EditDistance.Hamming(System.Span(Of System.Char), System.Memory(Of System.Char), Stringier.Case)
  nameWithType: EditDistance.Hamming(Span<Char>, Memory<Char>, Case)
  nameWithType.vb: EditDistance.Hamming(Span(Of Char), Memory(Of Char), Case)
- uid: Stringier.EditDistance.Hamming(System.Span{System.Char},System.ReadOnlyMemory{System.Char})
  name: Hamming(Span<Char>, ReadOnlyMemory<Char>)
  href: api/Stringier.EditDistance.html#Stringier_EditDistance_Hamming_System_Span_System_Char__System_ReadOnlyMemory_System_Char__
  commentId: M:Stringier.EditDistance.Hamming(System.Span{System.Char},System.ReadOnlyMemory{System.Char})
  name.vb: Hamming(Span(Of Char), ReadOnlyMemory(Of Char))
  fullName: Stringier.EditDistance.Hamming(System.Span<System.Char>, System.ReadOnlyMemory<System.Char>)
  fullName.vb: Stringier.EditDistance.Hamming(System.Span(Of System.Char), System.ReadOnlyMemory(Of System.Char))
  nameWithType: EditDistance.Hamming(Span<Char>, ReadOnlyMemory<Char>)
  nameWithType.vb: EditDistance.Hamming(Span(Of Char), ReadOnlyMemory(Of Char))
- uid: Stringier.EditDistance.Hamming(System.Span{System.Char},System.ReadOnlyMemory{System.Char},Stringier.Case)
  name: Hamming(Span<Char>, ReadOnlyMemory<Char>, Case)
  href: api/Stringier.EditDistance.html#Stringier_EditDistance_Hamming_System_Span_System_Char__System_ReadOnlyMemory_System_Char__Stringier_Case_
  commentId: M:Stringier.EditDistance.Hamming(System.Span{System.Char},System.ReadOnlyMemory{System.Char},Stringier.Case)
  name.vb: Hamming(Span(Of Char), ReadOnlyMemory(Of Char), Case)
  fullName: Stringier.EditDistance.Hamming(System.Span<System.Char>, System.ReadOnlyMemory<System.Char>, Stringier.Case)
  fullName.vb: Stringier.EditDistance.Hamming(System.Span(Of System.Char), System.ReadOnlyMemory(Of System.Char), Stringier.Case)
  nameWithType: EditDistance.Hamming(Span<Char>, ReadOnlyMemory<Char>, Case)
  nameWithType.vb: EditDistance.Hamming(Span(Of Char), ReadOnlyMemory(Of Char), Case)
- uid: Stringier.EditDistance.Hamming(System.Span{System.Char},System.ReadOnlySpan{System.Char})
  name: Hamming(Span<Char>, ReadOnlySpan<Char>)
  href: api/Stringier.EditDistance.html#Stringier_EditDistance_Hamming_System_Span_System_Char__System_ReadOnlySpan_System_Char__
  commentId: M:Stringier.EditDistance.Hamming(System.Span{System.Char},System.ReadOnlySpan{System.Char})
  name.vb: Hamming(Span(Of Char), ReadOnlySpan(Of Char))
  fullName: Stringier.EditDistance.Hamming(System.Span<System.Char>, System.ReadOnlySpan<System.Char>)
  fullName.vb: Stringier.EditDistance.Hamming(System.Span(Of System.Char), System.ReadOnlySpan(Of System.Char))
  nameWithType: EditDistance.Hamming(Span<Char>, ReadOnlySpan<Char>)
  nameWithType.vb: EditDistance.Hamming(Span(Of Char), ReadOnlySpan(Of Char))
- uid: Stringier.EditDistance.Hamming(System.Span{System.Char},System.ReadOnlySpan{System.Char},Stringier.Case)
  name: Hamming(Span<Char>, ReadOnlySpan<Char>, Case)
  href: api/Stringier.EditDistance.html#Stringier_EditDistance_Hamming_System_Span_System_Char__System_ReadOnlySpan_System_Char__Stringier_Case_
  commentId: M:Stringier.EditDistance.Hamming(System.Span{System.Char},System.ReadOnlySpan{System.Char},Stringier.Case)
  name.vb: Hamming(Span(Of Char), ReadOnlySpan(Of Char), Case)
  fullName: Stringier.EditDistance.Hamming(System.Span<System.Char>, System.ReadOnlySpan<System.Char>, Stringier.Case)
  fullName.vb: Stringier.EditDistance.Hamming(System.Span(Of System.Char), System.ReadOnlySpan(Of System.Char), Stringier.Case)
  nameWithType: EditDistance.Hamming(Span<Char>, ReadOnlySpan<Char>, Case)
  nameWithType.vb: EditDistance.Hamming(Span(Of Char), ReadOnlySpan(Of Char), Case)
- uid: Stringier.EditDistance.Hamming(System.Span{System.Char},System.Span{System.Char})
  name: Hamming(Span<Char>, Span<Char>)
  href: api/Stringier.EditDistance.html#Stringier_EditDistance_Hamming_System_Span_System_Char__System_Span_System_Char__
  commentId: M:Stringier.EditDistance.Hamming(System.Span{System.Char},System.Span{System.Char})
  name.vb: Hamming(Span(Of Char), Span(Of Char))
  fullName: Stringier.EditDistance.Hamming(System.Span<System.Char>, System.Span<System.Char>)
  fullName.vb: Stringier.EditDistance.Hamming(System.Span(Of System.Char), System.Span(Of System.Char))
  nameWithType: EditDistance.Hamming(Span<Char>, Span<Char>)
  nameWithType.vb: EditDistance.Hamming(Span(Of Char), Span(Of Char))
- uid: Stringier.EditDistance.Hamming(System.Span{System.Char},System.Span{System.Char},Stringier.Case)
  name: Hamming(Span<Char>, Span<Char>, Case)
  href: api/Stringier.EditDistance.html#Stringier_EditDistance_Hamming_System_Span_System_Char__System_Span_System_Char__Stringier_Case_
  commentId: M:Stringier.EditDistance.Hamming(System.Span{System.Char},System.Span{System.Char},Stringier.Case)
  name.vb: Hamming(Span(Of Char), Span(Of Char), Case)
  fullName: Stringier.EditDistance.Hamming(System.Span<System.Char>, System.Span<System.Char>, Stringier.Case)
  fullName.vb: Stringier.EditDistance.Hamming(System.Span(Of System.Char), System.Span(Of System.Char), Stringier.Case)
  nameWithType: EditDistance.Hamming(Span<Char>, Span<Char>, Case)
  nameWithType.vb: EditDistance.Hamming(Span(Of Char), Span(Of Char), Case)
- uid: Stringier.EditDistance.Hamming(System.Span{System.Char},System.String)
  name: Hamming(Span<Char>, String)
  href: api/Stringier.EditDistance.html#Stringier_EditDistance_Hamming_System_Span_System_Char__System_String_
  commentId: M:Stringier.EditDistance.Hamming(System.Span{System.Char},System.String)
  name.vb: Hamming(Span(Of Char), String)
  fullName: Stringier.EditDistance.Hamming(System.Span<System.Char>, System.String)
  fullName.vb: Stringier.EditDistance.Hamming(System.Span(Of System.Char), System.String)
  nameWithType: EditDistance.Hamming(Span<Char>, String)
  nameWithType.vb: EditDistance.Hamming(Span(Of Char), String)
- uid: Stringier.EditDistance.Hamming(System.Span{System.Char},System.String,Stringier.Case)
  name: Hamming(Span<Char>, String, Case)
  href: api/Stringier.EditDistance.html#Stringier_EditDistance_Hamming_System_Span_System_Char__System_String_Stringier_Case_
  commentId: M:Stringier.EditDistance.Hamming(System.Span{System.Char},System.String,Stringier.Case)
  name.vb: Hamming(Span(Of Char), String, Case)
  fullName: Stringier.EditDistance.Hamming(System.Span<System.Char>, System.String, Stringier.Case)
  fullName.vb: Stringier.EditDistance.Hamming(System.Span(Of System.Char), System.String, Stringier.Case)
  nameWithType: EditDistance.Hamming(Span<Char>, String, Case)
  nameWithType.vb: EditDistance.Hamming(Span(Of Char), String, Case)
- uid: Stringier.EditDistance.Hamming(System.String,System.Char*,System.Int32)
  name: Hamming(String, Char*, Int32)
  href: api/Stringier.EditDistance.html#Stringier_EditDistance_Hamming_System_String_System_Char__System_Int32_
  commentId: M:Stringier.EditDistance.Hamming(System.String,System.Char*,System.Int32)
  fullName: Stringier.EditDistance.Hamming(System.String, System.Char*, System.Int32)
  nameWithType: EditDistance.Hamming(String, Char*, Int32)
- uid: Stringier.EditDistance.Hamming(System.String,System.Char*,System.Int32,Stringier.Case)
  name: Hamming(String, Char*, Int32, Case)
  href: api/Stringier.EditDistance.html#Stringier_EditDistance_Hamming_System_String_System_Char__System_Int32_Stringier_Case_
  commentId: M:Stringier.EditDistance.Hamming(System.String,System.Char*,System.Int32,Stringier.Case)
  fullName: Stringier.EditDistance.Hamming(System.String, System.Char*, System.Int32, Stringier.Case)
  nameWithType: EditDistance.Hamming(String, Char*, Int32, Case)
- uid: Stringier.EditDistance.Hamming(System.String,System.Char[])
  name: Hamming(String, Char[])
  href: api/Stringier.EditDistance.html#Stringier_EditDistance_Hamming_System_String_System_Char___
  commentId: M:Stringier.EditDistance.Hamming(System.String,System.Char[])
  name.vb: Hamming(String, Char())
  fullName: Stringier.EditDistance.Hamming(System.String, System.Char[])
  fullName.vb: Stringier.EditDistance.Hamming(System.String, System.Char())
  nameWithType: EditDistance.Hamming(String, Char[])
  nameWithType.vb: EditDistance.Hamming(String, Char())
- uid: Stringier.EditDistance.Hamming(System.String,System.Char[],Stringier.Case)
  name: Hamming(String, Char[], Case)
  href: api/Stringier.EditDistance.html#Stringier_EditDistance_Hamming_System_String_System_Char___Stringier_Case_
  commentId: M:Stringier.EditDistance.Hamming(System.String,System.Char[],Stringier.Case)
  name.vb: Hamming(String, Char(), Case)
  fullName: Stringier.EditDistance.Hamming(System.String, System.Char[], Stringier.Case)
  fullName.vb: Stringier.EditDistance.Hamming(System.String, System.Char(), Stringier.Case)
  nameWithType: EditDistance.Hamming(String, Char[], Case)
  nameWithType.vb: EditDistance.Hamming(String, Char(), Case)
- uid: Stringier.EditDistance.Hamming(System.String,System.Memory{System.Char})
  name: Hamming(String, Memory<Char>)
  href: api/Stringier.EditDistance.html#Stringier_EditDistance_Hamming_System_String_System_Memory_System_Char__
  commentId: M:Stringier.EditDistance.Hamming(System.String,System.Memory{System.Char})
  name.vb: Hamming(String, Memory(Of Char))
  fullName: Stringier.EditDistance.Hamming(System.String, System.Memory<System.Char>)
  fullName.vb: Stringier.EditDistance.Hamming(System.String, System.Memory(Of System.Char))
  nameWithType: EditDistance.Hamming(String, Memory<Char>)
  nameWithType.vb: EditDistance.Hamming(String, Memory(Of Char))
- uid: Stringier.EditDistance.Hamming(System.String,System.Memory{System.Char},Stringier.Case)
  name: Hamming(String, Memory<Char>, Case)
  href: api/Stringier.EditDistance.html#Stringier_EditDistance_Hamming_System_String_System_Memory_System_Char__Stringier_Case_
  commentId: M:Stringier.EditDistance.Hamming(System.String,System.Memory{System.Char},Stringier.Case)
  name.vb: Hamming(String, Memory(Of Char), Case)
  fullName: Stringier.EditDistance.Hamming(System.String, System.Memory<System.Char>, Stringier.Case)
  fullName.vb: Stringier.EditDistance.Hamming(System.String, System.Memory(Of System.Char), Stringier.Case)
  nameWithType: EditDistance.Hamming(String, Memory<Char>, Case)
  nameWithType.vb: EditDistance.Hamming(String, Memory(Of Char), Case)
- uid: Stringier.EditDistance.Hamming(System.String,System.ReadOnlyMemory{System.Char})
  name: Hamming(String, ReadOnlyMemory<Char>)
  href: api/Stringier.EditDistance.html#Stringier_EditDistance_Hamming_System_String_System_ReadOnlyMemory_System_Char__
  commentId: M:Stringier.EditDistance.Hamming(System.String,System.ReadOnlyMemory{System.Char})
  name.vb: Hamming(String, ReadOnlyMemory(Of Char))
  fullName: Stringier.EditDistance.Hamming(System.String, System.ReadOnlyMemory<System.Char>)
  fullName.vb: Stringier.EditDistance.Hamming(System.String, System.ReadOnlyMemory(Of System.Char))
  nameWithType: EditDistance.Hamming(String, ReadOnlyMemory<Char>)
  nameWithType.vb: EditDistance.Hamming(String, ReadOnlyMemory(Of Char))
- uid: Stringier.EditDistance.Hamming(System.String,System.ReadOnlyMemory{System.Char},Stringier.Case)
  name: Hamming(String, ReadOnlyMemory<Char>, Case)
  href: api/Stringier.EditDistance.html#Stringier_EditDistance_Hamming_System_String_System_ReadOnlyMemory_System_Char__Stringier_Case_
  commentId: M:Stringier.EditDistance.Hamming(System.String,System.ReadOnlyMemory{System.Char},Stringier.Case)
  name.vb: Hamming(String, ReadOnlyMemory(Of Char), Case)
  fullName: Stringier.EditDistance.Hamming(System.String, System.ReadOnlyMemory<System.Char>, Stringier.Case)
  fullName.vb: Stringier.EditDistance.Hamming(System.String, System.ReadOnlyMemory(Of System.Char), Stringier.Case)
  nameWithType: EditDistance.Hamming(String, ReadOnlyMemory<Char>, Case)
  nameWithType.vb: EditDistance.Hamming(String, ReadOnlyMemory(Of Char), Case)
- uid: Stringier.EditDistance.Hamming(System.String,System.ReadOnlySpan{System.Char})
  name: Hamming(String, ReadOnlySpan<Char>)
  href: api/Stringier.EditDistance.html#Stringier_EditDistance_Hamming_System_String_System_ReadOnlySpan_System_Char__
  commentId: M:Stringier.EditDistance.Hamming(System.String,System.ReadOnlySpan{System.Char})
  name.vb: Hamming(String, ReadOnlySpan(Of Char))
  fullName: Stringier.EditDistance.Hamming(System.String, System.ReadOnlySpan<System.Char>)
  fullName.vb: Stringier.EditDistance.Hamming(System.String, System.ReadOnlySpan(Of System.Char))
  nameWithType: EditDistance.Hamming(String, ReadOnlySpan<Char>)
  nameWithType.vb: EditDistance.Hamming(String, ReadOnlySpan(Of Char))
- uid: Stringier.EditDistance.Hamming(System.String,System.ReadOnlySpan{System.Char},Stringier.Case)
  name: Hamming(String, ReadOnlySpan<Char>, Case)
  href: api/Stringier.EditDistance.html#Stringier_EditDistance_Hamming_System_String_System_ReadOnlySpan_System_Char__Stringier_Case_
  commentId: M:Stringier.EditDistance.Hamming(System.String,System.ReadOnlySpan{System.Char},Stringier.Case)
  name.vb: Hamming(String, ReadOnlySpan(Of Char), Case)
  fullName: Stringier.EditDistance.Hamming(System.String, System.ReadOnlySpan<System.Char>, Stringier.Case)
  fullName.vb: Stringier.EditDistance.Hamming(System.String, System.ReadOnlySpan(Of System.Char), Stringier.Case)
  nameWithType: EditDistance.Hamming(String, ReadOnlySpan<Char>, Case)
  nameWithType.vb: EditDistance.Hamming(String, ReadOnlySpan(Of Char), Case)
- uid: Stringier.EditDistance.Hamming(System.String,System.Span{System.Char})
  name: Hamming(String, Span<Char>)
  href: api/Stringier.EditDistance.html#Stringier_EditDistance_Hamming_System_String_System_Span_System_Char__
  commentId: M:Stringier.EditDistance.Hamming(System.String,System.Span{System.Char})
  name.vb: Hamming(String, Span(Of Char))
  fullName: Stringier.EditDistance.Hamming(System.String, System.Span<System.Char>)
  fullName.vb: Stringier.EditDistance.Hamming(System.String, System.Span(Of System.Char))
  nameWithType: EditDistance.Hamming(String, Span<Char>)
  nameWithType.vb: EditDistance.Hamming(String, Span(Of Char))
- uid: Stringier.EditDistance.Hamming(System.String,System.Span{System.Char},Stringier.Case)
  name: Hamming(String, Span<Char>, Case)
  href: api/Stringier.EditDistance.html#Stringier_EditDistance_Hamming_System_String_System_Span_System_Char__Stringier_Case_
  commentId: M:Stringier.EditDistance.Hamming(System.String,System.Span{System.Char},Stringier.Case)
  name.vb: Hamming(String, Span(Of Char), Case)
  fullName: Stringier.EditDistance.Hamming(System.String, System.Span<System.Char>, Stringier.Case)
  fullName.vb: Stringier.EditDistance.Hamming(System.String, System.Span(Of System.Char), Stringier.Case)
  nameWithType: EditDistance.Hamming(String, Span<Char>, Case)
  nameWithType.vb: EditDistance.Hamming(String, Span(Of Char), Case)
- uid: Stringier.EditDistance.Hamming(System.String,System.String)
  name: Hamming(String, String)
  href: api/Stringier.EditDistance.html#Stringier_EditDistance_Hamming_System_String_System_String_
  commentId: M:Stringier.EditDistance.Hamming(System.String,System.String)
  fullName: Stringier.EditDistance.Hamming(System.String, System.String)
  nameWithType: EditDistance.Hamming(String, String)
- uid: Stringier.EditDistance.Hamming(System.String,System.String,Stringier.Case)
  name: Hamming(String, String, Case)
  href: api/Stringier.EditDistance.html#Stringier_EditDistance_Hamming_System_String_System_String_Stringier_Case_
  commentId: M:Stringier.EditDistance.Hamming(System.String,System.String,Stringier.Case)
  fullName: Stringier.EditDistance.Hamming(System.String, System.String, Stringier.Case)
  nameWithType: EditDistance.Hamming(String, String, Case)
- uid: Stringier.EditDistance.Hamming*
  name: Hamming
  href: api/Stringier.EditDistance.html#Stringier_EditDistance_Hamming_
  commentId: Overload:Stringier.EditDistance.Hamming
  isSpec: "True"
  fullName: Stringier.EditDistance.Hamming
  nameWithType: EditDistance.Hamming
- uid: Stringier.EditDistance.Levenshtein(System.Char*,System.Int32,System.Char*,System.Int32)
  name: Levenshtein(Char*, Int32, Char*, Int32)
  href: api/Stringier.EditDistance.html#Stringier_EditDistance_Levenshtein_System_Char__System_Int32_System_Char__System_Int32_
  commentId: M:Stringier.EditDistance.Levenshtein(System.Char*,System.Int32,System.Char*,System.Int32)
  fullName: Stringier.EditDistance.Levenshtein(System.Char*, System.Int32, System.Char*, System.Int32)
  nameWithType: EditDistance.Levenshtein(Char*, Int32, Char*, Int32)
- uid: Stringier.EditDistance.Levenshtein(System.Char*,System.Int32,System.Char[])
  name: Levenshtein(Char*, Int32, Char[])
  href: api/Stringier.EditDistance.html#Stringier_EditDistance_Levenshtein_System_Char__System_Int32_System_Char___
  commentId: M:Stringier.EditDistance.Levenshtein(System.Char*,System.Int32,System.Char[])
  name.vb: Levenshtein(Char*, Int32, Char())
  fullName: Stringier.EditDistance.Levenshtein(System.Char*, System.Int32, System.Char[])
  fullName.vb: Stringier.EditDistance.Levenshtein(System.Char*, System.Int32, System.Char())
  nameWithType: EditDistance.Levenshtein(Char*, Int32, Char[])
  nameWithType.vb: EditDistance.Levenshtein(Char*, Int32, Char())
- uid: Stringier.EditDistance.Levenshtein(System.Char*,System.Int32,System.Memory{System.Char})
  name: Levenshtein(Char*, Int32, Memory<Char>)
  href: api/Stringier.EditDistance.html#Stringier_EditDistance_Levenshtein_System_Char__System_Int32_System_Memory_System_Char__
  commentId: M:Stringier.EditDistance.Levenshtein(System.Char*,System.Int32,System.Memory{System.Char})
  name.vb: Levenshtein(Char*, Int32, Memory(Of Char))
  fullName: Stringier.EditDistance.Levenshtein(System.Char*, System.Int32, System.Memory<System.Char>)
  fullName.vb: Stringier.EditDistance.Levenshtein(System.Char*, System.Int32, System.Memory(Of System.Char))
  nameWithType: EditDistance.Levenshtein(Char*, Int32, Memory<Char>)
  nameWithType.vb: EditDistance.Levenshtein(Char*, Int32, Memory(Of Char))
- uid: Stringier.EditDistance.Levenshtein(System.Char*,System.Int32,System.ReadOnlyMemory{System.Char})
  name: Levenshtein(Char*, Int32, ReadOnlyMemory<Char>)
  href: api/Stringier.EditDistance.html#Stringier_EditDistance_Levenshtein_System_Char__System_Int32_System_ReadOnlyMemory_System_Char__
  commentId: M:Stringier.EditDistance.Levenshtein(System.Char*,System.Int32,System.ReadOnlyMemory{System.Char})
  name.vb: Levenshtein(Char*, Int32, ReadOnlyMemory(Of Char))
  fullName: Stringier.EditDistance.Levenshtein(System.Char*, System.Int32, System.ReadOnlyMemory<System.Char>)
  fullName.vb: Stringier.EditDistance.Levenshtein(System.Char*, System.Int32, System.ReadOnlyMemory(Of System.Char))
  nameWithType: EditDistance.Levenshtein(Char*, Int32, ReadOnlyMemory<Char>)
  nameWithType.vb: EditDistance.Levenshtein(Char*, Int32, ReadOnlyMemory(Of Char))
- uid: Stringier.EditDistance.Levenshtein(System.Char*,System.Int32,System.ReadOnlySpan{System.Char})
  name: Levenshtein(Char*, Int32, ReadOnlySpan<Char>)
  href: api/Stringier.EditDistance.html#Stringier_EditDistance_Levenshtein_System_Char__System_Int32_System_ReadOnlySpan_System_Char__
  commentId: M:Stringier.EditDistance.Levenshtein(System.Char*,System.Int32,System.ReadOnlySpan{System.Char})
  name.vb: Levenshtein(Char*, Int32, ReadOnlySpan(Of Char))
  fullName: Stringier.EditDistance.Levenshtein(System.Char*, System.Int32, System.ReadOnlySpan<System.Char>)
  fullName.vb: Stringier.EditDistance.Levenshtein(System.Char*, System.Int32, System.ReadOnlySpan(Of System.Char))
  nameWithType: EditDistance.Levenshtein(Char*, Int32, ReadOnlySpan<Char>)
  nameWithType.vb: EditDistance.Levenshtein(Char*, Int32, ReadOnlySpan(Of Char))
- uid: Stringier.EditDistance.Levenshtein(System.Char*,System.Int32,System.Span{System.Char})
  name: Levenshtein(Char*, Int32, Span<Char>)
  href: api/Stringier.EditDistance.html#Stringier_EditDistance_Levenshtein_System_Char__System_Int32_System_Span_System_Char__
  commentId: M:Stringier.EditDistance.Levenshtein(System.Char*,System.Int32,System.Span{System.Char})
  name.vb: Levenshtein(Char*, Int32, Span(Of Char))
  fullName: Stringier.EditDistance.Levenshtein(System.Char*, System.Int32, System.Span<System.Char>)
  fullName.vb: Stringier.EditDistance.Levenshtein(System.Char*, System.Int32, System.Span(Of System.Char))
  nameWithType: EditDistance.Levenshtein(Char*, Int32, Span<Char>)
  nameWithType.vb: EditDistance.Levenshtein(Char*, Int32, Span(Of Char))
- uid: Stringier.EditDistance.Levenshtein(System.Char*,System.Int32,System.String)
  name: Levenshtein(Char*, Int32, String)
  href: api/Stringier.EditDistance.html#Stringier_EditDistance_Levenshtein_System_Char__System_Int32_System_String_
  commentId: M:Stringier.EditDistance.Levenshtein(System.Char*,System.Int32,System.String)
  fullName: Stringier.EditDistance.Levenshtein(System.Char*, System.Int32, System.String)
  nameWithType: EditDistance.Levenshtein(Char*, Int32, String)
- uid: Stringier.EditDistance.Levenshtein(System.Char[],System.Char*,System.Int32)
  name: Levenshtein(Char[], Char*, Int32)
  href: api/Stringier.EditDistance.html#Stringier_EditDistance_Levenshtein_System_Char___System_Char__System_Int32_
  commentId: M:Stringier.EditDistance.Levenshtein(System.Char[],System.Char*,System.Int32)
  name.vb: Levenshtein(Char(), Char*, Int32)
  fullName: Stringier.EditDistance.Levenshtein(System.Char[], System.Char*, System.Int32)
  fullName.vb: Stringier.EditDistance.Levenshtein(System.Char(), System.Char*, System.Int32)
  nameWithType: EditDistance.Levenshtein(Char[], Char*, Int32)
  nameWithType.vb: EditDistance.Levenshtein(Char(), Char*, Int32)
- uid: Stringier.EditDistance.Levenshtein(System.Char[],System.Char[])
  name: Levenshtein(Char[], Char[])
  href: api/Stringier.EditDistance.html#Stringier_EditDistance_Levenshtein_System_Char___System_Char___
  commentId: M:Stringier.EditDistance.Levenshtein(System.Char[],System.Char[])
  name.vb: Levenshtein(Char(), Char())
  fullName: Stringier.EditDistance.Levenshtein(System.Char[], System.Char[])
  fullName.vb: Stringier.EditDistance.Levenshtein(System.Char(), System.Char())
  nameWithType: EditDistance.Levenshtein(Char[], Char[])
  nameWithType.vb: EditDistance.Levenshtein(Char(), Char())
- uid: Stringier.EditDistance.Levenshtein(System.Char[],System.Memory{System.Char})
  name: Levenshtein(Char[], Memory<Char>)
  href: api/Stringier.EditDistance.html#Stringier_EditDistance_Levenshtein_System_Char___System_Memory_System_Char__
  commentId: M:Stringier.EditDistance.Levenshtein(System.Char[],System.Memory{System.Char})
  name.vb: Levenshtein(Char(), Memory(Of Char))
  fullName: Stringier.EditDistance.Levenshtein(System.Char[], System.Memory<System.Char>)
  fullName.vb: Stringier.EditDistance.Levenshtein(System.Char(), System.Memory(Of System.Char))
  nameWithType: EditDistance.Levenshtein(Char[], Memory<Char>)
  nameWithType.vb: EditDistance.Levenshtein(Char(), Memory(Of Char))
- uid: Stringier.EditDistance.Levenshtein(System.Char[],System.ReadOnlyMemory{System.Char})
  name: Levenshtein(Char[], ReadOnlyMemory<Char>)
  href: api/Stringier.EditDistance.html#Stringier_EditDistance_Levenshtein_System_Char___System_ReadOnlyMemory_System_Char__
  commentId: M:Stringier.EditDistance.Levenshtein(System.Char[],System.ReadOnlyMemory{System.Char})
  name.vb: Levenshtein(Char(), ReadOnlyMemory(Of Char))
  fullName: Stringier.EditDistance.Levenshtein(System.Char[], System.ReadOnlyMemory<System.Char>)
  fullName.vb: Stringier.EditDistance.Levenshtein(System.Char(), System.ReadOnlyMemory(Of System.Char))
  nameWithType: EditDistance.Levenshtein(Char[], ReadOnlyMemory<Char>)
  nameWithType.vb: EditDistance.Levenshtein(Char(), ReadOnlyMemory(Of Char))
- uid: Stringier.EditDistance.Levenshtein(System.Char[],System.ReadOnlySpan{System.Char})
  name: Levenshtein(Char[], ReadOnlySpan<Char>)
  href: api/Stringier.EditDistance.html#Stringier_EditDistance_Levenshtein_System_Char___System_ReadOnlySpan_System_Char__
  commentId: M:Stringier.EditDistance.Levenshtein(System.Char[],System.ReadOnlySpan{System.Char})
  name.vb: Levenshtein(Char(), ReadOnlySpan(Of Char))
  fullName: Stringier.EditDistance.Levenshtein(System.Char[], System.ReadOnlySpan<System.Char>)
  fullName.vb: Stringier.EditDistance.Levenshtein(System.Char(), System.ReadOnlySpan(Of System.Char))
  nameWithType: EditDistance.Levenshtein(Char[], ReadOnlySpan<Char>)
  nameWithType.vb: EditDistance.Levenshtein(Char(), ReadOnlySpan(Of Char))
- uid: Stringier.EditDistance.Levenshtein(System.Char[],System.Span{System.Char})
  name: Levenshtein(Char[], Span<Char>)
  href: api/Stringier.EditDistance.html#Stringier_EditDistance_Levenshtein_System_Char___System_Span_System_Char__
  commentId: M:Stringier.EditDistance.Levenshtein(System.Char[],System.Span{System.Char})
  name.vb: Levenshtein(Char(), Span(Of Char))
  fullName: Stringier.EditDistance.Levenshtein(System.Char[], System.Span<System.Char>)
  fullName.vb: Stringier.EditDistance.Levenshtein(System.Char(), System.Span(Of System.Char))
  nameWithType: EditDistance.Levenshtein(Char[], Span<Char>)
  nameWithType.vb: EditDistance.Levenshtein(Char(), Span(Of Char))
- uid: Stringier.EditDistance.Levenshtein(System.Char[],System.String)
  name: Levenshtein(Char[], String)
  href: api/Stringier.EditDistance.html#Stringier_EditDistance_Levenshtein_System_Char___System_String_
  commentId: M:Stringier.EditDistance.Levenshtein(System.Char[],System.String)
  name.vb: Levenshtein(Char(), String)
  fullName: Stringier.EditDistance.Levenshtein(System.Char[], System.String)
  fullName.vb: Stringier.EditDistance.Levenshtein(System.Char(), System.String)
  nameWithType: EditDistance.Levenshtein(Char[], String)
  nameWithType.vb: EditDistance.Levenshtein(Char(), String)
- uid: Stringier.EditDistance.Levenshtein(System.Memory{System.Char},System.Char*,System.Int32)
  name: Levenshtein(Memory<Char>, Char*, Int32)
  href: api/Stringier.EditDistance.html#Stringier_EditDistance_Levenshtein_System_Memory_System_Char__System_Char__System_Int32_
  commentId: M:Stringier.EditDistance.Levenshtein(System.Memory{System.Char},System.Char*,System.Int32)
  name.vb: Levenshtein(Memory(Of Char), Char*, Int32)
  fullName: Stringier.EditDistance.Levenshtein(System.Memory<System.Char>, System.Char*, System.Int32)
  fullName.vb: Stringier.EditDistance.Levenshtein(System.Memory(Of System.Char), System.Char*, System.Int32)
  nameWithType: EditDistance.Levenshtein(Memory<Char>, Char*, Int32)
  nameWithType.vb: EditDistance.Levenshtein(Memory(Of Char), Char*, Int32)
- uid: Stringier.EditDistance.Levenshtein(System.Memory{System.Char},System.Char[])
  name: Levenshtein(Memory<Char>, Char[])
  href: api/Stringier.EditDistance.html#Stringier_EditDistance_Levenshtein_System_Memory_System_Char__System_Char___
  commentId: M:Stringier.EditDistance.Levenshtein(System.Memory{System.Char},System.Char[])
  name.vb: Levenshtein(Memory(Of Char), Char())
  fullName: Stringier.EditDistance.Levenshtein(System.Memory<System.Char>, System.Char[])
  fullName.vb: Stringier.EditDistance.Levenshtein(System.Memory(Of System.Char), System.Char())
  nameWithType: EditDistance.Levenshtein(Memory<Char>, Char[])
  nameWithType.vb: EditDistance.Levenshtein(Memory(Of Char), Char())
- uid: Stringier.EditDistance.Levenshtein(System.Memory{System.Char},System.Memory{System.Char})
  name: Levenshtein(Memory<Char>, Memory<Char>)
  href: api/Stringier.EditDistance.html#Stringier_EditDistance_Levenshtein_System_Memory_System_Char__System_Memory_System_Char__
  commentId: M:Stringier.EditDistance.Levenshtein(System.Memory{System.Char},System.Memory{System.Char})
  name.vb: Levenshtein(Memory(Of Char), Memory(Of Char))
  fullName: Stringier.EditDistance.Levenshtein(System.Memory<System.Char>, System.Memory<System.Char>)
  fullName.vb: Stringier.EditDistance.Levenshtein(System.Memory(Of System.Char), System.Memory(Of System.Char))
  nameWithType: EditDistance.Levenshtein(Memory<Char>, Memory<Char>)
  nameWithType.vb: EditDistance.Levenshtein(Memory(Of Char), Memory(Of Char))
- uid: Stringier.EditDistance.Levenshtein(System.Memory{System.Char},System.ReadOnlyMemory{System.Char})
  name: Levenshtein(Memory<Char>, ReadOnlyMemory<Char>)
  href: api/Stringier.EditDistance.html#Stringier_EditDistance_Levenshtein_System_Memory_System_Char__System_ReadOnlyMemory_System_Char__
  commentId: M:Stringier.EditDistance.Levenshtein(System.Memory{System.Char},System.ReadOnlyMemory{System.Char})
  name.vb: Levenshtein(Memory(Of Char), ReadOnlyMemory(Of Char))
  fullName: Stringier.EditDistance.Levenshtein(System.Memory<System.Char>, System.ReadOnlyMemory<System.Char>)
  fullName.vb: Stringier.EditDistance.Levenshtein(System.Memory(Of System.Char), System.ReadOnlyMemory(Of System.Char))
  nameWithType: EditDistance.Levenshtein(Memory<Char>, ReadOnlyMemory<Char>)
  nameWithType.vb: EditDistance.Levenshtein(Memory(Of Char), ReadOnlyMemory(Of Char))
- uid: Stringier.EditDistance.Levenshtein(System.Memory{System.Char},System.ReadOnlySpan{System.Char})
  name: Levenshtein(Memory<Char>, ReadOnlySpan<Char>)
  href: api/Stringier.EditDistance.html#Stringier_EditDistance_Levenshtein_System_Memory_System_Char__System_ReadOnlySpan_System_Char__
  commentId: M:Stringier.EditDistance.Levenshtein(System.Memory{System.Char},System.ReadOnlySpan{System.Char})
  name.vb: Levenshtein(Memory(Of Char), ReadOnlySpan(Of Char))
  fullName: Stringier.EditDistance.Levenshtein(System.Memory<System.Char>, System.ReadOnlySpan<System.Char>)
  fullName.vb: Stringier.EditDistance.Levenshtein(System.Memory(Of System.Char), System.ReadOnlySpan(Of System.Char))
  nameWithType: EditDistance.Levenshtein(Memory<Char>, ReadOnlySpan<Char>)
  nameWithType.vb: EditDistance.Levenshtein(Memory(Of Char), ReadOnlySpan(Of Char))
- uid: Stringier.EditDistance.Levenshtein(System.Memory{System.Char},System.Span{System.Char})
  name: Levenshtein(Memory<Char>, Span<Char>)
  href: api/Stringier.EditDistance.html#Stringier_EditDistance_Levenshtein_System_Memory_System_Char__System_Span_System_Char__
  commentId: M:Stringier.EditDistance.Levenshtein(System.Memory{System.Char},System.Span{System.Char})
  name.vb: Levenshtein(Memory(Of Char), Span(Of Char))
  fullName: Stringier.EditDistance.Levenshtein(System.Memory<System.Char>, System.Span<System.Char>)
  fullName.vb: Stringier.EditDistance.Levenshtein(System.Memory(Of System.Char), System.Span(Of System.Char))
  nameWithType: EditDistance.Levenshtein(Memory<Char>, Span<Char>)
  nameWithType.vb: EditDistance.Levenshtein(Memory(Of Char), Span(Of Char))
- uid: Stringier.EditDistance.Levenshtein(System.Memory{System.Char},System.String)
  name: Levenshtein(Memory<Char>, String)
  href: api/Stringier.EditDistance.html#Stringier_EditDistance_Levenshtein_System_Memory_System_Char__System_String_
  commentId: M:Stringier.EditDistance.Levenshtein(System.Memory{System.Char},System.String)
  name.vb: Levenshtein(Memory(Of Char), String)
  fullName: Stringier.EditDistance.Levenshtein(System.Memory<System.Char>, System.String)
  fullName.vb: Stringier.EditDistance.Levenshtein(System.Memory(Of System.Char), System.String)
  nameWithType: EditDistance.Levenshtein(Memory<Char>, String)
  nameWithType.vb: EditDistance.Levenshtein(Memory(Of Char), String)
- uid: Stringier.EditDistance.Levenshtein(System.ReadOnlyMemory{System.Char},System.Char*,System.Int32)
  name: Levenshtein(ReadOnlyMemory<Char>, Char*, Int32)
  href: api/Stringier.EditDistance.html#Stringier_EditDistance_Levenshtein_System_ReadOnlyMemory_System_Char__System_Char__System_Int32_
  commentId: M:Stringier.EditDistance.Levenshtein(System.ReadOnlyMemory{System.Char},System.Char*,System.Int32)
  name.vb: Levenshtein(ReadOnlyMemory(Of Char), Char*, Int32)
  fullName: Stringier.EditDistance.Levenshtein(System.ReadOnlyMemory<System.Char>, System.Char*, System.Int32)
  fullName.vb: Stringier.EditDistance.Levenshtein(System.ReadOnlyMemory(Of System.Char), System.Char*, System.Int32)
  nameWithType: EditDistance.Levenshtein(ReadOnlyMemory<Char>, Char*, Int32)
  nameWithType.vb: EditDistance.Levenshtein(ReadOnlyMemory(Of Char), Char*, Int32)
- uid: Stringier.EditDistance.Levenshtein(System.ReadOnlyMemory{System.Char},System.Char[])
  name: Levenshtein(ReadOnlyMemory<Char>, Char[])
  href: api/Stringier.EditDistance.html#Stringier_EditDistance_Levenshtein_System_ReadOnlyMemory_System_Char__System_Char___
  commentId: M:Stringier.EditDistance.Levenshtein(System.ReadOnlyMemory{System.Char},System.Char[])
  name.vb: Levenshtein(ReadOnlyMemory(Of Char), Char())
  fullName: Stringier.EditDistance.Levenshtein(System.ReadOnlyMemory<System.Char>, System.Char[])
  fullName.vb: Stringier.EditDistance.Levenshtein(System.ReadOnlyMemory(Of System.Char), System.Char())
  nameWithType: EditDistance.Levenshtein(ReadOnlyMemory<Char>, Char[])
  nameWithType.vb: EditDistance.Levenshtein(ReadOnlyMemory(Of Char), Char())
- uid: Stringier.EditDistance.Levenshtein(System.ReadOnlyMemory{System.Char},System.Memory{System.Char})
  name: Levenshtein(ReadOnlyMemory<Char>, Memory<Char>)
  href: api/Stringier.EditDistance.html#Stringier_EditDistance_Levenshtein_System_ReadOnlyMemory_System_Char__System_Memory_System_Char__
  commentId: M:Stringier.EditDistance.Levenshtein(System.ReadOnlyMemory{System.Char},System.Memory{System.Char})
  name.vb: Levenshtein(ReadOnlyMemory(Of Char), Memory(Of Char))
  fullName: Stringier.EditDistance.Levenshtein(System.ReadOnlyMemory<System.Char>, System.Memory<System.Char>)
  fullName.vb: Stringier.EditDistance.Levenshtein(System.ReadOnlyMemory(Of System.Char), System.Memory(Of System.Char))
  nameWithType: EditDistance.Levenshtein(ReadOnlyMemory<Char>, Memory<Char>)
  nameWithType.vb: EditDistance.Levenshtein(ReadOnlyMemory(Of Char), Memory(Of Char))
- uid: Stringier.EditDistance.Levenshtein(System.ReadOnlyMemory{System.Char},System.ReadOnlyMemory{System.Char})
  name: Levenshtein(ReadOnlyMemory<Char>, ReadOnlyMemory<Char>)
  href: api/Stringier.EditDistance.html#Stringier_EditDistance_Levenshtein_System_ReadOnlyMemory_System_Char__System_ReadOnlyMemory_System_Char__
  commentId: M:Stringier.EditDistance.Levenshtein(System.ReadOnlyMemory{System.Char},System.ReadOnlyMemory{System.Char})
  name.vb: Levenshtein(ReadOnlyMemory(Of Char), ReadOnlyMemory(Of Char))
  fullName: Stringier.EditDistance.Levenshtein(System.ReadOnlyMemory<System.Char>, System.ReadOnlyMemory<System.Char>)
  fullName.vb: Stringier.EditDistance.Levenshtein(System.ReadOnlyMemory(Of System.Char), System.ReadOnlyMemory(Of System.Char))
  nameWithType: EditDistance.Levenshtein(ReadOnlyMemory<Char>, ReadOnlyMemory<Char>)
  nameWithType.vb: EditDistance.Levenshtein(ReadOnlyMemory(Of Char), ReadOnlyMemory(Of Char))
- uid: Stringier.EditDistance.Levenshtein(System.ReadOnlyMemory{System.Char},System.ReadOnlySpan{System.Char})
  name: Levenshtein(ReadOnlyMemory<Char>, ReadOnlySpan<Char>)
  href: api/Stringier.EditDistance.html#Stringier_EditDistance_Levenshtein_System_ReadOnlyMemory_System_Char__System_ReadOnlySpan_System_Char__
  commentId: M:Stringier.EditDistance.Levenshtein(System.ReadOnlyMemory{System.Char},System.ReadOnlySpan{System.Char})
  name.vb: Levenshtein(ReadOnlyMemory(Of Char), ReadOnlySpan(Of Char))
  fullName: Stringier.EditDistance.Levenshtein(System.ReadOnlyMemory<System.Char>, System.ReadOnlySpan<System.Char>)
  fullName.vb: Stringier.EditDistance.Levenshtein(System.ReadOnlyMemory(Of System.Char), System.ReadOnlySpan(Of System.Char))
  nameWithType: EditDistance.Levenshtein(ReadOnlyMemory<Char>, ReadOnlySpan<Char>)
  nameWithType.vb: EditDistance.Levenshtein(ReadOnlyMemory(Of Char), ReadOnlySpan(Of Char))
- uid: Stringier.EditDistance.Levenshtein(System.ReadOnlyMemory{System.Char},System.Span{System.Char})
  name: Levenshtein(ReadOnlyMemory<Char>, Span<Char>)
  href: api/Stringier.EditDistance.html#Stringier_EditDistance_Levenshtein_System_ReadOnlyMemory_System_Char__System_Span_System_Char__
  commentId: M:Stringier.EditDistance.Levenshtein(System.ReadOnlyMemory{System.Char},System.Span{System.Char})
  name.vb: Levenshtein(ReadOnlyMemory(Of Char), Span(Of Char))
  fullName: Stringier.EditDistance.Levenshtein(System.ReadOnlyMemory<System.Char>, System.Span<System.Char>)
  fullName.vb: Stringier.EditDistance.Levenshtein(System.ReadOnlyMemory(Of System.Char), System.Span(Of System.Char))
  nameWithType: EditDistance.Levenshtein(ReadOnlyMemory<Char>, Span<Char>)
  nameWithType.vb: EditDistance.Levenshtein(ReadOnlyMemory(Of Char), Span(Of Char))
- uid: Stringier.EditDistance.Levenshtein(System.ReadOnlyMemory{System.Char},System.String)
  name: Levenshtein(ReadOnlyMemory<Char>, String)
  href: api/Stringier.EditDistance.html#Stringier_EditDistance_Levenshtein_System_ReadOnlyMemory_System_Char__System_String_
  commentId: M:Stringier.EditDistance.Levenshtein(System.ReadOnlyMemory{System.Char},System.String)
  name.vb: Levenshtein(ReadOnlyMemory(Of Char), String)
  fullName: Stringier.EditDistance.Levenshtein(System.ReadOnlyMemory<System.Char>, System.String)
  fullName.vb: Stringier.EditDistance.Levenshtein(System.ReadOnlyMemory(Of System.Char), System.String)
  nameWithType: EditDistance.Levenshtein(ReadOnlyMemory<Char>, String)
  nameWithType.vb: EditDistance.Levenshtein(ReadOnlyMemory(Of Char), String)
- uid: Stringier.EditDistance.Levenshtein(System.ReadOnlySpan{System.Char},System.Char*,System.Int32)
  name: Levenshtein(ReadOnlySpan<Char>, Char*, Int32)
  href: api/Stringier.EditDistance.html#Stringier_EditDistance_Levenshtein_System_ReadOnlySpan_System_Char__System_Char__System_Int32_
  commentId: M:Stringier.EditDistance.Levenshtein(System.ReadOnlySpan{System.Char},System.Char*,System.Int32)
  name.vb: Levenshtein(ReadOnlySpan(Of Char), Char*, Int32)
  fullName: Stringier.EditDistance.Levenshtein(System.ReadOnlySpan<System.Char>, System.Char*, System.Int32)
  fullName.vb: Stringier.EditDistance.Levenshtein(System.ReadOnlySpan(Of System.Char), System.Char*, System.Int32)
  nameWithType: EditDistance.Levenshtein(ReadOnlySpan<Char>, Char*, Int32)
  nameWithType.vb: EditDistance.Levenshtein(ReadOnlySpan(Of Char), Char*, Int32)
- uid: Stringier.EditDistance.Levenshtein(System.ReadOnlySpan{System.Char},System.Char[])
  name: Levenshtein(ReadOnlySpan<Char>, Char[])
  href: api/Stringier.EditDistance.html#Stringier_EditDistance_Levenshtein_System_ReadOnlySpan_System_Char__System_Char___
  commentId: M:Stringier.EditDistance.Levenshtein(System.ReadOnlySpan{System.Char},System.Char[])
  name.vb: Levenshtein(ReadOnlySpan(Of Char), Char())
  fullName: Stringier.EditDistance.Levenshtein(System.ReadOnlySpan<System.Char>, System.Char[])
  fullName.vb: Stringier.EditDistance.Levenshtein(System.ReadOnlySpan(Of System.Char), System.Char())
  nameWithType: EditDistance.Levenshtein(ReadOnlySpan<Char>, Char[])
  nameWithType.vb: EditDistance.Levenshtein(ReadOnlySpan(Of Char), Char())
- uid: Stringier.EditDistance.Levenshtein(System.ReadOnlySpan{System.Char},System.Memory{System.Char})
  name: Levenshtein(ReadOnlySpan<Char>, Memory<Char>)
  href: api/Stringier.EditDistance.html#Stringier_EditDistance_Levenshtein_System_ReadOnlySpan_System_Char__System_Memory_System_Char__
  commentId: M:Stringier.EditDistance.Levenshtein(System.ReadOnlySpan{System.Char},System.Memory{System.Char})
  name.vb: Levenshtein(ReadOnlySpan(Of Char), Memory(Of Char))
  fullName: Stringier.EditDistance.Levenshtein(System.ReadOnlySpan<System.Char>, System.Memory<System.Char>)
  fullName.vb: Stringier.EditDistance.Levenshtein(System.ReadOnlySpan(Of System.Char), System.Memory(Of System.Char))
  nameWithType: EditDistance.Levenshtein(ReadOnlySpan<Char>, Memory<Char>)
  nameWithType.vb: EditDistance.Levenshtein(ReadOnlySpan(Of Char), Memory(Of Char))
- uid: Stringier.EditDistance.Levenshtein(System.ReadOnlySpan{System.Char},System.ReadOnlyMemory{System.Char})
  name: Levenshtein(ReadOnlySpan<Char>, ReadOnlyMemory<Char>)
  href: api/Stringier.EditDistance.html#Stringier_EditDistance_Levenshtein_System_ReadOnlySpan_System_Char__System_ReadOnlyMemory_System_Char__
  commentId: M:Stringier.EditDistance.Levenshtein(System.ReadOnlySpan{System.Char},System.ReadOnlyMemory{System.Char})
  name.vb: Levenshtein(ReadOnlySpan(Of Char), ReadOnlyMemory(Of Char))
  fullName: Stringier.EditDistance.Levenshtein(System.ReadOnlySpan<System.Char>, System.ReadOnlyMemory<System.Char>)
  fullName.vb: Stringier.EditDistance.Levenshtein(System.ReadOnlySpan(Of System.Char), System.ReadOnlyMemory(Of System.Char))
  nameWithType: EditDistance.Levenshtein(ReadOnlySpan<Char>, ReadOnlyMemory<Char>)
  nameWithType.vb: EditDistance.Levenshtein(ReadOnlySpan(Of Char), ReadOnlyMemory(Of Char))
- uid: Stringier.EditDistance.Levenshtein(System.ReadOnlySpan{System.Char},System.ReadOnlySpan{System.Char})
  name: Levenshtein(ReadOnlySpan<Char>, ReadOnlySpan<Char>)
  href: api/Stringier.EditDistance.html#Stringier_EditDistance_Levenshtein_System_ReadOnlySpan_System_Char__System_ReadOnlySpan_System_Char__
  commentId: M:Stringier.EditDistance.Levenshtein(System.ReadOnlySpan{System.Char},System.ReadOnlySpan{System.Char})
  name.vb: Levenshtein(ReadOnlySpan(Of Char), ReadOnlySpan(Of Char))
  fullName: Stringier.EditDistance.Levenshtein(System.ReadOnlySpan<System.Char>, System.ReadOnlySpan<System.Char>)
  fullName.vb: Stringier.EditDistance.Levenshtein(System.ReadOnlySpan(Of System.Char), System.ReadOnlySpan(Of System.Char))
  nameWithType: EditDistance.Levenshtein(ReadOnlySpan<Char>, ReadOnlySpan<Char>)
  nameWithType.vb: EditDistance.Levenshtein(ReadOnlySpan(Of Char), ReadOnlySpan(Of Char))
- uid: Stringier.EditDistance.Levenshtein(System.ReadOnlySpan{System.Char},System.Span{System.Char})
  name: Levenshtein(ReadOnlySpan<Char>, Span<Char>)
  href: api/Stringier.EditDistance.html#Stringier_EditDistance_Levenshtein_System_ReadOnlySpan_System_Char__System_Span_System_Char__
  commentId: M:Stringier.EditDistance.Levenshtein(System.ReadOnlySpan{System.Char},System.Span{System.Char})
  name.vb: Levenshtein(ReadOnlySpan(Of Char), Span(Of Char))
  fullName: Stringier.EditDistance.Levenshtein(System.ReadOnlySpan<System.Char>, System.Span<System.Char>)
  fullName.vb: Stringier.EditDistance.Levenshtein(System.ReadOnlySpan(Of System.Char), System.Span(Of System.Char))
  nameWithType: EditDistance.Levenshtein(ReadOnlySpan<Char>, Span<Char>)
  nameWithType.vb: EditDistance.Levenshtein(ReadOnlySpan(Of Char), Span(Of Char))
- uid: Stringier.EditDistance.Levenshtein(System.ReadOnlySpan{System.Char},System.String)
  name: Levenshtein(ReadOnlySpan<Char>, String)
  href: api/Stringier.EditDistance.html#Stringier_EditDistance_Levenshtein_System_ReadOnlySpan_System_Char__System_String_
  commentId: M:Stringier.EditDistance.Levenshtein(System.ReadOnlySpan{System.Char},System.String)
  name.vb: Levenshtein(ReadOnlySpan(Of Char), String)
  fullName: Stringier.EditDistance.Levenshtein(System.ReadOnlySpan<System.Char>, System.String)
  fullName.vb: Stringier.EditDistance.Levenshtein(System.ReadOnlySpan(Of System.Char), System.String)
  nameWithType: EditDistance.Levenshtein(ReadOnlySpan<Char>, String)
  nameWithType.vb: EditDistance.Levenshtein(ReadOnlySpan(Of Char), String)
- uid: Stringier.EditDistance.Levenshtein(System.Span{System.Char},System.Char*,System.Int32)
  name: Levenshtein(Span<Char>, Char*, Int32)
  href: api/Stringier.EditDistance.html#Stringier_EditDistance_Levenshtein_System_Span_System_Char__System_Char__System_Int32_
  commentId: M:Stringier.EditDistance.Levenshtein(System.Span{System.Char},System.Char*,System.Int32)
  name.vb: Levenshtein(Span(Of Char), Char*, Int32)
  fullName: Stringier.EditDistance.Levenshtein(System.Span<System.Char>, System.Char*, System.Int32)
  fullName.vb: Stringier.EditDistance.Levenshtein(System.Span(Of System.Char), System.Char*, System.Int32)
  nameWithType: EditDistance.Levenshtein(Span<Char>, Char*, Int32)
  nameWithType.vb: EditDistance.Levenshtein(Span(Of Char), Char*, Int32)
- uid: Stringier.EditDistance.Levenshtein(System.Span{System.Char},System.Char[])
  name: Levenshtein(Span<Char>, Char[])
  href: api/Stringier.EditDistance.html#Stringier_EditDistance_Levenshtein_System_Span_System_Char__System_Char___
  commentId: M:Stringier.EditDistance.Levenshtein(System.Span{System.Char},System.Char[])
  name.vb: Levenshtein(Span(Of Char), Char())
  fullName: Stringier.EditDistance.Levenshtein(System.Span<System.Char>, System.Char[])
  fullName.vb: Stringier.EditDistance.Levenshtein(System.Span(Of System.Char), System.Char())
  nameWithType: EditDistance.Levenshtein(Span<Char>, Char[])
  nameWithType.vb: EditDistance.Levenshtein(Span(Of Char), Char())
- uid: Stringier.EditDistance.Levenshtein(System.Span{System.Char},System.Memory{System.Char})
  name: Levenshtein(Span<Char>, Memory<Char>)
  href: api/Stringier.EditDistance.html#Stringier_EditDistance_Levenshtein_System_Span_System_Char__System_Memory_System_Char__
  commentId: M:Stringier.EditDistance.Levenshtein(System.Span{System.Char},System.Memory{System.Char})
  name.vb: Levenshtein(Span(Of Char), Memory(Of Char))
  fullName: Stringier.EditDistance.Levenshtein(System.Span<System.Char>, System.Memory<System.Char>)
  fullName.vb: Stringier.EditDistance.Levenshtein(System.Span(Of System.Char), System.Memory(Of System.Char))
  nameWithType: EditDistance.Levenshtein(Span<Char>, Memory<Char>)
  nameWithType.vb: EditDistance.Levenshtein(Span(Of Char), Memory(Of Char))
- uid: Stringier.EditDistance.Levenshtein(System.Span{System.Char},System.ReadOnlyMemory{System.Char})
  name: Levenshtein(Span<Char>, ReadOnlyMemory<Char>)
  href: api/Stringier.EditDistance.html#Stringier_EditDistance_Levenshtein_System_Span_System_Char__System_ReadOnlyMemory_System_Char__
  commentId: M:Stringier.EditDistance.Levenshtein(System.Span{System.Char},System.ReadOnlyMemory{System.Char})
  name.vb: Levenshtein(Span(Of Char), ReadOnlyMemory(Of Char))
  fullName: Stringier.EditDistance.Levenshtein(System.Span<System.Char>, System.ReadOnlyMemory<System.Char>)
  fullName.vb: Stringier.EditDistance.Levenshtein(System.Span(Of System.Char), System.ReadOnlyMemory(Of System.Char))
  nameWithType: EditDistance.Levenshtein(Span<Char>, ReadOnlyMemory<Char>)
  nameWithType.vb: EditDistance.Levenshtein(Span(Of Char), ReadOnlyMemory(Of Char))
- uid: Stringier.EditDistance.Levenshtein(System.Span{System.Char},System.ReadOnlySpan{System.Char})
  name: Levenshtein(Span<Char>, ReadOnlySpan<Char>)
  href: api/Stringier.EditDistance.html#Stringier_EditDistance_Levenshtein_System_Span_System_Char__System_ReadOnlySpan_System_Char__
  commentId: M:Stringier.EditDistance.Levenshtein(System.Span{System.Char},System.ReadOnlySpan{System.Char})
  name.vb: Levenshtein(Span(Of Char), ReadOnlySpan(Of Char))
  fullName: Stringier.EditDistance.Levenshtein(System.Span<System.Char>, System.ReadOnlySpan<System.Char>)
  fullName.vb: Stringier.EditDistance.Levenshtein(System.Span(Of System.Char), System.ReadOnlySpan(Of System.Char))
  nameWithType: EditDistance.Levenshtein(Span<Char>, ReadOnlySpan<Char>)
  nameWithType.vb: EditDistance.Levenshtein(Span(Of Char), ReadOnlySpan(Of Char))
- uid: Stringier.EditDistance.Levenshtein(System.Span{System.Char},System.Span{System.Char})
  name: Levenshtein(Span<Char>, Span<Char>)
  href: api/Stringier.EditDistance.html#Stringier_EditDistance_Levenshtein_System_Span_System_Char__System_Span_System_Char__
  commentId: M:Stringier.EditDistance.Levenshtein(System.Span{System.Char},System.Span{System.Char})
  name.vb: Levenshtein(Span(Of Char), Span(Of Char))
  fullName: Stringier.EditDistance.Levenshtein(System.Span<System.Char>, System.Span<System.Char>)
  fullName.vb: Stringier.EditDistance.Levenshtein(System.Span(Of System.Char), System.Span(Of System.Char))
  nameWithType: EditDistance.Levenshtein(Span<Char>, Span<Char>)
  nameWithType.vb: EditDistance.Levenshtein(Span(Of Char), Span(Of Char))
- uid: Stringier.EditDistance.Levenshtein(System.Span{System.Char},System.String)
  name: Levenshtein(Span<Char>, String)
  href: api/Stringier.EditDistance.html#Stringier_EditDistance_Levenshtein_System_Span_System_Char__System_String_
  commentId: M:Stringier.EditDistance.Levenshtein(System.Span{System.Char},System.String)
  name.vb: Levenshtein(Span(Of Char), String)
  fullName: Stringier.EditDistance.Levenshtein(System.Span<System.Char>, System.String)
  fullName.vb: Stringier.EditDistance.Levenshtein(System.Span(Of System.Char), System.String)
  nameWithType: EditDistance.Levenshtein(Span<Char>, String)
  nameWithType.vb: EditDistance.Levenshtein(Span(Of Char), String)
- uid: Stringier.EditDistance.Levenshtein(System.String,System.Char*,System.Int32)
  name: Levenshtein(String, Char*, Int32)
  href: api/Stringier.EditDistance.html#Stringier_EditDistance_Levenshtein_System_String_System_Char__System_Int32_
  commentId: M:Stringier.EditDistance.Levenshtein(System.String,System.Char*,System.Int32)
  fullName: Stringier.EditDistance.Levenshtein(System.String, System.Char*, System.Int32)
  nameWithType: EditDistance.Levenshtein(String, Char*, Int32)
- uid: Stringier.EditDistance.Levenshtein(System.String,System.Char[])
  name: Levenshtein(String, Char[])
  href: api/Stringier.EditDistance.html#Stringier_EditDistance_Levenshtein_System_String_System_Char___
  commentId: M:Stringier.EditDistance.Levenshtein(System.String,System.Char[])
  name.vb: Levenshtein(String, Char())
  fullName: Stringier.EditDistance.Levenshtein(System.String, System.Char[])
  fullName.vb: Stringier.EditDistance.Levenshtein(System.String, System.Char())
  nameWithType: EditDistance.Levenshtein(String, Char[])
  nameWithType.vb: EditDistance.Levenshtein(String, Char())
- uid: Stringier.EditDistance.Levenshtein(System.String,System.Memory{System.Char})
  name: Levenshtein(String, Memory<Char>)
  href: api/Stringier.EditDistance.html#Stringier_EditDistance_Levenshtein_System_String_System_Memory_System_Char__
  commentId: M:Stringier.EditDistance.Levenshtein(System.String,System.Memory{System.Char})
  name.vb: Levenshtein(String, Memory(Of Char))
  fullName: Stringier.EditDistance.Levenshtein(System.String, System.Memory<System.Char>)
  fullName.vb: Stringier.EditDistance.Levenshtein(System.String, System.Memory(Of System.Char))
  nameWithType: EditDistance.Levenshtein(String, Memory<Char>)
  nameWithType.vb: EditDistance.Levenshtein(String, Memory(Of Char))
- uid: Stringier.EditDistance.Levenshtein(System.String,System.ReadOnlyMemory{System.Char})
  name: Levenshtein(String, ReadOnlyMemory<Char>)
  href: api/Stringier.EditDistance.html#Stringier_EditDistance_Levenshtein_System_String_System_ReadOnlyMemory_System_Char__
  commentId: M:Stringier.EditDistance.Levenshtein(System.String,System.ReadOnlyMemory{System.Char})
  name.vb: Levenshtein(String, ReadOnlyMemory(Of Char))
  fullName: Stringier.EditDistance.Levenshtein(System.String, System.ReadOnlyMemory<System.Char>)
  fullName.vb: Stringier.EditDistance.Levenshtein(System.String, System.ReadOnlyMemory(Of System.Char))
  nameWithType: EditDistance.Levenshtein(String, ReadOnlyMemory<Char>)
  nameWithType.vb: EditDistance.Levenshtein(String, ReadOnlyMemory(Of Char))
- uid: Stringier.EditDistance.Levenshtein(System.String,System.ReadOnlySpan{System.Char})
  name: Levenshtein(String, ReadOnlySpan<Char>)
  href: api/Stringier.EditDistance.html#Stringier_EditDistance_Levenshtein_System_String_System_ReadOnlySpan_System_Char__
  commentId: M:Stringier.EditDistance.Levenshtein(System.String,System.ReadOnlySpan{System.Char})
  name.vb: Levenshtein(String, ReadOnlySpan(Of Char))
  fullName: Stringier.EditDistance.Levenshtein(System.String, System.ReadOnlySpan<System.Char>)
  fullName.vb: Stringier.EditDistance.Levenshtein(System.String, System.ReadOnlySpan(Of System.Char))
  nameWithType: EditDistance.Levenshtein(String, ReadOnlySpan<Char>)
  nameWithType.vb: EditDistance.Levenshtein(String, ReadOnlySpan(Of Char))
- uid: Stringier.EditDistance.Levenshtein(System.String,System.Span{System.Char})
  name: Levenshtein(String, Span<Char>)
  href: api/Stringier.EditDistance.html#Stringier_EditDistance_Levenshtein_System_String_System_Span_System_Char__
  commentId: M:Stringier.EditDistance.Levenshtein(System.String,System.Span{System.Char})
  name.vb: Levenshtein(String, Span(Of Char))
  fullName: Stringier.EditDistance.Levenshtein(System.String, System.Span<System.Char>)
  fullName.vb: Stringier.EditDistance.Levenshtein(System.String, System.Span(Of System.Char))
  nameWithType: EditDistance.Levenshtein(String, Span<Char>)
  nameWithType.vb: EditDistance.Levenshtein(String, Span(Of Char))
- uid: Stringier.EditDistance.Levenshtein(System.String,System.String)
  name: Levenshtein(String, String)
  href: api/Stringier.EditDistance.html#Stringier_EditDistance_Levenshtein_System_String_System_String_
  commentId: M:Stringier.EditDistance.Levenshtein(System.String,System.String)
  fullName: Stringier.EditDistance.Levenshtein(System.String, System.String)
  nameWithType: EditDistance.Levenshtein(String, String)
- uid: Stringier.EditDistance.Levenshtein*
  name: Levenshtein
  href: api/Stringier.EditDistance.html#Stringier_EditDistance_Levenshtein_
  commentId: Overload:Stringier.EditDistance.Levenshtein
  isSpec: "True"
  fullName: Stringier.EditDistance.Levenshtein
  nameWithType: EditDistance.Levenshtein
- uid: Stringier.Patterns
  name: Stringier.Patterns
  href: api/Stringier.Patterns.html
  commentId: N:Stringier.Patterns
  fullName: Stringier.Patterns
  nameWithType: Stringier.Patterns
- uid: Stringier.Patterns.Bias
  name: Bias
  href: api/Stringier.Patterns.Bias.html
  commentId: T:Stringier.Patterns.Bias
  fullName: Stringier.Patterns.Bias
  nameWithType: Bias
- uid: Stringier.Patterns.Bias.Head
  name: Head
  href: api/Stringier.Patterns.Bias.html#Stringier_Patterns_Bias_Head
  commentId: F:Stringier.Patterns.Bias.Head
  fullName: Stringier.Patterns.Bias.Head
  nameWithType: Bias.Head
- uid: Stringier.Patterns.Bias.Tail
  name: Tail
  href: api/Stringier.Patterns.Bias.html#Stringier_Patterns_Bias_Tail
  commentId: F:Stringier.Patterns.Bias.Tail
  fullName: Stringier.Patterns.Bias.Tail
  nameWithType: Bias.Tail
- uid: Stringier.Patterns.Capture
  name: Capture
  href: api/Stringier.Patterns.Capture.html
  commentId: T:Stringier.Patterns.Capture
  fullName: Stringier.Patterns.Capture
  nameWithType: Capture
- uid: Stringier.Patterns.Capture.Count
  name: Count
  href: api/Stringier.Patterns.Capture.html#Stringier_Patterns_Capture_Count
  commentId: P:Stringier.Patterns.Capture.Count
  fullName: Stringier.Patterns.Capture.Count
  nameWithType: Capture.Count
- uid: Stringier.Patterns.Capture.Count*
  name: Count
  href: api/Stringier.Patterns.Capture.html#Stringier_Patterns_Capture_Count_
  commentId: Overload:Stringier.Patterns.Capture.Count
  isSpec: "True"
  fullName: Stringier.Patterns.Capture.Count
  nameWithType: Capture.Count
- uid: Stringier.Patterns.Capture.Enumerator
  name: Capture.Enumerator
  href: api/Stringier.Patterns.Capture.Enumerator.html
  commentId: T:Stringier.Patterns.Capture.Enumerator
  fullName: Stringier.Patterns.Capture.Enumerator
  nameWithType: Capture.Enumerator
- uid: Stringier.Patterns.Capture.Enumerator.#ctor(System.ReadOnlyMemory{System.Char})
  name: Enumerator(ReadOnlyMemory<Char>)
  href: api/Stringier.Patterns.Capture.Enumerator.html#Stringier_Patterns_Capture_Enumerator__ctor_System_ReadOnlyMemory_System_Char__
  commentId: M:Stringier.Patterns.Capture.Enumerator.#ctor(System.ReadOnlyMemory{System.Char})
  name.vb: Enumerator(ReadOnlyMemory(Of Char))
  fullName: Stringier.Patterns.Capture.Enumerator.Enumerator(System.ReadOnlyMemory<System.Char>)
  fullName.vb: Stringier.Patterns.Capture.Enumerator.Enumerator(System.ReadOnlyMemory(Of System.Char))
  nameWithType: Capture.Enumerator.Enumerator(ReadOnlyMemory<Char>)
  nameWithType.vb: Capture.Enumerator.Enumerator(ReadOnlyMemory(Of Char))
- uid: Stringier.Patterns.Capture.Enumerator.#ctor*
  name: Enumerator
  href: api/Stringier.Patterns.Capture.Enumerator.html#Stringier_Patterns_Capture_Enumerator__ctor_
  commentId: Overload:Stringier.Patterns.Capture.Enumerator.#ctor
  isSpec: "True"
  fullName: Stringier.Patterns.Capture.Enumerator.Enumerator
  nameWithType: Capture.Enumerator.Enumerator
- uid: Stringier.Patterns.Capture.Enumerator.Count
  name: Count
  href: api/Stringier.Patterns.Capture.Enumerator.html#Stringier_Patterns_Capture_Enumerator_Count
  commentId: P:Stringier.Patterns.Capture.Enumerator.Count
  fullName: Stringier.Patterns.Capture.Enumerator.Count
  nameWithType: Capture.Enumerator.Count
- uid: Stringier.Patterns.Capture.Enumerator.Count*
  name: Count
  href: api/Stringier.Patterns.Capture.Enumerator.html#Stringier_Patterns_Capture_Enumerator_Count_
  commentId: Overload:Stringier.Patterns.Capture.Enumerator.Count
  isSpec: "True"
  fullName: Stringier.Patterns.Capture.Enumerator.Count
  nameWithType: Capture.Enumerator.Count
- uid: Stringier.Patterns.Capture.Enumerator.Current
  name: Current
  href: api/Stringier.Patterns.Capture.Enumerator.html#Stringier_Patterns_Capture_Enumerator_Current
  commentId: P:Stringier.Patterns.Capture.Enumerator.Current
  fullName: Stringier.Patterns.Capture.Enumerator.Current
  nameWithType: Capture.Enumerator.Current
- uid: Stringier.Patterns.Capture.Enumerator.Current*
  name: Current
  href: api/Stringier.Patterns.Capture.Enumerator.html#Stringier_Patterns_Capture_Enumerator_Current_
  commentId: Overload:Stringier.Patterns.Capture.Enumerator.Current
  isSpec: "True"
  fullName: Stringier.Patterns.Capture.Enumerator.Current
  nameWithType: Capture.Enumerator.Current
- uid: Stringier.Patterns.Capture.Enumerator.Dispose
  name: Dispose()
  href: api/Stringier.Patterns.Capture.Enumerator.html#Stringier_Patterns_Capture_Enumerator_Dispose
  commentId: M:Stringier.Patterns.Capture.Enumerator.Dispose
  fullName: Stringier.Patterns.Capture.Enumerator.Dispose()
  nameWithType: Capture.Enumerator.Dispose()
- uid: Stringier.Patterns.Capture.Enumerator.Dispose*
  name: Dispose
  href: api/Stringier.Patterns.Capture.Enumerator.html#Stringier_Patterns_Capture_Enumerator_Dispose_
  commentId: Overload:Stringier.Patterns.Capture.Enumerator.Dispose
  isSpec: "True"
  fullName: Stringier.Patterns.Capture.Enumerator.Dispose
  nameWithType: Capture.Enumerator.Dispose
- uid: Stringier.Patterns.Capture.Enumerator.GetEnumerator
  name: GetEnumerator()
  href: api/Stringier.Patterns.Capture.Enumerator.html#Stringier_Patterns_Capture_Enumerator_GetEnumerator
  commentId: M:Stringier.Patterns.Capture.Enumerator.GetEnumerator
  fullName: Stringier.Patterns.Capture.Enumerator.GetEnumerator()
  nameWithType: Capture.Enumerator.GetEnumerator()
- uid: Stringier.Patterns.Capture.Enumerator.GetEnumerator*
  name: GetEnumerator
  href: api/Stringier.Patterns.Capture.Enumerator.html#Stringier_Patterns_Capture_Enumerator_GetEnumerator_
  commentId: Overload:Stringier.Patterns.Capture.Enumerator.GetEnumerator
  isSpec: "True"
  fullName: Stringier.Patterns.Capture.Enumerator.GetEnumerator
  nameWithType: Capture.Enumerator.GetEnumerator
- uid: Stringier.Patterns.Capture.Enumerator.MoveNext
  name: MoveNext()
  href: api/Stringier.Patterns.Capture.Enumerator.html#Stringier_Patterns_Capture_Enumerator_MoveNext
  commentId: M:Stringier.Patterns.Capture.Enumerator.MoveNext
  fullName: Stringier.Patterns.Capture.Enumerator.MoveNext()
  nameWithType: Capture.Enumerator.MoveNext()
- uid: Stringier.Patterns.Capture.Enumerator.MoveNext*
  name: MoveNext
  href: api/Stringier.Patterns.Capture.Enumerator.html#Stringier_Patterns_Capture_Enumerator_MoveNext_
  commentId: Overload:Stringier.Patterns.Capture.Enumerator.MoveNext
  isSpec: "True"
  fullName: Stringier.Patterns.Capture.Enumerator.MoveNext
  nameWithType: Capture.Enumerator.MoveNext
- uid: Stringier.Patterns.Capture.Enumerator.Reset
  name: Reset()
  href: api/Stringier.Patterns.Capture.Enumerator.html#Stringier_Patterns_Capture_Enumerator_Reset
  commentId: M:Stringier.Patterns.Capture.Enumerator.Reset
  fullName: Stringier.Patterns.Capture.Enumerator.Reset()
  nameWithType: Capture.Enumerator.Reset()
- uid: Stringier.Patterns.Capture.Enumerator.Reset*
  name: Reset
  href: api/Stringier.Patterns.Capture.Enumerator.html#Stringier_Patterns_Capture_Enumerator_Reset_
  commentId: Overload:Stringier.Patterns.Capture.Enumerator.Reset
  isSpec: "True"
  fullName: Stringier.Patterns.Capture.Enumerator.Reset
  nameWithType: Capture.Enumerator.Reset
- uid: Stringier.Patterns.Capture.Enumerator.System#Collections#Generic#IEnumerable{System#Char}#GetEnumerator
  name: IEnumerable<Char>.GetEnumerator()
  href: api/Stringier.Patterns.Capture.Enumerator.html#Stringier_Patterns_Capture_Enumerator_System_Collections_Generic_IEnumerable_System_Char__GetEnumerator
  commentId: M:Stringier.Patterns.Capture.Enumerator.System#Collections#Generic#IEnumerable{System#Char}#GetEnumerator
  name.vb: System.Collections.Generic.IEnumerable<System.Char>.GetEnumerator()
  fullName: Stringier.Patterns.Capture.Enumerator.System.Collections.Generic.IEnumerable<System.Char>.GetEnumerator()
  nameWithType: Capture.Enumerator.IEnumerable<Char>.GetEnumerator()
  nameWithType.vb: Capture.Enumerator.System.Collections.Generic.IEnumerable<System.Char>.GetEnumerator()
- uid: Stringier.Patterns.Capture.Enumerator.System#Collections#Generic#IEnumerable{System#Char}#GetEnumerator*
  name: IEnumerable<Char>.GetEnumerator
  href: api/Stringier.Patterns.Capture.Enumerator.html#Stringier_Patterns_Capture_Enumerator_System_Collections_Generic_IEnumerable_System_Char__GetEnumerator_
  commentId: Overload:Stringier.Patterns.Capture.Enumerator.System#Collections#Generic#IEnumerable{System#Char}#GetEnumerator
  isSpec: "True"
  name.vb: System.Collections.Generic.IEnumerable<System.Char>.GetEnumerator
  fullName: Stringier.Patterns.Capture.Enumerator.System.Collections.Generic.IEnumerable<System.Char>.GetEnumerator
  nameWithType: Capture.Enumerator.IEnumerable<Char>.GetEnumerator
  nameWithType.vb: Capture.Enumerator.System.Collections.Generic.IEnumerable<System.Char>.GetEnumerator
- uid: Stringier.Patterns.Capture.Enumerator.System#Collections#IEnumerable#GetEnumerator
  name: IEnumerable.GetEnumerator()
  href: api/Stringier.Patterns.Capture.Enumerator.html#Stringier_Patterns_Capture_Enumerator_System_Collections_IEnumerable_GetEnumerator
  commentId: M:Stringier.Patterns.Capture.Enumerator.System#Collections#IEnumerable#GetEnumerator
  name.vb: System.Collections.IEnumerable.GetEnumerator()
  fullName: Stringier.Patterns.Capture.Enumerator.System.Collections.IEnumerable.GetEnumerator()
  nameWithType: Capture.Enumerator.IEnumerable.GetEnumerator()
  nameWithType.vb: Capture.Enumerator.System.Collections.IEnumerable.GetEnumerator()
- uid: Stringier.Patterns.Capture.Enumerator.System#Collections#IEnumerable#GetEnumerator*
  name: IEnumerable.GetEnumerator
  href: api/Stringier.Patterns.Capture.Enumerator.html#Stringier_Patterns_Capture_Enumerator_System_Collections_IEnumerable_GetEnumerator_
  commentId: Overload:Stringier.Patterns.Capture.Enumerator.System#Collections#IEnumerable#GetEnumerator
  isSpec: "True"
  name.vb: System.Collections.IEnumerable.GetEnumerator
  fullName: Stringier.Patterns.Capture.Enumerator.System.Collections.IEnumerable.GetEnumerator
  nameWithType: Capture.Enumerator.IEnumerable.GetEnumerator
  nameWithType.vb: Capture.Enumerator.System.Collections.IEnumerable.GetEnumerator
- uid: Stringier.Patterns.Capture.Enumerator.System#Collections#IEnumerator#Current
  name: IEnumerator.Current
  href: api/Stringier.Patterns.Capture.Enumerator.html#Stringier_Patterns_Capture_Enumerator_System_Collections_IEnumerator_Current
  commentId: P:Stringier.Patterns.Capture.Enumerator.System#Collections#IEnumerator#Current
  name.vb: System.Collections.IEnumerator.Current
  fullName: Stringier.Patterns.Capture.Enumerator.System.Collections.IEnumerator.Current
  nameWithType: Capture.Enumerator.IEnumerator.Current
  nameWithType.vb: Capture.Enumerator.System.Collections.IEnumerator.Current
- uid: Stringier.Patterns.Capture.Enumerator.System#Collections#IEnumerator#Current*
  name: IEnumerator.Current
  href: api/Stringier.Patterns.Capture.Enumerator.html#Stringier_Patterns_Capture_Enumerator_System_Collections_IEnumerator_Current_
  commentId: Overload:Stringier.Patterns.Capture.Enumerator.System#Collections#IEnumerator#Current
  isSpec: "True"
  name.vb: System.Collections.IEnumerator.Current
  fullName: Stringier.Patterns.Capture.Enumerator.System.Collections.IEnumerator.Current
  nameWithType: Capture.Enumerator.IEnumerator.Current
  nameWithType.vb: Capture.Enumerator.System.Collections.IEnumerator.Current
- uid: Stringier.Patterns.Capture.Enumerator.ToString
  name: ToString()
  href: api/Stringier.Patterns.Capture.Enumerator.html#Stringier_Patterns_Capture_Enumerator_ToString
  commentId: M:Stringier.Patterns.Capture.Enumerator.ToString
  fullName: Stringier.Patterns.Capture.Enumerator.ToString()
  nameWithType: Capture.Enumerator.ToString()
- uid: Stringier.Patterns.Capture.Enumerator.ToString(nint)
  name: ToString(nint)
  href: api/Stringier.Patterns.Capture.Enumerator.html#Stringier_Patterns_Capture_Enumerator_ToString_nint_
  commentId: M:Stringier.Patterns.Capture.Enumerator.ToString(nint)
  fullName: Stringier.Patterns.Capture.Enumerator.ToString(nint)
  nameWithType: Capture.Enumerator.ToString(nint)
- uid: Stringier.Patterns.Capture.Enumerator.ToString*
  name: ToString
  href: api/Stringier.Patterns.Capture.Enumerator.html#Stringier_Patterns_Capture_Enumerator_ToString_
  commentId: Overload:Stringier.Patterns.Capture.Enumerator.ToString
  isSpec: "True"
  fullName: Stringier.Patterns.Capture.Enumerator.ToString
  nameWithType: Capture.Enumerator.ToString
- uid: Stringier.Patterns.Capture.GetEnumerator
  name: GetEnumerator()
  href: api/Stringier.Patterns.Capture.html#Stringier_Patterns_Capture_GetEnumerator
  commentId: M:Stringier.Patterns.Capture.GetEnumerator
  fullName: Stringier.Patterns.Capture.GetEnumerator()
  nameWithType: Capture.GetEnumerator()
- uid: Stringier.Patterns.Capture.GetEnumerator*
  name: GetEnumerator
  href: api/Stringier.Patterns.Capture.html#Stringier_Patterns_Capture_GetEnumerator_
  commentId: Overload:Stringier.Patterns.Capture.GetEnumerator
  isSpec: "True"
  fullName: Stringier.Patterns.Capture.GetEnumerator
  nameWithType: Capture.GetEnumerator
- uid: Stringier.Patterns.Capture.Item(nint)
  name: Item[nint]
  href: api/Stringier.Patterns.Capture.html#Stringier_Patterns_Capture_Item_nint_
  commentId: P:Stringier.Patterns.Capture.Item(nint)
  name.vb: Item(nint)
  fullName: Stringier.Patterns.Capture.Item[nint]
  fullName.vb: Stringier.Patterns.Capture.Item(nint)
  nameWithType: Capture.Item[nint]
  nameWithType.vb: Capture.Item(nint)
- uid: Stringier.Patterns.Capture.Item*
  name: Item
  href: api/Stringier.Patterns.Capture.html#Stringier_Patterns_Capture_Item_
  commentId: Overload:Stringier.Patterns.Capture.Item
  isSpec: "True"
  fullName: Stringier.Patterns.Capture.Item
  nameWithType: Capture.Item
- uid: Stringier.Patterns.Capture.Many
  name: Many()
  href: api/Stringier.Patterns.Capture.html#Stringier_Patterns_Capture_Many
  commentId: M:Stringier.Patterns.Capture.Many
  fullName: Stringier.Patterns.Capture.Many()
  nameWithType: Capture.Many()
- uid: Stringier.Patterns.Capture.Many*
  name: Many
  href: api/Stringier.Patterns.Capture.html#Stringier_Patterns_Capture_Many_
  commentId: Overload:Stringier.Patterns.Capture.Many
  isSpec: "True"
  fullName: Stringier.Patterns.Capture.Many
  nameWithType: Capture.Many
- uid: Stringier.Patterns.Capture.Maybe
  name: Maybe()
  href: api/Stringier.Patterns.Capture.html#Stringier_Patterns_Capture_Maybe
  commentId: M:Stringier.Patterns.Capture.Maybe
  fullName: Stringier.Patterns.Capture.Maybe()
  nameWithType: Capture.Maybe()
- uid: Stringier.Patterns.Capture.Maybe*
  name: Maybe
  href: api/Stringier.Patterns.Capture.html#Stringier_Patterns_Capture_Maybe_
  commentId: Overload:Stringier.Patterns.Capture.Maybe
  isSpec: "True"
  fullName: Stringier.Patterns.Capture.Maybe
  nameWithType: Capture.Maybe
- uid: Stringier.Patterns.Capture.Not
  name: Not()
  href: api/Stringier.Patterns.Capture.html#Stringier_Patterns_Capture_Not
  commentId: M:Stringier.Patterns.Capture.Not
  fullName: Stringier.Patterns.Capture.Not()
  nameWithType: Capture.Not()
- uid: Stringier.Patterns.Capture.Not*
  name: Not
  href: api/Stringier.Patterns.Capture.html#Stringier_Patterns_Capture_Not_
  commentId: Overload:Stringier.Patterns.Capture.Not
  isSpec: "True"
  fullName: Stringier.Patterns.Capture.Not
  nameWithType: Capture.Not
- uid: Stringier.Patterns.Capture.Or(Stringier.Patterns.Pattern)
  name: Or(Pattern)
  href: api/Stringier.Patterns.Capture.html#Stringier_Patterns_Capture_Or_Stringier_Patterns_Pattern_
  commentId: M:Stringier.Patterns.Capture.Or(Stringier.Patterns.Pattern)
  fullName: Stringier.Patterns.Capture.Or(Stringier.Patterns.Pattern)
  nameWithType: Capture.Or(Pattern)
- uid: Stringier.Patterns.Capture.Or(System.Char)
  name: Or(Char)
  href: api/Stringier.Patterns.Capture.html#Stringier_Patterns_Capture_Or_System_Char_
  commentId: M:Stringier.Patterns.Capture.Or(System.Char)
  fullName: Stringier.Patterns.Capture.Or(System.Char)
  nameWithType: Capture.Or(Char)
- uid: Stringier.Patterns.Capture.Or(System.String)
  name: Or(String)
  href: api/Stringier.Patterns.Capture.html#Stringier_Patterns_Capture_Or_System_String_
  commentId: M:Stringier.Patterns.Capture.Or(System.String)
  fullName: Stringier.Patterns.Capture.Or(System.String)
  nameWithType: Capture.Or(String)
- uid: Stringier.Patterns.Capture.Or*
  name: Or
  href: api/Stringier.Patterns.Capture.html#Stringier_Patterns_Capture_Or_
  commentId: Overload:Stringier.Patterns.Capture.Or
  isSpec: "True"
  fullName: Stringier.Patterns.Capture.Or
  nameWithType: Capture.Or
- uid: Stringier.Patterns.Capture.Repeat(System.Int32)
  name: Repeat(Int32)
  href: api/Stringier.Patterns.Capture.html#Stringier_Patterns_Capture_Repeat_System_Int32_
  commentId: M:Stringier.Patterns.Capture.Repeat(System.Int32)
  fullName: Stringier.Patterns.Capture.Repeat(System.Int32)
  nameWithType: Capture.Repeat(Int32)
- uid: Stringier.Patterns.Capture.Repeat*
  name: Repeat
  href: api/Stringier.Patterns.Capture.html#Stringier_Patterns_Capture_Repeat_
  commentId: Overload:Stringier.Patterns.Capture.Repeat
  isSpec: "True"
  fullName: Stringier.Patterns.Capture.Repeat
  nameWithType: Capture.Repeat
- uid: Stringier.Patterns.Capture.System#Collections#Generic#IEnumerable{System#Char}#GetEnumerator
  name: IEnumerable<Char>.GetEnumerator()
  href: api/Stringier.Patterns.Capture.html#Stringier_Patterns_Capture_System_Collections_Generic_IEnumerable_System_Char__GetEnumerator
  commentId: M:Stringier.Patterns.Capture.System#Collections#Generic#IEnumerable{System#Char}#GetEnumerator
  name.vb: System.Collections.Generic.IEnumerable<System.Char>.GetEnumerator()
  fullName: Stringier.Patterns.Capture.System.Collections.Generic.IEnumerable<System.Char>.GetEnumerator()
  nameWithType: Capture.IEnumerable<Char>.GetEnumerator()
  nameWithType.vb: Capture.System.Collections.Generic.IEnumerable<System.Char>.GetEnumerator()
- uid: Stringier.Patterns.Capture.System#Collections#Generic#IEnumerable{System#Char}#GetEnumerator*
  name: IEnumerable<Char>.GetEnumerator
  href: api/Stringier.Patterns.Capture.html#Stringier_Patterns_Capture_System_Collections_Generic_IEnumerable_System_Char__GetEnumerator_
  commentId: Overload:Stringier.Patterns.Capture.System#Collections#Generic#IEnumerable{System#Char}#GetEnumerator
  isSpec: "True"
  name.vb: System.Collections.Generic.IEnumerable<System.Char>.GetEnumerator
  fullName: Stringier.Patterns.Capture.System.Collections.Generic.IEnumerable<System.Char>.GetEnumerator
  nameWithType: Capture.IEnumerable<Char>.GetEnumerator
  nameWithType.vb: Capture.System.Collections.Generic.IEnumerable<System.Char>.GetEnumerator
- uid: Stringier.Patterns.Capture.System#Collections#IEnumerable#GetEnumerator
  name: IEnumerable.GetEnumerator()
  href: api/Stringier.Patterns.Capture.html#Stringier_Patterns_Capture_System_Collections_IEnumerable_GetEnumerator
  commentId: M:Stringier.Patterns.Capture.System#Collections#IEnumerable#GetEnumerator
  name.vb: System.Collections.IEnumerable.GetEnumerator()
  fullName: Stringier.Patterns.Capture.System.Collections.IEnumerable.GetEnumerator()
  nameWithType: Capture.IEnumerable.GetEnumerator()
  nameWithType.vb: Capture.System.Collections.IEnumerable.GetEnumerator()
- uid: Stringier.Patterns.Capture.System#Collections#IEnumerable#GetEnumerator*
  name: IEnumerable.GetEnumerator
  href: api/Stringier.Patterns.Capture.html#Stringier_Patterns_Capture_System_Collections_IEnumerable_GetEnumerator_
  commentId: Overload:Stringier.Patterns.Capture.System#Collections#IEnumerable#GetEnumerator
  isSpec: "True"
  name.vb: System.Collections.IEnumerable.GetEnumerator
  fullName: Stringier.Patterns.Capture.System.Collections.IEnumerable.GetEnumerator
  nameWithType: Capture.IEnumerable.GetEnumerator
  nameWithType.vb: Capture.System.Collections.IEnumerable.GetEnumerator
- uid: Stringier.Patterns.Capture.Then(Stringier.Patterns.Pattern)
  name: Then(Pattern)
  href: api/Stringier.Patterns.Capture.html#Stringier_Patterns_Capture_Then_Stringier_Patterns_Pattern_
  commentId: M:Stringier.Patterns.Capture.Then(Stringier.Patterns.Pattern)
  fullName: Stringier.Patterns.Capture.Then(Stringier.Patterns.Pattern)
  nameWithType: Capture.Then(Pattern)
- uid: Stringier.Patterns.Capture.Then(System.Char)
  name: Then(Char)
  href: api/Stringier.Patterns.Capture.html#Stringier_Patterns_Capture_Then_System_Char_
  commentId: M:Stringier.Patterns.Capture.Then(System.Char)
  fullName: Stringier.Patterns.Capture.Then(System.Char)
  nameWithType: Capture.Then(Char)
- uid: Stringier.Patterns.Capture.Then(System.String)
  name: Then(String)
  href: api/Stringier.Patterns.Capture.html#Stringier_Patterns_Capture_Then_System_String_
  commentId: M:Stringier.Patterns.Capture.Then(System.String)
  fullName: Stringier.Patterns.Capture.Then(System.String)
  nameWithType: Capture.Then(String)
- uid: Stringier.Patterns.Capture.Then*
  name: Then
  href: api/Stringier.Patterns.Capture.html#Stringier_Patterns_Capture_Then_
  commentId: Overload:Stringier.Patterns.Capture.Then
  isSpec: "True"
  fullName: Stringier.Patterns.Capture.Then
  nameWithType: Capture.Then
- uid: Stringier.Patterns.Capture.To(Stringier.Patterns.Pattern)
  name: To(Pattern)
  href: api/Stringier.Patterns.Capture.html#Stringier_Patterns_Capture_To_Stringier_Patterns_Pattern_
  commentId: M:Stringier.Patterns.Capture.To(Stringier.Patterns.Pattern)
  fullName: Stringier.Patterns.Capture.To(Stringier.Patterns.Pattern)
  nameWithType: Capture.To(Pattern)
- uid: Stringier.Patterns.Capture.To(Stringier.Patterns.Pattern,Stringier.Patterns.Pattern)
  name: To(Pattern, Pattern)
  href: api/Stringier.Patterns.Capture.html#Stringier_Patterns_Capture_To_Stringier_Patterns_Pattern_Stringier_Patterns_Pattern_
  commentId: M:Stringier.Patterns.Capture.To(Stringier.Patterns.Pattern,Stringier.Patterns.Pattern)
  fullName: Stringier.Patterns.Capture.To(Stringier.Patterns.Pattern, Stringier.Patterns.Pattern)
  nameWithType: Capture.To(Pattern, Pattern)
- uid: Stringier.Patterns.Capture.To*
  name: To
  href: api/Stringier.Patterns.Capture.html#Stringier_Patterns_Capture_To_
  commentId: Overload:Stringier.Patterns.Capture.To
  isSpec: "True"
  fullName: Stringier.Patterns.Capture.To
  nameWithType: Capture.To
- uid: Stringier.Patterns.Capture.ToNested(Stringier.Patterns.Pattern)
  name: ToNested(Pattern)
  href: api/Stringier.Patterns.Capture.html#Stringier_Patterns_Capture_ToNested_Stringier_Patterns_Pattern_
  commentId: M:Stringier.Patterns.Capture.ToNested(Stringier.Patterns.Pattern)
  fullName: Stringier.Patterns.Capture.ToNested(Stringier.Patterns.Pattern)
  nameWithType: Capture.ToNested(Pattern)
- uid: Stringier.Patterns.Capture.ToNested*
  name: ToNested
  href: api/Stringier.Patterns.Capture.html#Stringier_Patterns_Capture_ToNested_
  commentId: Overload:Stringier.Patterns.Capture.ToNested
  isSpec: "True"
  fullName: Stringier.Patterns.Capture.ToNested
  nameWithType: Capture.ToNested
- uid: Stringier.Patterns.Capture.ToString
  name: ToString()
  href: api/Stringier.Patterns.Capture.html#Stringier_Patterns_Capture_ToString
  commentId: M:Stringier.Patterns.Capture.ToString
  fullName: Stringier.Patterns.Capture.ToString()
  nameWithType: Capture.ToString()
- uid: Stringier.Patterns.Capture.ToString(nint)
  name: ToString(nint)
  href: api/Stringier.Patterns.Capture.html#Stringier_Patterns_Capture_ToString_nint_
  commentId: M:Stringier.Patterns.Capture.ToString(nint)
  fullName: Stringier.Patterns.Capture.ToString(nint)
  nameWithType: Capture.ToString(nint)
- uid: Stringier.Patterns.Capture.ToString*
  name: ToString
  href: api/Stringier.Patterns.Capture.html#Stringier_Patterns_Capture_ToString_
  commentId: Overload:Stringier.Patterns.Capture.ToString
  isSpec: "True"
  fullName: Stringier.Patterns.Capture.ToString
  nameWithType: Capture.ToString
- uid: Stringier.Patterns.Pattern
  name: Pattern
  href: api/Stringier.Patterns.Pattern.html
  commentId: T:Stringier.Patterns.Pattern
  fullName: Stringier.Patterns.Pattern
  nameWithType: Pattern
- uid: Stringier.Patterns.Pattern.#ctor
  name: Pattern()
  href: api/Stringier.Patterns.Pattern.html#Stringier_Patterns_Pattern__ctor
  commentId: M:Stringier.Patterns.Pattern.#ctor
  fullName: Stringier.Patterns.Pattern.Pattern()
  nameWithType: Pattern.Pattern()
- uid: Stringier.Patterns.Pattern.#ctor*
  name: Pattern
  href: api/Stringier.Patterns.Pattern.html#Stringier_Patterns_Pattern__ctor_
  commentId: Overload:Stringier.Patterns.Pattern.#ctor
  isSpec: "True"
  fullName: Stringier.Patterns.Pattern.Pattern
  nameWithType: Pattern.Pattern
- uid: Stringier.Patterns.Pattern.AtEnd
  name: AtEnd
  href: api/Stringier.Patterns.Pattern.html#Stringier_Patterns_Pattern_AtEnd
  commentId: F:Stringier.Patterns.Pattern.AtEnd
  fullName: Stringier.Patterns.Pattern.AtEnd
  nameWithType: Pattern.AtEnd
- uid: Stringier.Patterns.Pattern.BlockComment(System.String,System.String)
  name: BlockComment(String, String)
  href: api/Stringier.Patterns.Pattern.html#Stringier_Patterns_Pattern_BlockComment_System_String_System_String_
  commentId: M:Stringier.Patterns.Pattern.BlockComment(System.String,System.String)
  fullName: Stringier.Patterns.Pattern.BlockComment(System.String, System.String)
  nameWithType: Pattern.BlockComment(String, String)
- uid: Stringier.Patterns.Pattern.BlockComment*
  name: BlockComment
  href: api/Stringier.Patterns.Pattern.html#Stringier_Patterns_Pattern_BlockComment_
  commentId: Overload:Stringier.Patterns.Pattern.BlockComment
  isSpec: "True"
  fullName: Stringier.Patterns.Pattern.BlockComment
  nameWithType: Pattern.BlockComment
- uid: Stringier.Patterns.Pattern.Capture(Stringier.Patterns.Capture@)
  name: Capture(out Capture)
  href: api/Stringier.Patterns.Pattern.html#Stringier_Patterns_Pattern_Capture_Stringier_Patterns_Capture__
  commentId: M:Stringier.Patterns.Pattern.Capture(Stringier.Patterns.Capture@)
  name.vb: Capture(ByRef Capture)
  fullName: Stringier.Patterns.Pattern.Capture(out Stringier.Patterns.Capture)
  fullName.vb: Stringier.Patterns.Pattern.Capture(ByRef Stringier.Patterns.Capture)
  nameWithType: Pattern.Capture(out Capture)
  nameWithType.vb: Pattern.Capture(ByRef Capture)
- uid: Stringier.Patterns.Pattern.Capture(Stringier.Patterns.Pattern,Stringier.Patterns.Capture@)
  name: Capture(Pattern, out Capture)
  href: api/Stringier.Patterns.Pattern.html#Stringier_Patterns_Pattern_Capture_Stringier_Patterns_Pattern_Stringier_Patterns_Capture__
  commentId: M:Stringier.Patterns.Pattern.Capture(Stringier.Patterns.Pattern,Stringier.Patterns.Capture@)
  name.vb: Capture(Pattern, ByRef Capture)
  fullName: Stringier.Patterns.Pattern.Capture(Stringier.Patterns.Pattern, out Stringier.Patterns.Capture)
  fullName.vb: Stringier.Patterns.Pattern.Capture(Stringier.Patterns.Pattern, ByRef Stringier.Patterns.Capture)
  nameWithType: Pattern.Capture(Pattern, out Capture)
  nameWithType.vb: Pattern.Capture(Pattern, ByRef Capture)
- uid: Stringier.Patterns.Pattern.Capture*
  name: Capture
  href: api/Stringier.Patterns.Pattern.html#Stringier_Patterns_Pattern_Capture_
  commentId: Overload:Stringier.Patterns.Pattern.Capture
  isSpec: "True"
  fullName: Stringier.Patterns.Pattern.Capture
  nameWithType: Pattern.Capture
- uid: Stringier.Patterns.Pattern.Consume(System.ReadOnlySpan{System.Char},System.Int32@,System.Exception@,System.Traits.IAdd{Stringier.Patterns.Capture})
  name: Consume(ReadOnlySpan<Char>, ref Int32, out Exception, IAdd<Capture>)
  href: api/Stringier.Patterns.Pattern.html#Stringier_Patterns_Pattern_Consume_System_ReadOnlySpan_System_Char__System_Int32__System_Exception__System_Traits_IAdd_Stringier_Patterns_Capture__
  commentId: M:Stringier.Patterns.Pattern.Consume(System.ReadOnlySpan{System.Char},System.Int32@,System.Exception@,System.Traits.IAdd{Stringier.Patterns.Capture})
  name.vb: Consume(ReadOnlySpan(Of Char), ByRef Int32, ByRef Exception, IAdd(Of Capture))
  fullName: Stringier.Patterns.Pattern.Consume(System.ReadOnlySpan<System.Char>, ref System.Int32, out System.Exception, System.Traits.IAdd<Stringier.Patterns.Capture>)
  fullName.vb: Stringier.Patterns.Pattern.Consume(System.ReadOnlySpan(Of System.Char), ByRef System.Int32, ByRef System.Exception, System.Traits.IAdd(Of Stringier.Patterns.Capture))
  nameWithType: Pattern.Consume(ReadOnlySpan<Char>, ref Int32, out Exception, IAdd<Capture>)
  nameWithType.vb: Pattern.Consume(ReadOnlySpan(Of Char), ByRef Int32, ByRef Exception, IAdd(Of Capture))
- uid: Stringier.Patterns.Pattern.Consume*
  name: Consume
  href: api/Stringier.Patterns.Pattern.html#Stringier_Patterns_Pattern_Consume_
  commentId: Overload:Stringier.Patterns.Pattern.Consume
  isSpec: "True"
  fullName: Stringier.Patterns.Pattern.Consume
  nameWithType: Pattern.Consume
- uid: Stringier.Patterns.Pattern.EndOfLine
  name: EndOfLine
  href: api/Stringier.Patterns.Pattern.html#Stringier_Patterns_Pattern_EndOfLine
  commentId: P:Stringier.Patterns.Pattern.EndOfLine
  fullName: Stringier.Patterns.Pattern.EndOfLine
  nameWithType: Pattern.EndOfLine
- uid: Stringier.Patterns.Pattern.EndOfLine*
  name: EndOfLine
  href: api/Stringier.Patterns.Pattern.html#Stringier_Patterns_Pattern_EndOfLine_
  commentId: Overload:Stringier.Patterns.Pattern.EndOfLine
  isSpec: "True"
  fullName: Stringier.Patterns.Pattern.EndOfLine
  nameWithType: Pattern.EndOfLine
- uid: Stringier.Patterns.Pattern.EndOfSource
  name: EndOfSource
  href: api/Stringier.Patterns.Pattern.html#Stringier_Patterns_Pattern_EndOfSource
  commentId: P:Stringier.Patterns.Pattern.EndOfSource
  fullName: Stringier.Patterns.Pattern.EndOfSource
  nameWithType: Pattern.EndOfSource
- uid: Stringier.Patterns.Pattern.EndOfSource*
  name: EndOfSource
  href: api/Stringier.Patterns.Pattern.html#Stringier_Patterns_Pattern_EndOfSource_
  commentId: Overload:Stringier.Patterns.Pattern.EndOfSource
  isSpec: "True"
  fullName: Stringier.Patterns.Pattern.EndOfSource
  nameWithType: Pattern.EndOfSource
- uid: Stringier.Patterns.Pattern.IsConsumeHeader(System.ReadOnlySpan{System.Char},System.Int32)
  name: IsConsumeHeader(ReadOnlySpan<Char>, Int32)
  href: api/Stringier.Patterns.Pattern.html#Stringier_Patterns_Pattern_IsConsumeHeader_System_ReadOnlySpan_System_Char__System_Int32_
  commentId: M:Stringier.Patterns.Pattern.IsConsumeHeader(System.ReadOnlySpan{System.Char},System.Int32)
  name.vb: IsConsumeHeader(ReadOnlySpan(Of Char), Int32)
  fullName: Stringier.Patterns.Pattern.IsConsumeHeader(System.ReadOnlySpan<System.Char>, System.Int32)
  fullName.vb: Stringier.Patterns.Pattern.IsConsumeHeader(System.ReadOnlySpan(Of System.Char), System.Int32)
  nameWithType: Pattern.IsConsumeHeader(ReadOnlySpan<Char>, Int32)
  nameWithType.vb: Pattern.IsConsumeHeader(ReadOnlySpan(Of Char), Int32)
- uid: Stringier.Patterns.Pattern.IsConsumeHeader*
  name: IsConsumeHeader
  href: api/Stringier.Patterns.Pattern.html#Stringier_Patterns_Pattern_IsConsumeHeader_
  commentId: Overload:Stringier.Patterns.Pattern.IsConsumeHeader
  isSpec: "True"
  fullName: Stringier.Patterns.Pattern.IsConsumeHeader
  nameWithType: Pattern.IsConsumeHeader
- uid: Stringier.Patterns.Pattern.IsNeglectHeader(System.ReadOnlySpan{System.Char},System.Int32)
  name: IsNeglectHeader(ReadOnlySpan<Char>, Int32)
  href: api/Stringier.Patterns.Pattern.html#Stringier_Patterns_Pattern_IsNeglectHeader_System_ReadOnlySpan_System_Char__System_Int32_
  commentId: M:Stringier.Patterns.Pattern.IsNeglectHeader(System.ReadOnlySpan{System.Char},System.Int32)
  name.vb: IsNeglectHeader(ReadOnlySpan(Of Char), Int32)
  fullName: Stringier.Patterns.Pattern.IsNeglectHeader(System.ReadOnlySpan<System.Char>, System.Int32)
  fullName.vb: Stringier.Patterns.Pattern.IsNeglectHeader(System.ReadOnlySpan(Of System.Char), System.Int32)
  nameWithType: Pattern.IsNeglectHeader(ReadOnlySpan<Char>, Int32)
  nameWithType.vb: Pattern.IsNeglectHeader(ReadOnlySpan(Of Char), Int32)
- uid: Stringier.Patterns.Pattern.IsNeglectHeader*
  name: IsNeglectHeader
  href: api/Stringier.Patterns.Pattern.html#Stringier_Patterns_Pattern_IsNeglectHeader_
  commentId: Overload:Stringier.Patterns.Pattern.IsNeglectHeader
  isSpec: "True"
  fullName: Stringier.Patterns.Pattern.IsNeglectHeader
  nameWithType: Pattern.IsNeglectHeader
- uid: Stringier.Patterns.Pattern.LineComment(System.String)
  name: LineComment(String)
  href: api/Stringier.Patterns.Pattern.html#Stringier_Patterns_Pattern_LineComment_System_String_
  commentId: M:Stringier.Patterns.Pattern.LineComment(System.String)
  fullName: Stringier.Patterns.Pattern.LineComment(System.String)
  nameWithType: Pattern.LineComment(String)
- uid: Stringier.Patterns.Pattern.LineComment*
  name: LineComment
  href: api/Stringier.Patterns.Pattern.html#Stringier_Patterns_Pattern_LineComment_
  commentId: Overload:Stringier.Patterns.Pattern.LineComment
  isSpec: "True"
  fullName: Stringier.Patterns.Pattern.LineComment
  nameWithType: Pattern.LineComment
- uid: Stringier.Patterns.Pattern.Many
  name: Many()
  href: api/Stringier.Patterns.Pattern.html#Stringier_Patterns_Pattern_Many
  commentId: M:Stringier.Patterns.Pattern.Many
  fullName: Stringier.Patterns.Pattern.Many()
  nameWithType: Pattern.Many()
- uid: Stringier.Patterns.Pattern.Many(Stringier.Patterns.Pattern)
  name: Many(Pattern)
  href: api/Stringier.Patterns.Pattern.html#Stringier_Patterns_Pattern_Many_Stringier_Patterns_Pattern_
  commentId: M:Stringier.Patterns.Pattern.Many(Stringier.Patterns.Pattern)
  fullName: Stringier.Patterns.Pattern.Many(Stringier.Patterns.Pattern)
  nameWithType: Pattern.Many(Pattern)
- uid: Stringier.Patterns.Pattern.Many*
  name: Many
  href: api/Stringier.Patterns.Pattern.html#Stringier_Patterns_Pattern_Many_
  commentId: Overload:Stringier.Patterns.Pattern.Many
  isSpec: "True"
  fullName: Stringier.Patterns.Pattern.Many
  nameWithType: Pattern.Many
- uid: Stringier.Patterns.Pattern.Maybe
  name: Maybe()
  href: api/Stringier.Patterns.Pattern.html#Stringier_Patterns_Pattern_Maybe
  commentId: M:Stringier.Patterns.Pattern.Maybe
  fullName: Stringier.Patterns.Pattern.Maybe()
  nameWithType: Pattern.Maybe()
- uid: Stringier.Patterns.Pattern.Maybe(Stringier.Patterns.Pattern)
  name: Maybe(Pattern)
  href: api/Stringier.Patterns.Pattern.html#Stringier_Patterns_Pattern_Maybe_Stringier_Patterns_Pattern_
  commentId: M:Stringier.Patterns.Pattern.Maybe(Stringier.Patterns.Pattern)
  fullName: Stringier.Patterns.Pattern.Maybe(Stringier.Patterns.Pattern)
  nameWithType: Pattern.Maybe(Pattern)
- uid: Stringier.Patterns.Pattern.Maybe*
  name: Maybe
  href: api/Stringier.Patterns.Pattern.html#Stringier_Patterns_Pattern_Maybe_
  commentId: Overload:Stringier.Patterns.Pattern.Maybe
  isSpec: "True"
  fullName: Stringier.Patterns.Pattern.Maybe
  nameWithType: Pattern.Maybe
- uid: Stringier.Patterns.Pattern.Neglect(System.ReadOnlySpan{System.Char},System.Int32@,System.Exception@,System.Traits.IAdd{Stringier.Patterns.Capture})
  name: Neglect(ReadOnlySpan<Char>, ref Int32, out Exception, IAdd<Capture>)
  href: api/Stringier.Patterns.Pattern.html#Stringier_Patterns_Pattern_Neglect_System_ReadOnlySpan_System_Char__System_Int32__System_Exception__System_Traits_IAdd_Stringier_Patterns_Capture__
  commentId: M:Stringier.Patterns.Pattern.Neglect(System.ReadOnlySpan{System.Char},System.Int32@,System.Exception@,System.Traits.IAdd{Stringier.Patterns.Capture})
  name.vb: Neglect(ReadOnlySpan(Of Char), ByRef Int32, ByRef Exception, IAdd(Of Capture))
  fullName: Stringier.Patterns.Pattern.Neglect(System.ReadOnlySpan<System.Char>, ref System.Int32, out System.Exception, System.Traits.IAdd<Stringier.Patterns.Capture>)
  fullName.vb: Stringier.Patterns.Pattern.Neglect(System.ReadOnlySpan(Of System.Char), ByRef System.Int32, ByRef System.Exception, System.Traits.IAdd(Of Stringier.Patterns.Capture))
  nameWithType: Pattern.Neglect(ReadOnlySpan<Char>, ref Int32, out Exception, IAdd<Capture>)
  nameWithType.vb: Pattern.Neglect(ReadOnlySpan(Of Char), ByRef Int32, ByRef Exception, IAdd(Of Capture))
- uid: Stringier.Patterns.Pattern.Neglect*
  name: Neglect
  href: api/Stringier.Patterns.Pattern.html#Stringier_Patterns_Pattern_Neglect_
  commentId: Overload:Stringier.Patterns.Pattern.Neglect
  isSpec: "True"
  fullName: Stringier.Patterns.Pattern.Neglect
  nameWithType: Pattern.Neglect
- uid: Stringier.Patterns.Pattern.NoMatch
  name: NoMatch
  href: api/Stringier.Patterns.Pattern.html#Stringier_Patterns_Pattern_NoMatch
  commentId: F:Stringier.Patterns.Pattern.NoMatch
  fullName: Stringier.Patterns.Pattern.NoMatch
  nameWithType: Pattern.NoMatch
- uid: Stringier.Patterns.Pattern.Not
  name: Not()
  href: api/Stringier.Patterns.Pattern.html#Stringier_Patterns_Pattern_Not
  commentId: M:Stringier.Patterns.Pattern.Not
  fullName: Stringier.Patterns.Pattern.Not()
  nameWithType: Pattern.Not()
- uid: Stringier.Patterns.Pattern.Not(Stringier.Patterns.Pattern)
  name: Not(Pattern)
  href: api/Stringier.Patterns.Pattern.html#Stringier_Patterns_Pattern_Not_Stringier_Patterns_Pattern_
  commentId: M:Stringier.Patterns.Pattern.Not(Stringier.Patterns.Pattern)
  fullName: Stringier.Patterns.Pattern.Not(Stringier.Patterns.Pattern)
  nameWithType: Pattern.Not(Pattern)
- uid: Stringier.Patterns.Pattern.Not*
  name: Not
  href: api/Stringier.Patterns.Pattern.html#Stringier_Patterns_Pattern_Not_
  commentId: Overload:Stringier.Patterns.Pattern.Not
  isSpec: "True"
  fullName: Stringier.Patterns.Pattern.Not
  nameWithType: Pattern.Not
- uid: Stringier.Patterns.Pattern.OneOf(Stringier.Patterns.Pattern[])
  name: OneOf(Pattern[])
  href: api/Stringier.Patterns.Pattern.html#Stringier_Patterns_Pattern_OneOf_Stringier_Patterns_Pattern___
  commentId: M:Stringier.Patterns.Pattern.OneOf(Stringier.Patterns.Pattern[])
  name.vb: OneOf(Pattern())
  fullName: Stringier.Patterns.Pattern.OneOf(Stringier.Patterns.Pattern[])
  fullName.vb: Stringier.Patterns.Pattern.OneOf(Stringier.Patterns.Pattern())
  nameWithType: Pattern.OneOf(Pattern[])
  nameWithType.vb: Pattern.OneOf(Pattern())
- uid: Stringier.Patterns.Pattern.OneOf*
  name: OneOf
  href: api/Stringier.Patterns.Pattern.html#Stringier_Patterns_Pattern_OneOf_
  commentId: Overload:Stringier.Patterns.Pattern.OneOf
  isSpec: "True"
  fullName: Stringier.Patterns.Pattern.OneOf
  nameWithType: Pattern.OneOf
- uid: Stringier.Patterns.Pattern.op_BitwiseAnd(Stringier.Patterns.Pattern,Stringier.Patterns.Pattern)
  name: BitwiseAnd(Pattern, Pattern)
  href: api/Stringier.Patterns.Pattern.html#Stringier_Patterns_Pattern_op_BitwiseAnd_Stringier_Patterns_Pattern_Stringier_Patterns_Pattern_
  commentId: M:Stringier.Patterns.Pattern.op_BitwiseAnd(Stringier.Patterns.Pattern,Stringier.Patterns.Pattern)
  fullName: Stringier.Patterns.Pattern.BitwiseAnd(Stringier.Patterns.Pattern, Stringier.Patterns.Pattern)
  nameWithType: Pattern.BitwiseAnd(Pattern, Pattern)
- uid: Stringier.Patterns.Pattern.op_BitwiseAnd*
  name: BitwiseAnd
  href: api/Stringier.Patterns.Pattern.html#Stringier_Patterns_Pattern_op_BitwiseAnd_
  commentId: Overload:Stringier.Patterns.Pattern.op_BitwiseAnd
  isSpec: "True"
  fullName: Stringier.Patterns.Pattern.BitwiseAnd
  nameWithType: Pattern.BitwiseAnd
- uid: Stringier.Patterns.Pattern.op_BitwiseOr(Stringier.Patterns.Pattern,Stringier.Patterns.Pattern)
  name: BitwiseOr(Pattern, Pattern)
  href: api/Stringier.Patterns.Pattern.html#Stringier_Patterns_Pattern_op_BitwiseOr_Stringier_Patterns_Pattern_Stringier_Patterns_Pattern_
  commentId: M:Stringier.Patterns.Pattern.op_BitwiseOr(Stringier.Patterns.Pattern,Stringier.Patterns.Pattern)
  fullName: Stringier.Patterns.Pattern.BitwiseOr(Stringier.Patterns.Pattern, Stringier.Patterns.Pattern)
  nameWithType: Pattern.BitwiseOr(Pattern, Pattern)
- uid: Stringier.Patterns.Pattern.op_BitwiseOr*
  name: BitwiseOr
  href: api/Stringier.Patterns.Pattern.html#Stringier_Patterns_Pattern_op_BitwiseOr_
  commentId: Overload:Stringier.Patterns.Pattern.op_BitwiseOr
  isSpec: "True"
  fullName: Stringier.Patterns.Pattern.BitwiseOr
  nameWithType: Pattern.BitwiseOr
- uid: Stringier.Patterns.Pattern.op_Implicit(Stringier.Patterns.Capture)~Stringier.Patterns.Pattern
  name: Implicit(Capture to Pattern)
  href: api/Stringier.Patterns.Pattern.html#Stringier_Patterns_Pattern_op_Implicit_Stringier_Patterns_Capture__Stringier_Patterns_Pattern
  commentId: M:Stringier.Patterns.Pattern.op_Implicit(Stringier.Patterns.Capture)~Stringier.Patterns.Pattern
  name.vb: Widening(Capture to Pattern)
  fullName: Stringier.Patterns.Pattern.Implicit(Stringier.Patterns.Capture to Stringier.Patterns.Pattern)
  fullName.vb: Stringier.Patterns.Pattern.Widening(Stringier.Patterns.Capture to Stringier.Patterns.Pattern)
  nameWithType: Pattern.Implicit(Capture to Pattern)
  nameWithType.vb: Pattern.Widening(Capture to Pattern)
- uid: Stringier.Patterns.Pattern.op_Implicit(System.Char)~Stringier.Patterns.Pattern
  name: Implicit(Char to Pattern)
  href: api/Stringier.Patterns.Pattern.html#Stringier_Patterns_Pattern_op_Implicit_System_Char__Stringier_Patterns_Pattern
  commentId: M:Stringier.Patterns.Pattern.op_Implicit(System.Char)~Stringier.Patterns.Pattern
  name.vb: Widening(Char to Pattern)
  fullName: Stringier.Patterns.Pattern.Implicit(System.Char to Stringier.Patterns.Pattern)
  fullName.vb: Stringier.Patterns.Pattern.Widening(System.Char to Stringier.Patterns.Pattern)
  nameWithType: Pattern.Implicit(Char to Pattern)
  nameWithType.vb: Pattern.Widening(Char to Pattern)
- uid: Stringier.Patterns.Pattern.op_Implicit(System.Char[])~Stringier.Patterns.Pattern
  name: Implicit(Char[] to Pattern)
  href: api/Stringier.Patterns.Pattern.html#Stringier_Patterns_Pattern_op_Implicit_System_Char____Stringier_Patterns_Pattern
  commentId: M:Stringier.Patterns.Pattern.op_Implicit(System.Char[])~Stringier.Patterns.Pattern
  name.vb: Widening(Char() to Pattern)
  fullName: Stringier.Patterns.Pattern.Implicit(System.Char[] to Stringier.Patterns.Pattern)
  fullName.vb: Stringier.Patterns.Pattern.Widening(System.Char() to Stringier.Patterns.Pattern)
  nameWithType: Pattern.Implicit(Char[] to Pattern)
  nameWithType.vb: Pattern.Widening(Char() to Pattern)
- uid: Stringier.Patterns.Pattern.op_Implicit(System.Memory{System.Char})~Stringier.Patterns.Pattern
  name: Implicit(Memory<Char> to Pattern)
  href: api/Stringier.Patterns.Pattern.html#Stringier_Patterns_Pattern_op_Implicit_System_Memory_System_Char___Stringier_Patterns_Pattern
  commentId: M:Stringier.Patterns.Pattern.op_Implicit(System.Memory{System.Char})~Stringier.Patterns.Pattern
  name.vb: Widening(Memory(Of Char) to Pattern)
  fullName: Stringier.Patterns.Pattern.Implicit(System.Memory<System.Char> to Stringier.Patterns.Pattern)
  fullName.vb: Stringier.Patterns.Pattern.Widening(System.Memory(Of System.Char) to Stringier.Patterns.Pattern)
  nameWithType: Pattern.Implicit(Memory<Char> to Pattern)
  nameWithType.vb: Pattern.Widening(Memory(Of Char) to Pattern)
- uid: Stringier.Patterns.Pattern.op_Implicit(System.ReadOnlyMemory{System.Char})~Stringier.Patterns.Pattern
  name: Implicit(ReadOnlyMemory<Char> to Pattern)
  href: api/Stringier.Patterns.Pattern.html#Stringier_Patterns_Pattern_op_Implicit_System_ReadOnlyMemory_System_Char___Stringier_Patterns_Pattern
  commentId: M:Stringier.Patterns.Pattern.op_Implicit(System.ReadOnlyMemory{System.Char})~Stringier.Patterns.Pattern
  name.vb: Widening(ReadOnlyMemory(Of Char) to Pattern)
  fullName: Stringier.Patterns.Pattern.Implicit(System.ReadOnlyMemory<System.Char> to Stringier.Patterns.Pattern)
  fullName.vb: Stringier.Patterns.Pattern.Widening(System.ReadOnlyMemory(Of System.Char) to Stringier.Patterns.Pattern)
  nameWithType: Pattern.Implicit(ReadOnlyMemory<Char> to Pattern)
  nameWithType.vb: Pattern.Widening(ReadOnlyMemory(Of Char) to Pattern)
- uid: Stringier.Patterns.Pattern.op_Implicit(System.String)~Stringier.Patterns.Pattern
  name: Implicit(String to Pattern)
  href: api/Stringier.Patterns.Pattern.html#Stringier_Patterns_Pattern_op_Implicit_System_String__Stringier_Patterns_Pattern
  commentId: M:Stringier.Patterns.Pattern.op_Implicit(System.String)~Stringier.Patterns.Pattern
  name.vb: Widening(String to Pattern)
  fullName: Stringier.Patterns.Pattern.Implicit(System.String to Stringier.Patterns.Pattern)
  fullName.vb: Stringier.Patterns.Pattern.Widening(System.String to Stringier.Patterns.Pattern)
  nameWithType: Pattern.Implicit(String to Pattern)
  nameWithType.vb: Pattern.Widening(String to Pattern)
- uid: Stringier.Patterns.Pattern.op_Implicit(System.ValueTuple{Stringier.Patterns.Capture,Stringier.Case})~Stringier.Patterns.Pattern
  name: Implicit((Capture, Case) to Pattern)
  href: api/Stringier.Patterns.Pattern.html#Stringier_Patterns_Pattern_op_Implicit_System_ValueTuple_Stringier_Patterns_Capture_Stringier_Case___Stringier_Patterns_Pattern
  commentId: M:Stringier.Patterns.Pattern.op_Implicit(System.ValueTuple{Stringier.Patterns.Capture,Stringier.Case})~Stringier.Patterns.Pattern
  name.vb: Widening((Capture, Case) to Pattern)
  fullName: Stringier.Patterns.Pattern.Implicit(System.ValueTuple<Stringier.Patterns.Capture, Stringier.Case> to Stringier.Patterns.Pattern)
  fullName.vb: Stringier.Patterns.Pattern.Widening(System.ValueTuple(Of Stringier.Patterns.Capture, Stringier.Case) to Stringier.Patterns.Pattern)
  nameWithType: Pattern.Implicit((Capture, Case) to Pattern)
  nameWithType.vb: Pattern.Widening((Capture, Case) to Pattern)
- uid: Stringier.Patterns.Pattern.op_Implicit(System.ValueTuple{System.Char,Stringier.Case})~Stringier.Patterns.Pattern
  name: Implicit((Char, Case) to Pattern)
  href: api/Stringier.Patterns.Pattern.html#Stringier_Patterns_Pattern_op_Implicit_System_ValueTuple_System_Char_Stringier_Case___Stringier_Patterns_Pattern
  commentId: M:Stringier.Patterns.Pattern.op_Implicit(System.ValueTuple{System.Char,Stringier.Case})~Stringier.Patterns.Pattern
  name.vb: Widening((Char, Case) to Pattern)
  fullName: Stringier.Patterns.Pattern.Implicit(System.ValueTuple<System.Char, Stringier.Case> to Stringier.Patterns.Pattern)
  fullName.vb: Stringier.Patterns.Pattern.Widening(System.ValueTuple(Of System.Char, Stringier.Case) to Stringier.Patterns.Pattern)
  nameWithType: Pattern.Implicit((Char, Case) to Pattern)
  nameWithType.vb: Pattern.Widening((Char, Case) to Pattern)
- uid: Stringier.Patterns.Pattern.op_Implicit(System.ValueTuple{System.Char[],Stringier.Case})~Stringier.Patterns.Pattern
  name: Implicit((Char[], Case) to Pattern)
  href: api/Stringier.Patterns.Pattern.html#Stringier_Patterns_Pattern_op_Implicit_System_ValueTuple_System_Char___Stringier_Case___Stringier_Patterns_Pattern
  commentId: M:Stringier.Patterns.Pattern.op_Implicit(System.ValueTuple{System.Char[],Stringier.Case})~Stringier.Patterns.Pattern
  name.vb: Widening((Char(), Case) to Pattern)
  fullName: Stringier.Patterns.Pattern.Implicit(System.ValueTuple<System.Char[], Stringier.Case> to Stringier.Patterns.Pattern)
  fullName.vb: Stringier.Patterns.Pattern.Widening(System.ValueTuple(Of System.Char(), Stringier.Case) to Stringier.Patterns.Pattern)
  nameWithType: Pattern.Implicit((Char[], Case) to Pattern)
  nameWithType.vb: Pattern.Widening((Char(), Case) to Pattern)
- uid: Stringier.Patterns.Pattern.op_Implicit(System.ValueTuple{System.Memory{System.Char},Stringier.Case})~Stringier.Patterns.Pattern
  name: Implicit((Memory<Char>, Case) to Pattern)
  href: api/Stringier.Patterns.Pattern.html#Stringier_Patterns_Pattern_op_Implicit_System_ValueTuple_System_Memory_System_Char__Stringier_Case___Stringier_Patterns_Pattern
  commentId: M:Stringier.Patterns.Pattern.op_Implicit(System.ValueTuple{System.Memory{System.Char},Stringier.Case})~Stringier.Patterns.Pattern
  name.vb: Widening((Memory(Of Char), Case) to Pattern)
  fullName: Stringier.Patterns.Pattern.Implicit(System.ValueTuple<System.Memory<System.Char>, Stringier.Case> to Stringier.Patterns.Pattern)
  fullName.vb: Stringier.Patterns.Pattern.Widening(System.ValueTuple(Of System.Memory(Of System.Char), Stringier.Case) to Stringier.Patterns.Pattern)
  nameWithType: Pattern.Implicit((Memory<Char>, Case) to Pattern)
  nameWithType.vb: Pattern.Widening((Memory(Of Char), Case) to Pattern)
- uid: Stringier.Patterns.Pattern.op_Implicit(System.ValueTuple{System.ReadOnlyMemory{System.Char},Stringier.Case})~Stringier.Patterns.Pattern
  name: Implicit((ReadOnlyMemory<Char>, Case) to Pattern)
  href: api/Stringier.Patterns.Pattern.html#Stringier_Patterns_Pattern_op_Implicit_System_ValueTuple_System_ReadOnlyMemory_System_Char__Stringier_Case___Stringier_Patterns_Pattern
  commentId: M:Stringier.Patterns.Pattern.op_Implicit(System.ValueTuple{System.ReadOnlyMemory{System.Char},Stringier.Case})~Stringier.Patterns.Pattern
  name.vb: Widening((ReadOnlyMemory(Of Char), Case) to Pattern)
  fullName: Stringier.Patterns.Pattern.Implicit(System.ValueTuple<System.ReadOnlyMemory<System.Char>, Stringier.Case> to Stringier.Patterns.Pattern)
  fullName.vb: Stringier.Patterns.Pattern.Widening(System.ValueTuple(Of System.ReadOnlyMemory(Of System.Char), Stringier.Case) to Stringier.Patterns.Pattern)
  nameWithType: Pattern.Implicit((ReadOnlyMemory<Char>, Case) to Pattern)
  nameWithType.vb: Pattern.Widening((ReadOnlyMemory(Of Char), Case) to Pattern)
- uid: Stringier.Patterns.Pattern.op_Implicit(System.ValueTuple{System.String,Stringier.Case})~Stringier.Patterns.Pattern
  name: Implicit((String, Case) to Pattern)
  href: api/Stringier.Patterns.Pattern.html#Stringier_Patterns_Pattern_op_Implicit_System_ValueTuple_System_String_Stringier_Case___Stringier_Patterns_Pattern
  commentId: M:Stringier.Patterns.Pattern.op_Implicit(System.ValueTuple{System.String,Stringier.Case})~Stringier.Patterns.Pattern
  name.vb: Widening((String, Case) to Pattern)
  fullName: Stringier.Patterns.Pattern.Implicit(System.ValueTuple<System.String, Stringier.Case> to Stringier.Patterns.Pattern)
  fullName.vb: Stringier.Patterns.Pattern.Widening(System.ValueTuple(Of System.String, Stringier.Case) to Stringier.Patterns.Pattern)
  nameWithType: Pattern.Implicit((String, Case) to Pattern)
  nameWithType.vb: Pattern.Widening((String, Case) to Pattern)
- uid: Stringier.Patterns.Pattern.op_Implicit*
  name: Implicit
  href: api/Stringier.Patterns.Pattern.html#Stringier_Patterns_Pattern_op_Implicit_
  commentId: Overload:Stringier.Patterns.Pattern.op_Implicit
  isSpec: "True"
  name.vb: Widening
  fullName: Stringier.Patterns.Pattern.Implicit
  fullName.vb: Stringier.Patterns.Pattern.Widening
  nameWithType: Pattern.Implicit
  nameWithType.vb: Pattern.Widening
- uid: Stringier.Patterns.Pattern.op_LogicalNot(Stringier.Patterns.Pattern)
  name: LogicalNot(Pattern)
  href: api/Stringier.Patterns.Pattern.html#Stringier_Patterns_Pattern_op_LogicalNot_Stringier_Patterns_Pattern_
  commentId: M:Stringier.Patterns.Pattern.op_LogicalNot(Stringier.Patterns.Pattern)
  fullName: Stringier.Patterns.Pattern.LogicalNot(Stringier.Patterns.Pattern)
  nameWithType: Pattern.LogicalNot(Pattern)
- uid: Stringier.Patterns.Pattern.op_LogicalNot*
  name: LogicalNot
  href: api/Stringier.Patterns.Pattern.html#Stringier_Patterns_Pattern_op_LogicalNot_
  commentId: Overload:Stringier.Patterns.Pattern.op_LogicalNot
  isSpec: "True"
  fullName: Stringier.Patterns.Pattern.LogicalNot
  nameWithType: Pattern.LogicalNot
- uid: Stringier.Patterns.Pattern.op_Multiply(Stringier.Patterns.Pattern,System.Int32)
  name: Multiply(Pattern, Int32)
  href: api/Stringier.Patterns.Pattern.html#Stringier_Patterns_Pattern_op_Multiply_Stringier_Patterns_Pattern_System_Int32_
  commentId: M:Stringier.Patterns.Pattern.op_Multiply(Stringier.Patterns.Pattern,System.Int32)
  fullName: Stringier.Patterns.Pattern.Multiply(Stringier.Patterns.Pattern, System.Int32)
  nameWithType: Pattern.Multiply(Pattern, Int32)
- uid: Stringier.Patterns.Pattern.op_Multiply*
  name: Multiply
  href: api/Stringier.Patterns.Pattern.html#Stringier_Patterns_Pattern_op_Multiply_
  commentId: Overload:Stringier.Patterns.Pattern.op_Multiply
  isSpec: "True"
  fullName: Stringier.Patterns.Pattern.Multiply
  nameWithType: Pattern.Multiply
- uid: Stringier.Patterns.Pattern.op_UnaryNegation(Stringier.Patterns.Pattern)
  name: UnaryNegation(Pattern)
  href: api/Stringier.Patterns.Pattern.html#Stringier_Patterns_Pattern_op_UnaryNegation_Stringier_Patterns_Pattern_
  commentId: M:Stringier.Patterns.Pattern.op_UnaryNegation(Stringier.Patterns.Pattern)
  fullName: Stringier.Patterns.Pattern.UnaryNegation(Stringier.Patterns.Pattern)
  nameWithType: Pattern.UnaryNegation(Pattern)
- uid: Stringier.Patterns.Pattern.op_UnaryNegation*
  name: UnaryNegation
  href: api/Stringier.Patterns.Pattern.html#Stringier_Patterns_Pattern_op_UnaryNegation_
  commentId: Overload:Stringier.Patterns.Pattern.op_UnaryNegation
  isSpec: "True"
  fullName: Stringier.Patterns.Pattern.UnaryNegation
  nameWithType: Pattern.UnaryNegation
- uid: Stringier.Patterns.Pattern.op_UnaryPlus(Stringier.Patterns.Pattern)
  name: UnaryPlus(Pattern)
  href: api/Stringier.Patterns.Pattern.html#Stringier_Patterns_Pattern_op_UnaryPlus_Stringier_Patterns_Pattern_
  commentId: M:Stringier.Patterns.Pattern.op_UnaryPlus(Stringier.Patterns.Pattern)
  fullName: Stringier.Patterns.Pattern.UnaryPlus(Stringier.Patterns.Pattern)
  nameWithType: Pattern.UnaryPlus(Pattern)
- uid: Stringier.Patterns.Pattern.op_UnaryPlus*
  name: UnaryPlus
  href: api/Stringier.Patterns.Pattern.html#Stringier_Patterns_Pattern_op_UnaryPlus_
  commentId: Overload:Stringier.Patterns.Pattern.op_UnaryPlus
  isSpec: "True"
  fullName: Stringier.Patterns.Pattern.UnaryPlus
  nameWithType: Pattern.UnaryPlus
- uid: Stringier.Patterns.Pattern.Or(Stringier.Patterns.Pattern)
  name: Or(Pattern)
  href: api/Stringier.Patterns.Pattern.html#Stringier_Patterns_Pattern_Or_Stringier_Patterns_Pattern_
  commentId: M:Stringier.Patterns.Pattern.Or(Stringier.Patterns.Pattern)
  fullName: Stringier.Patterns.Pattern.Or(Stringier.Patterns.Pattern)
  nameWithType: Pattern.Or(Pattern)
- uid: Stringier.Patterns.Pattern.Or(System.Char)
  name: Or(Char)
  href: api/Stringier.Patterns.Pattern.html#Stringier_Patterns_Pattern_Or_System_Char_
  commentId: M:Stringier.Patterns.Pattern.Or(System.Char)
  fullName: Stringier.Patterns.Pattern.Or(System.Char)
  nameWithType: Pattern.Or(Char)
- uid: Stringier.Patterns.Pattern.Or(System.String)
  name: Or(String)
  href: api/Stringier.Patterns.Pattern.html#Stringier_Patterns_Pattern_Or_System_String_
  commentId: M:Stringier.Patterns.Pattern.Or(System.String)
  fullName: Stringier.Patterns.Pattern.Or(System.String)
  nameWithType: Pattern.Or(String)
- uid: Stringier.Patterns.Pattern.Or*
  name: Or
  href: api/Stringier.Patterns.Pattern.html#Stringier_Patterns_Pattern_Or_
  commentId: Overload:Stringier.Patterns.Pattern.Or
  isSpec: "True"
  fullName: Stringier.Patterns.Pattern.Or
  nameWithType: Pattern.Or
- uid: Stringier.Patterns.Pattern.Parse(System.Char*,System.Int32,System.Int32@)
  name: Parse(Char*, Int32, ref Int32)
  href: api/Stringier.Patterns.Pattern.html#Stringier_Patterns_Pattern_Parse_System_Char__System_Int32_System_Int32__
  commentId: M:Stringier.Patterns.Pattern.Parse(System.Char*,System.Int32,System.Int32@)
  name.vb: Parse(Char*, Int32, ByRef Int32)
  fullName: Stringier.Patterns.Pattern.Parse(System.Char*, System.Int32, ref System.Int32)
  fullName.vb: Stringier.Patterns.Pattern.Parse(System.Char*, System.Int32, ByRef System.Int32)
  nameWithType: Pattern.Parse(Char*, Int32, ref Int32)
  nameWithType.vb: Pattern.Parse(Char*, Int32, ByRef Int32)
- uid: Stringier.Patterns.Pattern.Parse(System.Char*,System.Int32,System.Int32@,System.Traits.IAdd{Stringier.Patterns.Capture})
  name: Parse(Char*, Int32, ref Int32, IAdd<Capture>)
  href: api/Stringier.Patterns.Pattern.html#Stringier_Patterns_Pattern_Parse_System_Char__System_Int32_System_Int32__System_Traits_IAdd_Stringier_Patterns_Capture__
  commentId: M:Stringier.Patterns.Pattern.Parse(System.Char*,System.Int32,System.Int32@,System.Traits.IAdd{Stringier.Patterns.Capture})
  name.vb: Parse(Char*, Int32, ByRef Int32, IAdd(Of Capture))
  fullName: Stringier.Patterns.Pattern.Parse(System.Char*, System.Int32, ref System.Int32, System.Traits.IAdd<Stringier.Patterns.Capture>)
  fullName.vb: Stringier.Patterns.Pattern.Parse(System.Char*, System.Int32, ByRef System.Int32, System.Traits.IAdd(Of Stringier.Patterns.Capture))
  nameWithType: Pattern.Parse(Char*, Int32, ref Int32, IAdd<Capture>)
  nameWithType.vb: Pattern.Parse(Char*, Int32, ByRef Int32, IAdd(Of Capture))
- uid: Stringier.Patterns.Pattern.Parse(System.Char[],System.Int32@)
  name: Parse(Char[], ref Int32)
  href: api/Stringier.Patterns.Pattern.html#Stringier_Patterns_Pattern_Parse_System_Char___System_Int32__
  commentId: M:Stringier.Patterns.Pattern.Parse(System.Char[],System.Int32@)
  name.vb: Parse(Char(), ByRef Int32)
  fullName: Stringier.Patterns.Pattern.Parse(System.Char[], ref System.Int32)
  fullName.vb: Stringier.Patterns.Pattern.Parse(System.Char(), ByRef System.Int32)
  nameWithType: Pattern.Parse(Char[], ref Int32)
  nameWithType.vb: Pattern.Parse(Char(), ByRef Int32)
- uid: Stringier.Patterns.Pattern.Parse(System.Char[],System.Int32@,System.Traits.IAdd{Stringier.Patterns.Capture})
  name: Parse(Char[], ref Int32, IAdd<Capture>)
  href: api/Stringier.Patterns.Pattern.html#Stringier_Patterns_Pattern_Parse_System_Char___System_Int32__System_Traits_IAdd_Stringier_Patterns_Capture__
  commentId: M:Stringier.Patterns.Pattern.Parse(System.Char[],System.Int32@,System.Traits.IAdd{Stringier.Patterns.Capture})
  name.vb: Parse(Char(), ByRef Int32, IAdd(Of Capture))
  fullName: Stringier.Patterns.Pattern.Parse(System.Char[], ref System.Int32, System.Traits.IAdd<Stringier.Patterns.Capture>)
  fullName.vb: Stringier.Patterns.Pattern.Parse(System.Char(), ByRef System.Int32, System.Traits.IAdd(Of Stringier.Patterns.Capture))
  nameWithType: Pattern.Parse(Char[], ref Int32, IAdd<Capture>)
  nameWithType.vb: Pattern.Parse(Char(), ByRef Int32, IAdd(Of Capture))
- uid: Stringier.Patterns.Pattern.Parse(System.Memory{System.Char},System.Int32@)
  name: Parse(Memory<Char>, ref Int32)
  href: api/Stringier.Patterns.Pattern.html#Stringier_Patterns_Pattern_Parse_System_Memory_System_Char__System_Int32__
  commentId: M:Stringier.Patterns.Pattern.Parse(System.Memory{System.Char},System.Int32@)
  name.vb: Parse(Memory(Of Char), ByRef Int32)
  fullName: Stringier.Patterns.Pattern.Parse(System.Memory<System.Char>, ref System.Int32)
  fullName.vb: Stringier.Patterns.Pattern.Parse(System.Memory(Of System.Char), ByRef System.Int32)
  nameWithType: Pattern.Parse(Memory<Char>, ref Int32)
  nameWithType.vb: Pattern.Parse(Memory(Of Char), ByRef Int32)
- uid: Stringier.Patterns.Pattern.Parse(System.Memory{System.Char},System.Int32@,System.Traits.IAdd{Stringier.Patterns.Capture})
  name: Parse(Memory<Char>, ref Int32, IAdd<Capture>)
  href: api/Stringier.Patterns.Pattern.html#Stringier_Patterns_Pattern_Parse_System_Memory_System_Char__System_Int32__System_Traits_IAdd_Stringier_Patterns_Capture__
  commentId: M:Stringier.Patterns.Pattern.Parse(System.Memory{System.Char},System.Int32@,System.Traits.IAdd{Stringier.Patterns.Capture})
  name.vb: Parse(Memory(Of Char), ByRef Int32, IAdd(Of Capture))
  fullName: Stringier.Patterns.Pattern.Parse(System.Memory<System.Char>, ref System.Int32, System.Traits.IAdd<Stringier.Patterns.Capture>)
  fullName.vb: Stringier.Patterns.Pattern.Parse(System.Memory(Of System.Char), ByRef System.Int32, System.Traits.IAdd(Of Stringier.Patterns.Capture))
  nameWithType: Pattern.Parse(Memory<Char>, ref Int32, IAdd<Capture>)
  nameWithType.vb: Pattern.Parse(Memory(Of Char), ByRef Int32, IAdd(Of Capture))
- uid: Stringier.Patterns.Pattern.Parse(System.ReadOnlyMemory{System.Char},System.Int32@)
  name: Parse(ReadOnlyMemory<Char>, ref Int32)
  href: api/Stringier.Patterns.Pattern.html#Stringier_Patterns_Pattern_Parse_System_ReadOnlyMemory_System_Char__System_Int32__
  commentId: M:Stringier.Patterns.Pattern.Parse(System.ReadOnlyMemory{System.Char},System.Int32@)
  name.vb: Parse(ReadOnlyMemory(Of Char), ByRef Int32)
  fullName: Stringier.Patterns.Pattern.Parse(System.ReadOnlyMemory<System.Char>, ref System.Int32)
  fullName.vb: Stringier.Patterns.Pattern.Parse(System.ReadOnlyMemory(Of System.Char), ByRef System.Int32)
  nameWithType: Pattern.Parse(ReadOnlyMemory<Char>, ref Int32)
  nameWithType.vb: Pattern.Parse(ReadOnlyMemory(Of Char), ByRef Int32)
- uid: Stringier.Patterns.Pattern.Parse(System.ReadOnlyMemory{System.Char},System.Int32@,System.Traits.IAdd{Stringier.Patterns.Capture})
  name: Parse(ReadOnlyMemory<Char>, ref Int32, IAdd<Capture>)
  href: api/Stringier.Patterns.Pattern.html#Stringier_Patterns_Pattern_Parse_System_ReadOnlyMemory_System_Char__System_Int32__System_Traits_IAdd_Stringier_Patterns_Capture__
  commentId: M:Stringier.Patterns.Pattern.Parse(System.ReadOnlyMemory{System.Char},System.Int32@,System.Traits.IAdd{Stringier.Patterns.Capture})
  name.vb: Parse(ReadOnlyMemory(Of Char), ByRef Int32, IAdd(Of Capture))
  fullName: Stringier.Patterns.Pattern.Parse(System.ReadOnlyMemory<System.Char>, ref System.Int32, System.Traits.IAdd<Stringier.Patterns.Capture>)
  fullName.vb: Stringier.Patterns.Pattern.Parse(System.ReadOnlyMemory(Of System.Char), ByRef System.Int32, System.Traits.IAdd(Of Stringier.Patterns.Capture))
  nameWithType: Pattern.Parse(ReadOnlyMemory<Char>, ref Int32, IAdd<Capture>)
  nameWithType.vb: Pattern.Parse(ReadOnlyMemory(Of Char), ByRef Int32, IAdd(Of Capture))
- uid: Stringier.Patterns.Pattern.Parse(System.ReadOnlySpan{System.Char},System.Int32@)
  name: Parse(ReadOnlySpan<Char>, ref Int32)
  href: api/Stringier.Patterns.Pattern.html#Stringier_Patterns_Pattern_Parse_System_ReadOnlySpan_System_Char__System_Int32__
  commentId: M:Stringier.Patterns.Pattern.Parse(System.ReadOnlySpan{System.Char},System.Int32@)
  name.vb: Parse(ReadOnlySpan(Of Char), ByRef Int32)
  fullName: Stringier.Patterns.Pattern.Parse(System.ReadOnlySpan<System.Char>, ref System.Int32)
  fullName.vb: Stringier.Patterns.Pattern.Parse(System.ReadOnlySpan(Of System.Char), ByRef System.Int32)
  nameWithType: Pattern.Parse(ReadOnlySpan<Char>, ref Int32)
  nameWithType.vb: Pattern.Parse(ReadOnlySpan(Of Char), ByRef Int32)
- uid: Stringier.Patterns.Pattern.Parse(System.ReadOnlySpan{System.Char},System.Int32@,System.Traits.IAdd{Stringier.Patterns.Capture})
  name: Parse(ReadOnlySpan<Char>, ref Int32, IAdd<Capture>)
  href: api/Stringier.Patterns.Pattern.html#Stringier_Patterns_Pattern_Parse_System_ReadOnlySpan_System_Char__System_Int32__System_Traits_IAdd_Stringier_Patterns_Capture__
  commentId: M:Stringier.Patterns.Pattern.Parse(System.ReadOnlySpan{System.Char},System.Int32@,System.Traits.IAdd{Stringier.Patterns.Capture})
  name.vb: Parse(ReadOnlySpan(Of Char), ByRef Int32, IAdd(Of Capture))
  fullName: Stringier.Patterns.Pattern.Parse(System.ReadOnlySpan<System.Char>, ref System.Int32, System.Traits.IAdd<Stringier.Patterns.Capture>)
  fullName.vb: Stringier.Patterns.Pattern.Parse(System.ReadOnlySpan(Of System.Char), ByRef System.Int32, System.Traits.IAdd(Of Stringier.Patterns.Capture))
  nameWithType: Pattern.Parse(ReadOnlySpan<Char>, ref Int32, IAdd<Capture>)
  nameWithType.vb: Pattern.Parse(ReadOnlySpan(Of Char), ByRef Int32, IAdd(Of Capture))
- uid: Stringier.Patterns.Pattern.Parse(System.Span{System.Char},System.Int32@)
  name: Parse(Span<Char>, ref Int32)
  href: api/Stringier.Patterns.Pattern.html#Stringier_Patterns_Pattern_Parse_System_Span_System_Char__System_Int32__
  commentId: M:Stringier.Patterns.Pattern.Parse(System.Span{System.Char},System.Int32@)
  name.vb: Parse(Span(Of Char), ByRef Int32)
  fullName: Stringier.Patterns.Pattern.Parse(System.Span<System.Char>, ref System.Int32)
  fullName.vb: Stringier.Patterns.Pattern.Parse(System.Span(Of System.Char), ByRef System.Int32)
  nameWithType: Pattern.Parse(Span<Char>, ref Int32)
  nameWithType.vb: Pattern.Parse(Span(Of Char), ByRef Int32)
- uid: Stringier.Patterns.Pattern.Parse(System.Span{System.Char},System.Int32@,System.Traits.IAdd{Stringier.Patterns.Capture})
  name: Parse(Span<Char>, ref Int32, IAdd<Capture>)
  href: api/Stringier.Patterns.Pattern.html#Stringier_Patterns_Pattern_Parse_System_Span_System_Char__System_Int32__System_Traits_IAdd_Stringier_Patterns_Capture__
  commentId: M:Stringier.Patterns.Pattern.Parse(System.Span{System.Char},System.Int32@,System.Traits.IAdd{Stringier.Patterns.Capture})
  name.vb: Parse(Span(Of Char), ByRef Int32, IAdd(Of Capture))
  fullName: Stringier.Patterns.Pattern.Parse(System.Span<System.Char>, ref System.Int32, System.Traits.IAdd<Stringier.Patterns.Capture>)
  fullName.vb: Stringier.Patterns.Pattern.Parse(System.Span(Of System.Char), ByRef System.Int32, System.Traits.IAdd(Of Stringier.Patterns.Capture))
  nameWithType: Pattern.Parse(Span<Char>, ref Int32, IAdd<Capture>)
  nameWithType.vb: Pattern.Parse(Span(Of Char), ByRef Int32, IAdd(Of Capture))
- uid: Stringier.Patterns.Pattern.Parse(System.String,System.Int32@)
  name: Parse(String, ref Int32)
  href: api/Stringier.Patterns.Pattern.html#Stringier_Patterns_Pattern_Parse_System_String_System_Int32__
  commentId: M:Stringier.Patterns.Pattern.Parse(System.String,System.Int32@)
  name.vb: Parse(String, ByRef Int32)
  fullName: Stringier.Patterns.Pattern.Parse(System.String, ref System.Int32)
  fullName.vb: Stringier.Patterns.Pattern.Parse(System.String, ByRef System.Int32)
  nameWithType: Pattern.Parse(String, ref Int32)
  nameWithType.vb: Pattern.Parse(String, ByRef Int32)
- uid: Stringier.Patterns.Pattern.Parse(System.String,System.Int32@,System.Traits.IAdd{Stringier.Patterns.Capture})
  name: Parse(String, ref Int32, IAdd<Capture>)
  href: api/Stringier.Patterns.Pattern.html#Stringier_Patterns_Pattern_Parse_System_String_System_Int32__System_Traits_IAdd_Stringier_Patterns_Capture__
  commentId: M:Stringier.Patterns.Pattern.Parse(System.String,System.Int32@,System.Traits.IAdd{Stringier.Patterns.Capture})
  name.vb: Parse(String, ByRef Int32, IAdd(Of Capture))
  fullName: Stringier.Patterns.Pattern.Parse(System.String, ref System.Int32, System.Traits.IAdd<Stringier.Patterns.Capture>)
  fullName.vb: Stringier.Patterns.Pattern.Parse(System.String, ByRef System.Int32, System.Traits.IAdd(Of Stringier.Patterns.Capture))
  nameWithType: Pattern.Parse(String, ref Int32, IAdd<Capture>)
  nameWithType.vb: Pattern.Parse(String, ByRef Int32, IAdd(Of Capture))
- uid: Stringier.Patterns.Pattern.Parse*
  name: Parse
  href: api/Stringier.Patterns.Pattern.html#Stringier_Patterns_Pattern_Parse_
  commentId: Overload:Stringier.Patterns.Pattern.Parse
  isSpec: "True"
  fullName: Stringier.Patterns.Pattern.Parse
  nameWithType: Pattern.Parse
- uid: Stringier.Patterns.Pattern.Repeat(Stringier.Patterns.Pattern,System.Int32)
  name: Repeat(Pattern, Int32)
  href: api/Stringier.Patterns.Pattern.html#Stringier_Patterns_Pattern_Repeat_Stringier_Patterns_Pattern_System_Int32_
  commentId: M:Stringier.Patterns.Pattern.Repeat(Stringier.Patterns.Pattern,System.Int32)
  fullName: Stringier.Patterns.Pattern.Repeat(Stringier.Patterns.Pattern, System.Int32)
  nameWithType: Pattern.Repeat(Pattern, Int32)
- uid: Stringier.Patterns.Pattern.Repeat(System.Int32)
  name: Repeat(Int32)
  href: api/Stringier.Patterns.Pattern.html#Stringier_Patterns_Pattern_Repeat_System_Int32_
  commentId: M:Stringier.Patterns.Pattern.Repeat(System.Int32)
  fullName: Stringier.Patterns.Pattern.Repeat(System.Int32)
  nameWithType: Pattern.Repeat(Int32)
- uid: Stringier.Patterns.Pattern.Repeat*
  name: Repeat
  href: api/Stringier.Patterns.Pattern.html#Stringier_Patterns_Pattern_Repeat_
  commentId: Overload:Stringier.Patterns.Pattern.Repeat
  isSpec: "True"
  fullName: Stringier.Patterns.Pattern.Repeat
  nameWithType: Pattern.Repeat
- uid: Stringier.Patterns.Pattern.StringLiteral(System.String)
  name: StringLiteral(String)
  href: api/Stringier.Patterns.Pattern.html#Stringier_Patterns_Pattern_StringLiteral_System_String_
  commentId: M:Stringier.Patterns.Pattern.StringLiteral(System.String)
  fullName: Stringier.Patterns.Pattern.StringLiteral(System.String)
  nameWithType: Pattern.StringLiteral(String)
- uid: Stringier.Patterns.Pattern.StringLiteral(System.String,System.String)
  name: StringLiteral(String, String)
  href: api/Stringier.Patterns.Pattern.html#Stringier_Patterns_Pattern_StringLiteral_System_String_System_String_
  commentId: M:Stringier.Patterns.Pattern.StringLiteral(System.String,System.String)
  fullName: Stringier.Patterns.Pattern.StringLiteral(System.String, System.String)
  nameWithType: Pattern.StringLiteral(String, String)
- uid: Stringier.Patterns.Pattern.StringLiteral*
  name: StringLiteral
  href: api/Stringier.Patterns.Pattern.html#Stringier_Patterns_Pattern_StringLiteral_
  commentId: Overload:Stringier.Patterns.Pattern.StringLiteral
  isSpec: "True"
  fullName: Stringier.Patterns.Pattern.StringLiteral
  nameWithType: Pattern.StringLiteral
- uid: Stringier.Patterns.Pattern.Then(Stringier.Patterns.Pattern)
  name: Then(Pattern)
  href: api/Stringier.Patterns.Pattern.html#Stringier_Patterns_Pattern_Then_Stringier_Patterns_Pattern_
  commentId: M:Stringier.Patterns.Pattern.Then(Stringier.Patterns.Pattern)
  fullName: Stringier.Patterns.Pattern.Then(Stringier.Patterns.Pattern)
  nameWithType: Pattern.Then(Pattern)
- uid: Stringier.Patterns.Pattern.Then(System.Char)
  name: Then(Char)
  href: api/Stringier.Patterns.Pattern.html#Stringier_Patterns_Pattern_Then_System_Char_
  commentId: M:Stringier.Patterns.Pattern.Then(System.Char)
  fullName: Stringier.Patterns.Pattern.Then(System.Char)
  nameWithType: Pattern.Then(Char)
- uid: Stringier.Patterns.Pattern.Then(System.String)
  name: Then(String)
  href: api/Stringier.Patterns.Pattern.html#Stringier_Patterns_Pattern_Then_System_String_
  commentId: M:Stringier.Patterns.Pattern.Then(System.String)
  fullName: Stringier.Patterns.Pattern.Then(System.String)
  nameWithType: Pattern.Then(String)
- uid: Stringier.Patterns.Pattern.Then*
  name: Then
  href: api/Stringier.Patterns.Pattern.html#Stringier_Patterns_Pattern_Then_
  commentId: Overload:Stringier.Patterns.Pattern.Then
  isSpec: "True"
  fullName: Stringier.Patterns.Pattern.Then
  nameWithType: Pattern.Then
- uid: Stringier.Patterns.Pattern.To(Stringier.Patterns.Pattern)
  name: To(Pattern)
  href: api/Stringier.Patterns.Pattern.html#Stringier_Patterns_Pattern_To_Stringier_Patterns_Pattern_
  commentId: M:Stringier.Patterns.Pattern.To(Stringier.Patterns.Pattern)
  fullName: Stringier.Patterns.Pattern.To(Stringier.Patterns.Pattern)
  nameWithType: Pattern.To(Pattern)
- uid: Stringier.Patterns.Pattern.To(Stringier.Patterns.Pattern,Stringier.Patterns.Pattern)
  name: To(Pattern, Pattern)
  href: api/Stringier.Patterns.Pattern.html#Stringier_Patterns_Pattern_To_Stringier_Patterns_Pattern_Stringier_Patterns_Pattern_
  commentId: M:Stringier.Patterns.Pattern.To(Stringier.Patterns.Pattern,Stringier.Patterns.Pattern)
  fullName: Stringier.Patterns.Pattern.To(Stringier.Patterns.Pattern, Stringier.Patterns.Pattern)
  nameWithType: Pattern.To(Pattern, Pattern)
- uid: Stringier.Patterns.Pattern.To*
  name: To
  href: api/Stringier.Patterns.Pattern.html#Stringier_Patterns_Pattern_To_
  commentId: Overload:Stringier.Patterns.Pattern.To
  isSpec: "True"
  fullName: Stringier.Patterns.Pattern.To
  nameWithType: Pattern.To
- uid: Stringier.Patterns.Pattern.ToNested(Stringier.Patterns.Pattern)
  name: ToNested(Pattern)
  href: api/Stringier.Patterns.Pattern.html#Stringier_Patterns_Pattern_ToNested_Stringier_Patterns_Pattern_
  commentId: M:Stringier.Patterns.Pattern.ToNested(Stringier.Patterns.Pattern)
  fullName: Stringier.Patterns.Pattern.ToNested(Stringier.Patterns.Pattern)
  nameWithType: Pattern.ToNested(Pattern)
- uid: Stringier.Patterns.Pattern.ToNested*
  name: ToNested
  href: api/Stringier.Patterns.Pattern.html#Stringier_Patterns_Pattern_ToNested_
  commentId: Overload:Stringier.Patterns.Pattern.ToNested
  isSpec: "True"
  fullName: Stringier.Patterns.Pattern.ToNested
  nameWithType: Pattern.ToNested
- uid: Stringier.Patterns.PatternExtensions
  name: PatternExtensions
  href: api/Stringier.Patterns.PatternExtensions.html
  commentId: T:Stringier.Patterns.PatternExtensions
  fullName: Stringier.Patterns.PatternExtensions
  nameWithType: PatternExtensions
- uid: Stringier.Patterns.PatternExtensions.Fuzzy(System.String)
  name: Fuzzy(String)
  href: api/Stringier.Patterns.PatternExtensions.html#Stringier_Patterns_PatternExtensions_Fuzzy_System_String_
  commentId: M:Stringier.Patterns.PatternExtensions.Fuzzy(System.String)
  fullName: Stringier.Patterns.PatternExtensions.Fuzzy(System.String)
  nameWithType: PatternExtensions.Fuzzy(String)
- uid: Stringier.Patterns.PatternExtensions.Fuzzy(System.String,Stringier.Case)
  name: Fuzzy(String, Case)
  href: api/Stringier.Patterns.PatternExtensions.html#Stringier_Patterns_PatternExtensions_Fuzzy_System_String_Stringier_Case_
  commentId: M:Stringier.Patterns.PatternExtensions.Fuzzy(System.String,Stringier.Case)
  fullName: Stringier.Patterns.PatternExtensions.Fuzzy(System.String, Stringier.Case)
  nameWithType: PatternExtensions.Fuzzy(String, Case)
- uid: Stringier.Patterns.PatternExtensions.Fuzzy(System.String,System.Int32)
  name: Fuzzy(String, Int32)
  href: api/Stringier.Patterns.PatternExtensions.html#Stringier_Patterns_PatternExtensions_Fuzzy_System_String_System_Int32_
  commentId: M:Stringier.Patterns.PatternExtensions.Fuzzy(System.String,System.Int32)
  fullName: Stringier.Patterns.PatternExtensions.Fuzzy(System.String, System.Int32)
  nameWithType: PatternExtensions.Fuzzy(String, Int32)
- uid: Stringier.Patterns.PatternExtensions.Fuzzy(System.String,System.Int32,Stringier.Case)
  name: Fuzzy(String, Int32, Case)
  href: api/Stringier.Patterns.PatternExtensions.html#Stringier_Patterns_PatternExtensions_Fuzzy_System_String_System_Int32_Stringier_Case_
  commentId: M:Stringier.Patterns.PatternExtensions.Fuzzy(System.String,System.Int32,Stringier.Case)
  fullName: Stringier.Patterns.PatternExtensions.Fuzzy(System.String, System.Int32, Stringier.Case)
  nameWithType: PatternExtensions.Fuzzy(String, Int32, Case)
- uid: Stringier.Patterns.PatternExtensions.Fuzzy*
  name: Fuzzy
  href: api/Stringier.Patterns.PatternExtensions.html#Stringier_Patterns_PatternExtensions_Fuzzy_
  commentId: Overload:Stringier.Patterns.PatternExtensions.Fuzzy
  isSpec: "True"
  fullName: Stringier.Patterns.PatternExtensions.Fuzzy
  nameWithType: PatternExtensions.Fuzzy
- uid: Stringier.Patterns.PatternExtensions.Many(System.Char)
  name: Many(Char)
  href: api/Stringier.Patterns.PatternExtensions.html#Stringier_Patterns_PatternExtensions_Many_System_Char_
  commentId: M:Stringier.Patterns.PatternExtensions.Many(System.Char)
  fullName: Stringier.Patterns.PatternExtensions.Many(System.Char)
  nameWithType: PatternExtensions.Many(Char)
- uid: Stringier.Patterns.PatternExtensions.Many(System.String)
  name: Many(String)
  href: api/Stringier.Patterns.PatternExtensions.html#Stringier_Patterns_PatternExtensions_Many_System_String_
  commentId: M:Stringier.Patterns.PatternExtensions.Many(System.String)
  fullName: Stringier.Patterns.PatternExtensions.Many(System.String)
  nameWithType: PatternExtensions.Many(String)
- uid: Stringier.Patterns.PatternExtensions.Many*
  name: Many
  href: api/Stringier.Patterns.PatternExtensions.html#Stringier_Patterns_PatternExtensions_Many_
  commentId: Overload:Stringier.Patterns.PatternExtensions.Many
  isSpec: "True"
  fullName: Stringier.Patterns.PatternExtensions.Many
  nameWithType: PatternExtensions.Many
- uid: Stringier.Patterns.PatternExtensions.Maybe(System.Char)
  name: Maybe(Char)
  href: api/Stringier.Patterns.PatternExtensions.html#Stringier_Patterns_PatternExtensions_Maybe_System_Char_
  commentId: M:Stringier.Patterns.PatternExtensions.Maybe(System.Char)
  fullName: Stringier.Patterns.PatternExtensions.Maybe(System.Char)
  nameWithType: PatternExtensions.Maybe(Char)
- uid: Stringier.Patterns.PatternExtensions.Maybe(System.String)
  name: Maybe(String)
  href: api/Stringier.Patterns.PatternExtensions.html#Stringier_Patterns_PatternExtensions_Maybe_System_String_
  commentId: M:Stringier.Patterns.PatternExtensions.Maybe(System.String)
  fullName: Stringier.Patterns.PatternExtensions.Maybe(System.String)
  nameWithType: PatternExtensions.Maybe(String)
- uid: Stringier.Patterns.PatternExtensions.Maybe*
  name: Maybe
  href: api/Stringier.Patterns.PatternExtensions.html#Stringier_Patterns_PatternExtensions_Maybe_
  commentId: Overload:Stringier.Patterns.PatternExtensions.Maybe
  isSpec: "True"
  fullName: Stringier.Patterns.PatternExtensions.Maybe
  nameWithType: PatternExtensions.Maybe
- uid: Stringier.Patterns.PatternExtensions.Not(System.Char)
  name: Not(Char)
  href: api/Stringier.Patterns.PatternExtensions.html#Stringier_Patterns_PatternExtensions_Not_System_Char_
  commentId: M:Stringier.Patterns.PatternExtensions.Not(System.Char)
  fullName: Stringier.Patterns.PatternExtensions.Not(System.Char)
  nameWithType: PatternExtensions.Not(Char)
- uid: Stringier.Patterns.PatternExtensions.Not(System.String)
  name: Not(String)
  href: api/Stringier.Patterns.PatternExtensions.html#Stringier_Patterns_PatternExtensions_Not_System_String_
  commentId: M:Stringier.Patterns.PatternExtensions.Not(System.String)
  fullName: Stringier.Patterns.PatternExtensions.Not(System.String)
  nameWithType: PatternExtensions.Not(String)
- uid: Stringier.Patterns.PatternExtensions.Not*
  name: Not
  href: api/Stringier.Patterns.PatternExtensions.html#Stringier_Patterns_PatternExtensions_Not_
  commentId: Overload:Stringier.Patterns.PatternExtensions.Not
  isSpec: "True"
  fullName: Stringier.Patterns.PatternExtensions.Not
  nameWithType: PatternExtensions.Not
- uid: Stringier.Patterns.PatternExtensions.Or(System.Char,Stringier.Patterns.Pattern)
  name: Or(Char, Pattern)
  href: api/Stringier.Patterns.PatternExtensions.html#Stringier_Patterns_PatternExtensions_Or_System_Char_Stringier_Patterns_Pattern_
  commentId: M:Stringier.Patterns.PatternExtensions.Or(System.Char,Stringier.Patterns.Pattern)
  fullName: Stringier.Patterns.PatternExtensions.Or(System.Char, Stringier.Patterns.Pattern)
  nameWithType: PatternExtensions.Or(Char, Pattern)
- uid: Stringier.Patterns.PatternExtensions.Or(System.Char,System.Char)
  name: Or(Char, Char)
  href: api/Stringier.Patterns.PatternExtensions.html#Stringier_Patterns_PatternExtensions_Or_System_Char_System_Char_
  commentId: M:Stringier.Patterns.PatternExtensions.Or(System.Char,System.Char)
  fullName: Stringier.Patterns.PatternExtensions.Or(System.Char, System.Char)
  nameWithType: PatternExtensions.Or(Char, Char)
- uid: Stringier.Patterns.PatternExtensions.Or(System.Char,System.String)
  name: Or(Char, String)
  href: api/Stringier.Patterns.PatternExtensions.html#Stringier_Patterns_PatternExtensions_Or_System_Char_System_String_
  commentId: M:Stringier.Patterns.PatternExtensions.Or(System.Char,System.String)
  fullName: Stringier.Patterns.PatternExtensions.Or(System.Char, System.String)
  nameWithType: PatternExtensions.Or(Char, String)
- uid: Stringier.Patterns.PatternExtensions.Or(System.String,Stringier.Patterns.Pattern)
  name: Or(String, Pattern)
  href: api/Stringier.Patterns.PatternExtensions.html#Stringier_Patterns_PatternExtensions_Or_System_String_Stringier_Patterns_Pattern_
  commentId: M:Stringier.Patterns.PatternExtensions.Or(System.String,Stringier.Patterns.Pattern)
  fullName: Stringier.Patterns.PatternExtensions.Or(System.String, Stringier.Patterns.Pattern)
  nameWithType: PatternExtensions.Or(String, Pattern)
- uid: Stringier.Patterns.PatternExtensions.Or(System.String,System.Char)
  name: Or(String, Char)
  href: api/Stringier.Patterns.PatternExtensions.html#Stringier_Patterns_PatternExtensions_Or_System_String_System_Char_
  commentId: M:Stringier.Patterns.PatternExtensions.Or(System.String,System.Char)
  fullName: Stringier.Patterns.PatternExtensions.Or(System.String, System.Char)
  nameWithType: PatternExtensions.Or(String, Char)
- uid: Stringier.Patterns.PatternExtensions.Or(System.String,System.String)
  name: Or(String, String)
  href: api/Stringier.Patterns.PatternExtensions.html#Stringier_Patterns_PatternExtensions_Or_System_String_System_String_
  commentId: M:Stringier.Patterns.PatternExtensions.Or(System.String,System.String)
  fullName: Stringier.Patterns.PatternExtensions.Or(System.String, System.String)
  nameWithType: PatternExtensions.Or(String, String)
- uid: Stringier.Patterns.PatternExtensions.Or*
  name: Or
  href: api/Stringier.Patterns.PatternExtensions.html#Stringier_Patterns_PatternExtensions_Or_
  commentId: Overload:Stringier.Patterns.PatternExtensions.Or
  isSpec: "True"
  fullName: Stringier.Patterns.PatternExtensions.Or
  nameWithType: PatternExtensions.Or
- uid: Stringier.Patterns.PatternExtensions.Repeat(System.Char,System.Int32)
  name: Repeat(Char, Int32)
  href: api/Stringier.Patterns.PatternExtensions.html#Stringier_Patterns_PatternExtensions_Repeat_System_Char_System_Int32_
  commentId: M:Stringier.Patterns.PatternExtensions.Repeat(System.Char,System.Int32)
  fullName: Stringier.Patterns.PatternExtensions.Repeat(System.Char, System.Int32)
  nameWithType: PatternExtensions.Repeat(Char, Int32)
- uid: Stringier.Patterns.PatternExtensions.Repeat(System.String,System.Int32)
  name: Repeat(String, Int32)
  href: api/Stringier.Patterns.PatternExtensions.html#Stringier_Patterns_PatternExtensions_Repeat_System_String_System_Int32_
  commentId: M:Stringier.Patterns.PatternExtensions.Repeat(System.String,System.Int32)
  fullName: Stringier.Patterns.PatternExtensions.Repeat(System.String, System.Int32)
  nameWithType: PatternExtensions.Repeat(String, Int32)
- uid: Stringier.Patterns.PatternExtensions.Repeat*
  name: Repeat
  href: api/Stringier.Patterns.PatternExtensions.html#Stringier_Patterns_PatternExtensions_Repeat_
  commentId: Overload:Stringier.Patterns.PatternExtensions.Repeat
  isSpec: "True"
  fullName: Stringier.Patterns.PatternExtensions.Repeat
  nameWithType: PatternExtensions.Repeat
- uid: Stringier.Patterns.PatternExtensions.Then(System.Char,Stringier.Patterns.Pattern)
  name: Then(Char, Pattern)
  href: api/Stringier.Patterns.PatternExtensions.html#Stringier_Patterns_PatternExtensions_Then_System_Char_Stringier_Patterns_Pattern_
  commentId: M:Stringier.Patterns.PatternExtensions.Then(System.Char,Stringier.Patterns.Pattern)
  fullName: Stringier.Patterns.PatternExtensions.Then(System.Char, Stringier.Patterns.Pattern)
  nameWithType: PatternExtensions.Then(Char, Pattern)
- uid: Stringier.Patterns.PatternExtensions.Then(System.Char,System.Char)
  name: Then(Char, Char)
  href: api/Stringier.Patterns.PatternExtensions.html#Stringier_Patterns_PatternExtensions_Then_System_Char_System_Char_
  commentId: M:Stringier.Patterns.PatternExtensions.Then(System.Char,System.Char)
  fullName: Stringier.Patterns.PatternExtensions.Then(System.Char, System.Char)
  nameWithType: PatternExtensions.Then(Char, Char)
- uid: Stringier.Patterns.PatternExtensions.Then(System.Char,System.String)
  name: Then(Char, String)
  href: api/Stringier.Patterns.PatternExtensions.html#Stringier_Patterns_PatternExtensions_Then_System_Char_System_String_
  commentId: M:Stringier.Patterns.PatternExtensions.Then(System.Char,System.String)
  fullName: Stringier.Patterns.PatternExtensions.Then(System.Char, System.String)
  nameWithType: PatternExtensions.Then(Char, String)
- uid: Stringier.Patterns.PatternExtensions.Then(System.String,Stringier.Patterns.Pattern)
  name: Then(String, Pattern)
  href: api/Stringier.Patterns.PatternExtensions.html#Stringier_Patterns_PatternExtensions_Then_System_String_Stringier_Patterns_Pattern_
  commentId: M:Stringier.Patterns.PatternExtensions.Then(System.String,Stringier.Patterns.Pattern)
  fullName: Stringier.Patterns.PatternExtensions.Then(System.String, Stringier.Patterns.Pattern)
  nameWithType: PatternExtensions.Then(String, Pattern)
- uid: Stringier.Patterns.PatternExtensions.Then(System.String,System.Char)
  name: Then(String, Char)
  href: api/Stringier.Patterns.PatternExtensions.html#Stringier_Patterns_PatternExtensions_Then_System_String_System_Char_
  commentId: M:Stringier.Patterns.PatternExtensions.Then(System.String,System.Char)
  fullName: Stringier.Patterns.PatternExtensions.Then(System.String, System.Char)
  nameWithType: PatternExtensions.Then(String, Char)
- uid: Stringier.Patterns.PatternExtensions.Then(System.String,System.String)
  name: Then(String, String)
  href: api/Stringier.Patterns.PatternExtensions.html#Stringier_Patterns_PatternExtensions_Then_System_String_System_String_
  commentId: M:Stringier.Patterns.PatternExtensions.Then(System.String,System.String)
  fullName: Stringier.Patterns.PatternExtensions.Then(System.String, System.String)
  nameWithType: PatternExtensions.Then(String, String)
- uid: Stringier.Patterns.PatternExtensions.Then*
  name: Then
  href: api/Stringier.Patterns.PatternExtensions.html#Stringier_Patterns_PatternExtensions_Then_
  commentId: Overload:Stringier.Patterns.PatternExtensions.Then
  isSpec: "True"
  fullName: Stringier.Patterns.PatternExtensions.Then
  nameWithType: PatternExtensions.Then
- uid: Stringier.Patterns.PatternExtensions.To(System.Char,Stringier.Patterns.Pattern)
  name: To(Char, Pattern)
  href: api/Stringier.Patterns.PatternExtensions.html#Stringier_Patterns_PatternExtensions_To_System_Char_Stringier_Patterns_Pattern_
  commentId: M:Stringier.Patterns.PatternExtensions.To(System.Char,Stringier.Patterns.Pattern)
  fullName: Stringier.Patterns.PatternExtensions.To(System.Char, Stringier.Patterns.Pattern)
  nameWithType: PatternExtensions.To(Char, Pattern)
- uid: Stringier.Patterns.PatternExtensions.To(System.Char,Stringier.Patterns.Pattern,Stringier.Patterns.Pattern)
  name: To(Char, Pattern, Pattern)
  href: api/Stringier.Patterns.PatternExtensions.html#Stringier_Patterns_PatternExtensions_To_System_Char_Stringier_Patterns_Pattern_Stringier_Patterns_Pattern_
  commentId: M:Stringier.Patterns.PatternExtensions.To(System.Char,Stringier.Patterns.Pattern,Stringier.Patterns.Pattern)
  fullName: Stringier.Patterns.PatternExtensions.To(System.Char, Stringier.Patterns.Pattern, Stringier.Patterns.Pattern)
  nameWithType: PatternExtensions.To(Char, Pattern, Pattern)
- uid: Stringier.Patterns.PatternExtensions.To(System.String,Stringier.Patterns.Pattern)
  name: To(String, Pattern)
  href: api/Stringier.Patterns.PatternExtensions.html#Stringier_Patterns_PatternExtensions_To_System_String_Stringier_Patterns_Pattern_
  commentId: M:Stringier.Patterns.PatternExtensions.To(System.String,Stringier.Patterns.Pattern)
  fullName: Stringier.Patterns.PatternExtensions.To(System.String, Stringier.Patterns.Pattern)
  nameWithType: PatternExtensions.To(String, Pattern)
- uid: Stringier.Patterns.PatternExtensions.To(System.String,Stringier.Patterns.Pattern,Stringier.Patterns.Pattern)
  name: To(String, Pattern, Pattern)
  href: api/Stringier.Patterns.PatternExtensions.html#Stringier_Patterns_PatternExtensions_To_System_String_Stringier_Patterns_Pattern_Stringier_Patterns_Pattern_
  commentId: M:Stringier.Patterns.PatternExtensions.To(System.String,Stringier.Patterns.Pattern,Stringier.Patterns.Pattern)
  fullName: Stringier.Patterns.PatternExtensions.To(System.String, Stringier.Patterns.Pattern, Stringier.Patterns.Pattern)
  nameWithType: PatternExtensions.To(String, Pattern, Pattern)
- uid: Stringier.Patterns.PatternExtensions.To*
  name: To
  href: api/Stringier.Patterns.PatternExtensions.html#Stringier_Patterns_PatternExtensions_To_
  commentId: Overload:Stringier.Patterns.PatternExtensions.To
  isSpec: "True"
  fullName: Stringier.Patterns.PatternExtensions.To
  nameWithType: PatternExtensions.To
- uid: Stringier.Patterns.PatternExtensions.ToNested(System.Char,Stringier.Patterns.Pattern)
  name: ToNested(Char, Pattern)
  href: api/Stringier.Patterns.PatternExtensions.html#Stringier_Patterns_PatternExtensions_ToNested_System_Char_Stringier_Patterns_Pattern_
  commentId: M:Stringier.Patterns.PatternExtensions.ToNested(System.Char,Stringier.Patterns.Pattern)
  fullName: Stringier.Patterns.PatternExtensions.ToNested(System.Char, Stringier.Patterns.Pattern)
  nameWithType: PatternExtensions.ToNested(Char, Pattern)
- uid: Stringier.Patterns.PatternExtensions.ToNested(System.String,Stringier.Patterns.Pattern)
  name: ToNested(String, Pattern)
  href: api/Stringier.Patterns.PatternExtensions.html#Stringier_Patterns_PatternExtensions_ToNested_System_String_Stringier_Patterns_Pattern_
  commentId: M:Stringier.Patterns.PatternExtensions.ToNested(System.String,Stringier.Patterns.Pattern)
  fullName: Stringier.Patterns.PatternExtensions.ToNested(System.String, Stringier.Patterns.Pattern)
  nameWithType: PatternExtensions.ToNested(String, Pattern)
- uid: Stringier.Patterns.PatternExtensions.ToNested*
  name: ToNested
  href: api/Stringier.Patterns.PatternExtensions.html#Stringier_Patterns_PatternExtensions_ToNested_
  commentId: Overload:Stringier.Patterns.PatternExtensions.ToNested
  isSpec: "True"
  fullName: Stringier.Patterns.PatternExtensions.ToNested
  nameWithType: PatternExtensions.ToNested
- uid: Stringier.Rope
  name: Rope
  href: api/Stringier.Rope.html
  commentId: T:Stringier.Rope
  fullName: Stringier.Rope
  nameWithType: Rope
- uid: Stringier.Rope.#ctor
  name: Rope()
  href: api/Stringier.Rope.html#Stringier_Rope__ctor
  commentId: M:Stringier.Rope.#ctor
  fullName: Stringier.Rope.Rope()
  nameWithType: Rope.Rope()
- uid: Stringier.Rope.#ctor(System.Char)
  name: Rope(Char)
  href: api/Stringier.Rope.html#Stringier_Rope__ctor_System_Char_
  commentId: M:Stringier.Rope.#ctor(System.Char)
  fullName: Stringier.Rope.Rope(System.Char)
  nameWithType: Rope.Rope(Char)
- uid: Stringier.Rope.#ctor(System.Char[])
  name: Rope(Char[])
  href: api/Stringier.Rope.html#Stringier_Rope__ctor_System_Char___
  commentId: M:Stringier.Rope.#ctor(System.Char[])
  name.vb: Rope(Char())
  fullName: Stringier.Rope.Rope(System.Char[])
  fullName.vb: Stringier.Rope.Rope(System.Char())
  nameWithType: Rope.Rope(Char[])
  nameWithType.vb: Rope.Rope(Char())
- uid: Stringier.Rope.#ctor(System.Memory{System.Char})
  name: Rope(Memory<Char>)
  href: api/Stringier.Rope.html#Stringier_Rope__ctor_System_Memory_System_Char__
  commentId: M:Stringier.Rope.#ctor(System.Memory{System.Char})
  name.vb: Rope(Memory(Of Char))
  fullName: Stringier.Rope.Rope(System.Memory<System.Char>)
  fullName.vb: Stringier.Rope.Rope(System.Memory(Of System.Char))
  nameWithType: Rope.Rope(Memory<Char>)
  nameWithType.vb: Rope.Rope(Memory(Of Char))
- uid: Stringier.Rope.#ctor(System.ReadOnlyMemory{System.Char})
  name: Rope(ReadOnlyMemory<Char>)
  href: api/Stringier.Rope.html#Stringier_Rope__ctor_System_ReadOnlyMemory_System_Char__
  commentId: M:Stringier.Rope.#ctor(System.ReadOnlyMemory{System.Char})
  name.vb: Rope(ReadOnlyMemory(Of Char))
  fullName: Stringier.Rope.Rope(System.ReadOnlyMemory<System.Char>)
  fullName.vb: Stringier.Rope.Rope(System.ReadOnlyMemory(Of System.Char))
  nameWithType: Rope.Rope(ReadOnlyMemory<Char>)
  nameWithType.vb: Rope.Rope(ReadOnlyMemory(Of Char))
- uid: Stringier.Rope.#ctor(System.String)
  name: Rope(String)
  href: api/Stringier.Rope.html#Stringier_Rope__ctor_System_String_
  commentId: M:Stringier.Rope.#ctor(System.String)
  fullName: Stringier.Rope.Rope(System.String)
  nameWithType: Rope.Rope(String)
- uid: Stringier.Rope.#ctor*
  name: Rope
  href: api/Stringier.Rope.html#Stringier_Rope__ctor_
  commentId: Overload:Stringier.Rope.#ctor
  isSpec: "True"
  fullName: Stringier.Rope.Rope
  nameWithType: Rope.Rope
- uid: Stringier.Rope.Add(System.Char)
  name: Add(Char)
  href: api/Stringier.Rope.html#Stringier_Rope_Add_System_Char_
  commentId: M:Stringier.Rope.Add(System.Char)
  fullName: Stringier.Rope.Add(System.Char)
  nameWithType: Rope.Add(Char)
- uid: Stringier.Rope.Add(System.Char[])
  name: Add(Char[])
  href: api/Stringier.Rope.html#Stringier_Rope_Add_System_Char___
  commentId: M:Stringier.Rope.Add(System.Char[])
  name.vb: Add(Char())
  fullName: Stringier.Rope.Add(System.Char[])
  fullName.vb: Stringier.Rope.Add(System.Char())
  nameWithType: Rope.Add(Char[])
  nameWithType.vb: Rope.Add(Char())
- uid: Stringier.Rope.Add(System.Memory{System.Char})
  name: Add(Memory<Char>)
  href: api/Stringier.Rope.html#Stringier_Rope_Add_System_Memory_System_Char__
  commentId: M:Stringier.Rope.Add(System.Memory{System.Char})
  name.vb: Add(Memory(Of Char))
  fullName: Stringier.Rope.Add(System.Memory<System.Char>)
  fullName.vb: Stringier.Rope.Add(System.Memory(Of System.Char))
  nameWithType: Rope.Add(Memory<Char>)
  nameWithType.vb: Rope.Add(Memory(Of Char))
- uid: Stringier.Rope.Add(System.ReadOnlyMemory{System.Char})
  name: Add(ReadOnlyMemory<Char>)
  href: api/Stringier.Rope.html#Stringier_Rope_Add_System_ReadOnlyMemory_System_Char__
  commentId: M:Stringier.Rope.Add(System.ReadOnlyMemory{System.Char})
  name.vb: Add(ReadOnlyMemory(Of Char))
  fullName: Stringier.Rope.Add(System.ReadOnlyMemory<System.Char>)
  fullName.vb: Stringier.Rope.Add(System.ReadOnlyMemory(Of System.Char))
  nameWithType: Rope.Add(ReadOnlyMemory<Char>)
  nameWithType.vb: Rope.Add(ReadOnlyMemory(Of Char))
- uid: Stringier.Rope.Add*
  name: Add
  href: api/Stringier.Rope.html#Stringier_Rope_Add_
  commentId: Overload:Stringier.Rope.Add
  isSpec: "True"
  fullName: Stringier.Rope.Add
  nameWithType: Rope.Add
- uid: Stringier.Rope.Clear
  name: Clear()
  href: api/Stringier.Rope.html#Stringier_Rope_Clear
  commentId: M:Stringier.Rope.Clear
  fullName: Stringier.Rope.Clear()
  nameWithType: Rope.Clear()
- uid: Stringier.Rope.Clear*
  name: Clear
  href: api/Stringier.Rope.html#Stringier_Rope_Clear_
  commentId: Overload:Stringier.Rope.Clear
  isSpec: "True"
  fullName: Stringier.Rope.Clear
  nameWithType: Rope.Clear
- uid: Stringier.Rope.Count
  name: Count
  href: api/Stringier.Rope.html#Stringier_Rope_Count
  commentId: P:Stringier.Rope.Count
  fullName: Stringier.Rope.Count
  nameWithType: Rope.Count
- uid: Stringier.Rope.Count*
  name: Count
  href: api/Stringier.Rope.html#Stringier_Rope_Count_
  commentId: Overload:Stringier.Rope.Count
  isSpec: "True"
  fullName: Stringier.Rope.Count
  nameWithType: Rope.Count
- uid: Stringier.Rope.Enumerator
  name: Rope.Enumerator
  href: api/Stringier.Rope.Enumerator.html
  commentId: T:Stringier.Rope.Enumerator
  fullName: Stringier.Rope.Enumerator
  nameWithType: Rope.Enumerator
- uid: Stringier.Rope.Enumerator.#ctor(Stringier.Rope)
  name: Enumerator(Rope)
  href: api/Stringier.Rope.Enumerator.html#Stringier_Rope_Enumerator__ctor_Stringier_Rope_
  commentId: M:Stringier.Rope.Enumerator.#ctor(Stringier.Rope)
  fullName: Stringier.Rope.Enumerator.Enumerator(Stringier.Rope)
  nameWithType: Rope.Enumerator.Enumerator(Rope)
- uid: Stringier.Rope.Enumerator.#ctor*
  name: Enumerator
  href: api/Stringier.Rope.Enumerator.html#Stringier_Rope_Enumerator__ctor_
  commentId: Overload:Stringier.Rope.Enumerator.#ctor
  isSpec: "True"
  fullName: Stringier.Rope.Enumerator.Enumerator
  nameWithType: Rope.Enumerator.Enumerator
- uid: Stringier.Rope.Enumerator.Count
  name: Count
  href: api/Stringier.Rope.Enumerator.html#Stringier_Rope_Enumerator_Count
  commentId: P:Stringier.Rope.Enumerator.Count
  fullName: Stringier.Rope.Enumerator.Count
  nameWithType: Rope.Enumerator.Count
- uid: Stringier.Rope.Enumerator.Count*
  name: Count
  href: api/Stringier.Rope.Enumerator.html#Stringier_Rope_Enumerator_Count_
  commentId: Overload:Stringier.Rope.Enumerator.Count
  isSpec: "True"
  fullName: Stringier.Rope.Enumerator.Count
  nameWithType: Rope.Enumerator.Count
- uid: Stringier.Rope.Enumerator.Current
  name: Current
  href: api/Stringier.Rope.Enumerator.html#Stringier_Rope_Enumerator_Current
  commentId: P:Stringier.Rope.Enumerator.Current
  fullName: Stringier.Rope.Enumerator.Current
  nameWithType: Rope.Enumerator.Current
- uid: Stringier.Rope.Enumerator.Current*
  name: Current
  href: api/Stringier.Rope.Enumerator.html#Stringier_Rope_Enumerator_Current_
  commentId: Overload:Stringier.Rope.Enumerator.Current
  isSpec: "True"
  fullName: Stringier.Rope.Enumerator.Current
  nameWithType: Rope.Enumerator.Current
- uid: Stringier.Rope.Enumerator.MoveNext
  name: MoveNext()
  href: api/Stringier.Rope.Enumerator.html#Stringier_Rope_Enumerator_MoveNext
  commentId: M:Stringier.Rope.Enumerator.MoveNext
  fullName: Stringier.Rope.Enumerator.MoveNext()
  nameWithType: Rope.Enumerator.MoveNext()
- uid: Stringier.Rope.Enumerator.MoveNext*
  name: MoveNext
  href: api/Stringier.Rope.Enumerator.html#Stringier_Rope_Enumerator_MoveNext_
  commentId: Overload:Stringier.Rope.Enumerator.MoveNext
  isSpec: "True"
  fullName: Stringier.Rope.Enumerator.MoveNext
  nameWithType: Rope.Enumerator.MoveNext
- uid: Stringier.Rope.Enumerator.Reset
  name: Reset()
  href: api/Stringier.Rope.Enumerator.html#Stringier_Rope_Enumerator_Reset
  commentId: M:Stringier.Rope.Enumerator.Reset
  fullName: Stringier.Rope.Enumerator.Reset()
  nameWithType: Rope.Enumerator.Reset()
- uid: Stringier.Rope.Enumerator.Reset*
  name: Reset
  href: api/Stringier.Rope.Enumerator.html#Stringier_Rope_Enumerator_Reset_
  commentId: Overload:Stringier.Rope.Enumerator.Reset
  isSpec: "True"
  fullName: Stringier.Rope.Enumerator.Reset
  nameWithType: Rope.Enumerator.Reset
- uid: Stringier.Rope.Enumerator.System#Collections#IEnumerator#Current
  name: IEnumerator.Current
  href: api/Stringier.Rope.Enumerator.html#Stringier_Rope_Enumerator_System_Collections_IEnumerator_Current
  commentId: P:Stringier.Rope.Enumerator.System#Collections#IEnumerator#Current
  name.vb: System.Collections.IEnumerator.Current
  fullName: Stringier.Rope.Enumerator.System.Collections.IEnumerator.Current
  nameWithType: Rope.Enumerator.IEnumerator.Current
  nameWithType.vb: Rope.Enumerator.System.Collections.IEnumerator.Current
- uid: Stringier.Rope.Enumerator.System#Collections#IEnumerator#Current*
  name: IEnumerator.Current
  href: api/Stringier.Rope.Enumerator.html#Stringier_Rope_Enumerator_System_Collections_IEnumerator_Current_
  commentId: Overload:Stringier.Rope.Enumerator.System#Collections#IEnumerator#Current
  isSpec: "True"
  name.vb: System.Collections.IEnumerator.Current
  fullName: Stringier.Rope.Enumerator.System.Collections.IEnumerator.Current
  nameWithType: Rope.Enumerator.IEnumerator.Current
  nameWithType.vb: Rope.Enumerator.System.Collections.IEnumerator.Current
- uid: Stringier.Rope.Enumerator.ToString
  name: ToString()
  href: api/Stringier.Rope.Enumerator.html#Stringier_Rope_Enumerator_ToString
  commentId: M:Stringier.Rope.Enumerator.ToString
  fullName: Stringier.Rope.Enumerator.ToString()
  nameWithType: Rope.Enumerator.ToString()
- uid: Stringier.Rope.Enumerator.ToString(nint)
  name: ToString(nint)
  href: api/Stringier.Rope.Enumerator.html#Stringier_Rope_Enumerator_ToString_nint_
  commentId: M:Stringier.Rope.Enumerator.ToString(nint)
  fullName: Stringier.Rope.Enumerator.ToString(nint)
  nameWithType: Rope.Enumerator.ToString(nint)
- uid: Stringier.Rope.Enumerator.ToString*
  name: ToString
  href: api/Stringier.Rope.Enumerator.html#Stringier_Rope_Enumerator_ToString_
  commentId: Overload:Stringier.Rope.Enumerator.ToString
  isSpec: "True"
  fullName: Stringier.Rope.Enumerator.ToString
  nameWithType: Rope.Enumerator.ToString
- uid: Stringier.Rope.Equals(Stringier.Rope)
  name: Equals(Rope)
  href: api/Stringier.Rope.html#Stringier_Rope_Equals_Stringier_Rope_
  commentId: M:Stringier.Rope.Equals(Stringier.Rope)
  fullName: Stringier.Rope.Equals(Stringier.Rope)
  nameWithType: Rope.Equals(Rope)
- uid: Stringier.Rope.Equals(Stringier.Rope,Stringier.Case)
  name: Equals(Rope, Case)
  href: api/Stringier.Rope.html#Stringier_Rope_Equals_Stringier_Rope_Stringier_Case_
  commentId: M:Stringier.Rope.Equals(Stringier.Rope,Stringier.Case)
  fullName: Stringier.Rope.Equals(Stringier.Rope, Stringier.Case)
  nameWithType: Rope.Equals(Rope, Case)
- uid: Stringier.Rope.Equals(System.Char)
  name: Equals(Char)
  href: api/Stringier.Rope.html#Stringier_Rope_Equals_System_Char_
  commentId: M:Stringier.Rope.Equals(System.Char)
  fullName: Stringier.Rope.Equals(System.Char)
  nameWithType: Rope.Equals(Char)
- uid: Stringier.Rope.Equals(System.Char*,System.Int32)
  name: Equals(Char*, Int32)
  href: api/Stringier.Rope.html#Stringier_Rope_Equals_System_Char__System_Int32_
  commentId: M:Stringier.Rope.Equals(System.Char*,System.Int32)
  fullName: Stringier.Rope.Equals(System.Char*, System.Int32)
  nameWithType: Rope.Equals(Char*, Int32)
- uid: Stringier.Rope.Equals(System.Char*,System.Int32,Stringier.Case)
  name: Equals(Char*, Int32, Case)
  href: api/Stringier.Rope.html#Stringier_Rope_Equals_System_Char__System_Int32_Stringier_Case_
  commentId: M:Stringier.Rope.Equals(System.Char*,System.Int32,Stringier.Case)
  fullName: Stringier.Rope.Equals(System.Char*, System.Int32, Stringier.Case)
  nameWithType: Rope.Equals(Char*, Int32, Case)
- uid: Stringier.Rope.Equals(System.Char,Stringier.Case)
  name: Equals(Char, Case)
  href: api/Stringier.Rope.html#Stringier_Rope_Equals_System_Char_Stringier_Case_
  commentId: M:Stringier.Rope.Equals(System.Char,Stringier.Case)
  fullName: Stringier.Rope.Equals(System.Char, Stringier.Case)
  nameWithType: Rope.Equals(Char, Case)
- uid: Stringier.Rope.Equals(System.Char[])
  name: Equals(Char[])
  href: api/Stringier.Rope.html#Stringier_Rope_Equals_System_Char___
  commentId: M:Stringier.Rope.Equals(System.Char[])
  name.vb: Equals(Char())
  fullName: Stringier.Rope.Equals(System.Char[])
  fullName.vb: Stringier.Rope.Equals(System.Char())
  nameWithType: Rope.Equals(Char[])
  nameWithType.vb: Rope.Equals(Char())
- uid: Stringier.Rope.Equals(System.Char[],Stringier.Case)
  name: Equals(Char[], Case)
  href: api/Stringier.Rope.html#Stringier_Rope_Equals_System_Char___Stringier_Case_
  commentId: M:Stringier.Rope.Equals(System.Char[],Stringier.Case)
  name.vb: Equals(Char(), Case)
  fullName: Stringier.Rope.Equals(System.Char[], Stringier.Case)
  fullName.vb: Stringier.Rope.Equals(System.Char(), Stringier.Case)
  nameWithType: Rope.Equals(Char[], Case)
  nameWithType.vb: Rope.Equals(Char(), Case)
- uid: Stringier.Rope.Equals(System.Memory{System.Char})
  name: Equals(Memory<Char>)
  href: api/Stringier.Rope.html#Stringier_Rope_Equals_System_Memory_System_Char__
  commentId: M:Stringier.Rope.Equals(System.Memory{System.Char})
  name.vb: Equals(Memory(Of Char))
  fullName: Stringier.Rope.Equals(System.Memory<System.Char>)
  fullName.vb: Stringier.Rope.Equals(System.Memory(Of System.Char))
  nameWithType: Rope.Equals(Memory<Char>)
  nameWithType.vb: Rope.Equals(Memory(Of Char))
- uid: Stringier.Rope.Equals(System.Memory{System.Char},Stringier.Case)
  name: Equals(Memory<Char>, Case)
  href: api/Stringier.Rope.html#Stringier_Rope_Equals_System_Memory_System_Char__Stringier_Case_
  commentId: M:Stringier.Rope.Equals(System.Memory{System.Char},Stringier.Case)
  name.vb: Equals(Memory(Of Char), Case)
  fullName: Stringier.Rope.Equals(System.Memory<System.Char>, Stringier.Case)
  fullName.vb: Stringier.Rope.Equals(System.Memory(Of System.Char), Stringier.Case)
  nameWithType: Rope.Equals(Memory<Char>, Case)
  nameWithType.vb: Rope.Equals(Memory(Of Char), Case)
- uid: Stringier.Rope.Equals(System.Object)
  name: Equals(Object)
  href: api/Stringier.Rope.html#Stringier_Rope_Equals_System_Object_
  commentId: M:Stringier.Rope.Equals(System.Object)
  fullName: Stringier.Rope.Equals(System.Object)
  nameWithType: Rope.Equals(Object)
- uid: Stringier.Rope.Equals(System.Object,Stringier.Case)
  name: Equals(Object, Case)
  href: api/Stringier.Rope.html#Stringier_Rope_Equals_System_Object_Stringier_Case_
  commentId: M:Stringier.Rope.Equals(System.Object,Stringier.Case)
  fullName: Stringier.Rope.Equals(System.Object, Stringier.Case)
  nameWithType: Rope.Equals(Object, Case)
- uid: Stringier.Rope.Equals(System.ReadOnlyMemory{System.Char})
  name: Equals(ReadOnlyMemory<Char>)
  href: api/Stringier.Rope.html#Stringier_Rope_Equals_System_ReadOnlyMemory_System_Char__
  commentId: M:Stringier.Rope.Equals(System.ReadOnlyMemory{System.Char})
  name.vb: Equals(ReadOnlyMemory(Of Char))
  fullName: Stringier.Rope.Equals(System.ReadOnlyMemory<System.Char>)
  fullName.vb: Stringier.Rope.Equals(System.ReadOnlyMemory(Of System.Char))
  nameWithType: Rope.Equals(ReadOnlyMemory<Char>)
  nameWithType.vb: Rope.Equals(ReadOnlyMemory(Of Char))
- uid: Stringier.Rope.Equals(System.ReadOnlyMemory{System.Char},Stringier.Case)
  name: Equals(ReadOnlyMemory<Char>, Case)
  href: api/Stringier.Rope.html#Stringier_Rope_Equals_System_ReadOnlyMemory_System_Char__Stringier_Case_
  commentId: M:Stringier.Rope.Equals(System.ReadOnlyMemory{System.Char},Stringier.Case)
  name.vb: Equals(ReadOnlyMemory(Of Char), Case)
  fullName: Stringier.Rope.Equals(System.ReadOnlyMemory<System.Char>, Stringier.Case)
  fullName.vb: Stringier.Rope.Equals(System.ReadOnlyMemory(Of System.Char), Stringier.Case)
  nameWithType: Rope.Equals(ReadOnlyMemory<Char>, Case)
  nameWithType.vb: Rope.Equals(ReadOnlyMemory(Of Char), Case)
- uid: Stringier.Rope.Equals(System.ReadOnlySpan{System.Char})
  name: Equals(ReadOnlySpan<Char>)
  href: api/Stringier.Rope.html#Stringier_Rope_Equals_System_ReadOnlySpan_System_Char__
  commentId: M:Stringier.Rope.Equals(System.ReadOnlySpan{System.Char})
  name.vb: Equals(ReadOnlySpan(Of Char))
  fullName: Stringier.Rope.Equals(System.ReadOnlySpan<System.Char>)
  fullName.vb: Stringier.Rope.Equals(System.ReadOnlySpan(Of System.Char))
  nameWithType: Rope.Equals(ReadOnlySpan<Char>)
  nameWithType.vb: Rope.Equals(ReadOnlySpan(Of Char))
- uid: Stringier.Rope.Equals(System.ReadOnlySpan{System.Char},Stringier.Case)
  name: Equals(ReadOnlySpan<Char>, Case)
  href: api/Stringier.Rope.html#Stringier_Rope_Equals_System_ReadOnlySpan_System_Char__Stringier_Case_
  commentId: M:Stringier.Rope.Equals(System.ReadOnlySpan{System.Char},Stringier.Case)
  name.vb: Equals(ReadOnlySpan(Of Char), Case)
  fullName: Stringier.Rope.Equals(System.ReadOnlySpan<System.Char>, Stringier.Case)
  fullName.vb: Stringier.Rope.Equals(System.ReadOnlySpan(Of System.Char), Stringier.Case)
  nameWithType: Rope.Equals(ReadOnlySpan<Char>, Case)
  nameWithType.vb: Rope.Equals(ReadOnlySpan(Of Char), Case)
- uid: Stringier.Rope.Equals(System.Span{System.Char})
  name: Equals(Span<Char>)
  href: api/Stringier.Rope.html#Stringier_Rope_Equals_System_Span_System_Char__
  commentId: M:Stringier.Rope.Equals(System.Span{System.Char})
  name.vb: Equals(Span(Of Char))
  fullName: Stringier.Rope.Equals(System.Span<System.Char>)
  fullName.vb: Stringier.Rope.Equals(System.Span(Of System.Char))
  nameWithType: Rope.Equals(Span<Char>)
  nameWithType.vb: Rope.Equals(Span(Of Char))
- uid: Stringier.Rope.Equals(System.Span{System.Char},Stringier.Case)
  name: Equals(Span<Char>, Case)
  href: api/Stringier.Rope.html#Stringier_Rope_Equals_System_Span_System_Char__Stringier_Case_
  commentId: M:Stringier.Rope.Equals(System.Span{System.Char},Stringier.Case)
  name.vb: Equals(Span(Of Char), Case)
  fullName: Stringier.Rope.Equals(System.Span<System.Char>, Stringier.Case)
  fullName.vb: Stringier.Rope.Equals(System.Span(Of System.Char), Stringier.Case)
  nameWithType: Rope.Equals(Span<Char>, Case)
  nameWithType.vb: Rope.Equals(Span(Of Char), Case)
- uid: Stringier.Rope.Equals(System.String)
  name: Equals(String)
  href: api/Stringier.Rope.html#Stringier_Rope_Equals_System_String_
  commentId: M:Stringier.Rope.Equals(System.String)
  fullName: Stringier.Rope.Equals(System.String)
  nameWithType: Rope.Equals(String)
- uid: Stringier.Rope.Equals(System.String,Stringier.Case)
  name: Equals(String, Case)
  href: api/Stringier.Rope.html#Stringier_Rope_Equals_System_String_Stringier_Case_
  commentId: M:Stringier.Rope.Equals(System.String,Stringier.Case)
  fullName: Stringier.Rope.Equals(System.String, Stringier.Case)
  nameWithType: Rope.Equals(String, Case)
- uid: Stringier.Rope.Equals*
  name: Equals
  href: api/Stringier.Rope.html#Stringier_Rope_Equals_
  commentId: Overload:Stringier.Rope.Equals
  isSpec: "True"
  fullName: Stringier.Rope.Equals
  nameWithType: Rope.Equals
- uid: Stringier.Rope.GetEnumerator
  name: GetEnumerator()
  href: api/Stringier.Rope.html#Stringier_Rope_GetEnumerator
  commentId: M:Stringier.Rope.GetEnumerator
  fullName: Stringier.Rope.GetEnumerator()
  nameWithType: Rope.GetEnumerator()
- uid: Stringier.Rope.GetEnumerator*
  name: GetEnumerator
  href: api/Stringier.Rope.html#Stringier_Rope_GetEnumerator_
  commentId: Overload:Stringier.Rope.GetEnumerator
  isSpec: "True"
  fullName: Stringier.Rope.GetEnumerator
  nameWithType: Rope.GetEnumerator
- uid: Stringier.Rope.Insert(nint,System.Char)
  name: Insert(nint, Char)
  href: api/Stringier.Rope.html#Stringier_Rope_Insert_nint_System_Char_
  commentId: M:Stringier.Rope.Insert(nint,System.Char)
  fullName: Stringier.Rope.Insert(nint, System.Char)
  nameWithType: Rope.Insert(nint, Char)
- uid: Stringier.Rope.Insert(nint,System.Char[])
  name: Insert(nint, Char[])
  href: api/Stringier.Rope.html#Stringier_Rope_Insert_nint_System_Char___
  commentId: M:Stringier.Rope.Insert(nint,System.Char[])
  name.vb: Insert(nint, Char())
  fullName: Stringier.Rope.Insert(nint, System.Char[])
  fullName.vb: Stringier.Rope.Insert(nint, System.Char())
  nameWithType: Rope.Insert(nint, Char[])
  nameWithType.vb: Rope.Insert(nint, Char())
- uid: Stringier.Rope.Insert(nint,System.Memory{System.Char})
  name: Insert(nint, Memory<Char>)
  href: api/Stringier.Rope.html#Stringier_Rope_Insert_nint_System_Memory_System_Char__
  commentId: M:Stringier.Rope.Insert(nint,System.Memory{System.Char})
  name.vb: Insert(nint, Memory(Of Char))
  fullName: Stringier.Rope.Insert(nint, System.Memory<System.Char>)
  fullName.vb: Stringier.Rope.Insert(nint, System.Memory(Of System.Char))
  nameWithType: Rope.Insert(nint, Memory<Char>)
  nameWithType.vb: Rope.Insert(nint, Memory(Of Char))
- uid: Stringier.Rope.Insert(nint,System.ReadOnlyMemory{System.Char})
  name: Insert(nint, ReadOnlyMemory<Char>)
  href: api/Stringier.Rope.html#Stringier_Rope_Insert_nint_System_ReadOnlyMemory_System_Char__
  commentId: M:Stringier.Rope.Insert(nint,System.ReadOnlyMemory{System.Char})
  name.vb: Insert(nint, ReadOnlyMemory(Of Char))
  fullName: Stringier.Rope.Insert(nint, System.ReadOnlyMemory<System.Char>)
  fullName.vb: Stringier.Rope.Insert(nint, System.ReadOnlyMemory(Of System.Char))
  nameWithType: Rope.Insert(nint, ReadOnlyMemory<Char>)
  nameWithType.vb: Rope.Insert(nint, ReadOnlyMemory(Of Char))
- uid: Stringier.Rope.Insert*
  name: Insert
  href: api/Stringier.Rope.html#Stringier_Rope_Insert_
  commentId: Overload:Stringier.Rope.Insert
  isSpec: "True"
  fullName: Stringier.Rope.Insert
  nameWithType: Rope.Insert
- uid: Stringier.Rope.Item(nint)
  name: Item[nint]
  href: api/Stringier.Rope.html#Stringier_Rope_Item_nint_
  commentId: P:Stringier.Rope.Item(nint)
  name.vb: Item(nint)
  fullName: Stringier.Rope.Item[nint]
  fullName.vb: Stringier.Rope.Item(nint)
  nameWithType: Rope.Item[nint]
  nameWithType.vb: Rope.Item(nint)
- uid: Stringier.Rope.Item*
  name: Item
  href: api/Stringier.Rope.html#Stringier_Rope_Item_
  commentId: Overload:Stringier.Rope.Item
  isSpec: "True"
  fullName: Stringier.Rope.Item
  nameWithType: Rope.Item
- uid: Stringier.Rope.Node
  name: Rope.Node
  href: api/Stringier.Rope.Node.html
  commentId: T:Stringier.Rope.Node
  fullName: Stringier.Rope.Node
  nameWithType: Rope.Node
- uid: Stringier.Rope.Node.#ctor(Stringier.Rope.Node,Stringier.Rope.Node)
  name: Node(Rope.Node, Rope.Node)
  href: api/Stringier.Rope.Node.html#Stringier_Rope_Node__ctor_Stringier_Rope_Node_Stringier_Rope_Node_
  commentId: M:Stringier.Rope.Node.#ctor(Stringier.Rope.Node,Stringier.Rope.Node)
  fullName: Stringier.Rope.Node.Node(Stringier.Rope.Node, Stringier.Rope.Node)
  nameWithType: Rope.Node.Node(Rope.Node, Rope.Node)
- uid: Stringier.Rope.Node.#ctor*
  name: Node
  href: api/Stringier.Rope.Node.html#Stringier_Rope_Node__ctor_
  commentId: Overload:Stringier.Rope.Node.#ctor
  isSpec: "True"
  fullName: Stringier.Rope.Node.Node
  nameWithType: Rope.Node.Node
- uid: Stringier.Rope.Node.Clear
  name: Clear()
  href: api/Stringier.Rope.Node.html#Stringier_Rope_Node_Clear
  commentId: M:Stringier.Rope.Node.Clear
  fullName: Stringier.Rope.Node.Clear()
  nameWithType: Rope.Node.Clear()
- uid: Stringier.Rope.Node.Clear*
  name: Clear
  href: api/Stringier.Rope.Node.html#Stringier_Rope_Node_Clear_
  commentId: Overload:Stringier.Rope.Node.Clear
  isSpec: "True"
  fullName: Stringier.Rope.Node.Clear
  nameWithType: Rope.Node.Clear
- uid: Stringier.Rope.Node.Postpend(System.Char)
  name: Postpend(Char)
  href: api/Stringier.Rope.Node.html#Stringier_Rope_Node_Postpend_System_Char_
  commentId: M:Stringier.Rope.Node.Postpend(System.Char)
  fullName: Stringier.Rope.Node.Postpend(System.Char)
  nameWithType: Rope.Node.Postpend(Char)
- uid: Stringier.Rope.Node.Postpend(System.ReadOnlyMemory{System.Char})
  name: Postpend(ReadOnlyMemory<Char>)
  href: api/Stringier.Rope.Node.html#Stringier_Rope_Node_Postpend_System_ReadOnlyMemory_System_Char__
  commentId: M:Stringier.Rope.Node.Postpend(System.ReadOnlyMemory{System.Char})
  name.vb: Postpend(ReadOnlyMemory(Of Char))
  fullName: Stringier.Rope.Node.Postpend(System.ReadOnlyMemory<System.Char>)
  fullName.vb: Stringier.Rope.Node.Postpend(System.ReadOnlyMemory(Of System.Char))
  nameWithType: Rope.Node.Postpend(ReadOnlyMemory<Char>)
  nameWithType.vb: Rope.Node.Postpend(ReadOnlyMemory(Of Char))
- uid: Stringier.Rope.Node.Postpend*
  name: Postpend
  href: api/Stringier.Rope.Node.html#Stringier_Rope_Node_Postpend_
  commentId: Overload:Stringier.Rope.Node.Postpend
  isSpec: "True"
  fullName: Stringier.Rope.Node.Postpend
  nameWithType: Rope.Node.Postpend
- uid: Stringier.Rope.Node.Prepend(System.Char)
  name: Prepend(Char)
  href: api/Stringier.Rope.Node.html#Stringier_Rope_Node_Prepend_System_Char_
  commentId: M:Stringier.Rope.Node.Prepend(System.Char)
  fullName: Stringier.Rope.Node.Prepend(System.Char)
  nameWithType: Rope.Node.Prepend(Char)
- uid: Stringier.Rope.Node.Prepend(System.ReadOnlyMemory{System.Char})
  name: Prepend(ReadOnlyMemory<Char>)
  href: api/Stringier.Rope.Node.html#Stringier_Rope_Node_Prepend_System_ReadOnlyMemory_System_Char__
  commentId: M:Stringier.Rope.Node.Prepend(System.ReadOnlyMemory{System.Char})
  name.vb: Prepend(ReadOnlyMemory(Of Char))
  fullName: Stringier.Rope.Node.Prepend(System.ReadOnlyMemory<System.Char>)
  fullName.vb: Stringier.Rope.Node.Prepend(System.ReadOnlyMemory(Of System.Char))
  nameWithType: Rope.Node.Prepend(ReadOnlyMemory<Char>)
  nameWithType.vb: Rope.Node.Prepend(ReadOnlyMemory(Of Char))
- uid: Stringier.Rope.Node.Prepend*
  name: Prepend
  href: api/Stringier.Rope.Node.html#Stringier_Rope_Node_Prepend_
  commentId: Overload:Stringier.Rope.Node.Prepend
  isSpec: "True"
  fullName: Stringier.Rope.Node.Prepend
  nameWithType: Rope.Node.Prepend
- uid: Stringier.Rope.Node.Previous
  name: Previous
  href: api/Stringier.Rope.Node.html#Stringier_Rope_Node_Previous
  commentId: P:Stringier.Rope.Node.Previous
  fullName: Stringier.Rope.Node.Previous
  nameWithType: Rope.Node.Previous
- uid: Stringier.Rope.Node.Previous*
  name: Previous
  href: api/Stringier.Rope.Node.html#Stringier_Rope_Node_Previous_
  commentId: Overload:Stringier.Rope.Node.Previous
  isSpec: "True"
  fullName: Stringier.Rope.Node.Previous
  nameWithType: Rope.Node.Previous
- uid: Stringier.Rope.op_Addition(Stringier.Rope,System.Char)
  name: Addition(Rope, Char)
  href: api/Stringier.Rope.html#Stringier_Rope_op_Addition_Stringier_Rope_System_Char_
  commentId: M:Stringier.Rope.op_Addition(Stringier.Rope,System.Char)
  fullName: Stringier.Rope.Addition(Stringier.Rope, System.Char)
  nameWithType: Rope.Addition(Rope, Char)
- uid: Stringier.Rope.op_Addition(Stringier.Rope,System.Char[])
  name: Addition(Rope, Char[])
  href: api/Stringier.Rope.html#Stringier_Rope_op_Addition_Stringier_Rope_System_Char___
  commentId: M:Stringier.Rope.op_Addition(Stringier.Rope,System.Char[])
  name.vb: Addition(Rope, Char())
  fullName: Stringier.Rope.Addition(Stringier.Rope, System.Char[])
  fullName.vb: Stringier.Rope.Addition(Stringier.Rope, System.Char())
  nameWithType: Rope.Addition(Rope, Char[])
  nameWithType.vb: Rope.Addition(Rope, Char())
- uid: Stringier.Rope.op_Addition(Stringier.Rope,System.Memory{System.Char})
  name: Addition(Rope, Memory<Char>)
  href: api/Stringier.Rope.html#Stringier_Rope_op_Addition_Stringier_Rope_System_Memory_System_Char__
  commentId: M:Stringier.Rope.op_Addition(Stringier.Rope,System.Memory{System.Char})
  name.vb: Addition(Rope, Memory(Of Char))
  fullName: Stringier.Rope.Addition(Stringier.Rope, System.Memory<System.Char>)
  fullName.vb: Stringier.Rope.Addition(Stringier.Rope, System.Memory(Of System.Char))
  nameWithType: Rope.Addition(Rope, Memory<Char>)
  nameWithType.vb: Rope.Addition(Rope, Memory(Of Char))
- uid: Stringier.Rope.op_Addition(Stringier.Rope,System.ReadOnlyMemory{System.Char})
  name: Addition(Rope, ReadOnlyMemory<Char>)
  href: api/Stringier.Rope.html#Stringier_Rope_op_Addition_Stringier_Rope_System_ReadOnlyMemory_System_Char__
  commentId: M:Stringier.Rope.op_Addition(Stringier.Rope,System.ReadOnlyMemory{System.Char})
  name.vb: Addition(Rope, ReadOnlyMemory(Of Char))
  fullName: Stringier.Rope.Addition(Stringier.Rope, System.ReadOnlyMemory<System.Char>)
  fullName.vb: Stringier.Rope.Addition(Stringier.Rope, System.ReadOnlyMemory(Of System.Char))
  nameWithType: Rope.Addition(Rope, ReadOnlyMemory<Char>)
  nameWithType.vb: Rope.Addition(Rope, ReadOnlyMemory(Of Char))
- uid: Stringier.Rope.op_Addition(Stringier.Rope,System.String)
  name: Addition(Rope, String)
  href: api/Stringier.Rope.html#Stringier_Rope_op_Addition_Stringier_Rope_System_String_
  commentId: M:Stringier.Rope.op_Addition(Stringier.Rope,System.String)
  fullName: Stringier.Rope.Addition(Stringier.Rope, System.String)
  nameWithType: Rope.Addition(Rope, String)
- uid: Stringier.Rope.op_Addition(System.Char,Stringier.Rope)
  name: Addition(Char, Rope)
  href: api/Stringier.Rope.html#Stringier_Rope_op_Addition_System_Char_Stringier_Rope_
  commentId: M:Stringier.Rope.op_Addition(System.Char,Stringier.Rope)
  fullName: Stringier.Rope.Addition(System.Char, Stringier.Rope)
  nameWithType: Rope.Addition(Char, Rope)
- uid: Stringier.Rope.op_Addition(System.Char[],Stringier.Rope)
  name: Addition(Char[], Rope)
  href: api/Stringier.Rope.html#Stringier_Rope_op_Addition_System_Char___Stringier_Rope_
  commentId: M:Stringier.Rope.op_Addition(System.Char[],Stringier.Rope)
  name.vb: Addition(Char(), Rope)
  fullName: Stringier.Rope.Addition(System.Char[], Stringier.Rope)
  fullName.vb: Stringier.Rope.Addition(System.Char(), Stringier.Rope)
  nameWithType: Rope.Addition(Char[], Rope)
  nameWithType.vb: Rope.Addition(Char(), Rope)
- uid: Stringier.Rope.op_Addition(System.Memory{System.Char},Stringier.Rope)
  name: Addition(Memory<Char>, Rope)
  href: api/Stringier.Rope.html#Stringier_Rope_op_Addition_System_Memory_System_Char__Stringier_Rope_
  commentId: M:Stringier.Rope.op_Addition(System.Memory{System.Char},Stringier.Rope)
  name.vb: Addition(Memory(Of Char), Rope)
  fullName: Stringier.Rope.Addition(System.Memory<System.Char>, Stringier.Rope)
  fullName.vb: Stringier.Rope.Addition(System.Memory(Of System.Char), Stringier.Rope)
  nameWithType: Rope.Addition(Memory<Char>, Rope)
  nameWithType.vb: Rope.Addition(Memory(Of Char), Rope)
- uid: Stringier.Rope.op_Addition(System.ReadOnlyMemory{System.Char},Stringier.Rope)
  name: Addition(ReadOnlyMemory<Char>, Rope)
  href: api/Stringier.Rope.html#Stringier_Rope_op_Addition_System_ReadOnlyMemory_System_Char__Stringier_Rope_
  commentId: M:Stringier.Rope.op_Addition(System.ReadOnlyMemory{System.Char},Stringier.Rope)
  name.vb: Addition(ReadOnlyMemory(Of Char), Rope)
  fullName: Stringier.Rope.Addition(System.ReadOnlyMemory<System.Char>, Stringier.Rope)
  fullName.vb: Stringier.Rope.Addition(System.ReadOnlyMemory(Of System.Char), Stringier.Rope)
  nameWithType: Rope.Addition(ReadOnlyMemory<Char>, Rope)
  nameWithType.vb: Rope.Addition(ReadOnlyMemory(Of Char), Rope)
- uid: Stringier.Rope.op_Addition(System.String,Stringier.Rope)
  name: Addition(String, Rope)
  href: api/Stringier.Rope.html#Stringier_Rope_op_Addition_System_String_Stringier_Rope_
  commentId: M:Stringier.Rope.op_Addition(System.String,Stringier.Rope)
  fullName: Stringier.Rope.Addition(System.String, Stringier.Rope)
  nameWithType: Rope.Addition(String, Rope)
- uid: Stringier.Rope.op_Addition*
  name: Addition
  href: api/Stringier.Rope.html#Stringier_Rope_op_Addition_
  commentId: Overload:Stringier.Rope.op_Addition
  isSpec: "True"
  fullName: Stringier.Rope.Addition
  nameWithType: Rope.Addition
- uid: Stringier.Rope.op_Equality(Stringier.Rope,Stringier.Rope)
  name: Equality(Rope, Rope)
  href: api/Stringier.Rope.html#Stringier_Rope_op_Equality_Stringier_Rope_Stringier_Rope_
  commentId: M:Stringier.Rope.op_Equality(Stringier.Rope,Stringier.Rope)
  fullName: Stringier.Rope.Equality(Stringier.Rope, Stringier.Rope)
  nameWithType: Rope.Equality(Rope, Rope)
- uid: Stringier.Rope.op_Equality(Stringier.Rope,System.Char[])
  name: Equality(Rope, Char[])
  href: api/Stringier.Rope.html#Stringier_Rope_op_Equality_Stringier_Rope_System_Char___
  commentId: M:Stringier.Rope.op_Equality(Stringier.Rope,System.Char[])
  name.vb: Equality(Rope, Char())
  fullName: Stringier.Rope.Equality(Stringier.Rope, System.Char[])
  fullName.vb: Stringier.Rope.Equality(Stringier.Rope, System.Char())
  nameWithType: Rope.Equality(Rope, Char[])
  nameWithType.vb: Rope.Equality(Rope, Char())
- uid: Stringier.Rope.op_Equality(Stringier.Rope,System.Memory{System.Char})
  name: Equality(Rope, Memory<Char>)
  href: api/Stringier.Rope.html#Stringier_Rope_op_Equality_Stringier_Rope_System_Memory_System_Char__
  commentId: M:Stringier.Rope.op_Equality(Stringier.Rope,System.Memory{System.Char})
  name.vb: Equality(Rope, Memory(Of Char))
  fullName: Stringier.Rope.Equality(Stringier.Rope, System.Memory<System.Char>)
  fullName.vb: Stringier.Rope.Equality(Stringier.Rope, System.Memory(Of System.Char))
  nameWithType: Rope.Equality(Rope, Memory<Char>)
  nameWithType.vb: Rope.Equality(Rope, Memory(Of Char))
- uid: Stringier.Rope.op_Equality(Stringier.Rope,System.ReadOnlyMemory{System.Char})
  name: Equality(Rope, ReadOnlyMemory<Char>)
  href: api/Stringier.Rope.html#Stringier_Rope_op_Equality_Stringier_Rope_System_ReadOnlyMemory_System_Char__
  commentId: M:Stringier.Rope.op_Equality(Stringier.Rope,System.ReadOnlyMemory{System.Char})
  name.vb: Equality(Rope, ReadOnlyMemory(Of Char))
  fullName: Stringier.Rope.Equality(Stringier.Rope, System.ReadOnlyMemory<System.Char>)
  fullName.vb: Stringier.Rope.Equality(Stringier.Rope, System.ReadOnlyMemory(Of System.Char))
  nameWithType: Rope.Equality(Rope, ReadOnlyMemory<Char>)
  nameWithType.vb: Rope.Equality(Rope, ReadOnlyMemory(Of Char))
- uid: Stringier.Rope.op_Equality(Stringier.Rope,System.ReadOnlySpan{System.Char})
  name: Equality(Rope, ReadOnlySpan<Char>)
  href: api/Stringier.Rope.html#Stringier_Rope_op_Equality_Stringier_Rope_System_ReadOnlySpan_System_Char__
  commentId: M:Stringier.Rope.op_Equality(Stringier.Rope,System.ReadOnlySpan{System.Char})
  name.vb: Equality(Rope, ReadOnlySpan(Of Char))
  fullName: Stringier.Rope.Equality(Stringier.Rope, System.ReadOnlySpan<System.Char>)
  fullName.vb: Stringier.Rope.Equality(Stringier.Rope, System.ReadOnlySpan(Of System.Char))
  nameWithType: Rope.Equality(Rope, ReadOnlySpan<Char>)
  nameWithType.vb: Rope.Equality(Rope, ReadOnlySpan(Of Char))
- uid: Stringier.Rope.op_Equality(Stringier.Rope,System.Span{System.Char})
  name: Equality(Rope, Span<Char>)
  href: api/Stringier.Rope.html#Stringier_Rope_op_Equality_Stringier_Rope_System_Span_System_Char__
  commentId: M:Stringier.Rope.op_Equality(Stringier.Rope,System.Span{System.Char})
  name.vb: Equality(Rope, Span(Of Char))
  fullName: Stringier.Rope.Equality(Stringier.Rope, System.Span<System.Char>)
  fullName.vb: Stringier.Rope.Equality(Stringier.Rope, System.Span(Of System.Char))
  nameWithType: Rope.Equality(Rope, Span<Char>)
  nameWithType.vb: Rope.Equality(Rope, Span(Of Char))
- uid: Stringier.Rope.op_Equality(Stringier.Rope,System.String)
  name: Equality(Rope, String)
  href: api/Stringier.Rope.html#Stringier_Rope_op_Equality_Stringier_Rope_System_String_
  commentId: M:Stringier.Rope.op_Equality(Stringier.Rope,System.String)
  fullName: Stringier.Rope.Equality(Stringier.Rope, System.String)
  nameWithType: Rope.Equality(Rope, String)
- uid: Stringier.Rope.op_Equality(System.Char[],Stringier.Rope)
  name: Equality(Char[], Rope)
  href: api/Stringier.Rope.html#Stringier_Rope_op_Equality_System_Char___Stringier_Rope_
  commentId: M:Stringier.Rope.op_Equality(System.Char[],Stringier.Rope)
  name.vb: Equality(Char(), Rope)
  fullName: Stringier.Rope.Equality(System.Char[], Stringier.Rope)
  fullName.vb: Stringier.Rope.Equality(System.Char(), Stringier.Rope)
  nameWithType: Rope.Equality(Char[], Rope)
  nameWithType.vb: Rope.Equality(Char(), Rope)
- uid: Stringier.Rope.op_Equality(System.Memory{System.Char},Stringier.Rope)
  name: Equality(Memory<Char>, Rope)
  href: api/Stringier.Rope.html#Stringier_Rope_op_Equality_System_Memory_System_Char__Stringier_Rope_
  commentId: M:Stringier.Rope.op_Equality(System.Memory{System.Char},Stringier.Rope)
  name.vb: Equality(Memory(Of Char), Rope)
  fullName: Stringier.Rope.Equality(System.Memory<System.Char>, Stringier.Rope)
  fullName.vb: Stringier.Rope.Equality(System.Memory(Of System.Char), Stringier.Rope)
  nameWithType: Rope.Equality(Memory<Char>, Rope)
  nameWithType.vb: Rope.Equality(Memory(Of Char), Rope)
- uid: Stringier.Rope.op_Equality(System.ReadOnlyMemory{System.Char},Stringier.Rope)
  name: Equality(ReadOnlyMemory<Char>, Rope)
  href: api/Stringier.Rope.html#Stringier_Rope_op_Equality_System_ReadOnlyMemory_System_Char__Stringier_Rope_
  commentId: M:Stringier.Rope.op_Equality(System.ReadOnlyMemory{System.Char},Stringier.Rope)
  name.vb: Equality(ReadOnlyMemory(Of Char), Rope)
  fullName: Stringier.Rope.Equality(System.ReadOnlyMemory<System.Char>, Stringier.Rope)
  fullName.vb: Stringier.Rope.Equality(System.ReadOnlyMemory(Of System.Char), Stringier.Rope)
  nameWithType: Rope.Equality(ReadOnlyMemory<Char>, Rope)
  nameWithType.vb: Rope.Equality(ReadOnlyMemory(Of Char), Rope)
- uid: Stringier.Rope.op_Equality(System.ReadOnlySpan{System.Char},Stringier.Rope)
  name: Equality(ReadOnlySpan<Char>, Rope)
  href: api/Stringier.Rope.html#Stringier_Rope_op_Equality_System_ReadOnlySpan_System_Char__Stringier_Rope_
  commentId: M:Stringier.Rope.op_Equality(System.ReadOnlySpan{System.Char},Stringier.Rope)
  name.vb: Equality(ReadOnlySpan(Of Char), Rope)
  fullName: Stringier.Rope.Equality(System.ReadOnlySpan<System.Char>, Stringier.Rope)
  fullName.vb: Stringier.Rope.Equality(System.ReadOnlySpan(Of System.Char), Stringier.Rope)
  nameWithType: Rope.Equality(ReadOnlySpan<Char>, Rope)
  nameWithType.vb: Rope.Equality(ReadOnlySpan(Of Char), Rope)
- uid: Stringier.Rope.op_Equality(System.Span{System.Char},Stringier.Rope)
  name: Equality(Span<Char>, Rope)
  href: api/Stringier.Rope.html#Stringier_Rope_op_Equality_System_Span_System_Char__Stringier_Rope_
  commentId: M:Stringier.Rope.op_Equality(System.Span{System.Char},Stringier.Rope)
  name.vb: Equality(Span(Of Char), Rope)
  fullName: Stringier.Rope.Equality(System.Span<System.Char>, Stringier.Rope)
  fullName.vb: Stringier.Rope.Equality(System.Span(Of System.Char), Stringier.Rope)
  nameWithType: Rope.Equality(Span<Char>, Rope)
  nameWithType.vb: Rope.Equality(Span(Of Char), Rope)
- uid: Stringier.Rope.op_Equality(System.String,Stringier.Rope)
  name: Equality(String, Rope)
  href: api/Stringier.Rope.html#Stringier_Rope_op_Equality_System_String_Stringier_Rope_
  commentId: M:Stringier.Rope.op_Equality(System.String,Stringier.Rope)
  fullName: Stringier.Rope.Equality(System.String, Stringier.Rope)
  nameWithType: Rope.Equality(String, Rope)
- uid: Stringier.Rope.op_Equality*
  name: Equality
  href: api/Stringier.Rope.html#Stringier_Rope_op_Equality_
  commentId: Overload:Stringier.Rope.op_Equality
  isSpec: "True"
  fullName: Stringier.Rope.Equality
  nameWithType: Rope.Equality
- uid: Stringier.Rope.op_Implicit(System.Char)~Stringier.Rope
  name: Implicit(Char to Rope)
  href: api/Stringier.Rope.html#Stringier_Rope_op_Implicit_System_Char__Stringier_Rope
  commentId: M:Stringier.Rope.op_Implicit(System.Char)~Stringier.Rope
  name.vb: Widening(Char to Rope)
  fullName: Stringier.Rope.Implicit(System.Char to Stringier.Rope)
  fullName.vb: Stringier.Rope.Widening(System.Char to Stringier.Rope)
  nameWithType: Rope.Implicit(Char to Rope)
  nameWithType.vb: Rope.Widening(Char to Rope)
- uid: Stringier.Rope.op_Implicit(System.Char[])~Stringier.Rope
  name: Implicit(Char[] to Rope)
  href: api/Stringier.Rope.html#Stringier_Rope_op_Implicit_System_Char____Stringier_Rope
  commentId: M:Stringier.Rope.op_Implicit(System.Char[])~Stringier.Rope
  name.vb: Widening(Char() to Rope)
  fullName: Stringier.Rope.Implicit(System.Char[] to Stringier.Rope)
  fullName.vb: Stringier.Rope.Widening(System.Char() to Stringier.Rope)
  nameWithType: Rope.Implicit(Char[] to Rope)
  nameWithType.vb: Rope.Widening(Char() to Rope)
- uid: Stringier.Rope.op_Implicit(System.Memory{System.Char})~Stringier.Rope
  name: Implicit(Memory<Char> to Rope)
  href: api/Stringier.Rope.html#Stringier_Rope_op_Implicit_System_Memory_System_Char___Stringier_Rope
  commentId: M:Stringier.Rope.op_Implicit(System.Memory{System.Char})~Stringier.Rope
  name.vb: Widening(Memory(Of Char) to Rope)
  fullName: Stringier.Rope.Implicit(System.Memory<System.Char> to Stringier.Rope)
  fullName.vb: Stringier.Rope.Widening(System.Memory(Of System.Char) to Stringier.Rope)
  nameWithType: Rope.Implicit(Memory<Char> to Rope)
  nameWithType.vb: Rope.Widening(Memory(Of Char) to Rope)
- uid: Stringier.Rope.op_Implicit(System.ReadOnlyMemory{System.Char})~Stringier.Rope
  name: Implicit(ReadOnlyMemory<Char> to Rope)
  href: api/Stringier.Rope.html#Stringier_Rope_op_Implicit_System_ReadOnlyMemory_System_Char___Stringier_Rope
  commentId: M:Stringier.Rope.op_Implicit(System.ReadOnlyMemory{System.Char})~Stringier.Rope
  name.vb: Widening(ReadOnlyMemory(Of Char) to Rope)
  fullName: Stringier.Rope.Implicit(System.ReadOnlyMemory<System.Char> to Stringier.Rope)
  fullName.vb: Stringier.Rope.Widening(System.ReadOnlyMemory(Of System.Char) to Stringier.Rope)
  nameWithType: Rope.Implicit(ReadOnlyMemory<Char> to Rope)
  nameWithType.vb: Rope.Widening(ReadOnlyMemory(Of Char) to Rope)
- uid: Stringier.Rope.op_Implicit(System.String)~Stringier.Rope
  name: Implicit(String to Rope)
  href: api/Stringier.Rope.html#Stringier_Rope_op_Implicit_System_String__Stringier_Rope
  commentId: M:Stringier.Rope.op_Implicit(System.String)~Stringier.Rope
  name.vb: Widening(String to Rope)
  fullName: Stringier.Rope.Implicit(System.String to Stringier.Rope)
  fullName.vb: Stringier.Rope.Widening(System.String to Stringier.Rope)
  nameWithType: Rope.Implicit(String to Rope)
  nameWithType.vb: Rope.Widening(String to Rope)
- uid: Stringier.Rope.op_Implicit*
  name: Implicit
  href: api/Stringier.Rope.html#Stringier_Rope_op_Implicit_
  commentId: Overload:Stringier.Rope.op_Implicit
  isSpec: "True"
  name.vb: Widening
  fullName: Stringier.Rope.Implicit
  fullName.vb: Stringier.Rope.Widening
  nameWithType: Rope.Implicit
  nameWithType.vb: Rope.Widening
- uid: Stringier.Rope.op_Inequality(Stringier.Rope,Stringier.Rope)
  name: Inequality(Rope, Rope)
  href: api/Stringier.Rope.html#Stringier_Rope_op_Inequality_Stringier_Rope_Stringier_Rope_
  commentId: M:Stringier.Rope.op_Inequality(Stringier.Rope,Stringier.Rope)
  fullName: Stringier.Rope.Inequality(Stringier.Rope, Stringier.Rope)
  nameWithType: Rope.Inequality(Rope, Rope)
- uid: Stringier.Rope.op_Inequality(Stringier.Rope,System.Char[])
  name: Inequality(Rope, Char[])
  href: api/Stringier.Rope.html#Stringier_Rope_op_Inequality_Stringier_Rope_System_Char___
  commentId: M:Stringier.Rope.op_Inequality(Stringier.Rope,System.Char[])
  name.vb: Inequality(Rope, Char())
  fullName: Stringier.Rope.Inequality(Stringier.Rope, System.Char[])
  fullName.vb: Stringier.Rope.Inequality(Stringier.Rope, System.Char())
  nameWithType: Rope.Inequality(Rope, Char[])
  nameWithType.vb: Rope.Inequality(Rope, Char())
- uid: Stringier.Rope.op_Inequality(Stringier.Rope,System.Memory{System.Char})
  name: Inequality(Rope, Memory<Char>)
  href: api/Stringier.Rope.html#Stringier_Rope_op_Inequality_Stringier_Rope_System_Memory_System_Char__
  commentId: M:Stringier.Rope.op_Inequality(Stringier.Rope,System.Memory{System.Char})
  name.vb: Inequality(Rope, Memory(Of Char))
  fullName: Stringier.Rope.Inequality(Stringier.Rope, System.Memory<System.Char>)
  fullName.vb: Stringier.Rope.Inequality(Stringier.Rope, System.Memory(Of System.Char))
  nameWithType: Rope.Inequality(Rope, Memory<Char>)
  nameWithType.vb: Rope.Inequality(Rope, Memory(Of Char))
- uid: Stringier.Rope.op_Inequality(Stringier.Rope,System.ReadOnlyMemory{System.Char})
  name: Inequality(Rope, ReadOnlyMemory<Char>)
  href: api/Stringier.Rope.html#Stringier_Rope_op_Inequality_Stringier_Rope_System_ReadOnlyMemory_System_Char__
  commentId: M:Stringier.Rope.op_Inequality(Stringier.Rope,System.ReadOnlyMemory{System.Char})
  name.vb: Inequality(Rope, ReadOnlyMemory(Of Char))
  fullName: Stringier.Rope.Inequality(Stringier.Rope, System.ReadOnlyMemory<System.Char>)
  fullName.vb: Stringier.Rope.Inequality(Stringier.Rope, System.ReadOnlyMemory(Of System.Char))
  nameWithType: Rope.Inequality(Rope, ReadOnlyMemory<Char>)
  nameWithType.vb: Rope.Inequality(Rope, ReadOnlyMemory(Of Char))
- uid: Stringier.Rope.op_Inequality(Stringier.Rope,System.ReadOnlySpan{System.Char})
  name: Inequality(Rope, ReadOnlySpan<Char>)
  href: api/Stringier.Rope.html#Stringier_Rope_op_Inequality_Stringier_Rope_System_ReadOnlySpan_System_Char__
  commentId: M:Stringier.Rope.op_Inequality(Stringier.Rope,System.ReadOnlySpan{System.Char})
  name.vb: Inequality(Rope, ReadOnlySpan(Of Char))
  fullName: Stringier.Rope.Inequality(Stringier.Rope, System.ReadOnlySpan<System.Char>)
  fullName.vb: Stringier.Rope.Inequality(Stringier.Rope, System.ReadOnlySpan(Of System.Char))
  nameWithType: Rope.Inequality(Rope, ReadOnlySpan<Char>)
  nameWithType.vb: Rope.Inequality(Rope, ReadOnlySpan(Of Char))
- uid: Stringier.Rope.op_Inequality(Stringier.Rope,System.Span{System.Char})
  name: Inequality(Rope, Span<Char>)
  href: api/Stringier.Rope.html#Stringier_Rope_op_Inequality_Stringier_Rope_System_Span_System_Char__
  commentId: M:Stringier.Rope.op_Inequality(Stringier.Rope,System.Span{System.Char})
  name.vb: Inequality(Rope, Span(Of Char))
  fullName: Stringier.Rope.Inequality(Stringier.Rope, System.Span<System.Char>)
  fullName.vb: Stringier.Rope.Inequality(Stringier.Rope, System.Span(Of System.Char))
  nameWithType: Rope.Inequality(Rope, Span<Char>)
  nameWithType.vb: Rope.Inequality(Rope, Span(Of Char))
- uid: Stringier.Rope.op_Inequality(Stringier.Rope,System.String)
  name: Inequality(Rope, String)
  href: api/Stringier.Rope.html#Stringier_Rope_op_Inequality_Stringier_Rope_System_String_
  commentId: M:Stringier.Rope.op_Inequality(Stringier.Rope,System.String)
  fullName: Stringier.Rope.Inequality(Stringier.Rope, System.String)
  nameWithType: Rope.Inequality(Rope, String)
- uid: Stringier.Rope.op_Inequality(System.Char[],Stringier.Rope)
  name: Inequality(Char[], Rope)
  href: api/Stringier.Rope.html#Stringier_Rope_op_Inequality_System_Char___Stringier_Rope_
  commentId: M:Stringier.Rope.op_Inequality(System.Char[],Stringier.Rope)
  name.vb: Inequality(Char(), Rope)
  fullName: Stringier.Rope.Inequality(System.Char[], Stringier.Rope)
  fullName.vb: Stringier.Rope.Inequality(System.Char(), Stringier.Rope)
  nameWithType: Rope.Inequality(Char[], Rope)
  nameWithType.vb: Rope.Inequality(Char(), Rope)
- uid: Stringier.Rope.op_Inequality(System.Memory{System.Char},Stringier.Rope)
  name: Inequality(Memory<Char>, Rope)
  href: api/Stringier.Rope.html#Stringier_Rope_op_Inequality_System_Memory_System_Char__Stringier_Rope_
  commentId: M:Stringier.Rope.op_Inequality(System.Memory{System.Char},Stringier.Rope)
  name.vb: Inequality(Memory(Of Char), Rope)
  fullName: Stringier.Rope.Inequality(System.Memory<System.Char>, Stringier.Rope)
  fullName.vb: Stringier.Rope.Inequality(System.Memory(Of System.Char), Stringier.Rope)
  nameWithType: Rope.Inequality(Memory<Char>, Rope)
  nameWithType.vb: Rope.Inequality(Memory(Of Char), Rope)
- uid: Stringier.Rope.op_Inequality(System.ReadOnlyMemory{System.Char},Stringier.Rope)
  name: Inequality(ReadOnlyMemory<Char>, Rope)
  href: api/Stringier.Rope.html#Stringier_Rope_op_Inequality_System_ReadOnlyMemory_System_Char__Stringier_Rope_
  commentId: M:Stringier.Rope.op_Inequality(System.ReadOnlyMemory{System.Char},Stringier.Rope)
  name.vb: Inequality(ReadOnlyMemory(Of Char), Rope)
  fullName: Stringier.Rope.Inequality(System.ReadOnlyMemory<System.Char>, Stringier.Rope)
  fullName.vb: Stringier.Rope.Inequality(System.ReadOnlyMemory(Of System.Char), Stringier.Rope)
  nameWithType: Rope.Inequality(ReadOnlyMemory<Char>, Rope)
  nameWithType.vb: Rope.Inequality(ReadOnlyMemory(Of Char), Rope)
- uid: Stringier.Rope.op_Inequality(System.ReadOnlySpan{System.Char},Stringier.Rope)
  name: Inequality(ReadOnlySpan<Char>, Rope)
  href: api/Stringier.Rope.html#Stringier_Rope_op_Inequality_System_ReadOnlySpan_System_Char__Stringier_Rope_
  commentId: M:Stringier.Rope.op_Inequality(System.ReadOnlySpan{System.Char},Stringier.Rope)
  name.vb: Inequality(ReadOnlySpan(Of Char), Rope)
  fullName: Stringier.Rope.Inequality(System.ReadOnlySpan<System.Char>, Stringier.Rope)
  fullName.vb: Stringier.Rope.Inequality(System.ReadOnlySpan(Of System.Char), Stringier.Rope)
  nameWithType: Rope.Inequality(ReadOnlySpan<Char>, Rope)
  nameWithType.vb: Rope.Inequality(ReadOnlySpan(Of Char), Rope)
- uid: Stringier.Rope.op_Inequality(System.Span{System.Char},Stringier.Rope)
  name: Inequality(Span<Char>, Rope)
  href: api/Stringier.Rope.html#Stringier_Rope_op_Inequality_System_Span_System_Char__Stringier_Rope_
  commentId: M:Stringier.Rope.op_Inequality(System.Span{System.Char},Stringier.Rope)
  name.vb: Inequality(Span(Of Char), Rope)
  fullName: Stringier.Rope.Inequality(System.Span<System.Char>, Stringier.Rope)
  fullName.vb: Stringier.Rope.Inequality(System.Span(Of System.Char), Stringier.Rope)
  nameWithType: Rope.Inequality(Span<Char>, Rope)
  nameWithType.vb: Rope.Inequality(Span(Of Char), Rope)
- uid: Stringier.Rope.op_Inequality(System.String,Stringier.Rope)
  name: Inequality(String, Rope)
  href: api/Stringier.Rope.html#Stringier_Rope_op_Inequality_System_String_Stringier_Rope_
  commentId: M:Stringier.Rope.op_Inequality(System.String,Stringier.Rope)
  fullName: Stringier.Rope.Inequality(System.String, Stringier.Rope)
  nameWithType: Rope.Inequality(String, Rope)
- uid: Stringier.Rope.op_Inequality*
  name: Inequality
  href: api/Stringier.Rope.html#Stringier_Rope_op_Inequality_
  commentId: Overload:Stringier.Rope.op_Inequality
  isSpec: "True"
  fullName: Stringier.Rope.Inequality
  nameWithType: Rope.Inequality
- uid: Stringier.Rope.Postpend(System.Char)
  name: Postpend(Char)
  href: api/Stringier.Rope.html#Stringier_Rope_Postpend_System_Char_
  commentId: M:Stringier.Rope.Postpend(System.Char)
  fullName: Stringier.Rope.Postpend(System.Char)
  nameWithType: Rope.Postpend(Char)
- uid: Stringier.Rope.Postpend(System.Char[])
  name: Postpend(Char[])
  href: api/Stringier.Rope.html#Stringier_Rope_Postpend_System_Char___
  commentId: M:Stringier.Rope.Postpend(System.Char[])
  name.vb: Postpend(Char())
  fullName: Stringier.Rope.Postpend(System.Char[])
  fullName.vb: Stringier.Rope.Postpend(System.Char())
  nameWithType: Rope.Postpend(Char[])
  nameWithType.vb: Rope.Postpend(Char())
- uid: Stringier.Rope.Postpend(System.Memory{System.Char})
  name: Postpend(Memory<Char>)
  href: api/Stringier.Rope.html#Stringier_Rope_Postpend_System_Memory_System_Char__
  commentId: M:Stringier.Rope.Postpend(System.Memory{System.Char})
  name.vb: Postpend(Memory(Of Char))
  fullName: Stringier.Rope.Postpend(System.Memory<System.Char>)
  fullName.vb: Stringier.Rope.Postpend(System.Memory(Of System.Char))
  nameWithType: Rope.Postpend(Memory<Char>)
  nameWithType.vb: Rope.Postpend(Memory(Of Char))
- uid: Stringier.Rope.Postpend(System.ReadOnlyMemory{System.Char})
  name: Postpend(ReadOnlyMemory<Char>)
  href: api/Stringier.Rope.html#Stringier_Rope_Postpend_System_ReadOnlyMemory_System_Char__
  commentId: M:Stringier.Rope.Postpend(System.ReadOnlyMemory{System.Char})
  name.vb: Postpend(ReadOnlyMemory(Of Char))
  fullName: Stringier.Rope.Postpend(System.ReadOnlyMemory<System.Char>)
  fullName.vb: Stringier.Rope.Postpend(System.ReadOnlyMemory(Of System.Char))
  nameWithType: Rope.Postpend(ReadOnlyMemory<Char>)
  nameWithType.vb: Rope.Postpend(ReadOnlyMemory(Of Char))
- uid: Stringier.Rope.Postpend*
  name: Postpend
  href: api/Stringier.Rope.html#Stringier_Rope_Postpend_
  commentId: Overload:Stringier.Rope.Postpend
  isSpec: "True"
  fullName: Stringier.Rope.Postpend
  nameWithType: Rope.Postpend
- uid: Stringier.Rope.Prepend(System.Char)
  name: Prepend(Char)
  href: api/Stringier.Rope.html#Stringier_Rope_Prepend_System_Char_
  commentId: M:Stringier.Rope.Prepend(System.Char)
  fullName: Stringier.Rope.Prepend(System.Char)
  nameWithType: Rope.Prepend(Char)
- uid: Stringier.Rope.Prepend(System.Char[])
  name: Prepend(Char[])
  href: api/Stringier.Rope.html#Stringier_Rope_Prepend_System_Char___
  commentId: M:Stringier.Rope.Prepend(System.Char[])
  name.vb: Prepend(Char())
  fullName: Stringier.Rope.Prepend(System.Char[])
  fullName.vb: Stringier.Rope.Prepend(System.Char())
  nameWithType: Rope.Prepend(Char[])
  nameWithType.vb: Rope.Prepend(Char())
- uid: Stringier.Rope.Prepend(System.Memory{System.Char})
  name: Prepend(Memory<Char>)
  href: api/Stringier.Rope.html#Stringier_Rope_Prepend_System_Memory_System_Char__
  commentId: M:Stringier.Rope.Prepend(System.Memory{System.Char})
  name.vb: Prepend(Memory(Of Char))
  fullName: Stringier.Rope.Prepend(System.Memory<System.Char>)
  fullName.vb: Stringier.Rope.Prepend(System.Memory(Of System.Char))
  nameWithType: Rope.Prepend(Memory<Char>)
  nameWithType.vb: Rope.Prepend(Memory(Of Char))
- uid: Stringier.Rope.Prepend(System.ReadOnlyMemory{System.Char})
  name: Prepend(ReadOnlyMemory<Char>)
  href: api/Stringier.Rope.html#Stringier_Rope_Prepend_System_ReadOnlyMemory_System_Char__
  commentId: M:Stringier.Rope.Prepend(System.ReadOnlyMemory{System.Char})
  name.vb: Prepend(ReadOnlyMemory(Of Char))
  fullName: Stringier.Rope.Prepend(System.ReadOnlyMemory<System.Char>)
  fullName.vb: Stringier.Rope.Prepend(System.ReadOnlyMemory(Of System.Char))
  nameWithType: Rope.Prepend(ReadOnlyMemory<Char>)
  nameWithType.vb: Rope.Prepend(ReadOnlyMemory(Of Char))
- uid: Stringier.Rope.Prepend*
  name: Prepend
  href: api/Stringier.Rope.html#Stringier_Rope_Prepend_
  commentId: Overload:Stringier.Rope.Prepend
  isSpec: "True"
  fullName: Stringier.Rope.Prepend
  nameWithType: Rope.Prepend
- uid: Stringier.Rope.Remove(System.Char)
  name: Remove(Char)
  href: api/Stringier.Rope.html#Stringier_Rope_Remove_System_Char_
  commentId: M:Stringier.Rope.Remove(System.Char)
  fullName: Stringier.Rope.Remove(System.Char)
  nameWithType: Rope.Remove(Char)
- uid: Stringier.Rope.Remove*
  name: Remove
  href: api/Stringier.Rope.html#Stringier_Rope_Remove_
  commentId: Overload:Stringier.Rope.Remove
  isSpec: "True"
  fullName: Stringier.Rope.Remove
  nameWithType: Rope.Remove
- uid: Stringier.Rope.RemoveFirst(System.Char)
  name: RemoveFirst(Char)
  href: api/Stringier.Rope.html#Stringier_Rope_RemoveFirst_System_Char_
  commentId: M:Stringier.Rope.RemoveFirst(System.Char)
  fullName: Stringier.Rope.RemoveFirst(System.Char)
  nameWithType: Rope.RemoveFirst(Char)
- uid: Stringier.Rope.RemoveFirst*
  name: RemoveFirst
  href: api/Stringier.Rope.html#Stringier_Rope_RemoveFirst_
  commentId: Overload:Stringier.Rope.RemoveFirst
  isSpec: "True"
  fullName: Stringier.Rope.RemoveFirst
  nameWithType: Rope.RemoveFirst
- uid: Stringier.Rope.RemoveLast(System.Char)
  name: RemoveLast(Char)
  href: api/Stringier.Rope.html#Stringier_Rope_RemoveLast_System_Char_
  commentId: M:Stringier.Rope.RemoveLast(System.Char)
  fullName: Stringier.Rope.RemoveLast(System.Char)
  nameWithType: Rope.RemoveLast(Char)
- uid: Stringier.Rope.RemoveLast*
  name: RemoveLast
  href: api/Stringier.Rope.html#Stringier_Rope_RemoveLast_
  commentId: Overload:Stringier.Rope.RemoveLast
  isSpec: "True"
  fullName: Stringier.Rope.RemoveLast
  nameWithType: Rope.RemoveLast
- uid: Stringier.Rope.Replace(System.Char,System.Char)
  name: Replace(Char, Char)
  href: api/Stringier.Rope.html#Stringier_Rope_Replace_System_Char_System_Char_
  commentId: M:Stringier.Rope.Replace(System.Char,System.Char)
  fullName: Stringier.Rope.Replace(System.Char, System.Char)
  nameWithType: Rope.Replace(Char, Char)
- uid: Stringier.Rope.Replace*
  name: Replace
  href: api/Stringier.Rope.html#Stringier_Rope_Replace_
  commentId: Overload:Stringier.Rope.Replace
  isSpec: "True"
  fullName: Stringier.Rope.Replace
  nameWithType: Rope.Replace
- uid: Stringier.Rope.System#Collections#Generic#IEnumerable{System#Char}#GetEnumerator
  name: IEnumerable<Char>.GetEnumerator()
  href: api/Stringier.Rope.html#Stringier_Rope_System_Collections_Generic_IEnumerable_System_Char__GetEnumerator
  commentId: M:Stringier.Rope.System#Collections#Generic#IEnumerable{System#Char}#GetEnumerator
  name.vb: System.Collections.Generic.IEnumerable<System.Char>.GetEnumerator()
  fullName: Stringier.Rope.System.Collections.Generic.IEnumerable<System.Char>.GetEnumerator()
  nameWithType: Rope.IEnumerable<Char>.GetEnumerator()
  nameWithType.vb: Rope.System.Collections.Generic.IEnumerable<System.Char>.GetEnumerator()
- uid: Stringier.Rope.System#Collections#Generic#IEnumerable{System#Char}#GetEnumerator*
  name: IEnumerable<Char>.GetEnumerator
  href: api/Stringier.Rope.html#Stringier_Rope_System_Collections_Generic_IEnumerable_System_Char__GetEnumerator_
  commentId: Overload:Stringier.Rope.System#Collections#Generic#IEnumerable{System#Char}#GetEnumerator
  isSpec: "True"
  name.vb: System.Collections.Generic.IEnumerable<System.Char>.GetEnumerator
  fullName: Stringier.Rope.System.Collections.Generic.IEnumerable<System.Char>.GetEnumerator
  nameWithType: Rope.IEnumerable<Char>.GetEnumerator
  nameWithType.vb: Rope.System.Collections.Generic.IEnumerable<System.Char>.GetEnumerator
- uid: Stringier.Rope.System#Collections#IEnumerable#GetEnumerator
  name: IEnumerable.GetEnumerator()
  href: api/Stringier.Rope.html#Stringier_Rope_System_Collections_IEnumerable_GetEnumerator
  commentId: M:Stringier.Rope.System#Collections#IEnumerable#GetEnumerator
  name.vb: System.Collections.IEnumerable.GetEnumerator()
  fullName: Stringier.Rope.System.Collections.IEnumerable.GetEnumerator()
  nameWithType: Rope.IEnumerable.GetEnumerator()
  nameWithType.vb: Rope.System.Collections.IEnumerable.GetEnumerator()
- uid: Stringier.Rope.System#Collections#IEnumerable#GetEnumerator*
  name: IEnumerable.GetEnumerator
  href: api/Stringier.Rope.html#Stringier_Rope_System_Collections_IEnumerable_GetEnumerator_
  commentId: Overload:Stringier.Rope.System#Collections#IEnumerable#GetEnumerator
  isSpec: "True"
  name.vb: System.Collections.IEnumerable.GetEnumerator
  fullName: Stringier.Rope.System.Collections.IEnumerable.GetEnumerator
  nameWithType: Rope.IEnumerable.GetEnumerator
  nameWithType.vb: Rope.System.Collections.IEnumerable.GetEnumerator
- uid: Stringier.Rope.ToString
  name: ToString()
  href: api/Stringier.Rope.html#Stringier_Rope_ToString
  commentId: M:Stringier.Rope.ToString
  fullName: Stringier.Rope.ToString()
  nameWithType: Rope.ToString()
- uid: Stringier.Rope.ToString(nint)
  name: ToString(nint)
  href: api/Stringier.Rope.html#Stringier_Rope_ToString_nint_
  commentId: M:Stringier.Rope.ToString(nint)
  fullName: Stringier.Rope.ToString(nint)
  nameWithType: Rope.ToString(nint)
- uid: Stringier.Rope.ToString*
  name: ToString
  href: api/Stringier.Rope.html#Stringier_Rope_ToString_
  commentId: Overload:Stringier.Rope.ToString
  isSpec: "True"
  fullName: Stringier.Rope.ToString
  nameWithType: Rope.ToString
- uid: Stringier.Search
  name: Search
  href: api/Stringier.Search.html
  commentId: T:Stringier.Search
  fullName: Stringier.Search
  nameWithType: Search
- uid: Stringier.Search.RabinKarp(Char*,Int32,Char*,Int32)
  name: RabinKarp(Char*, Int32, Char*, Int32)
  href: api/Stringier.Search.html#Stringier_Search_RabinKarp_Char__Int32_Char__Int32_
  commentId: M:Stringier.Search.RabinKarp(Char*,Int32,Char*,Int32)
  fullName: Stringier.Search.RabinKarp(Char*, Int32, Char*, Int32)
  nameWithType: Search.RabinKarp(Char*, Int32, Char*, Int32)
- uid: Stringier.Search.RabinKarp(Char*,Int32,Char[])
  name: RabinKarp(Char*, Int32, Char[])
  href: api/Stringier.Search.html#Stringier_Search_RabinKarp_Char__Int32_Char___
  commentId: M:Stringier.Search.RabinKarp(Char*,Int32,Char[])
  name.vb: RabinKarp(Char*, Int32, Char())
  fullName: Stringier.Search.RabinKarp(Char*, Int32, Char[])
  fullName.vb: Stringier.Search.RabinKarp(Char*, Int32, Char())
  nameWithType: Search.RabinKarp(Char*, Int32, Char[])
  nameWithType.vb: Search.RabinKarp(Char*, Int32, Char())
- uid: Stringier.Search.RabinKarp(Char*,Int32,Memory{Char})
  name: RabinKarp(Char*, Int32, Memory<Char>)
  href: api/Stringier.Search.html#Stringier_Search_RabinKarp_Char__Int32_Memory_Char__
  commentId: M:Stringier.Search.RabinKarp(Char*,Int32,Memory{Char})
  name.vb: RabinKarp(Char*, Int32, Memory(Of Char))
  fullName: Stringier.Search.RabinKarp(Char*, Int32, Memory<Char>)
  fullName.vb: Stringier.Search.RabinKarp(Char*, Int32, Memory(Of Char))
  nameWithType: Search.RabinKarp(Char*, Int32, Memory<Char>)
  nameWithType.vb: Search.RabinKarp(Char*, Int32, Memory(Of Char))
- uid: Stringier.Search.RabinKarp(Char*,Int32,ReadOnlyMemory{Char})
  name: RabinKarp(Char*, Int32, ReadOnlyMemory<Char>)
  href: api/Stringier.Search.html#Stringier_Search_RabinKarp_Char__Int32_ReadOnlyMemory_Char__
  commentId: M:Stringier.Search.RabinKarp(Char*,Int32,ReadOnlyMemory{Char})
  name.vb: RabinKarp(Char*, Int32, ReadOnlyMemory(Of Char))
  fullName: Stringier.Search.RabinKarp(Char*, Int32, ReadOnlyMemory<Char>)
  fullName.vb: Stringier.Search.RabinKarp(Char*, Int32, ReadOnlyMemory(Of Char))
  nameWithType: Search.RabinKarp(Char*, Int32, ReadOnlyMemory<Char>)
  nameWithType.vb: Search.RabinKarp(Char*, Int32, ReadOnlyMemory(Of Char))
- uid: Stringier.Search.RabinKarp(Char*,Int32,ReadOnlySpan{Char})
  name: RabinKarp(Char*, Int32, ReadOnlySpan<Char>)
  href: api/Stringier.Search.html#Stringier_Search_RabinKarp_Char__Int32_ReadOnlySpan_Char__
  commentId: M:Stringier.Search.RabinKarp(Char*,Int32,ReadOnlySpan{Char})
  name.vb: RabinKarp(Char*, Int32, ReadOnlySpan(Of Char))
  fullName: Stringier.Search.RabinKarp(Char*, Int32, ReadOnlySpan<Char>)
  fullName.vb: Stringier.Search.RabinKarp(Char*, Int32, ReadOnlySpan(Of Char))
  nameWithType: Search.RabinKarp(Char*, Int32, ReadOnlySpan<Char>)
  nameWithType.vb: Search.RabinKarp(Char*, Int32, ReadOnlySpan(Of Char))
- uid: Stringier.Search.RabinKarp(Char*,Int32,Span{Char})
  name: RabinKarp(Char*, Int32, Span<Char>)
  href: api/Stringier.Search.html#Stringier_Search_RabinKarp_Char__Int32_Span_Char__
  commentId: M:Stringier.Search.RabinKarp(Char*,Int32,Span{Char})
  name.vb: RabinKarp(Char*, Int32, Span(Of Char))
  fullName: Stringier.Search.RabinKarp(Char*, Int32, Span<Char>)
  fullName.vb: Stringier.Search.RabinKarp(Char*, Int32, Span(Of Char))
  nameWithType: Search.RabinKarp(Char*, Int32, Span<Char>)
  nameWithType.vb: Search.RabinKarp(Char*, Int32, Span(Of Char))
- uid: Stringier.Search.RabinKarp(Char*,Int32,String)
  name: RabinKarp(Char*, Int32, String)
  href: api/Stringier.Search.html#Stringier_Search_RabinKarp_Char__Int32_String_
  commentId: M:Stringier.Search.RabinKarp(Char*,Int32,String)
  fullName: Stringier.Search.RabinKarp(Char*, Int32, String)
  nameWithType: Search.RabinKarp(Char*, Int32, String)
- uid: Stringier.Search.RabinKarp(Char[],Char*,Int32)
  name: RabinKarp(Char[], Char*, Int32)
  href: api/Stringier.Search.html#Stringier_Search_RabinKarp_Char___Char__Int32_
  commentId: M:Stringier.Search.RabinKarp(Char[],Char*,Int32)
  name.vb: RabinKarp(Char(), Char*, Int32)
  fullName: Stringier.Search.RabinKarp(Char[], Char*, Int32)
  fullName.vb: Stringier.Search.RabinKarp(Char(), Char*, Int32)
  nameWithType: Search.RabinKarp(Char[], Char*, Int32)
  nameWithType.vb: Search.RabinKarp(Char(), Char*, Int32)
- uid: Stringier.Search.RabinKarp(Char[],Char[])
  name: RabinKarp(Char[], Char[])
  href: api/Stringier.Search.html#Stringier_Search_RabinKarp_Char___Char___
  commentId: M:Stringier.Search.RabinKarp(Char[],Char[])
  name.vb: RabinKarp(Char(), Char())
  fullName: Stringier.Search.RabinKarp(Char[], Char[])
  fullName.vb: Stringier.Search.RabinKarp(Char(), Char())
  nameWithType: Search.RabinKarp(Char[], Char[])
  nameWithType.vb: Search.RabinKarp(Char(), Char())
- uid: Stringier.Search.RabinKarp(Char[],Memory{Char})
  name: RabinKarp(Char[], Memory<Char>)
  href: api/Stringier.Search.html#Stringier_Search_RabinKarp_Char___Memory_Char__
  commentId: M:Stringier.Search.RabinKarp(Char[],Memory{Char})
  name.vb: RabinKarp(Char(), Memory(Of Char))
  fullName: Stringier.Search.RabinKarp(Char[], Memory<Char>)
  fullName.vb: Stringier.Search.RabinKarp(Char(), Memory(Of Char))
  nameWithType: Search.RabinKarp(Char[], Memory<Char>)
  nameWithType.vb: Search.RabinKarp(Char(), Memory(Of Char))
- uid: Stringier.Search.RabinKarp(Char[],ReadOnlyMemory{Char})
  name: RabinKarp(Char[], ReadOnlyMemory<Char>)
  href: api/Stringier.Search.html#Stringier_Search_RabinKarp_Char___ReadOnlyMemory_Char__
  commentId: M:Stringier.Search.RabinKarp(Char[],ReadOnlyMemory{Char})
  name.vb: RabinKarp(Char(), ReadOnlyMemory(Of Char))
  fullName: Stringier.Search.RabinKarp(Char[], ReadOnlyMemory<Char>)
  fullName.vb: Stringier.Search.RabinKarp(Char(), ReadOnlyMemory(Of Char))
  nameWithType: Search.RabinKarp(Char[], ReadOnlyMemory<Char>)
  nameWithType.vb: Search.RabinKarp(Char(), ReadOnlyMemory(Of Char))
- uid: Stringier.Search.RabinKarp(Char[],ReadOnlySpan{Char})
  name: RabinKarp(Char[], ReadOnlySpan<Char>)
  href: api/Stringier.Search.html#Stringier_Search_RabinKarp_Char___ReadOnlySpan_Char__
  commentId: M:Stringier.Search.RabinKarp(Char[],ReadOnlySpan{Char})
  name.vb: RabinKarp(Char(), ReadOnlySpan(Of Char))
  fullName: Stringier.Search.RabinKarp(Char[], ReadOnlySpan<Char>)
  fullName.vb: Stringier.Search.RabinKarp(Char(), ReadOnlySpan(Of Char))
  nameWithType: Search.RabinKarp(Char[], ReadOnlySpan<Char>)
  nameWithType.vb: Search.RabinKarp(Char(), ReadOnlySpan(Of Char))
- uid: Stringier.Search.RabinKarp(Char[],Span{Char})
  name: RabinKarp(Char[], Span<Char>)
  href: api/Stringier.Search.html#Stringier_Search_RabinKarp_Char___Span_Char__
  commentId: M:Stringier.Search.RabinKarp(Char[],Span{Char})
  name.vb: RabinKarp(Char(), Span(Of Char))
  fullName: Stringier.Search.RabinKarp(Char[], Span<Char>)
  fullName.vb: Stringier.Search.RabinKarp(Char(), Span(Of Char))
  nameWithType: Search.RabinKarp(Char[], Span<Char>)
  nameWithType.vb: Search.RabinKarp(Char(), Span(Of Char))
- uid: Stringier.Search.RabinKarp(Char[],String)
  name: RabinKarp(Char[], String)
  href: api/Stringier.Search.html#Stringier_Search_RabinKarp_Char___String_
  commentId: M:Stringier.Search.RabinKarp(Char[],String)
  name.vb: RabinKarp(Char(), String)
  fullName: Stringier.Search.RabinKarp(Char[], String)
  fullName.vb: Stringier.Search.RabinKarp(Char(), String)
  nameWithType: Search.RabinKarp(Char[], String)
  nameWithType.vb: Search.RabinKarp(Char(), String)
- uid: Stringier.Search.RabinKarp(Memory{Char},Char*,Int32)
  name: RabinKarp(Memory<Char>, Char*, Int32)
  href: api/Stringier.Search.html#Stringier_Search_RabinKarp_Memory_Char__Char__Int32_
  commentId: M:Stringier.Search.RabinKarp(Memory{Char},Char*,Int32)
  name.vb: RabinKarp(Memory(Of Char), Char*, Int32)
  fullName: Stringier.Search.RabinKarp(Memory<Char>, Char*, Int32)
  fullName.vb: Stringier.Search.RabinKarp(Memory(Of Char), Char*, Int32)
  nameWithType: Search.RabinKarp(Memory<Char>, Char*, Int32)
  nameWithType.vb: Search.RabinKarp(Memory(Of Char), Char*, Int32)
- uid: Stringier.Search.RabinKarp(Memory{Char},Char[])
  name: RabinKarp(Memory<Char>, Char[])
  href: api/Stringier.Search.html#Stringier_Search_RabinKarp_Memory_Char__Char___
  commentId: M:Stringier.Search.RabinKarp(Memory{Char},Char[])
  name.vb: RabinKarp(Memory(Of Char), Char())
  fullName: Stringier.Search.RabinKarp(Memory<Char>, Char[])
  fullName.vb: Stringier.Search.RabinKarp(Memory(Of Char), Char())
  nameWithType: Search.RabinKarp(Memory<Char>, Char[])
  nameWithType.vb: Search.RabinKarp(Memory(Of Char), Char())
- uid: Stringier.Search.RabinKarp(Memory{Char},Memory{Char})
  name: RabinKarp(Memory<Char>, Memory<Char>)
  href: api/Stringier.Search.html#Stringier_Search_RabinKarp_Memory_Char__Memory_Char__
  commentId: M:Stringier.Search.RabinKarp(Memory{Char},Memory{Char})
  name.vb: RabinKarp(Memory(Of Char), Memory(Of Char))
  fullName: Stringier.Search.RabinKarp(Memory<Char>, Memory<Char>)
  fullName.vb: Stringier.Search.RabinKarp(Memory(Of Char), Memory(Of Char))
  nameWithType: Search.RabinKarp(Memory<Char>, Memory<Char>)
  nameWithType.vb: Search.RabinKarp(Memory(Of Char), Memory(Of Char))
- uid: Stringier.Search.RabinKarp(Memory{Char},ReadOnlyMemory{Char})
  name: RabinKarp(Memory<Char>, ReadOnlyMemory<Char>)
  href: api/Stringier.Search.html#Stringier_Search_RabinKarp_Memory_Char__ReadOnlyMemory_Char__
  commentId: M:Stringier.Search.RabinKarp(Memory{Char},ReadOnlyMemory{Char})
  name.vb: RabinKarp(Memory(Of Char), ReadOnlyMemory(Of Char))
  fullName: Stringier.Search.RabinKarp(Memory<Char>, ReadOnlyMemory<Char>)
  fullName.vb: Stringier.Search.RabinKarp(Memory(Of Char), ReadOnlyMemory(Of Char))
  nameWithType: Search.RabinKarp(Memory<Char>, ReadOnlyMemory<Char>)
  nameWithType.vb: Search.RabinKarp(Memory(Of Char), ReadOnlyMemory(Of Char))
- uid: Stringier.Search.RabinKarp(Memory{Char},ReadOnlySpan{Char})
  name: RabinKarp(Memory<Char>, ReadOnlySpan<Char>)
  href: api/Stringier.Search.html#Stringier_Search_RabinKarp_Memory_Char__ReadOnlySpan_Char__
  commentId: M:Stringier.Search.RabinKarp(Memory{Char},ReadOnlySpan{Char})
  name.vb: RabinKarp(Memory(Of Char), ReadOnlySpan(Of Char))
  fullName: Stringier.Search.RabinKarp(Memory<Char>, ReadOnlySpan<Char>)
  fullName.vb: Stringier.Search.RabinKarp(Memory(Of Char), ReadOnlySpan(Of Char))
  nameWithType: Search.RabinKarp(Memory<Char>, ReadOnlySpan<Char>)
  nameWithType.vb: Search.RabinKarp(Memory(Of Char), ReadOnlySpan(Of Char))
- uid: Stringier.Search.RabinKarp(Memory{Char},Span{Char})
  name: RabinKarp(Memory<Char>, Span<Char>)
  href: api/Stringier.Search.html#Stringier_Search_RabinKarp_Memory_Char__Span_Char__
  commentId: M:Stringier.Search.RabinKarp(Memory{Char},Span{Char})
  name.vb: RabinKarp(Memory(Of Char), Span(Of Char))
  fullName: Stringier.Search.RabinKarp(Memory<Char>, Span<Char>)
  fullName.vb: Stringier.Search.RabinKarp(Memory(Of Char), Span(Of Char))
  nameWithType: Search.RabinKarp(Memory<Char>, Span<Char>)
  nameWithType.vb: Search.RabinKarp(Memory(Of Char), Span(Of Char))
- uid: Stringier.Search.RabinKarp(Memory{Char},String)
  name: RabinKarp(Memory<Char>, String)
  href: api/Stringier.Search.html#Stringier_Search_RabinKarp_Memory_Char__String_
  commentId: M:Stringier.Search.RabinKarp(Memory{Char},String)
  name.vb: RabinKarp(Memory(Of Char), String)
  fullName: Stringier.Search.RabinKarp(Memory<Char>, String)
  fullName.vb: Stringier.Search.RabinKarp(Memory(Of Char), String)
  nameWithType: Search.RabinKarp(Memory<Char>, String)
  nameWithType.vb: Search.RabinKarp(Memory(Of Char), String)
- uid: Stringier.Search.RabinKarp(ReadOnlyMemory{Char},Char*,Int32)
  name: RabinKarp(ReadOnlyMemory<Char>, Char*, Int32)
  href: api/Stringier.Search.html#Stringier_Search_RabinKarp_ReadOnlyMemory_Char__Char__Int32_
  commentId: M:Stringier.Search.RabinKarp(ReadOnlyMemory{Char},Char*,Int32)
  name.vb: RabinKarp(ReadOnlyMemory(Of Char), Char*, Int32)
  fullName: Stringier.Search.RabinKarp(ReadOnlyMemory<Char>, Char*, Int32)
  fullName.vb: Stringier.Search.RabinKarp(ReadOnlyMemory(Of Char), Char*, Int32)
  nameWithType: Search.RabinKarp(ReadOnlyMemory<Char>, Char*, Int32)
  nameWithType.vb: Search.RabinKarp(ReadOnlyMemory(Of Char), Char*, Int32)
- uid: Stringier.Search.RabinKarp(ReadOnlyMemory{Char},Char[])
  name: RabinKarp(ReadOnlyMemory<Char>, Char[])
  href: api/Stringier.Search.html#Stringier_Search_RabinKarp_ReadOnlyMemory_Char__Char___
  commentId: M:Stringier.Search.RabinKarp(ReadOnlyMemory{Char},Char[])
  name.vb: RabinKarp(ReadOnlyMemory(Of Char), Char())
  fullName: Stringier.Search.RabinKarp(ReadOnlyMemory<Char>, Char[])
  fullName.vb: Stringier.Search.RabinKarp(ReadOnlyMemory(Of Char), Char())
  nameWithType: Search.RabinKarp(ReadOnlyMemory<Char>, Char[])
  nameWithType.vb: Search.RabinKarp(ReadOnlyMemory(Of Char), Char())
- uid: Stringier.Search.RabinKarp(ReadOnlyMemory{Char},Memory{Char})
  name: RabinKarp(ReadOnlyMemory<Char>, Memory<Char>)
  href: api/Stringier.Search.html#Stringier_Search_RabinKarp_ReadOnlyMemory_Char__Memory_Char__
  commentId: M:Stringier.Search.RabinKarp(ReadOnlyMemory{Char},Memory{Char})
  name.vb: RabinKarp(ReadOnlyMemory(Of Char), Memory(Of Char))
  fullName: Stringier.Search.RabinKarp(ReadOnlyMemory<Char>, Memory<Char>)
  fullName.vb: Stringier.Search.RabinKarp(ReadOnlyMemory(Of Char), Memory(Of Char))
  nameWithType: Search.RabinKarp(ReadOnlyMemory<Char>, Memory<Char>)
  nameWithType.vb: Search.RabinKarp(ReadOnlyMemory(Of Char), Memory(Of Char))
- uid: Stringier.Search.RabinKarp(ReadOnlyMemory{Char},ReadOnlyMemory{Char})
  name: RabinKarp(ReadOnlyMemory<Char>, ReadOnlyMemory<Char>)
  href: api/Stringier.Search.html#Stringier_Search_RabinKarp_ReadOnlyMemory_Char__ReadOnlyMemory_Char__
  commentId: M:Stringier.Search.RabinKarp(ReadOnlyMemory{Char},ReadOnlyMemory{Char})
  name.vb: RabinKarp(ReadOnlyMemory(Of Char), ReadOnlyMemory(Of Char))
  fullName: Stringier.Search.RabinKarp(ReadOnlyMemory<Char>, ReadOnlyMemory<Char>)
  fullName.vb: Stringier.Search.RabinKarp(ReadOnlyMemory(Of Char), ReadOnlyMemory(Of Char))
  nameWithType: Search.RabinKarp(ReadOnlyMemory<Char>, ReadOnlyMemory<Char>)
  nameWithType.vb: Search.RabinKarp(ReadOnlyMemory(Of Char), ReadOnlyMemory(Of Char))
- uid: Stringier.Search.RabinKarp(ReadOnlyMemory{Char},ReadOnlySpan{Char})
  name: RabinKarp(ReadOnlyMemory<Char>, ReadOnlySpan<Char>)
  href: api/Stringier.Search.html#Stringier_Search_RabinKarp_ReadOnlyMemory_Char__ReadOnlySpan_Char__
  commentId: M:Stringier.Search.RabinKarp(ReadOnlyMemory{Char},ReadOnlySpan{Char})
  name.vb: RabinKarp(ReadOnlyMemory(Of Char), ReadOnlySpan(Of Char))
  fullName: Stringier.Search.RabinKarp(ReadOnlyMemory<Char>, ReadOnlySpan<Char>)
  fullName.vb: Stringier.Search.RabinKarp(ReadOnlyMemory(Of Char), ReadOnlySpan(Of Char))
  nameWithType: Search.RabinKarp(ReadOnlyMemory<Char>, ReadOnlySpan<Char>)
  nameWithType.vb: Search.RabinKarp(ReadOnlyMemory(Of Char), ReadOnlySpan(Of Char))
- uid: Stringier.Search.RabinKarp(ReadOnlyMemory{Char},Span{Char})
  name: RabinKarp(ReadOnlyMemory<Char>, Span<Char>)
  href: api/Stringier.Search.html#Stringier_Search_RabinKarp_ReadOnlyMemory_Char__Span_Char__
  commentId: M:Stringier.Search.RabinKarp(ReadOnlyMemory{Char},Span{Char})
  name.vb: RabinKarp(ReadOnlyMemory(Of Char), Span(Of Char))
  fullName: Stringier.Search.RabinKarp(ReadOnlyMemory<Char>, Span<Char>)
  fullName.vb: Stringier.Search.RabinKarp(ReadOnlyMemory(Of Char), Span(Of Char))
  nameWithType: Search.RabinKarp(ReadOnlyMemory<Char>, Span<Char>)
  nameWithType.vb: Search.RabinKarp(ReadOnlyMemory(Of Char), Span(Of Char))
- uid: Stringier.Search.RabinKarp(ReadOnlyMemory{Char},String)
  name: RabinKarp(ReadOnlyMemory<Char>, String)
  href: api/Stringier.Search.html#Stringier_Search_RabinKarp_ReadOnlyMemory_Char__String_
  commentId: M:Stringier.Search.RabinKarp(ReadOnlyMemory{Char},String)
  name.vb: RabinKarp(ReadOnlyMemory(Of Char), String)
  fullName: Stringier.Search.RabinKarp(ReadOnlyMemory<Char>, String)
  fullName.vb: Stringier.Search.RabinKarp(ReadOnlyMemory(Of Char), String)
  nameWithType: Search.RabinKarp(ReadOnlyMemory<Char>, String)
  nameWithType.vb: Search.RabinKarp(ReadOnlyMemory(Of Char), String)
- uid: Stringier.Search.RabinKarp(ReadOnlySpan{Char},Char*,Int32)
  name: RabinKarp(ReadOnlySpan<Char>, Char*, Int32)
  href: api/Stringier.Search.html#Stringier_Search_RabinKarp_ReadOnlySpan_Char__Char__Int32_
  commentId: M:Stringier.Search.RabinKarp(ReadOnlySpan{Char},Char*,Int32)
  name.vb: RabinKarp(ReadOnlySpan(Of Char), Char*, Int32)
  fullName: Stringier.Search.RabinKarp(ReadOnlySpan<Char>, Char*, Int32)
  fullName.vb: Stringier.Search.RabinKarp(ReadOnlySpan(Of Char), Char*, Int32)
  nameWithType: Search.RabinKarp(ReadOnlySpan<Char>, Char*, Int32)
  nameWithType.vb: Search.RabinKarp(ReadOnlySpan(Of Char), Char*, Int32)
- uid: Stringier.Search.RabinKarp(ReadOnlySpan{Char},Char[])
  name: RabinKarp(ReadOnlySpan<Char>, Char[])
  href: api/Stringier.Search.html#Stringier_Search_RabinKarp_ReadOnlySpan_Char__Char___
  commentId: M:Stringier.Search.RabinKarp(ReadOnlySpan{Char},Char[])
  name.vb: RabinKarp(ReadOnlySpan(Of Char), Char())
  fullName: Stringier.Search.RabinKarp(ReadOnlySpan<Char>, Char[])
  fullName.vb: Stringier.Search.RabinKarp(ReadOnlySpan(Of Char), Char())
  nameWithType: Search.RabinKarp(ReadOnlySpan<Char>, Char[])
  nameWithType.vb: Search.RabinKarp(ReadOnlySpan(Of Char), Char())
- uid: Stringier.Search.RabinKarp(ReadOnlySpan{Char},Memory{Char})
  name: RabinKarp(ReadOnlySpan<Char>, Memory<Char>)
  href: api/Stringier.Search.html#Stringier_Search_RabinKarp_ReadOnlySpan_Char__Memory_Char__
  commentId: M:Stringier.Search.RabinKarp(ReadOnlySpan{Char},Memory{Char})
  name.vb: RabinKarp(ReadOnlySpan(Of Char), Memory(Of Char))
  fullName: Stringier.Search.RabinKarp(ReadOnlySpan<Char>, Memory<Char>)
  fullName.vb: Stringier.Search.RabinKarp(ReadOnlySpan(Of Char), Memory(Of Char))
  nameWithType: Search.RabinKarp(ReadOnlySpan<Char>, Memory<Char>)
  nameWithType.vb: Search.RabinKarp(ReadOnlySpan(Of Char), Memory(Of Char))
- uid: Stringier.Search.RabinKarp(ReadOnlySpan{Char},ReadOnlyMemory{Char})
  name: RabinKarp(ReadOnlySpan<Char>, ReadOnlyMemory<Char>)
  href: api/Stringier.Search.html#Stringier_Search_RabinKarp_ReadOnlySpan_Char__ReadOnlyMemory_Char__
  commentId: M:Stringier.Search.RabinKarp(ReadOnlySpan{Char},ReadOnlyMemory{Char})
  name.vb: RabinKarp(ReadOnlySpan(Of Char), ReadOnlyMemory(Of Char))
  fullName: Stringier.Search.RabinKarp(ReadOnlySpan<Char>, ReadOnlyMemory<Char>)
  fullName.vb: Stringier.Search.RabinKarp(ReadOnlySpan(Of Char), ReadOnlyMemory(Of Char))
  nameWithType: Search.RabinKarp(ReadOnlySpan<Char>, ReadOnlyMemory<Char>)
  nameWithType.vb: Search.RabinKarp(ReadOnlySpan(Of Char), ReadOnlyMemory(Of Char))
- uid: Stringier.Search.RabinKarp(ReadOnlySpan{Char},ReadOnlySpan{Char})
  name: RabinKarp(ReadOnlySpan<Char>, ReadOnlySpan<Char>)
  href: api/Stringier.Search.html#Stringier_Search_RabinKarp_ReadOnlySpan_Char__ReadOnlySpan_Char__
  commentId: M:Stringier.Search.RabinKarp(ReadOnlySpan{Char},ReadOnlySpan{Char})
  name.vb: RabinKarp(ReadOnlySpan(Of Char), ReadOnlySpan(Of Char))
  fullName: Stringier.Search.RabinKarp(ReadOnlySpan<Char>, ReadOnlySpan<Char>)
  fullName.vb: Stringier.Search.RabinKarp(ReadOnlySpan(Of Char), ReadOnlySpan(Of Char))
  nameWithType: Search.RabinKarp(ReadOnlySpan<Char>, ReadOnlySpan<Char>)
  nameWithType.vb: Search.RabinKarp(ReadOnlySpan(Of Char), ReadOnlySpan(Of Char))
- uid: Stringier.Search.RabinKarp(ReadOnlySpan{Char},Span{Char})
  name: RabinKarp(ReadOnlySpan<Char>, Span<Char>)
  href: api/Stringier.Search.html#Stringier_Search_RabinKarp_ReadOnlySpan_Char__Span_Char__
  commentId: M:Stringier.Search.RabinKarp(ReadOnlySpan{Char},Span{Char})
  name.vb: RabinKarp(ReadOnlySpan(Of Char), Span(Of Char))
  fullName: Stringier.Search.RabinKarp(ReadOnlySpan<Char>, Span<Char>)
  fullName.vb: Stringier.Search.RabinKarp(ReadOnlySpan(Of Char), Span(Of Char))
  nameWithType: Search.RabinKarp(ReadOnlySpan<Char>, Span<Char>)
  nameWithType.vb: Search.RabinKarp(ReadOnlySpan(Of Char), Span(Of Char))
- uid: Stringier.Search.RabinKarp(ReadOnlySpan{Char},String)
  name: RabinKarp(ReadOnlySpan<Char>, String)
  href: api/Stringier.Search.html#Stringier_Search_RabinKarp_ReadOnlySpan_Char__String_
  commentId: M:Stringier.Search.RabinKarp(ReadOnlySpan{Char},String)
  name.vb: RabinKarp(ReadOnlySpan(Of Char), String)
  fullName: Stringier.Search.RabinKarp(ReadOnlySpan<Char>, String)
  fullName.vb: Stringier.Search.RabinKarp(ReadOnlySpan(Of Char), String)
  nameWithType: Search.RabinKarp(ReadOnlySpan<Char>, String)
  nameWithType.vb: Search.RabinKarp(ReadOnlySpan(Of Char), String)
- uid: Stringier.Search.RabinKarp(Span{Char},Char*,Int32)
  name: RabinKarp(Span<Char>, Char*, Int32)
  href: api/Stringier.Search.html#Stringier_Search_RabinKarp_Span_Char__Char__Int32_
  commentId: M:Stringier.Search.RabinKarp(Span{Char},Char*,Int32)
  name.vb: RabinKarp(Span(Of Char), Char*, Int32)
  fullName: Stringier.Search.RabinKarp(Span<Char>, Char*, Int32)
  fullName.vb: Stringier.Search.RabinKarp(Span(Of Char), Char*, Int32)
  nameWithType: Search.RabinKarp(Span<Char>, Char*, Int32)
  nameWithType.vb: Search.RabinKarp(Span(Of Char), Char*, Int32)
- uid: Stringier.Search.RabinKarp(Span{Char},Char[])
  name: RabinKarp(Span<Char>, Char[])
  href: api/Stringier.Search.html#Stringier_Search_RabinKarp_Span_Char__Char___
  commentId: M:Stringier.Search.RabinKarp(Span{Char},Char[])
  name.vb: RabinKarp(Span(Of Char), Char())
  fullName: Stringier.Search.RabinKarp(Span<Char>, Char[])
  fullName.vb: Stringier.Search.RabinKarp(Span(Of Char), Char())
  nameWithType: Search.RabinKarp(Span<Char>, Char[])
  nameWithType.vb: Search.RabinKarp(Span(Of Char), Char())
- uid: Stringier.Search.RabinKarp(Span{Char},Memory{Char})
  name: RabinKarp(Span<Char>, Memory<Char>)
  href: api/Stringier.Search.html#Stringier_Search_RabinKarp_Span_Char__Memory_Char__
  commentId: M:Stringier.Search.RabinKarp(Span{Char},Memory{Char})
  name.vb: RabinKarp(Span(Of Char), Memory(Of Char))
  fullName: Stringier.Search.RabinKarp(Span<Char>, Memory<Char>)
  fullName.vb: Stringier.Search.RabinKarp(Span(Of Char), Memory(Of Char))
  nameWithType: Search.RabinKarp(Span<Char>, Memory<Char>)
  nameWithType.vb: Search.RabinKarp(Span(Of Char), Memory(Of Char))
- uid: Stringier.Search.RabinKarp(Span{Char},ReadOnlyMemory{Char})
  name: RabinKarp(Span<Char>, ReadOnlyMemory<Char>)
  href: api/Stringier.Search.html#Stringier_Search_RabinKarp_Span_Char__ReadOnlyMemory_Char__
  commentId: M:Stringier.Search.RabinKarp(Span{Char},ReadOnlyMemory{Char})
  name.vb: RabinKarp(Span(Of Char), ReadOnlyMemory(Of Char))
  fullName: Stringier.Search.RabinKarp(Span<Char>, ReadOnlyMemory<Char>)
  fullName.vb: Stringier.Search.RabinKarp(Span(Of Char), ReadOnlyMemory(Of Char))
  nameWithType: Search.RabinKarp(Span<Char>, ReadOnlyMemory<Char>)
  nameWithType.vb: Search.RabinKarp(Span(Of Char), ReadOnlyMemory(Of Char))
- uid: Stringier.Search.RabinKarp(Span{Char},ReadOnlySpan{Char})
  name: RabinKarp(Span<Char>, ReadOnlySpan<Char>)
  href: api/Stringier.Search.html#Stringier_Search_RabinKarp_Span_Char__ReadOnlySpan_Char__
  commentId: M:Stringier.Search.RabinKarp(Span{Char},ReadOnlySpan{Char})
  name.vb: RabinKarp(Span(Of Char), ReadOnlySpan(Of Char))
  fullName: Stringier.Search.RabinKarp(Span<Char>, ReadOnlySpan<Char>)
  fullName.vb: Stringier.Search.RabinKarp(Span(Of Char), ReadOnlySpan(Of Char))
  nameWithType: Search.RabinKarp(Span<Char>, ReadOnlySpan<Char>)
  nameWithType.vb: Search.RabinKarp(Span(Of Char), ReadOnlySpan(Of Char))
- uid: Stringier.Search.RabinKarp(Span{Char},Span{Char})
  name: RabinKarp(Span<Char>, Span<Char>)
  href: api/Stringier.Search.html#Stringier_Search_RabinKarp_Span_Char__Span_Char__
  commentId: M:Stringier.Search.RabinKarp(Span{Char},Span{Char})
  name.vb: RabinKarp(Span(Of Char), Span(Of Char))
  fullName: Stringier.Search.RabinKarp(Span<Char>, Span<Char>)
  fullName.vb: Stringier.Search.RabinKarp(Span(Of Char), Span(Of Char))
  nameWithType: Search.RabinKarp(Span<Char>, Span<Char>)
  nameWithType.vb: Search.RabinKarp(Span(Of Char), Span(Of Char))
- uid: Stringier.Search.RabinKarp(Span{Char},String)
  name: RabinKarp(Span<Char>, String)
  href: api/Stringier.Search.html#Stringier_Search_RabinKarp_Span_Char__String_
  commentId: M:Stringier.Search.RabinKarp(Span{Char},String)
  name.vb: RabinKarp(Span(Of Char), String)
  fullName: Stringier.Search.RabinKarp(Span<Char>, String)
  fullName.vb: Stringier.Search.RabinKarp(Span(Of Char), String)
  nameWithType: Search.RabinKarp(Span<Char>, String)
  nameWithType.vb: Search.RabinKarp(Span(Of Char), String)
- uid: Stringier.Search.RabinKarp(String,Char*,Int32)
  name: RabinKarp(String, Char*, Int32)
  href: api/Stringier.Search.html#Stringier_Search_RabinKarp_String_Char__Int32_
  commentId: M:Stringier.Search.RabinKarp(String,Char*,Int32)
  fullName: Stringier.Search.RabinKarp(String, Char*, Int32)
  nameWithType: Search.RabinKarp(String, Char*, Int32)
- uid: Stringier.Search.RabinKarp(String,Char[])
  name: RabinKarp(String, Char[])
  href: api/Stringier.Search.html#Stringier_Search_RabinKarp_String_Char___
  commentId: M:Stringier.Search.RabinKarp(String,Char[])
  name.vb: RabinKarp(String, Char())
  fullName: Stringier.Search.RabinKarp(String, Char[])
  fullName.vb: Stringier.Search.RabinKarp(String, Char())
  nameWithType: Search.RabinKarp(String, Char[])
  nameWithType.vb: Search.RabinKarp(String, Char())
- uid: Stringier.Search.RabinKarp(String,Memory{Char})
  name: RabinKarp(String, Memory<Char>)
  href: api/Stringier.Search.html#Stringier_Search_RabinKarp_String_Memory_Char__
  commentId: M:Stringier.Search.RabinKarp(String,Memory{Char})
  name.vb: RabinKarp(String, Memory(Of Char))
  fullName: Stringier.Search.RabinKarp(String, Memory<Char>)
  fullName.vb: Stringier.Search.RabinKarp(String, Memory(Of Char))
  nameWithType: Search.RabinKarp(String, Memory<Char>)
  nameWithType.vb: Search.RabinKarp(String, Memory(Of Char))
- uid: Stringier.Search.RabinKarp(String,ReadOnlyMemory{Char})
  name: RabinKarp(String, ReadOnlyMemory<Char>)
  href: api/Stringier.Search.html#Stringier_Search_RabinKarp_String_ReadOnlyMemory_Char__
  commentId: M:Stringier.Search.RabinKarp(String,ReadOnlyMemory{Char})
  name.vb: RabinKarp(String, ReadOnlyMemory(Of Char))
  fullName: Stringier.Search.RabinKarp(String, ReadOnlyMemory<Char>)
  fullName.vb: Stringier.Search.RabinKarp(String, ReadOnlyMemory(Of Char))
  nameWithType: Search.RabinKarp(String, ReadOnlyMemory<Char>)
  nameWithType.vb: Search.RabinKarp(String, ReadOnlyMemory(Of Char))
- uid: Stringier.Search.RabinKarp(String,ReadOnlySpan{Char})
  name: RabinKarp(String, ReadOnlySpan<Char>)
  href: api/Stringier.Search.html#Stringier_Search_RabinKarp_String_ReadOnlySpan_Char__
  commentId: M:Stringier.Search.RabinKarp(String,ReadOnlySpan{Char})
  name.vb: RabinKarp(String, ReadOnlySpan(Of Char))
  fullName: Stringier.Search.RabinKarp(String, ReadOnlySpan<Char>)
  fullName.vb: Stringier.Search.RabinKarp(String, ReadOnlySpan(Of Char))
  nameWithType: Search.RabinKarp(String, ReadOnlySpan<Char>)
  nameWithType.vb: Search.RabinKarp(String, ReadOnlySpan(Of Char))
- uid: Stringier.Search.RabinKarp(String,Span{Char})
  name: RabinKarp(String, Span<Char>)
  href: api/Stringier.Search.html#Stringier_Search_RabinKarp_String_Span_Char__
  commentId: M:Stringier.Search.RabinKarp(String,Span{Char})
  name.vb: RabinKarp(String, Span(Of Char))
  fullName: Stringier.Search.RabinKarp(String, Span<Char>)
  fullName.vb: Stringier.Search.RabinKarp(String, Span(Of Char))
  nameWithType: Search.RabinKarp(String, Span<Char>)
  nameWithType.vb: Search.RabinKarp(String, Span(Of Char))
- uid: Stringier.Search.RabinKarp(String,String)
  name: RabinKarp(String, String)
  href: api/Stringier.Search.html#Stringier_Search_RabinKarp_String_String_
  commentId: M:Stringier.Search.RabinKarp(String,String)
  fullName: Stringier.Search.RabinKarp(String, String)
  nameWithType: Search.RabinKarp(String, String)
- uid: Stringier.Search.RabinKarp*
  name: RabinKarp
  href: api/Stringier.Search.html#Stringier_Search_RabinKarp_
  commentId: Overload:Stringier.Search.RabinKarp
  isSpec: "True"
  fullName: Stringier.Search.RabinKarp
  nameWithType: Search.RabinKarp
- uid: Stringier.Text
  name: Text
  href: api/Stringier.Text.html
  commentId: T:Stringier.Text
  fullName: Stringier.Text
  nameWithType: Text
- uid: Stringier.Text.Equals(Stringier.Rope,Stringier.Rope)
  name: Equals(Rope, Rope)
  href: api/Stringier.Text.html#Stringier_Text_Equals_Stringier_Rope_Stringier_Rope_
  commentId: M:Stringier.Text.Equals(Stringier.Rope,Stringier.Rope)
  fullName: Stringier.Text.Equals(Stringier.Rope, Stringier.Rope)
  nameWithType: Text.Equals(Rope, Rope)
- uid: Stringier.Text.Equals(Stringier.Rope,Stringier.Rope,Stringier.Case)
  name: Equals(Rope, Rope, Case)
  href: api/Stringier.Text.html#Stringier_Text_Equals_Stringier_Rope_Stringier_Rope_Stringier_Case_
  commentId: M:Stringier.Text.Equals(Stringier.Rope,Stringier.Rope,Stringier.Case)
  fullName: Stringier.Text.Equals(Stringier.Rope, Stringier.Rope, Stringier.Case)
  nameWithType: Text.Equals(Rope, Rope, Case)
- uid: Stringier.Text.Equals(Stringier.Rope,System.Char)
  name: Equals(Rope, Char)
  href: api/Stringier.Text.html#Stringier_Text_Equals_Stringier_Rope_System_Char_
  commentId: M:Stringier.Text.Equals(Stringier.Rope,System.Char)
  fullName: Stringier.Text.Equals(Stringier.Rope, System.Char)
  nameWithType: Text.Equals(Rope, Char)
- uid: Stringier.Text.Equals(Stringier.Rope,System.Char*,System.Int32)
  name: Equals(Rope, Char*, Int32)
  href: api/Stringier.Text.html#Stringier_Text_Equals_Stringier_Rope_System_Char__System_Int32_
  commentId: M:Stringier.Text.Equals(Stringier.Rope,System.Char*,System.Int32)
  fullName: Stringier.Text.Equals(Stringier.Rope, System.Char*, System.Int32)
  nameWithType: Text.Equals(Rope, Char*, Int32)
- uid: Stringier.Text.Equals(Stringier.Rope,System.Char*,System.Int32,Stringier.Case)
  name: Equals(Rope, Char*, Int32, Case)
  href: api/Stringier.Text.html#Stringier_Text_Equals_Stringier_Rope_System_Char__System_Int32_Stringier_Case_
  commentId: M:Stringier.Text.Equals(Stringier.Rope,System.Char*,System.Int32,Stringier.Case)
  fullName: Stringier.Text.Equals(Stringier.Rope, System.Char*, System.Int32, Stringier.Case)
  nameWithType: Text.Equals(Rope, Char*, Int32, Case)
- uid: Stringier.Text.Equals(Stringier.Rope,System.Char,Stringier.Case)
  name: Equals(Rope, Char, Case)
  href: api/Stringier.Text.html#Stringier_Text_Equals_Stringier_Rope_System_Char_Stringier_Case_
  commentId: M:Stringier.Text.Equals(Stringier.Rope,System.Char,Stringier.Case)
  fullName: Stringier.Text.Equals(Stringier.Rope, System.Char, Stringier.Case)
  nameWithType: Text.Equals(Rope, Char, Case)
- uid: Stringier.Text.Equals(Stringier.Rope,System.Char[])
  name: Equals(Rope, Char[])
  href: api/Stringier.Text.html#Stringier_Text_Equals_Stringier_Rope_System_Char___
  commentId: M:Stringier.Text.Equals(Stringier.Rope,System.Char[])
  name.vb: Equals(Rope, Char())
  fullName: Stringier.Text.Equals(Stringier.Rope, System.Char[])
  fullName.vb: Stringier.Text.Equals(Stringier.Rope, System.Char())
  nameWithType: Text.Equals(Rope, Char[])
  nameWithType.vb: Text.Equals(Rope, Char())
- uid: Stringier.Text.Equals(Stringier.Rope,System.Char[],Stringier.Case)
  name: Equals(Rope, Char[], Case)
  href: api/Stringier.Text.html#Stringier_Text_Equals_Stringier_Rope_System_Char___Stringier_Case_
  commentId: M:Stringier.Text.Equals(Stringier.Rope,System.Char[],Stringier.Case)
  name.vb: Equals(Rope, Char(), Case)
  fullName: Stringier.Text.Equals(Stringier.Rope, System.Char[], Stringier.Case)
  fullName.vb: Stringier.Text.Equals(Stringier.Rope, System.Char(), Stringier.Case)
  nameWithType: Text.Equals(Rope, Char[], Case)
  nameWithType.vb: Text.Equals(Rope, Char(), Case)
- uid: Stringier.Text.Equals(Stringier.Rope,System.Memory{System.Char})
  name: Equals(Rope, Memory<Char>)
  href: api/Stringier.Text.html#Stringier_Text_Equals_Stringier_Rope_System_Memory_System_Char__
  commentId: M:Stringier.Text.Equals(Stringier.Rope,System.Memory{System.Char})
  name.vb: Equals(Rope, Memory(Of Char))
  fullName: Stringier.Text.Equals(Stringier.Rope, System.Memory<System.Char>)
  fullName.vb: Stringier.Text.Equals(Stringier.Rope, System.Memory(Of System.Char))
  nameWithType: Text.Equals(Rope, Memory<Char>)
  nameWithType.vb: Text.Equals(Rope, Memory(Of Char))
- uid: Stringier.Text.Equals(Stringier.Rope,System.Memory{System.Char},Stringier.Case)
  name: Equals(Rope, Memory<Char>, Case)
  href: api/Stringier.Text.html#Stringier_Text_Equals_Stringier_Rope_System_Memory_System_Char__Stringier_Case_
  commentId: M:Stringier.Text.Equals(Stringier.Rope,System.Memory{System.Char},Stringier.Case)
  name.vb: Equals(Rope, Memory(Of Char), Case)
  fullName: Stringier.Text.Equals(Stringier.Rope, System.Memory<System.Char>, Stringier.Case)
  fullName.vb: Stringier.Text.Equals(Stringier.Rope, System.Memory(Of System.Char), Stringier.Case)
  nameWithType: Text.Equals(Rope, Memory<Char>, Case)
  nameWithType.vb: Text.Equals(Rope, Memory(Of Char), Case)
- uid: Stringier.Text.Equals(Stringier.Rope,System.ReadOnlyMemory{System.Char})
  name: Equals(Rope, ReadOnlyMemory<Char>)
  href: api/Stringier.Text.html#Stringier_Text_Equals_Stringier_Rope_System_ReadOnlyMemory_System_Char__
  commentId: M:Stringier.Text.Equals(Stringier.Rope,System.ReadOnlyMemory{System.Char})
  name.vb: Equals(Rope, ReadOnlyMemory(Of Char))
  fullName: Stringier.Text.Equals(Stringier.Rope, System.ReadOnlyMemory<System.Char>)
  fullName.vb: Stringier.Text.Equals(Stringier.Rope, System.ReadOnlyMemory(Of System.Char))
  nameWithType: Text.Equals(Rope, ReadOnlyMemory<Char>)
  nameWithType.vb: Text.Equals(Rope, ReadOnlyMemory(Of Char))
- uid: Stringier.Text.Equals(Stringier.Rope,System.ReadOnlyMemory{System.Char},Stringier.Case)
  name: Equals(Rope, ReadOnlyMemory<Char>, Case)
  href: api/Stringier.Text.html#Stringier_Text_Equals_Stringier_Rope_System_ReadOnlyMemory_System_Char__Stringier_Case_
  commentId: M:Stringier.Text.Equals(Stringier.Rope,System.ReadOnlyMemory{System.Char},Stringier.Case)
  name.vb: Equals(Rope, ReadOnlyMemory(Of Char), Case)
  fullName: Stringier.Text.Equals(Stringier.Rope, System.ReadOnlyMemory<System.Char>, Stringier.Case)
  fullName.vb: Stringier.Text.Equals(Stringier.Rope, System.ReadOnlyMemory(Of System.Char), Stringier.Case)
  nameWithType: Text.Equals(Rope, ReadOnlyMemory<Char>, Case)
  nameWithType.vb: Text.Equals(Rope, ReadOnlyMemory(Of Char), Case)
- uid: Stringier.Text.Equals(Stringier.Rope,System.ReadOnlySpan{System.Char})
  name: Equals(Rope, ReadOnlySpan<Char>)
  href: api/Stringier.Text.html#Stringier_Text_Equals_Stringier_Rope_System_ReadOnlySpan_System_Char__
  commentId: M:Stringier.Text.Equals(Stringier.Rope,System.ReadOnlySpan{System.Char})
  name.vb: Equals(Rope, ReadOnlySpan(Of Char))
  fullName: Stringier.Text.Equals(Stringier.Rope, System.ReadOnlySpan<System.Char>)
  fullName.vb: Stringier.Text.Equals(Stringier.Rope, System.ReadOnlySpan(Of System.Char))
  nameWithType: Text.Equals(Rope, ReadOnlySpan<Char>)
  nameWithType.vb: Text.Equals(Rope, ReadOnlySpan(Of Char))
- uid: Stringier.Text.Equals(Stringier.Rope,System.ReadOnlySpan{System.Char},Stringier.Case)
  name: Equals(Rope, ReadOnlySpan<Char>, Case)
  href: api/Stringier.Text.html#Stringier_Text_Equals_Stringier_Rope_System_ReadOnlySpan_System_Char__Stringier_Case_
  commentId: M:Stringier.Text.Equals(Stringier.Rope,System.ReadOnlySpan{System.Char},Stringier.Case)
  name.vb: Equals(Rope, ReadOnlySpan(Of Char), Case)
  fullName: Stringier.Text.Equals(Stringier.Rope, System.ReadOnlySpan<System.Char>, Stringier.Case)
  fullName.vb: Stringier.Text.Equals(Stringier.Rope, System.ReadOnlySpan(Of System.Char), Stringier.Case)
  nameWithType: Text.Equals(Rope, ReadOnlySpan<Char>, Case)
  nameWithType.vb: Text.Equals(Rope, ReadOnlySpan(Of Char), Case)
- uid: Stringier.Text.Equals(Stringier.Rope,System.Span{System.Char})
  name: Equals(Rope, Span<Char>)
  href: api/Stringier.Text.html#Stringier_Text_Equals_Stringier_Rope_System_Span_System_Char__
  commentId: M:Stringier.Text.Equals(Stringier.Rope,System.Span{System.Char})
  name.vb: Equals(Rope, Span(Of Char))
  fullName: Stringier.Text.Equals(Stringier.Rope, System.Span<System.Char>)
  fullName.vb: Stringier.Text.Equals(Stringier.Rope, System.Span(Of System.Char))
  nameWithType: Text.Equals(Rope, Span<Char>)
  nameWithType.vb: Text.Equals(Rope, Span(Of Char))
- uid: Stringier.Text.Equals(Stringier.Rope,System.Span{System.Char},Stringier.Case)
  name: Equals(Rope, Span<Char>, Case)
  href: api/Stringier.Text.html#Stringier_Text_Equals_Stringier_Rope_System_Span_System_Char__Stringier_Case_
  commentId: M:Stringier.Text.Equals(Stringier.Rope,System.Span{System.Char},Stringier.Case)
  name.vb: Equals(Rope, Span(Of Char), Case)
  fullName: Stringier.Text.Equals(Stringier.Rope, System.Span<System.Char>, Stringier.Case)
  fullName.vb: Stringier.Text.Equals(Stringier.Rope, System.Span(Of System.Char), Stringier.Case)
  nameWithType: Text.Equals(Rope, Span<Char>, Case)
  nameWithType.vb: Text.Equals(Rope, Span(Of Char), Case)
- uid: Stringier.Text.Equals(Stringier.Rope,System.String)
  name: Equals(Rope, String)
  href: api/Stringier.Text.html#Stringier_Text_Equals_Stringier_Rope_System_String_
  commentId: M:Stringier.Text.Equals(Stringier.Rope,System.String)
  fullName: Stringier.Text.Equals(Stringier.Rope, System.String)
  nameWithType: Text.Equals(Rope, String)
- uid: Stringier.Text.Equals(Stringier.Rope,System.String,Stringier.Case)
  name: Equals(Rope, String, Case)
  href: api/Stringier.Text.html#Stringier_Text_Equals_Stringier_Rope_System_String_Stringier_Case_
  commentId: M:Stringier.Text.Equals(Stringier.Rope,System.String,Stringier.Case)
  fullName: Stringier.Text.Equals(Stringier.Rope, System.String, Stringier.Case)
  nameWithType: Text.Equals(Rope, String, Case)
- uid: Stringier.Text.Equals(System.Char*,System.Int32,Stringier.Rope)
  name: Equals(Char*, Int32, Rope)
  href: api/Stringier.Text.html#Stringier_Text_Equals_System_Char__System_Int32_Stringier_Rope_
  commentId: M:Stringier.Text.Equals(System.Char*,System.Int32,Stringier.Rope)
  fullName: Stringier.Text.Equals(System.Char*, System.Int32, Stringier.Rope)
  nameWithType: Text.Equals(Char*, Int32, Rope)
- uid: Stringier.Text.Equals(System.Char*,System.Int32,Stringier.Rope,Stringier.Case)
  name: Equals(Char*, Int32, Rope, Case)
  href: api/Stringier.Text.html#Stringier_Text_Equals_System_Char__System_Int32_Stringier_Rope_Stringier_Case_
  commentId: M:Stringier.Text.Equals(System.Char*,System.Int32,Stringier.Rope,Stringier.Case)
  fullName: Stringier.Text.Equals(System.Char*, System.Int32, Stringier.Rope, Stringier.Case)
  nameWithType: Text.Equals(Char*, Int32, Rope, Case)
- uid: Stringier.Text.Equals(System.Char*,System.Int32,System.Char)
  name: Equals(Char*, Int32, Char)
  href: api/Stringier.Text.html#Stringier_Text_Equals_System_Char__System_Int32_System_Char_
  commentId: M:Stringier.Text.Equals(System.Char*,System.Int32,System.Char)
  fullName: Stringier.Text.Equals(System.Char*, System.Int32, System.Char)
  nameWithType: Text.Equals(Char*, Int32, Char)
- uid: Stringier.Text.Equals(System.Char*,System.Int32,System.Char*,System.Int32)
  name: Equals(Char*, Int32, Char*, Int32)
  href: api/Stringier.Text.html#Stringier_Text_Equals_System_Char__System_Int32_System_Char__System_Int32_
  commentId: M:Stringier.Text.Equals(System.Char*,System.Int32,System.Char*,System.Int32)
  fullName: Stringier.Text.Equals(System.Char*, System.Int32, System.Char*, System.Int32)
  nameWithType: Text.Equals(Char*, Int32, Char*, Int32)
- uid: Stringier.Text.Equals(System.Char*,System.Int32,System.Char*,System.Int32,Stringier.Case)
  name: Equals(Char*, Int32, Char*, Int32, Case)
  href: api/Stringier.Text.html#Stringier_Text_Equals_System_Char__System_Int32_System_Char__System_Int32_Stringier_Case_
  commentId: M:Stringier.Text.Equals(System.Char*,System.Int32,System.Char*,System.Int32,Stringier.Case)
  fullName: Stringier.Text.Equals(System.Char*, System.Int32, System.Char*, System.Int32, Stringier.Case)
  nameWithType: Text.Equals(Char*, Int32, Char*, Int32, Case)
- uid: Stringier.Text.Equals(System.Char*,System.Int32,System.Char,Stringier.Case)
  name: Equals(Char*, Int32, Char, Case)
  href: api/Stringier.Text.html#Stringier_Text_Equals_System_Char__System_Int32_System_Char_Stringier_Case_
  commentId: M:Stringier.Text.Equals(System.Char*,System.Int32,System.Char,Stringier.Case)
  fullName: Stringier.Text.Equals(System.Char*, System.Int32, System.Char, Stringier.Case)
  nameWithType: Text.Equals(Char*, Int32, Char, Case)
- uid: Stringier.Text.Equals(System.Char*,System.Int32,System.Char[])
  name: Equals(Char*, Int32, Char[])
  href: api/Stringier.Text.html#Stringier_Text_Equals_System_Char__System_Int32_System_Char___
  commentId: M:Stringier.Text.Equals(System.Char*,System.Int32,System.Char[])
  name.vb: Equals(Char*, Int32, Char())
  fullName: Stringier.Text.Equals(System.Char*, System.Int32, System.Char[])
  fullName.vb: Stringier.Text.Equals(System.Char*, System.Int32, System.Char())
  nameWithType: Text.Equals(Char*, Int32, Char[])
  nameWithType.vb: Text.Equals(Char*, Int32, Char())
- uid: Stringier.Text.Equals(System.Char*,System.Int32,System.Char[],Stringier.Case)
  name: Equals(Char*, Int32, Char[], Case)
  href: api/Stringier.Text.html#Stringier_Text_Equals_System_Char__System_Int32_System_Char___Stringier_Case_
  commentId: M:Stringier.Text.Equals(System.Char*,System.Int32,System.Char[],Stringier.Case)
  name.vb: Equals(Char*, Int32, Char(), Case)
  fullName: Stringier.Text.Equals(System.Char*, System.Int32, System.Char[], Stringier.Case)
  fullName.vb: Stringier.Text.Equals(System.Char*, System.Int32, System.Char(), Stringier.Case)
  nameWithType: Text.Equals(Char*, Int32, Char[], Case)
  nameWithType.vb: Text.Equals(Char*, Int32, Char(), Case)
- uid: Stringier.Text.Equals(System.Char*,System.Int32,System.Memory{System.Char})
  name: Equals(Char*, Int32, Memory<Char>)
  href: api/Stringier.Text.html#Stringier_Text_Equals_System_Char__System_Int32_System_Memory_System_Char__
  commentId: M:Stringier.Text.Equals(System.Char*,System.Int32,System.Memory{System.Char})
  name.vb: Equals(Char*, Int32, Memory(Of Char))
  fullName: Stringier.Text.Equals(System.Char*, System.Int32, System.Memory<System.Char>)
  fullName.vb: Stringier.Text.Equals(System.Char*, System.Int32, System.Memory(Of System.Char))
  nameWithType: Text.Equals(Char*, Int32, Memory<Char>)
  nameWithType.vb: Text.Equals(Char*, Int32, Memory(Of Char))
- uid: Stringier.Text.Equals(System.Char*,System.Int32,System.Memory{System.Char},Stringier.Case)
  name: Equals(Char*, Int32, Memory<Char>, Case)
  href: api/Stringier.Text.html#Stringier_Text_Equals_System_Char__System_Int32_System_Memory_System_Char__Stringier_Case_
  commentId: M:Stringier.Text.Equals(System.Char*,System.Int32,System.Memory{System.Char},Stringier.Case)
  name.vb: Equals(Char*, Int32, Memory(Of Char), Case)
  fullName: Stringier.Text.Equals(System.Char*, System.Int32, System.Memory<System.Char>, Stringier.Case)
  fullName.vb: Stringier.Text.Equals(System.Char*, System.Int32, System.Memory(Of System.Char), Stringier.Case)
  nameWithType: Text.Equals(Char*, Int32, Memory<Char>, Case)
  nameWithType.vb: Text.Equals(Char*, Int32, Memory(Of Char), Case)
- uid: Stringier.Text.Equals(System.Char*,System.Int32,System.ReadOnlyMemory{System.Char})
  name: Equals(Char*, Int32, ReadOnlyMemory<Char>)
  href: api/Stringier.Text.html#Stringier_Text_Equals_System_Char__System_Int32_System_ReadOnlyMemory_System_Char__
  commentId: M:Stringier.Text.Equals(System.Char*,System.Int32,System.ReadOnlyMemory{System.Char})
  name.vb: Equals(Char*, Int32, ReadOnlyMemory(Of Char))
  fullName: Stringier.Text.Equals(System.Char*, System.Int32, System.ReadOnlyMemory<System.Char>)
  fullName.vb: Stringier.Text.Equals(System.Char*, System.Int32, System.ReadOnlyMemory(Of System.Char))
  nameWithType: Text.Equals(Char*, Int32, ReadOnlyMemory<Char>)
  nameWithType.vb: Text.Equals(Char*, Int32, ReadOnlyMemory(Of Char))
- uid: Stringier.Text.Equals(System.Char*,System.Int32,System.ReadOnlyMemory{System.Char},Stringier.Case)
  name: Equals(Char*, Int32, ReadOnlyMemory<Char>, Case)
  href: api/Stringier.Text.html#Stringier_Text_Equals_System_Char__System_Int32_System_ReadOnlyMemory_System_Char__Stringier_Case_
  commentId: M:Stringier.Text.Equals(System.Char*,System.Int32,System.ReadOnlyMemory{System.Char},Stringier.Case)
  name.vb: Equals(Char*, Int32, ReadOnlyMemory(Of Char), Case)
  fullName: Stringier.Text.Equals(System.Char*, System.Int32, System.ReadOnlyMemory<System.Char>, Stringier.Case)
  fullName.vb: Stringier.Text.Equals(System.Char*, System.Int32, System.ReadOnlyMemory(Of System.Char), Stringier.Case)
  nameWithType: Text.Equals(Char*, Int32, ReadOnlyMemory<Char>, Case)
  nameWithType.vb: Text.Equals(Char*, Int32, ReadOnlyMemory(Of Char), Case)
- uid: Stringier.Text.Equals(System.Char*,System.Int32,System.ReadOnlySpan{System.Char})
  name: Equals(Char*, Int32, ReadOnlySpan<Char>)
  href: api/Stringier.Text.html#Stringier_Text_Equals_System_Char__System_Int32_System_ReadOnlySpan_System_Char__
  commentId: M:Stringier.Text.Equals(System.Char*,System.Int32,System.ReadOnlySpan{System.Char})
  name.vb: Equals(Char*, Int32, ReadOnlySpan(Of Char))
  fullName: Stringier.Text.Equals(System.Char*, System.Int32, System.ReadOnlySpan<System.Char>)
  fullName.vb: Stringier.Text.Equals(System.Char*, System.Int32, System.ReadOnlySpan(Of System.Char))
  nameWithType: Text.Equals(Char*, Int32, ReadOnlySpan<Char>)
  nameWithType.vb: Text.Equals(Char*, Int32, ReadOnlySpan(Of Char))
- uid: Stringier.Text.Equals(System.Char*,System.Int32,System.ReadOnlySpan{System.Char},Stringier.Case)
  name: Equals(Char*, Int32, ReadOnlySpan<Char>, Case)
  href: api/Stringier.Text.html#Stringier_Text_Equals_System_Char__System_Int32_System_ReadOnlySpan_System_Char__Stringier_Case_
  commentId: M:Stringier.Text.Equals(System.Char*,System.Int32,System.ReadOnlySpan{System.Char},Stringier.Case)
  name.vb: Equals(Char*, Int32, ReadOnlySpan(Of Char), Case)
  fullName: Stringier.Text.Equals(System.Char*, System.Int32, System.ReadOnlySpan<System.Char>, Stringier.Case)
  fullName.vb: Stringier.Text.Equals(System.Char*, System.Int32, System.ReadOnlySpan(Of System.Char), Stringier.Case)
  nameWithType: Text.Equals(Char*, Int32, ReadOnlySpan<Char>, Case)
  nameWithType.vb: Text.Equals(Char*, Int32, ReadOnlySpan(Of Char), Case)
- uid: Stringier.Text.Equals(System.Char*,System.Int32,System.Span{System.Char})
  name: Equals(Char*, Int32, Span<Char>)
  href: api/Stringier.Text.html#Stringier_Text_Equals_System_Char__System_Int32_System_Span_System_Char__
  commentId: M:Stringier.Text.Equals(System.Char*,System.Int32,System.Span{System.Char})
  name.vb: Equals(Char*, Int32, Span(Of Char))
  fullName: Stringier.Text.Equals(System.Char*, System.Int32, System.Span<System.Char>)
  fullName.vb: Stringier.Text.Equals(System.Char*, System.Int32, System.Span(Of System.Char))
  nameWithType: Text.Equals(Char*, Int32, Span<Char>)
  nameWithType.vb: Text.Equals(Char*, Int32, Span(Of Char))
- uid: Stringier.Text.Equals(System.Char*,System.Int32,System.Span{System.Char},Stringier.Case)
  name: Equals(Char*, Int32, Span<Char>, Case)
  href: api/Stringier.Text.html#Stringier_Text_Equals_System_Char__System_Int32_System_Span_System_Char__Stringier_Case_
  commentId: M:Stringier.Text.Equals(System.Char*,System.Int32,System.Span{System.Char},Stringier.Case)
  name.vb: Equals(Char*, Int32, Span(Of Char), Case)
  fullName: Stringier.Text.Equals(System.Char*, System.Int32, System.Span<System.Char>, Stringier.Case)
  fullName.vb: Stringier.Text.Equals(System.Char*, System.Int32, System.Span(Of System.Char), Stringier.Case)
  nameWithType: Text.Equals(Char*, Int32, Span<Char>, Case)
  nameWithType.vb: Text.Equals(Char*, Int32, Span(Of Char), Case)
- uid: Stringier.Text.Equals(System.Char*,System.Int32,System.String)
  name: Equals(Char*, Int32, String)
  href: api/Stringier.Text.html#Stringier_Text_Equals_System_Char__System_Int32_System_String_
  commentId: M:Stringier.Text.Equals(System.Char*,System.Int32,System.String)
  fullName: Stringier.Text.Equals(System.Char*, System.Int32, System.String)
  nameWithType: Text.Equals(Char*, Int32, String)
- uid: Stringier.Text.Equals(System.Char*,System.Int32,System.String,Stringier.Case)
  name: Equals(Char*, Int32, String, Case)
  href: api/Stringier.Text.html#Stringier_Text_Equals_System_Char__System_Int32_System_String_Stringier_Case_
  commentId: M:Stringier.Text.Equals(System.Char*,System.Int32,System.String,Stringier.Case)
  fullName: Stringier.Text.Equals(System.Char*, System.Int32, System.String, Stringier.Case)
  nameWithType: Text.Equals(Char*, Int32, String, Case)
- uid: Stringier.Text.Equals(System.Char,Stringier.Rope)
  name: Equals(Char, Rope)
  href: api/Stringier.Text.html#Stringier_Text_Equals_System_Char_Stringier_Rope_
  commentId: M:Stringier.Text.Equals(System.Char,Stringier.Rope)
  fullName: Stringier.Text.Equals(System.Char, Stringier.Rope)
  nameWithType: Text.Equals(Char, Rope)
- uid: Stringier.Text.Equals(System.Char,Stringier.Rope,Stringier.Case)
  name: Equals(Char, Rope, Case)
  href: api/Stringier.Text.html#Stringier_Text_Equals_System_Char_Stringier_Rope_Stringier_Case_
  commentId: M:Stringier.Text.Equals(System.Char,Stringier.Rope,Stringier.Case)
  fullName: Stringier.Text.Equals(System.Char, Stringier.Rope, Stringier.Case)
  nameWithType: Text.Equals(Char, Rope, Case)
- uid: Stringier.Text.Equals(System.Char,System.Char)
  name: Equals(Char, Char)
  href: api/Stringier.Text.html#Stringier_Text_Equals_System_Char_System_Char_
  commentId: M:Stringier.Text.Equals(System.Char,System.Char)
  fullName: Stringier.Text.Equals(System.Char, System.Char)
  nameWithType: Text.Equals(Char, Char)
- uid: Stringier.Text.Equals(System.Char,System.Char*,System.Int32)
  name: Equals(Char, Char*, Int32)
  href: api/Stringier.Text.html#Stringier_Text_Equals_System_Char_System_Char__System_Int32_
  commentId: M:Stringier.Text.Equals(System.Char,System.Char*,System.Int32)
  fullName: Stringier.Text.Equals(System.Char, System.Char*, System.Int32)
  nameWithType: Text.Equals(Char, Char*, Int32)
- uid: Stringier.Text.Equals(System.Char,System.Char*,System.Int32,Stringier.Case)
  name: Equals(Char, Char*, Int32, Case)
  href: api/Stringier.Text.html#Stringier_Text_Equals_System_Char_System_Char__System_Int32_Stringier_Case_
  commentId: M:Stringier.Text.Equals(System.Char,System.Char*,System.Int32,Stringier.Case)
  fullName: Stringier.Text.Equals(System.Char, System.Char*, System.Int32, Stringier.Case)
  nameWithType: Text.Equals(Char, Char*, Int32, Case)
- uid: Stringier.Text.Equals(System.Char,System.Char,Stringier.Case)
  name: Equals(Char, Char, Case)
  href: api/Stringier.Text.html#Stringier_Text_Equals_System_Char_System_Char_Stringier_Case_
  commentId: M:Stringier.Text.Equals(System.Char,System.Char,Stringier.Case)
  fullName: Stringier.Text.Equals(System.Char, System.Char, Stringier.Case)
  nameWithType: Text.Equals(Char, Char, Case)
- uid: Stringier.Text.Equals(System.Char,System.Char[])
  name: Equals(Char, Char[])
  href: api/Stringier.Text.html#Stringier_Text_Equals_System_Char_System_Char___
  commentId: M:Stringier.Text.Equals(System.Char,System.Char[])
  name.vb: Equals(Char, Char())
  fullName: Stringier.Text.Equals(System.Char, System.Char[])
  fullName.vb: Stringier.Text.Equals(System.Char, System.Char())
  nameWithType: Text.Equals(Char, Char[])
  nameWithType.vb: Text.Equals(Char, Char())
- uid: Stringier.Text.Equals(System.Char,System.Char[],Stringier.Case)
  name: Equals(Char, Char[], Case)
  href: api/Stringier.Text.html#Stringier_Text_Equals_System_Char_System_Char___Stringier_Case_
  commentId: M:Stringier.Text.Equals(System.Char,System.Char[],Stringier.Case)
  name.vb: Equals(Char, Char(), Case)
  fullName: Stringier.Text.Equals(System.Char, System.Char[], Stringier.Case)
  fullName.vb: Stringier.Text.Equals(System.Char, System.Char(), Stringier.Case)
  nameWithType: Text.Equals(Char, Char[], Case)
  nameWithType.vb: Text.Equals(Char, Char(), Case)
- uid: Stringier.Text.Equals(System.Char,System.Memory{System.Char})
  name: Equals(Char, Memory<Char>)
  href: api/Stringier.Text.html#Stringier_Text_Equals_System_Char_System_Memory_System_Char__
  commentId: M:Stringier.Text.Equals(System.Char,System.Memory{System.Char})
  name.vb: Equals(Char, Memory(Of Char))
  fullName: Stringier.Text.Equals(System.Char, System.Memory<System.Char>)
  fullName.vb: Stringier.Text.Equals(System.Char, System.Memory(Of System.Char))
  nameWithType: Text.Equals(Char, Memory<Char>)
  nameWithType.vb: Text.Equals(Char, Memory(Of Char))
- uid: Stringier.Text.Equals(System.Char,System.Memory{System.Char},Stringier.Case)
  name: Equals(Char, Memory<Char>, Case)
  href: api/Stringier.Text.html#Stringier_Text_Equals_System_Char_System_Memory_System_Char__Stringier_Case_
  commentId: M:Stringier.Text.Equals(System.Char,System.Memory{System.Char},Stringier.Case)
  name.vb: Equals(Char, Memory(Of Char), Case)
  fullName: Stringier.Text.Equals(System.Char, System.Memory<System.Char>, Stringier.Case)
  fullName.vb: Stringier.Text.Equals(System.Char, System.Memory(Of System.Char), Stringier.Case)
  nameWithType: Text.Equals(Char, Memory<Char>, Case)
  nameWithType.vb: Text.Equals(Char, Memory(Of Char), Case)
- uid: Stringier.Text.Equals(System.Char,System.ReadOnlyMemory{System.Char})
  name: Equals(Char, ReadOnlyMemory<Char>)
  href: api/Stringier.Text.html#Stringier_Text_Equals_System_Char_System_ReadOnlyMemory_System_Char__
  commentId: M:Stringier.Text.Equals(System.Char,System.ReadOnlyMemory{System.Char})
  name.vb: Equals(Char, ReadOnlyMemory(Of Char))
  fullName: Stringier.Text.Equals(System.Char, System.ReadOnlyMemory<System.Char>)
  fullName.vb: Stringier.Text.Equals(System.Char, System.ReadOnlyMemory(Of System.Char))
  nameWithType: Text.Equals(Char, ReadOnlyMemory<Char>)
  nameWithType.vb: Text.Equals(Char, ReadOnlyMemory(Of Char))
- uid: Stringier.Text.Equals(System.Char,System.ReadOnlyMemory{System.Char},Stringier.Case)
  name: Equals(Char, ReadOnlyMemory<Char>, Case)
  href: api/Stringier.Text.html#Stringier_Text_Equals_System_Char_System_ReadOnlyMemory_System_Char__Stringier_Case_
  commentId: M:Stringier.Text.Equals(System.Char,System.ReadOnlyMemory{System.Char},Stringier.Case)
  name.vb: Equals(Char, ReadOnlyMemory(Of Char), Case)
  fullName: Stringier.Text.Equals(System.Char, System.ReadOnlyMemory<System.Char>, Stringier.Case)
  fullName.vb: Stringier.Text.Equals(System.Char, System.ReadOnlyMemory(Of System.Char), Stringier.Case)
  nameWithType: Text.Equals(Char, ReadOnlyMemory<Char>, Case)
  nameWithType.vb: Text.Equals(Char, ReadOnlyMemory(Of Char), Case)
- uid: Stringier.Text.Equals(System.Char,System.ReadOnlySpan{System.Char})
  name: Equals(Char, ReadOnlySpan<Char>)
  href: api/Stringier.Text.html#Stringier_Text_Equals_System_Char_System_ReadOnlySpan_System_Char__
  commentId: M:Stringier.Text.Equals(System.Char,System.ReadOnlySpan{System.Char})
  name.vb: Equals(Char, ReadOnlySpan(Of Char))
  fullName: Stringier.Text.Equals(System.Char, System.ReadOnlySpan<System.Char>)
  fullName.vb: Stringier.Text.Equals(System.Char, System.ReadOnlySpan(Of System.Char))
  nameWithType: Text.Equals(Char, ReadOnlySpan<Char>)
  nameWithType.vb: Text.Equals(Char, ReadOnlySpan(Of Char))
- uid: Stringier.Text.Equals(System.Char,System.ReadOnlySpan{System.Char},Stringier.Case)
  name: Equals(Char, ReadOnlySpan<Char>, Case)
  href: api/Stringier.Text.html#Stringier_Text_Equals_System_Char_System_ReadOnlySpan_System_Char__Stringier_Case_
  commentId: M:Stringier.Text.Equals(System.Char,System.ReadOnlySpan{System.Char},Stringier.Case)
  name.vb: Equals(Char, ReadOnlySpan(Of Char), Case)
  fullName: Stringier.Text.Equals(System.Char, System.ReadOnlySpan<System.Char>, Stringier.Case)
  fullName.vb: Stringier.Text.Equals(System.Char, System.ReadOnlySpan(Of System.Char), Stringier.Case)
  nameWithType: Text.Equals(Char, ReadOnlySpan<Char>, Case)
  nameWithType.vb: Text.Equals(Char, ReadOnlySpan(Of Char), Case)
- uid: Stringier.Text.Equals(System.Char,System.Span{System.Char})
  name: Equals(Char, Span<Char>)
  href: api/Stringier.Text.html#Stringier_Text_Equals_System_Char_System_Span_System_Char__
  commentId: M:Stringier.Text.Equals(System.Char,System.Span{System.Char})
  name.vb: Equals(Char, Span(Of Char))
  fullName: Stringier.Text.Equals(System.Char, System.Span<System.Char>)
  fullName.vb: Stringier.Text.Equals(System.Char, System.Span(Of System.Char))
  nameWithType: Text.Equals(Char, Span<Char>)
  nameWithType.vb: Text.Equals(Char, Span(Of Char))
- uid: Stringier.Text.Equals(System.Char,System.Span{System.Char},Stringier.Case)
  name: Equals(Char, Span<Char>, Case)
  href: api/Stringier.Text.html#Stringier_Text_Equals_System_Char_System_Span_System_Char__Stringier_Case_
  commentId: M:Stringier.Text.Equals(System.Char,System.Span{System.Char},Stringier.Case)
  name.vb: Equals(Char, Span(Of Char), Case)
  fullName: Stringier.Text.Equals(System.Char, System.Span<System.Char>, Stringier.Case)
  fullName.vb: Stringier.Text.Equals(System.Char, System.Span(Of System.Char), Stringier.Case)
  nameWithType: Text.Equals(Char, Span<Char>, Case)
  nameWithType.vb: Text.Equals(Char, Span(Of Char), Case)
- uid: Stringier.Text.Equals(System.Char,System.String)
  name: Equals(Char, String)
  href: api/Stringier.Text.html#Stringier_Text_Equals_System_Char_System_String_
  commentId: M:Stringier.Text.Equals(System.Char,System.String)
  fullName: Stringier.Text.Equals(System.Char, System.String)
  nameWithType: Text.Equals(Char, String)
- uid: Stringier.Text.Equals(System.Char,System.String,Stringier.Case)
  name: Equals(Char, String, Case)
  href: api/Stringier.Text.html#Stringier_Text_Equals_System_Char_System_String_Stringier_Case_
  commentId: M:Stringier.Text.Equals(System.Char,System.String,Stringier.Case)
  fullName: Stringier.Text.Equals(System.Char, System.String, Stringier.Case)
  nameWithType: Text.Equals(Char, String, Case)
- uid: Stringier.Text.Equals(System.Char[],Stringier.Rope)
  name: Equals(Char[], Rope)
  href: api/Stringier.Text.html#Stringier_Text_Equals_System_Char___Stringier_Rope_
  commentId: M:Stringier.Text.Equals(System.Char[],Stringier.Rope)
  name.vb: Equals(Char(), Rope)
  fullName: Stringier.Text.Equals(System.Char[], Stringier.Rope)
  fullName.vb: Stringier.Text.Equals(System.Char(), Stringier.Rope)
  nameWithType: Text.Equals(Char[], Rope)
  nameWithType.vb: Text.Equals(Char(), Rope)
- uid: Stringier.Text.Equals(System.Char[],Stringier.Rope,Stringier.Case)
  name: Equals(Char[], Rope, Case)
  href: api/Stringier.Text.html#Stringier_Text_Equals_System_Char___Stringier_Rope_Stringier_Case_
  commentId: M:Stringier.Text.Equals(System.Char[],Stringier.Rope,Stringier.Case)
  name.vb: Equals(Char(), Rope, Case)
  fullName: Stringier.Text.Equals(System.Char[], Stringier.Rope, Stringier.Case)
  fullName.vb: Stringier.Text.Equals(System.Char(), Stringier.Rope, Stringier.Case)
  nameWithType: Text.Equals(Char[], Rope, Case)
  nameWithType.vb: Text.Equals(Char(), Rope, Case)
- uid: Stringier.Text.Equals(System.Char[],System.Char)
  name: Equals(Char[], Char)
  href: api/Stringier.Text.html#Stringier_Text_Equals_System_Char___System_Char_
  commentId: M:Stringier.Text.Equals(System.Char[],System.Char)
  name.vb: Equals(Char(), Char)
  fullName: Stringier.Text.Equals(System.Char[], System.Char)
  fullName.vb: Stringier.Text.Equals(System.Char(), System.Char)
  nameWithType: Text.Equals(Char[], Char)
  nameWithType.vb: Text.Equals(Char(), Char)
- uid: Stringier.Text.Equals(System.Char[],System.Char*,System.Int32)
  name: Equals(Char[], Char*, Int32)
  href: api/Stringier.Text.html#Stringier_Text_Equals_System_Char___System_Char__System_Int32_
  commentId: M:Stringier.Text.Equals(System.Char[],System.Char*,System.Int32)
  name.vb: Equals(Char(), Char*, Int32)
  fullName: Stringier.Text.Equals(System.Char[], System.Char*, System.Int32)
  fullName.vb: Stringier.Text.Equals(System.Char(), System.Char*, System.Int32)
  nameWithType: Text.Equals(Char[], Char*, Int32)
  nameWithType.vb: Text.Equals(Char(), Char*, Int32)
- uid: Stringier.Text.Equals(System.Char[],System.Char*,System.Int32,Stringier.Case)
  name: Equals(Char[], Char*, Int32, Case)
  href: api/Stringier.Text.html#Stringier_Text_Equals_System_Char___System_Char__System_Int32_Stringier_Case_
  commentId: M:Stringier.Text.Equals(System.Char[],System.Char*,System.Int32,Stringier.Case)
  name.vb: Equals(Char(), Char*, Int32, Case)
  fullName: Stringier.Text.Equals(System.Char[], System.Char*, System.Int32, Stringier.Case)
  fullName.vb: Stringier.Text.Equals(System.Char(), System.Char*, System.Int32, Stringier.Case)
  nameWithType: Text.Equals(Char[], Char*, Int32, Case)
  nameWithType.vb: Text.Equals(Char(), Char*, Int32, Case)
- uid: Stringier.Text.Equals(System.Char[],System.Char,Stringier.Case)
  name: Equals(Char[], Char, Case)
  href: api/Stringier.Text.html#Stringier_Text_Equals_System_Char___System_Char_Stringier_Case_
  commentId: M:Stringier.Text.Equals(System.Char[],System.Char,Stringier.Case)
  name.vb: Equals(Char(), Char, Case)
  fullName: Stringier.Text.Equals(System.Char[], System.Char, Stringier.Case)
  fullName.vb: Stringier.Text.Equals(System.Char(), System.Char, Stringier.Case)
  nameWithType: Text.Equals(Char[], Char, Case)
  nameWithType.vb: Text.Equals(Char(), Char, Case)
- uid: Stringier.Text.Equals(System.Char[],System.Char[])
  name: Equals(Char[], Char[])
  href: api/Stringier.Text.html#Stringier_Text_Equals_System_Char___System_Char___
  commentId: M:Stringier.Text.Equals(System.Char[],System.Char[])
  name.vb: Equals(Char(), Char())
  fullName: Stringier.Text.Equals(System.Char[], System.Char[])
  fullName.vb: Stringier.Text.Equals(System.Char(), System.Char())
  nameWithType: Text.Equals(Char[], Char[])
  nameWithType.vb: Text.Equals(Char(), Char())
- uid: Stringier.Text.Equals(System.Char[],System.Char[],Stringier.Case)
  name: Equals(Char[], Char[], Case)
  href: api/Stringier.Text.html#Stringier_Text_Equals_System_Char___System_Char___Stringier_Case_
  commentId: M:Stringier.Text.Equals(System.Char[],System.Char[],Stringier.Case)
  name.vb: Equals(Char(), Char(), Case)
  fullName: Stringier.Text.Equals(System.Char[], System.Char[], Stringier.Case)
  fullName.vb: Stringier.Text.Equals(System.Char(), System.Char(), Stringier.Case)
  nameWithType: Text.Equals(Char[], Char[], Case)
  nameWithType.vb: Text.Equals(Char(), Char(), Case)
- uid: Stringier.Text.Equals(System.Char[],System.Memory{System.Char})
  name: Equals(Char[], Memory<Char>)
  href: api/Stringier.Text.html#Stringier_Text_Equals_System_Char___System_Memory_System_Char__
  commentId: M:Stringier.Text.Equals(System.Char[],System.Memory{System.Char})
  name.vb: Equals(Char(), Memory(Of Char))
  fullName: Stringier.Text.Equals(System.Char[], System.Memory<System.Char>)
  fullName.vb: Stringier.Text.Equals(System.Char(), System.Memory(Of System.Char))
  nameWithType: Text.Equals(Char[], Memory<Char>)
  nameWithType.vb: Text.Equals(Char(), Memory(Of Char))
- uid: Stringier.Text.Equals(System.Char[],System.Memory{System.Char},Stringier.Case)
  name: Equals(Char[], Memory<Char>, Case)
  href: api/Stringier.Text.html#Stringier_Text_Equals_System_Char___System_Memory_System_Char__Stringier_Case_
  commentId: M:Stringier.Text.Equals(System.Char[],System.Memory{System.Char},Stringier.Case)
  name.vb: Equals(Char(), Memory(Of Char), Case)
  fullName: Stringier.Text.Equals(System.Char[], System.Memory<System.Char>, Stringier.Case)
  fullName.vb: Stringier.Text.Equals(System.Char(), System.Memory(Of System.Char), Stringier.Case)
  nameWithType: Text.Equals(Char[], Memory<Char>, Case)
  nameWithType.vb: Text.Equals(Char(), Memory(Of Char), Case)
- uid: Stringier.Text.Equals(System.Char[],System.ReadOnlyMemory{System.Char})
  name: Equals(Char[], ReadOnlyMemory<Char>)
  href: api/Stringier.Text.html#Stringier_Text_Equals_System_Char___System_ReadOnlyMemory_System_Char__
  commentId: M:Stringier.Text.Equals(System.Char[],System.ReadOnlyMemory{System.Char})
  name.vb: Equals(Char(), ReadOnlyMemory(Of Char))
  fullName: Stringier.Text.Equals(System.Char[], System.ReadOnlyMemory<System.Char>)
  fullName.vb: Stringier.Text.Equals(System.Char(), System.ReadOnlyMemory(Of System.Char))
  nameWithType: Text.Equals(Char[], ReadOnlyMemory<Char>)
  nameWithType.vb: Text.Equals(Char(), ReadOnlyMemory(Of Char))
- uid: Stringier.Text.Equals(System.Char[],System.ReadOnlyMemory{System.Char},Stringier.Case)
  name: Equals(Char[], ReadOnlyMemory<Char>, Case)
  href: api/Stringier.Text.html#Stringier_Text_Equals_System_Char___System_ReadOnlyMemory_System_Char__Stringier_Case_
  commentId: M:Stringier.Text.Equals(System.Char[],System.ReadOnlyMemory{System.Char},Stringier.Case)
  name.vb: Equals(Char(), ReadOnlyMemory(Of Char), Case)
  fullName: Stringier.Text.Equals(System.Char[], System.ReadOnlyMemory<System.Char>, Stringier.Case)
  fullName.vb: Stringier.Text.Equals(System.Char(), System.ReadOnlyMemory(Of System.Char), Stringier.Case)
  nameWithType: Text.Equals(Char[], ReadOnlyMemory<Char>, Case)
  nameWithType.vb: Text.Equals(Char(), ReadOnlyMemory(Of Char), Case)
- uid: Stringier.Text.Equals(System.Char[],System.ReadOnlySpan{System.Char})
  name: Equals(Char[], ReadOnlySpan<Char>)
  href: api/Stringier.Text.html#Stringier_Text_Equals_System_Char___System_ReadOnlySpan_System_Char__
  commentId: M:Stringier.Text.Equals(System.Char[],System.ReadOnlySpan{System.Char})
  name.vb: Equals(Char(), ReadOnlySpan(Of Char))
  fullName: Stringier.Text.Equals(System.Char[], System.ReadOnlySpan<System.Char>)
  fullName.vb: Stringier.Text.Equals(System.Char(), System.ReadOnlySpan(Of System.Char))
  nameWithType: Text.Equals(Char[], ReadOnlySpan<Char>)
  nameWithType.vb: Text.Equals(Char(), ReadOnlySpan(Of Char))
- uid: Stringier.Text.Equals(System.Char[],System.ReadOnlySpan{System.Char},Stringier.Case)
  name: Equals(Char[], ReadOnlySpan<Char>, Case)
  href: api/Stringier.Text.html#Stringier_Text_Equals_System_Char___System_ReadOnlySpan_System_Char__Stringier_Case_
  commentId: M:Stringier.Text.Equals(System.Char[],System.ReadOnlySpan{System.Char},Stringier.Case)
  name.vb: Equals(Char(), ReadOnlySpan(Of Char), Case)
  fullName: Stringier.Text.Equals(System.Char[], System.ReadOnlySpan<System.Char>, Stringier.Case)
  fullName.vb: Stringier.Text.Equals(System.Char(), System.ReadOnlySpan(Of System.Char), Stringier.Case)
  nameWithType: Text.Equals(Char[], ReadOnlySpan<Char>, Case)
  nameWithType.vb: Text.Equals(Char(), ReadOnlySpan(Of Char), Case)
- uid: Stringier.Text.Equals(System.Char[],System.Span{System.Char})
  name: Equals(Char[], Span<Char>)
  href: api/Stringier.Text.html#Stringier_Text_Equals_System_Char___System_Span_System_Char__
  commentId: M:Stringier.Text.Equals(System.Char[],System.Span{System.Char})
  name.vb: Equals(Char(), Span(Of Char))
  fullName: Stringier.Text.Equals(System.Char[], System.Span<System.Char>)
  fullName.vb: Stringier.Text.Equals(System.Char(), System.Span(Of System.Char))
  nameWithType: Text.Equals(Char[], Span<Char>)
  nameWithType.vb: Text.Equals(Char(), Span(Of Char))
- uid: Stringier.Text.Equals(System.Char[],System.Span{System.Char},Stringier.Case)
  name: Equals(Char[], Span<Char>, Case)
  href: api/Stringier.Text.html#Stringier_Text_Equals_System_Char___System_Span_System_Char__Stringier_Case_
  commentId: M:Stringier.Text.Equals(System.Char[],System.Span{System.Char},Stringier.Case)
  name.vb: Equals(Char(), Span(Of Char), Case)
  fullName: Stringier.Text.Equals(System.Char[], System.Span<System.Char>, Stringier.Case)
  fullName.vb: Stringier.Text.Equals(System.Char(), System.Span(Of System.Char), Stringier.Case)
  nameWithType: Text.Equals(Char[], Span<Char>, Case)
  nameWithType.vb: Text.Equals(Char(), Span(Of Char), Case)
- uid: Stringier.Text.Equals(System.Char[],System.String)
  name: Equals(Char[], String)
  href: api/Stringier.Text.html#Stringier_Text_Equals_System_Char___System_String_
  commentId: M:Stringier.Text.Equals(System.Char[],System.String)
  name.vb: Equals(Char(), String)
  fullName: Stringier.Text.Equals(System.Char[], System.String)
  fullName.vb: Stringier.Text.Equals(System.Char(), System.String)
  nameWithType: Text.Equals(Char[], String)
  nameWithType.vb: Text.Equals(Char(), String)
- uid: Stringier.Text.Equals(System.Char[],System.String,Stringier.Case)
  name: Equals(Char[], String, Case)
  href: api/Stringier.Text.html#Stringier_Text_Equals_System_Char___System_String_Stringier_Case_
  commentId: M:Stringier.Text.Equals(System.Char[],System.String,Stringier.Case)
  name.vb: Equals(Char(), String, Case)
  fullName: Stringier.Text.Equals(System.Char[], System.String, Stringier.Case)
  fullName.vb: Stringier.Text.Equals(System.Char(), System.String, Stringier.Case)
  nameWithType: Text.Equals(Char[], String, Case)
  nameWithType.vb: Text.Equals(Char(), String, Case)
- uid: Stringier.Text.Equals(System.Memory{System.Char},Stringier.Rope)
  name: Equals(Memory<Char>, Rope)
  href: api/Stringier.Text.html#Stringier_Text_Equals_System_Memory_System_Char__Stringier_Rope_
  commentId: M:Stringier.Text.Equals(System.Memory{System.Char},Stringier.Rope)
  name.vb: Equals(Memory(Of Char), Rope)
  fullName: Stringier.Text.Equals(System.Memory<System.Char>, Stringier.Rope)
  fullName.vb: Stringier.Text.Equals(System.Memory(Of System.Char), Stringier.Rope)
  nameWithType: Text.Equals(Memory<Char>, Rope)
  nameWithType.vb: Text.Equals(Memory(Of Char), Rope)
- uid: Stringier.Text.Equals(System.Memory{System.Char},Stringier.Rope,Stringier.Case)
  name: Equals(Memory<Char>, Rope, Case)
  href: api/Stringier.Text.html#Stringier_Text_Equals_System_Memory_System_Char__Stringier_Rope_Stringier_Case_
  commentId: M:Stringier.Text.Equals(System.Memory{System.Char},Stringier.Rope,Stringier.Case)
  name.vb: Equals(Memory(Of Char), Rope, Case)
  fullName: Stringier.Text.Equals(System.Memory<System.Char>, Stringier.Rope, Stringier.Case)
  fullName.vb: Stringier.Text.Equals(System.Memory(Of System.Char), Stringier.Rope, Stringier.Case)
  nameWithType: Text.Equals(Memory<Char>, Rope, Case)
  nameWithType.vb: Text.Equals(Memory(Of Char), Rope, Case)
- uid: Stringier.Text.Equals(System.Memory{System.Char},System.Char)
  name: Equals(Memory<Char>, Char)
  href: api/Stringier.Text.html#Stringier_Text_Equals_System_Memory_System_Char__System_Char_
  commentId: M:Stringier.Text.Equals(System.Memory{System.Char},System.Char)
  name.vb: Equals(Memory(Of Char), Char)
  fullName: Stringier.Text.Equals(System.Memory<System.Char>, System.Char)
  fullName.vb: Stringier.Text.Equals(System.Memory(Of System.Char), System.Char)
  nameWithType: Text.Equals(Memory<Char>, Char)
  nameWithType.vb: Text.Equals(Memory(Of Char), Char)
- uid: Stringier.Text.Equals(System.Memory{System.Char},System.Char*,System.Int32)
  name: Equals(Memory<Char>, Char*, Int32)
  href: api/Stringier.Text.html#Stringier_Text_Equals_System_Memory_System_Char__System_Char__System_Int32_
  commentId: M:Stringier.Text.Equals(System.Memory{System.Char},System.Char*,System.Int32)
  name.vb: Equals(Memory(Of Char), Char*, Int32)
  fullName: Stringier.Text.Equals(System.Memory<System.Char>, System.Char*, System.Int32)
  fullName.vb: Stringier.Text.Equals(System.Memory(Of System.Char), System.Char*, System.Int32)
  nameWithType: Text.Equals(Memory<Char>, Char*, Int32)
  nameWithType.vb: Text.Equals(Memory(Of Char), Char*, Int32)
- uid: Stringier.Text.Equals(System.Memory{System.Char},System.Char*,System.Int32,Stringier.Case)
  name: Equals(Memory<Char>, Char*, Int32, Case)
  href: api/Stringier.Text.html#Stringier_Text_Equals_System_Memory_System_Char__System_Char__System_Int32_Stringier_Case_
  commentId: M:Stringier.Text.Equals(System.Memory{System.Char},System.Char*,System.Int32,Stringier.Case)
  name.vb: Equals(Memory(Of Char), Char*, Int32, Case)
  fullName: Stringier.Text.Equals(System.Memory<System.Char>, System.Char*, System.Int32, Stringier.Case)
  fullName.vb: Stringier.Text.Equals(System.Memory(Of System.Char), System.Char*, System.Int32, Stringier.Case)
  nameWithType: Text.Equals(Memory<Char>, Char*, Int32, Case)
  nameWithType.vb: Text.Equals(Memory(Of Char), Char*, Int32, Case)
- uid: Stringier.Text.Equals(System.Memory{System.Char},System.Char,Stringier.Case)
  name: Equals(Memory<Char>, Char, Case)
  href: api/Stringier.Text.html#Stringier_Text_Equals_System_Memory_System_Char__System_Char_Stringier_Case_
  commentId: M:Stringier.Text.Equals(System.Memory{System.Char},System.Char,Stringier.Case)
  name.vb: Equals(Memory(Of Char), Char, Case)
  fullName: Stringier.Text.Equals(System.Memory<System.Char>, System.Char, Stringier.Case)
  fullName.vb: Stringier.Text.Equals(System.Memory(Of System.Char), System.Char, Stringier.Case)
  nameWithType: Text.Equals(Memory<Char>, Char, Case)
  nameWithType.vb: Text.Equals(Memory(Of Char), Char, Case)
- uid: Stringier.Text.Equals(System.Memory{System.Char},System.Char[])
  name: Equals(Memory<Char>, Char[])
  href: api/Stringier.Text.html#Stringier_Text_Equals_System_Memory_System_Char__System_Char___
  commentId: M:Stringier.Text.Equals(System.Memory{System.Char},System.Char[])
  name.vb: Equals(Memory(Of Char), Char())
  fullName: Stringier.Text.Equals(System.Memory<System.Char>, System.Char[])
  fullName.vb: Stringier.Text.Equals(System.Memory(Of System.Char), System.Char())
  nameWithType: Text.Equals(Memory<Char>, Char[])
  nameWithType.vb: Text.Equals(Memory(Of Char), Char())
- uid: Stringier.Text.Equals(System.Memory{System.Char},System.Char[],Stringier.Case)
  name: Equals(Memory<Char>, Char[], Case)
  href: api/Stringier.Text.html#Stringier_Text_Equals_System_Memory_System_Char__System_Char___Stringier_Case_
  commentId: M:Stringier.Text.Equals(System.Memory{System.Char},System.Char[],Stringier.Case)
  name.vb: Equals(Memory(Of Char), Char(), Case)
  fullName: Stringier.Text.Equals(System.Memory<System.Char>, System.Char[], Stringier.Case)
  fullName.vb: Stringier.Text.Equals(System.Memory(Of System.Char), System.Char(), Stringier.Case)
  nameWithType: Text.Equals(Memory<Char>, Char[], Case)
  nameWithType.vb: Text.Equals(Memory(Of Char), Char(), Case)
- uid: Stringier.Text.Equals(System.Memory{System.Char},System.Memory{System.Char})
  name: Equals(Memory<Char>, Memory<Char>)
  href: api/Stringier.Text.html#Stringier_Text_Equals_System_Memory_System_Char__System_Memory_System_Char__
  commentId: M:Stringier.Text.Equals(System.Memory{System.Char},System.Memory{System.Char})
  name.vb: Equals(Memory(Of Char), Memory(Of Char))
  fullName: Stringier.Text.Equals(System.Memory<System.Char>, System.Memory<System.Char>)
  fullName.vb: Stringier.Text.Equals(System.Memory(Of System.Char), System.Memory(Of System.Char))
  nameWithType: Text.Equals(Memory<Char>, Memory<Char>)
  nameWithType.vb: Text.Equals(Memory(Of Char), Memory(Of Char))
- uid: Stringier.Text.Equals(System.Memory{System.Char},System.Memory{System.Char},Stringier.Case)
  name: Equals(Memory<Char>, Memory<Char>, Case)
  href: api/Stringier.Text.html#Stringier_Text_Equals_System_Memory_System_Char__System_Memory_System_Char__Stringier_Case_
  commentId: M:Stringier.Text.Equals(System.Memory{System.Char},System.Memory{System.Char},Stringier.Case)
  name.vb: Equals(Memory(Of Char), Memory(Of Char), Case)
  fullName: Stringier.Text.Equals(System.Memory<System.Char>, System.Memory<System.Char>, Stringier.Case)
  fullName.vb: Stringier.Text.Equals(System.Memory(Of System.Char), System.Memory(Of System.Char), Stringier.Case)
  nameWithType: Text.Equals(Memory<Char>, Memory<Char>, Case)
  nameWithType.vb: Text.Equals(Memory(Of Char), Memory(Of Char), Case)
- uid: Stringier.Text.Equals(System.Memory{System.Char},System.ReadOnlyMemory{System.Char})
  name: Equals(Memory<Char>, ReadOnlyMemory<Char>)
  href: api/Stringier.Text.html#Stringier_Text_Equals_System_Memory_System_Char__System_ReadOnlyMemory_System_Char__
  commentId: M:Stringier.Text.Equals(System.Memory{System.Char},System.ReadOnlyMemory{System.Char})
  name.vb: Equals(Memory(Of Char), ReadOnlyMemory(Of Char))
  fullName: Stringier.Text.Equals(System.Memory<System.Char>, System.ReadOnlyMemory<System.Char>)
  fullName.vb: Stringier.Text.Equals(System.Memory(Of System.Char), System.ReadOnlyMemory(Of System.Char))
  nameWithType: Text.Equals(Memory<Char>, ReadOnlyMemory<Char>)
  nameWithType.vb: Text.Equals(Memory(Of Char), ReadOnlyMemory(Of Char))
- uid: Stringier.Text.Equals(System.Memory{System.Char},System.ReadOnlyMemory{System.Char},Stringier.Case)
  name: Equals(Memory<Char>, ReadOnlyMemory<Char>, Case)
  href: api/Stringier.Text.html#Stringier_Text_Equals_System_Memory_System_Char__System_ReadOnlyMemory_System_Char__Stringier_Case_
  commentId: M:Stringier.Text.Equals(System.Memory{System.Char},System.ReadOnlyMemory{System.Char},Stringier.Case)
  name.vb: Equals(Memory(Of Char), ReadOnlyMemory(Of Char), Case)
  fullName: Stringier.Text.Equals(System.Memory<System.Char>, System.ReadOnlyMemory<System.Char>, Stringier.Case)
  fullName.vb: Stringier.Text.Equals(System.Memory(Of System.Char), System.ReadOnlyMemory(Of System.Char), Stringier.Case)
  nameWithType: Text.Equals(Memory<Char>, ReadOnlyMemory<Char>, Case)
  nameWithType.vb: Text.Equals(Memory(Of Char), ReadOnlyMemory(Of Char), Case)
- uid: Stringier.Text.Equals(System.Memory{System.Char},System.ReadOnlySpan{System.Char})
  name: Equals(Memory<Char>, ReadOnlySpan<Char>)
  href: api/Stringier.Text.html#Stringier_Text_Equals_System_Memory_System_Char__System_ReadOnlySpan_System_Char__
  commentId: M:Stringier.Text.Equals(System.Memory{System.Char},System.ReadOnlySpan{System.Char})
  name.vb: Equals(Memory(Of Char), ReadOnlySpan(Of Char))
  fullName: Stringier.Text.Equals(System.Memory<System.Char>, System.ReadOnlySpan<System.Char>)
  fullName.vb: Stringier.Text.Equals(System.Memory(Of System.Char), System.ReadOnlySpan(Of System.Char))
  nameWithType: Text.Equals(Memory<Char>, ReadOnlySpan<Char>)
  nameWithType.vb: Text.Equals(Memory(Of Char), ReadOnlySpan(Of Char))
- uid: Stringier.Text.Equals(System.Memory{System.Char},System.ReadOnlySpan{System.Char},Stringier.Case)
  name: Equals(Memory<Char>, ReadOnlySpan<Char>, Case)
  href: api/Stringier.Text.html#Stringier_Text_Equals_System_Memory_System_Char__System_ReadOnlySpan_System_Char__Stringier_Case_
  commentId: M:Stringier.Text.Equals(System.Memory{System.Char},System.ReadOnlySpan{System.Char},Stringier.Case)
  name.vb: Equals(Memory(Of Char), ReadOnlySpan(Of Char), Case)
  fullName: Stringier.Text.Equals(System.Memory<System.Char>, System.ReadOnlySpan<System.Char>, Stringier.Case)
  fullName.vb: Stringier.Text.Equals(System.Memory(Of System.Char), System.ReadOnlySpan(Of System.Char), Stringier.Case)
  nameWithType: Text.Equals(Memory<Char>, ReadOnlySpan<Char>, Case)
  nameWithType.vb: Text.Equals(Memory(Of Char), ReadOnlySpan(Of Char), Case)
- uid: Stringier.Text.Equals(System.Memory{System.Char},System.Span{System.Char})
  name: Equals(Memory<Char>, Span<Char>)
  href: api/Stringier.Text.html#Stringier_Text_Equals_System_Memory_System_Char__System_Span_System_Char__
  commentId: M:Stringier.Text.Equals(System.Memory{System.Char},System.Span{System.Char})
  name.vb: Equals(Memory(Of Char), Span(Of Char))
  fullName: Stringier.Text.Equals(System.Memory<System.Char>, System.Span<System.Char>)
  fullName.vb: Stringier.Text.Equals(System.Memory(Of System.Char), System.Span(Of System.Char))
  nameWithType: Text.Equals(Memory<Char>, Span<Char>)
  nameWithType.vb: Text.Equals(Memory(Of Char), Span(Of Char))
- uid: Stringier.Text.Equals(System.Memory{System.Char},System.Span{System.Char},Stringier.Case)
  name: Equals(Memory<Char>, Span<Char>, Case)
  href: api/Stringier.Text.html#Stringier_Text_Equals_System_Memory_System_Char__System_Span_System_Char__Stringier_Case_
  commentId: M:Stringier.Text.Equals(System.Memory{System.Char},System.Span{System.Char},Stringier.Case)
  name.vb: Equals(Memory(Of Char), Span(Of Char), Case)
  fullName: Stringier.Text.Equals(System.Memory<System.Char>, System.Span<System.Char>, Stringier.Case)
  fullName.vb: Stringier.Text.Equals(System.Memory(Of System.Char), System.Span(Of System.Char), Stringier.Case)
  nameWithType: Text.Equals(Memory<Char>, Span<Char>, Case)
  nameWithType.vb: Text.Equals(Memory(Of Char), Span(Of Char), Case)
- uid: Stringier.Text.Equals(System.Memory{System.Char},System.String)
  name: Equals(Memory<Char>, String)
  href: api/Stringier.Text.html#Stringier_Text_Equals_System_Memory_System_Char__System_String_
  commentId: M:Stringier.Text.Equals(System.Memory{System.Char},System.String)
  name.vb: Equals(Memory(Of Char), String)
  fullName: Stringier.Text.Equals(System.Memory<System.Char>, System.String)
  fullName.vb: Stringier.Text.Equals(System.Memory(Of System.Char), System.String)
  nameWithType: Text.Equals(Memory<Char>, String)
  nameWithType.vb: Text.Equals(Memory(Of Char), String)
- uid: Stringier.Text.Equals(System.Memory{System.Char},System.String,Stringier.Case)
  name: Equals(Memory<Char>, String, Case)
  href: api/Stringier.Text.html#Stringier_Text_Equals_System_Memory_System_Char__System_String_Stringier_Case_
  commentId: M:Stringier.Text.Equals(System.Memory{System.Char},System.String,Stringier.Case)
  name.vb: Equals(Memory(Of Char), String, Case)
  fullName: Stringier.Text.Equals(System.Memory<System.Char>, System.String, Stringier.Case)
  fullName.vb: Stringier.Text.Equals(System.Memory(Of System.Char), System.String, Stringier.Case)
  nameWithType: Text.Equals(Memory<Char>, String, Case)
  nameWithType.vb: Text.Equals(Memory(Of Char), String, Case)
- uid: Stringier.Text.Equals(System.ReadOnlyMemory{System.Char},Stringier.Rope)
  name: Equals(ReadOnlyMemory<Char>, Rope)
  href: api/Stringier.Text.html#Stringier_Text_Equals_System_ReadOnlyMemory_System_Char__Stringier_Rope_
  commentId: M:Stringier.Text.Equals(System.ReadOnlyMemory{System.Char},Stringier.Rope)
  name.vb: Equals(ReadOnlyMemory(Of Char), Rope)
  fullName: Stringier.Text.Equals(System.ReadOnlyMemory<System.Char>, Stringier.Rope)
  fullName.vb: Stringier.Text.Equals(System.ReadOnlyMemory(Of System.Char), Stringier.Rope)
  nameWithType: Text.Equals(ReadOnlyMemory<Char>, Rope)
  nameWithType.vb: Text.Equals(ReadOnlyMemory(Of Char), Rope)
- uid: Stringier.Text.Equals(System.ReadOnlyMemory{System.Char},Stringier.Rope,Stringier.Case)
  name: Equals(ReadOnlyMemory<Char>, Rope, Case)
  href: api/Stringier.Text.html#Stringier_Text_Equals_System_ReadOnlyMemory_System_Char__Stringier_Rope_Stringier_Case_
  commentId: M:Stringier.Text.Equals(System.ReadOnlyMemory{System.Char},Stringier.Rope,Stringier.Case)
  name.vb: Equals(ReadOnlyMemory(Of Char), Rope, Case)
  fullName: Stringier.Text.Equals(System.ReadOnlyMemory<System.Char>, Stringier.Rope, Stringier.Case)
  fullName.vb: Stringier.Text.Equals(System.ReadOnlyMemory(Of System.Char), Stringier.Rope, Stringier.Case)
  nameWithType: Text.Equals(ReadOnlyMemory<Char>, Rope, Case)
  nameWithType.vb: Text.Equals(ReadOnlyMemory(Of Char), Rope, Case)
- uid: Stringier.Text.Equals(System.ReadOnlyMemory{System.Char},System.Char)
  name: Equals(ReadOnlyMemory<Char>, Char)
  href: api/Stringier.Text.html#Stringier_Text_Equals_System_ReadOnlyMemory_System_Char__System_Char_
  commentId: M:Stringier.Text.Equals(System.ReadOnlyMemory{System.Char},System.Char)
  name.vb: Equals(ReadOnlyMemory(Of Char), Char)
  fullName: Stringier.Text.Equals(System.ReadOnlyMemory<System.Char>, System.Char)
  fullName.vb: Stringier.Text.Equals(System.ReadOnlyMemory(Of System.Char), System.Char)
  nameWithType: Text.Equals(ReadOnlyMemory<Char>, Char)
  nameWithType.vb: Text.Equals(ReadOnlyMemory(Of Char), Char)
- uid: Stringier.Text.Equals(System.ReadOnlyMemory{System.Char},System.Char*,System.Int32)
  name: Equals(ReadOnlyMemory<Char>, Char*, Int32)
  href: api/Stringier.Text.html#Stringier_Text_Equals_System_ReadOnlyMemory_System_Char__System_Char__System_Int32_
  commentId: M:Stringier.Text.Equals(System.ReadOnlyMemory{System.Char},System.Char*,System.Int32)
  name.vb: Equals(ReadOnlyMemory(Of Char), Char*, Int32)
  fullName: Stringier.Text.Equals(System.ReadOnlyMemory<System.Char>, System.Char*, System.Int32)
  fullName.vb: Stringier.Text.Equals(System.ReadOnlyMemory(Of System.Char), System.Char*, System.Int32)
  nameWithType: Text.Equals(ReadOnlyMemory<Char>, Char*, Int32)
  nameWithType.vb: Text.Equals(ReadOnlyMemory(Of Char), Char*, Int32)
- uid: Stringier.Text.Equals(System.ReadOnlyMemory{System.Char},System.Char*,System.Int32,Stringier.Case)
  name: Equals(ReadOnlyMemory<Char>, Char*, Int32, Case)
  href: api/Stringier.Text.html#Stringier_Text_Equals_System_ReadOnlyMemory_System_Char__System_Char__System_Int32_Stringier_Case_
  commentId: M:Stringier.Text.Equals(System.ReadOnlyMemory{System.Char},System.Char*,System.Int32,Stringier.Case)
  name.vb: Equals(ReadOnlyMemory(Of Char), Char*, Int32, Case)
  fullName: Stringier.Text.Equals(System.ReadOnlyMemory<System.Char>, System.Char*, System.Int32, Stringier.Case)
  fullName.vb: Stringier.Text.Equals(System.ReadOnlyMemory(Of System.Char), System.Char*, System.Int32, Stringier.Case)
  nameWithType: Text.Equals(ReadOnlyMemory<Char>, Char*, Int32, Case)
  nameWithType.vb: Text.Equals(ReadOnlyMemory(Of Char), Char*, Int32, Case)
- uid: Stringier.Text.Equals(System.ReadOnlyMemory{System.Char},System.Char,Stringier.Case)
  name: Equals(ReadOnlyMemory<Char>, Char, Case)
  href: api/Stringier.Text.html#Stringier_Text_Equals_System_ReadOnlyMemory_System_Char__System_Char_Stringier_Case_
  commentId: M:Stringier.Text.Equals(System.ReadOnlyMemory{System.Char},System.Char,Stringier.Case)
  name.vb: Equals(ReadOnlyMemory(Of Char), Char, Case)
  fullName: Stringier.Text.Equals(System.ReadOnlyMemory<System.Char>, System.Char, Stringier.Case)
  fullName.vb: Stringier.Text.Equals(System.ReadOnlyMemory(Of System.Char), System.Char, Stringier.Case)
  nameWithType: Text.Equals(ReadOnlyMemory<Char>, Char, Case)
  nameWithType.vb: Text.Equals(ReadOnlyMemory(Of Char), Char, Case)
- uid: Stringier.Text.Equals(System.ReadOnlyMemory{System.Char},System.Char[])
  name: Equals(ReadOnlyMemory<Char>, Char[])
  href: api/Stringier.Text.html#Stringier_Text_Equals_System_ReadOnlyMemory_System_Char__System_Char___
  commentId: M:Stringier.Text.Equals(System.ReadOnlyMemory{System.Char},System.Char[])
  name.vb: Equals(ReadOnlyMemory(Of Char), Char())
  fullName: Stringier.Text.Equals(System.ReadOnlyMemory<System.Char>, System.Char[])
  fullName.vb: Stringier.Text.Equals(System.ReadOnlyMemory(Of System.Char), System.Char())
  nameWithType: Text.Equals(ReadOnlyMemory<Char>, Char[])
  nameWithType.vb: Text.Equals(ReadOnlyMemory(Of Char), Char())
- uid: Stringier.Text.Equals(System.ReadOnlyMemory{System.Char},System.Char[],Stringier.Case)
  name: Equals(ReadOnlyMemory<Char>, Char[], Case)
  href: api/Stringier.Text.html#Stringier_Text_Equals_System_ReadOnlyMemory_System_Char__System_Char___Stringier_Case_
  commentId: M:Stringier.Text.Equals(System.ReadOnlyMemory{System.Char},System.Char[],Stringier.Case)
  name.vb: Equals(ReadOnlyMemory(Of Char), Char(), Case)
  fullName: Stringier.Text.Equals(System.ReadOnlyMemory<System.Char>, System.Char[], Stringier.Case)
  fullName.vb: Stringier.Text.Equals(System.ReadOnlyMemory(Of System.Char), System.Char(), Stringier.Case)
  nameWithType: Text.Equals(ReadOnlyMemory<Char>, Char[], Case)
  nameWithType.vb: Text.Equals(ReadOnlyMemory(Of Char), Char(), Case)
- uid: Stringier.Text.Equals(System.ReadOnlyMemory{System.Char},System.Memory{System.Char})
  name: Equals(ReadOnlyMemory<Char>, Memory<Char>)
  href: api/Stringier.Text.html#Stringier_Text_Equals_System_ReadOnlyMemory_System_Char__System_Memory_System_Char__
  commentId: M:Stringier.Text.Equals(System.ReadOnlyMemory{System.Char},System.Memory{System.Char})
  name.vb: Equals(ReadOnlyMemory(Of Char), Memory(Of Char))
  fullName: Stringier.Text.Equals(System.ReadOnlyMemory<System.Char>, System.Memory<System.Char>)
  fullName.vb: Stringier.Text.Equals(System.ReadOnlyMemory(Of System.Char), System.Memory(Of System.Char))
  nameWithType: Text.Equals(ReadOnlyMemory<Char>, Memory<Char>)
  nameWithType.vb: Text.Equals(ReadOnlyMemory(Of Char), Memory(Of Char))
- uid: Stringier.Text.Equals(System.ReadOnlyMemory{System.Char},System.Memory{System.Char},Stringier.Case)
  name: Equals(ReadOnlyMemory<Char>, Memory<Char>, Case)
  href: api/Stringier.Text.html#Stringier_Text_Equals_System_ReadOnlyMemory_System_Char__System_Memory_System_Char__Stringier_Case_
  commentId: M:Stringier.Text.Equals(System.ReadOnlyMemory{System.Char},System.Memory{System.Char},Stringier.Case)
  name.vb: Equals(ReadOnlyMemory(Of Char), Memory(Of Char), Case)
  fullName: Stringier.Text.Equals(System.ReadOnlyMemory<System.Char>, System.Memory<System.Char>, Stringier.Case)
  fullName.vb: Stringier.Text.Equals(System.ReadOnlyMemory(Of System.Char), System.Memory(Of System.Char), Stringier.Case)
  nameWithType: Text.Equals(ReadOnlyMemory<Char>, Memory<Char>, Case)
  nameWithType.vb: Text.Equals(ReadOnlyMemory(Of Char), Memory(Of Char), Case)
- uid: Stringier.Text.Equals(System.ReadOnlyMemory{System.Char},System.ReadOnlyMemory{System.Char})
  name: Equals(ReadOnlyMemory<Char>, ReadOnlyMemory<Char>)
  href: api/Stringier.Text.html#Stringier_Text_Equals_System_ReadOnlyMemory_System_Char__System_ReadOnlyMemory_System_Char__
  commentId: M:Stringier.Text.Equals(System.ReadOnlyMemory{System.Char},System.ReadOnlyMemory{System.Char})
  name.vb: Equals(ReadOnlyMemory(Of Char), ReadOnlyMemory(Of Char))
  fullName: Stringier.Text.Equals(System.ReadOnlyMemory<System.Char>, System.ReadOnlyMemory<System.Char>)
  fullName.vb: Stringier.Text.Equals(System.ReadOnlyMemory(Of System.Char), System.ReadOnlyMemory(Of System.Char))
  nameWithType: Text.Equals(ReadOnlyMemory<Char>, ReadOnlyMemory<Char>)
  nameWithType.vb: Text.Equals(ReadOnlyMemory(Of Char), ReadOnlyMemory(Of Char))
- uid: Stringier.Text.Equals(System.ReadOnlyMemory{System.Char},System.ReadOnlyMemory{System.Char},Stringier.Case)
  name: Equals(ReadOnlyMemory<Char>, ReadOnlyMemory<Char>, Case)
  href: api/Stringier.Text.html#Stringier_Text_Equals_System_ReadOnlyMemory_System_Char__System_ReadOnlyMemory_System_Char__Stringier_Case_
  commentId: M:Stringier.Text.Equals(System.ReadOnlyMemory{System.Char},System.ReadOnlyMemory{System.Char},Stringier.Case)
  name.vb: Equals(ReadOnlyMemory(Of Char), ReadOnlyMemory(Of Char), Case)
  fullName: Stringier.Text.Equals(System.ReadOnlyMemory<System.Char>, System.ReadOnlyMemory<System.Char>, Stringier.Case)
  fullName.vb: Stringier.Text.Equals(System.ReadOnlyMemory(Of System.Char), System.ReadOnlyMemory(Of System.Char), Stringier.Case)
  nameWithType: Text.Equals(ReadOnlyMemory<Char>, ReadOnlyMemory<Char>, Case)
  nameWithType.vb: Text.Equals(ReadOnlyMemory(Of Char), ReadOnlyMemory(Of Char), Case)
- uid: Stringier.Text.Equals(System.ReadOnlyMemory{System.Char},System.ReadOnlySpan{System.Char})
  name: Equals(ReadOnlyMemory<Char>, ReadOnlySpan<Char>)
  href: api/Stringier.Text.html#Stringier_Text_Equals_System_ReadOnlyMemory_System_Char__System_ReadOnlySpan_System_Char__
  commentId: M:Stringier.Text.Equals(System.ReadOnlyMemory{System.Char},System.ReadOnlySpan{System.Char})
  name.vb: Equals(ReadOnlyMemory(Of Char), ReadOnlySpan(Of Char))
  fullName: Stringier.Text.Equals(System.ReadOnlyMemory<System.Char>, System.ReadOnlySpan<System.Char>)
  fullName.vb: Stringier.Text.Equals(System.ReadOnlyMemory(Of System.Char), System.ReadOnlySpan(Of System.Char))
  nameWithType: Text.Equals(ReadOnlyMemory<Char>, ReadOnlySpan<Char>)
  nameWithType.vb: Text.Equals(ReadOnlyMemory(Of Char), ReadOnlySpan(Of Char))
- uid: Stringier.Text.Equals(System.ReadOnlyMemory{System.Char},System.ReadOnlySpan{System.Char},Stringier.Case)
  name: Equals(ReadOnlyMemory<Char>, ReadOnlySpan<Char>, Case)
  href: api/Stringier.Text.html#Stringier_Text_Equals_System_ReadOnlyMemory_System_Char__System_ReadOnlySpan_System_Char__Stringier_Case_
  commentId: M:Stringier.Text.Equals(System.ReadOnlyMemory{System.Char},System.ReadOnlySpan{System.Char},Stringier.Case)
  name.vb: Equals(ReadOnlyMemory(Of Char), ReadOnlySpan(Of Char), Case)
  fullName: Stringier.Text.Equals(System.ReadOnlyMemory<System.Char>, System.ReadOnlySpan<System.Char>, Stringier.Case)
  fullName.vb: Stringier.Text.Equals(System.ReadOnlyMemory(Of System.Char), System.ReadOnlySpan(Of System.Char), Stringier.Case)
  nameWithType: Text.Equals(ReadOnlyMemory<Char>, ReadOnlySpan<Char>, Case)
  nameWithType.vb: Text.Equals(ReadOnlyMemory(Of Char), ReadOnlySpan(Of Char), Case)
- uid: Stringier.Text.Equals(System.ReadOnlyMemory{System.Char},System.Span{System.Char})
  name: Equals(ReadOnlyMemory<Char>, Span<Char>)
  href: api/Stringier.Text.html#Stringier_Text_Equals_System_ReadOnlyMemory_System_Char__System_Span_System_Char__
  commentId: M:Stringier.Text.Equals(System.ReadOnlyMemory{System.Char},System.Span{System.Char})
  name.vb: Equals(ReadOnlyMemory(Of Char), Span(Of Char))
  fullName: Stringier.Text.Equals(System.ReadOnlyMemory<System.Char>, System.Span<System.Char>)
  fullName.vb: Stringier.Text.Equals(System.ReadOnlyMemory(Of System.Char), System.Span(Of System.Char))
  nameWithType: Text.Equals(ReadOnlyMemory<Char>, Span<Char>)
  nameWithType.vb: Text.Equals(ReadOnlyMemory(Of Char), Span(Of Char))
- uid: Stringier.Text.Equals(System.ReadOnlyMemory{System.Char},System.Span{System.Char},Stringier.Case)
  name: Equals(ReadOnlyMemory<Char>, Span<Char>, Case)
  href: api/Stringier.Text.html#Stringier_Text_Equals_System_ReadOnlyMemory_System_Char__System_Span_System_Char__Stringier_Case_
  commentId: M:Stringier.Text.Equals(System.ReadOnlyMemory{System.Char},System.Span{System.Char},Stringier.Case)
  name.vb: Equals(ReadOnlyMemory(Of Char), Span(Of Char), Case)
  fullName: Stringier.Text.Equals(System.ReadOnlyMemory<System.Char>, System.Span<System.Char>, Stringier.Case)
  fullName.vb: Stringier.Text.Equals(System.ReadOnlyMemory(Of System.Char), System.Span(Of System.Char), Stringier.Case)
  nameWithType: Text.Equals(ReadOnlyMemory<Char>, Span<Char>, Case)
  nameWithType.vb: Text.Equals(ReadOnlyMemory(Of Char), Span(Of Char), Case)
- uid: Stringier.Text.Equals(System.ReadOnlyMemory{System.Char},System.String)
  name: Equals(ReadOnlyMemory<Char>, String)
  href: api/Stringier.Text.html#Stringier_Text_Equals_System_ReadOnlyMemory_System_Char__System_String_
  commentId: M:Stringier.Text.Equals(System.ReadOnlyMemory{System.Char},System.String)
  name.vb: Equals(ReadOnlyMemory(Of Char), String)
  fullName: Stringier.Text.Equals(System.ReadOnlyMemory<System.Char>, System.String)
  fullName.vb: Stringier.Text.Equals(System.ReadOnlyMemory(Of System.Char), System.String)
  nameWithType: Text.Equals(ReadOnlyMemory<Char>, String)
  nameWithType.vb: Text.Equals(ReadOnlyMemory(Of Char), String)
- uid: Stringier.Text.Equals(System.ReadOnlyMemory{System.Char},System.String,Stringier.Case)
  name: Equals(ReadOnlyMemory<Char>, String, Case)
  href: api/Stringier.Text.html#Stringier_Text_Equals_System_ReadOnlyMemory_System_Char__System_String_Stringier_Case_
  commentId: M:Stringier.Text.Equals(System.ReadOnlyMemory{System.Char},System.String,Stringier.Case)
  name.vb: Equals(ReadOnlyMemory(Of Char), String, Case)
  fullName: Stringier.Text.Equals(System.ReadOnlyMemory<System.Char>, System.String, Stringier.Case)
  fullName.vb: Stringier.Text.Equals(System.ReadOnlyMemory(Of System.Char), System.String, Stringier.Case)
  nameWithType: Text.Equals(ReadOnlyMemory<Char>, String, Case)
  nameWithType.vb: Text.Equals(ReadOnlyMemory(Of Char), String, Case)
- uid: Stringier.Text.Equals(System.ReadOnlySpan{System.Char},Stringier.Rope)
  name: Equals(ReadOnlySpan<Char>, Rope)
  href: api/Stringier.Text.html#Stringier_Text_Equals_System_ReadOnlySpan_System_Char__Stringier_Rope_
  commentId: M:Stringier.Text.Equals(System.ReadOnlySpan{System.Char},Stringier.Rope)
  name.vb: Equals(ReadOnlySpan(Of Char), Rope)
  fullName: Stringier.Text.Equals(System.ReadOnlySpan<System.Char>, Stringier.Rope)
  fullName.vb: Stringier.Text.Equals(System.ReadOnlySpan(Of System.Char), Stringier.Rope)
  nameWithType: Text.Equals(ReadOnlySpan<Char>, Rope)
  nameWithType.vb: Text.Equals(ReadOnlySpan(Of Char), Rope)
- uid: Stringier.Text.Equals(System.ReadOnlySpan{System.Char},Stringier.Rope,Stringier.Case)
  name: Equals(ReadOnlySpan<Char>, Rope, Case)
  href: api/Stringier.Text.html#Stringier_Text_Equals_System_ReadOnlySpan_System_Char__Stringier_Rope_Stringier_Case_
  commentId: M:Stringier.Text.Equals(System.ReadOnlySpan{System.Char},Stringier.Rope,Stringier.Case)
  name.vb: Equals(ReadOnlySpan(Of Char), Rope, Case)
  fullName: Stringier.Text.Equals(System.ReadOnlySpan<System.Char>, Stringier.Rope, Stringier.Case)
  fullName.vb: Stringier.Text.Equals(System.ReadOnlySpan(Of System.Char), Stringier.Rope, Stringier.Case)
  nameWithType: Text.Equals(ReadOnlySpan<Char>, Rope, Case)
  nameWithType.vb: Text.Equals(ReadOnlySpan(Of Char), Rope, Case)
- uid: Stringier.Text.Equals(System.ReadOnlySpan{System.Char},System.Char)
  name: Equals(ReadOnlySpan<Char>, Char)
  href: api/Stringier.Text.html#Stringier_Text_Equals_System_ReadOnlySpan_System_Char__System_Char_
  commentId: M:Stringier.Text.Equals(System.ReadOnlySpan{System.Char},System.Char)
  name.vb: Equals(ReadOnlySpan(Of Char), Char)
  fullName: Stringier.Text.Equals(System.ReadOnlySpan<System.Char>, System.Char)
  fullName.vb: Stringier.Text.Equals(System.ReadOnlySpan(Of System.Char), System.Char)
  nameWithType: Text.Equals(ReadOnlySpan<Char>, Char)
  nameWithType.vb: Text.Equals(ReadOnlySpan(Of Char), Char)
- uid: Stringier.Text.Equals(System.ReadOnlySpan{System.Char},System.Char*,System.Int32)
  name: Equals(ReadOnlySpan<Char>, Char*, Int32)
  href: api/Stringier.Text.html#Stringier_Text_Equals_System_ReadOnlySpan_System_Char__System_Char__System_Int32_
  commentId: M:Stringier.Text.Equals(System.ReadOnlySpan{System.Char},System.Char*,System.Int32)
  name.vb: Equals(ReadOnlySpan(Of Char), Char*, Int32)
  fullName: Stringier.Text.Equals(System.ReadOnlySpan<System.Char>, System.Char*, System.Int32)
  fullName.vb: Stringier.Text.Equals(System.ReadOnlySpan(Of System.Char), System.Char*, System.Int32)
  nameWithType: Text.Equals(ReadOnlySpan<Char>, Char*, Int32)
  nameWithType.vb: Text.Equals(ReadOnlySpan(Of Char), Char*, Int32)
- uid: Stringier.Text.Equals(System.ReadOnlySpan{System.Char},System.Char*,System.Int32,Stringier.Case)
  name: Equals(ReadOnlySpan<Char>, Char*, Int32, Case)
  href: api/Stringier.Text.html#Stringier_Text_Equals_System_ReadOnlySpan_System_Char__System_Char__System_Int32_Stringier_Case_
  commentId: M:Stringier.Text.Equals(System.ReadOnlySpan{System.Char},System.Char*,System.Int32,Stringier.Case)
  name.vb: Equals(ReadOnlySpan(Of Char), Char*, Int32, Case)
  fullName: Stringier.Text.Equals(System.ReadOnlySpan<System.Char>, System.Char*, System.Int32, Stringier.Case)
  fullName.vb: Stringier.Text.Equals(System.ReadOnlySpan(Of System.Char), System.Char*, System.Int32, Stringier.Case)
  nameWithType: Text.Equals(ReadOnlySpan<Char>, Char*, Int32, Case)
  nameWithType.vb: Text.Equals(ReadOnlySpan(Of Char), Char*, Int32, Case)
- uid: Stringier.Text.Equals(System.ReadOnlySpan{System.Char},System.Char,Stringier.Case)
  name: Equals(ReadOnlySpan<Char>, Char, Case)
  href: api/Stringier.Text.html#Stringier_Text_Equals_System_ReadOnlySpan_System_Char__System_Char_Stringier_Case_
  commentId: M:Stringier.Text.Equals(System.ReadOnlySpan{System.Char},System.Char,Stringier.Case)
  name.vb: Equals(ReadOnlySpan(Of Char), Char, Case)
  fullName: Stringier.Text.Equals(System.ReadOnlySpan<System.Char>, System.Char, Stringier.Case)
  fullName.vb: Stringier.Text.Equals(System.ReadOnlySpan(Of System.Char), System.Char, Stringier.Case)
  nameWithType: Text.Equals(ReadOnlySpan<Char>, Char, Case)
  nameWithType.vb: Text.Equals(ReadOnlySpan(Of Char), Char, Case)
- uid: Stringier.Text.Equals(System.ReadOnlySpan{System.Char},System.Char[])
  name: Equals(ReadOnlySpan<Char>, Char[])
  href: api/Stringier.Text.html#Stringier_Text_Equals_System_ReadOnlySpan_System_Char__System_Char___
  commentId: M:Stringier.Text.Equals(System.ReadOnlySpan{System.Char},System.Char[])
  name.vb: Equals(ReadOnlySpan(Of Char), Char())
  fullName: Stringier.Text.Equals(System.ReadOnlySpan<System.Char>, System.Char[])
  fullName.vb: Stringier.Text.Equals(System.ReadOnlySpan(Of System.Char), System.Char())
  nameWithType: Text.Equals(ReadOnlySpan<Char>, Char[])
  nameWithType.vb: Text.Equals(ReadOnlySpan(Of Char), Char())
- uid: Stringier.Text.Equals(System.ReadOnlySpan{System.Char},System.Char[],Stringier.Case)
  name: Equals(ReadOnlySpan<Char>, Char[], Case)
  href: api/Stringier.Text.html#Stringier_Text_Equals_System_ReadOnlySpan_System_Char__System_Char___Stringier_Case_
  commentId: M:Stringier.Text.Equals(System.ReadOnlySpan{System.Char},System.Char[],Stringier.Case)
  name.vb: Equals(ReadOnlySpan(Of Char), Char(), Case)
  fullName: Stringier.Text.Equals(System.ReadOnlySpan<System.Char>, System.Char[], Stringier.Case)
  fullName.vb: Stringier.Text.Equals(System.ReadOnlySpan(Of System.Char), System.Char(), Stringier.Case)
  nameWithType: Text.Equals(ReadOnlySpan<Char>, Char[], Case)
  nameWithType.vb: Text.Equals(ReadOnlySpan(Of Char), Char(), Case)
- uid: Stringier.Text.Equals(System.ReadOnlySpan{System.Char},System.Memory{System.Char})
  name: Equals(ReadOnlySpan<Char>, Memory<Char>)
  href: api/Stringier.Text.html#Stringier_Text_Equals_System_ReadOnlySpan_System_Char__System_Memory_System_Char__
  commentId: M:Stringier.Text.Equals(System.ReadOnlySpan{System.Char},System.Memory{System.Char})
  name.vb: Equals(ReadOnlySpan(Of Char), Memory(Of Char))
  fullName: Stringier.Text.Equals(System.ReadOnlySpan<System.Char>, System.Memory<System.Char>)
  fullName.vb: Stringier.Text.Equals(System.ReadOnlySpan(Of System.Char), System.Memory(Of System.Char))
  nameWithType: Text.Equals(ReadOnlySpan<Char>, Memory<Char>)
  nameWithType.vb: Text.Equals(ReadOnlySpan(Of Char), Memory(Of Char))
- uid: Stringier.Text.Equals(System.ReadOnlySpan{System.Char},System.Memory{System.Char},Stringier.Case)
  name: Equals(ReadOnlySpan<Char>, Memory<Char>, Case)
  href: api/Stringier.Text.html#Stringier_Text_Equals_System_ReadOnlySpan_System_Char__System_Memory_System_Char__Stringier_Case_
  commentId: M:Stringier.Text.Equals(System.ReadOnlySpan{System.Char},System.Memory{System.Char},Stringier.Case)
  name.vb: Equals(ReadOnlySpan(Of Char), Memory(Of Char), Case)
  fullName: Stringier.Text.Equals(System.ReadOnlySpan<System.Char>, System.Memory<System.Char>, Stringier.Case)
  fullName.vb: Stringier.Text.Equals(System.ReadOnlySpan(Of System.Char), System.Memory(Of System.Char), Stringier.Case)
  nameWithType: Text.Equals(ReadOnlySpan<Char>, Memory<Char>, Case)
  nameWithType.vb: Text.Equals(ReadOnlySpan(Of Char), Memory(Of Char), Case)
- uid: Stringier.Text.Equals(System.ReadOnlySpan{System.Char},System.ReadOnlyMemory{System.Char})
  name: Equals(ReadOnlySpan<Char>, ReadOnlyMemory<Char>)
  href: api/Stringier.Text.html#Stringier_Text_Equals_System_ReadOnlySpan_System_Char__System_ReadOnlyMemory_System_Char__
  commentId: M:Stringier.Text.Equals(System.ReadOnlySpan{System.Char},System.ReadOnlyMemory{System.Char})
  name.vb: Equals(ReadOnlySpan(Of Char), ReadOnlyMemory(Of Char))
  fullName: Stringier.Text.Equals(System.ReadOnlySpan<System.Char>, System.ReadOnlyMemory<System.Char>)
  fullName.vb: Stringier.Text.Equals(System.ReadOnlySpan(Of System.Char), System.ReadOnlyMemory(Of System.Char))
  nameWithType: Text.Equals(ReadOnlySpan<Char>, ReadOnlyMemory<Char>)
  nameWithType.vb: Text.Equals(ReadOnlySpan(Of Char), ReadOnlyMemory(Of Char))
- uid: Stringier.Text.Equals(System.ReadOnlySpan{System.Char},System.ReadOnlyMemory{System.Char},Stringier.Case)
  name: Equals(ReadOnlySpan<Char>, ReadOnlyMemory<Char>, Case)
  href: api/Stringier.Text.html#Stringier_Text_Equals_System_ReadOnlySpan_System_Char__System_ReadOnlyMemory_System_Char__Stringier_Case_
  commentId: M:Stringier.Text.Equals(System.ReadOnlySpan{System.Char},System.ReadOnlyMemory{System.Char},Stringier.Case)
  name.vb: Equals(ReadOnlySpan(Of Char), ReadOnlyMemory(Of Char), Case)
  fullName: Stringier.Text.Equals(System.ReadOnlySpan<System.Char>, System.ReadOnlyMemory<System.Char>, Stringier.Case)
  fullName.vb: Stringier.Text.Equals(System.ReadOnlySpan(Of System.Char), System.ReadOnlyMemory(Of System.Char), Stringier.Case)
  nameWithType: Text.Equals(ReadOnlySpan<Char>, ReadOnlyMemory<Char>, Case)
  nameWithType.vb: Text.Equals(ReadOnlySpan(Of Char), ReadOnlyMemory(Of Char), Case)
- uid: Stringier.Text.Equals(System.ReadOnlySpan{System.Char},System.ReadOnlySpan{System.Char})
  name: Equals(ReadOnlySpan<Char>, ReadOnlySpan<Char>)
  href: api/Stringier.Text.html#Stringier_Text_Equals_System_ReadOnlySpan_System_Char__System_ReadOnlySpan_System_Char__
  commentId: M:Stringier.Text.Equals(System.ReadOnlySpan{System.Char},System.ReadOnlySpan{System.Char})
  name.vb: Equals(ReadOnlySpan(Of Char), ReadOnlySpan(Of Char))
  fullName: Stringier.Text.Equals(System.ReadOnlySpan<System.Char>, System.ReadOnlySpan<System.Char>)
  fullName.vb: Stringier.Text.Equals(System.ReadOnlySpan(Of System.Char), System.ReadOnlySpan(Of System.Char))
  nameWithType: Text.Equals(ReadOnlySpan<Char>, ReadOnlySpan<Char>)
  nameWithType.vb: Text.Equals(ReadOnlySpan(Of Char), ReadOnlySpan(Of Char))
- uid: Stringier.Text.Equals(System.ReadOnlySpan{System.Char},System.ReadOnlySpan{System.Char},Stringier.Case)
  name: Equals(ReadOnlySpan<Char>, ReadOnlySpan<Char>, Case)
  href: api/Stringier.Text.html#Stringier_Text_Equals_System_ReadOnlySpan_System_Char__System_ReadOnlySpan_System_Char__Stringier_Case_
  commentId: M:Stringier.Text.Equals(System.ReadOnlySpan{System.Char},System.ReadOnlySpan{System.Char},Stringier.Case)
  name.vb: Equals(ReadOnlySpan(Of Char), ReadOnlySpan(Of Char), Case)
  fullName: Stringier.Text.Equals(System.ReadOnlySpan<System.Char>, System.ReadOnlySpan<System.Char>, Stringier.Case)
  fullName.vb: Stringier.Text.Equals(System.ReadOnlySpan(Of System.Char), System.ReadOnlySpan(Of System.Char), Stringier.Case)
  nameWithType: Text.Equals(ReadOnlySpan<Char>, ReadOnlySpan<Char>, Case)
  nameWithType.vb: Text.Equals(ReadOnlySpan(Of Char), ReadOnlySpan(Of Char), Case)
- uid: Stringier.Text.Equals(System.ReadOnlySpan{System.Char},System.Span{System.Char})
  name: Equals(ReadOnlySpan<Char>, Span<Char>)
  href: api/Stringier.Text.html#Stringier_Text_Equals_System_ReadOnlySpan_System_Char__System_Span_System_Char__
  commentId: M:Stringier.Text.Equals(System.ReadOnlySpan{System.Char},System.Span{System.Char})
  name.vb: Equals(ReadOnlySpan(Of Char), Span(Of Char))
  fullName: Stringier.Text.Equals(System.ReadOnlySpan<System.Char>, System.Span<System.Char>)
  fullName.vb: Stringier.Text.Equals(System.ReadOnlySpan(Of System.Char), System.Span(Of System.Char))
  nameWithType: Text.Equals(ReadOnlySpan<Char>, Span<Char>)
  nameWithType.vb: Text.Equals(ReadOnlySpan(Of Char), Span(Of Char))
- uid: Stringier.Text.Equals(System.ReadOnlySpan{System.Char},System.Span{System.Char},Stringier.Case)
  name: Equals(ReadOnlySpan<Char>, Span<Char>, Case)
  href: api/Stringier.Text.html#Stringier_Text_Equals_System_ReadOnlySpan_System_Char__System_Span_System_Char__Stringier_Case_
  commentId: M:Stringier.Text.Equals(System.ReadOnlySpan{System.Char},System.Span{System.Char},Stringier.Case)
  name.vb: Equals(ReadOnlySpan(Of Char), Span(Of Char), Case)
  fullName: Stringier.Text.Equals(System.ReadOnlySpan<System.Char>, System.Span<System.Char>, Stringier.Case)
  fullName.vb: Stringier.Text.Equals(System.ReadOnlySpan(Of System.Char), System.Span(Of System.Char), Stringier.Case)
  nameWithType: Text.Equals(ReadOnlySpan<Char>, Span<Char>, Case)
  nameWithType.vb: Text.Equals(ReadOnlySpan(Of Char), Span(Of Char), Case)
- uid: Stringier.Text.Equals(System.ReadOnlySpan{System.Char},System.String)
  name: Equals(ReadOnlySpan<Char>, String)
  href: api/Stringier.Text.html#Stringier_Text_Equals_System_ReadOnlySpan_System_Char__System_String_
  commentId: M:Stringier.Text.Equals(System.ReadOnlySpan{System.Char},System.String)
  name.vb: Equals(ReadOnlySpan(Of Char), String)
  fullName: Stringier.Text.Equals(System.ReadOnlySpan<System.Char>, System.String)
  fullName.vb: Stringier.Text.Equals(System.ReadOnlySpan(Of System.Char), System.String)
  nameWithType: Text.Equals(ReadOnlySpan<Char>, String)
  nameWithType.vb: Text.Equals(ReadOnlySpan(Of Char), String)
- uid: Stringier.Text.Equals(System.ReadOnlySpan{System.Char},System.String,Stringier.Case)
  name: Equals(ReadOnlySpan<Char>, String, Case)
  href: api/Stringier.Text.html#Stringier_Text_Equals_System_ReadOnlySpan_System_Char__System_String_Stringier_Case_
  commentId: M:Stringier.Text.Equals(System.ReadOnlySpan{System.Char},System.String,Stringier.Case)
  name.vb: Equals(ReadOnlySpan(Of Char), String, Case)
  fullName: Stringier.Text.Equals(System.ReadOnlySpan<System.Char>, System.String, Stringier.Case)
  fullName.vb: Stringier.Text.Equals(System.ReadOnlySpan(Of System.Char), System.String, Stringier.Case)
  nameWithType: Text.Equals(ReadOnlySpan<Char>, String, Case)
  nameWithType.vb: Text.Equals(ReadOnlySpan(Of Char), String, Case)
- uid: Stringier.Text.Equals(System.Span{System.Char},Stringier.Rope)
  name: Equals(Span<Char>, Rope)
  href: api/Stringier.Text.html#Stringier_Text_Equals_System_Span_System_Char__Stringier_Rope_
  commentId: M:Stringier.Text.Equals(System.Span{System.Char},Stringier.Rope)
  name.vb: Equals(Span(Of Char), Rope)
  fullName: Stringier.Text.Equals(System.Span<System.Char>, Stringier.Rope)
  fullName.vb: Stringier.Text.Equals(System.Span(Of System.Char), Stringier.Rope)
  nameWithType: Text.Equals(Span<Char>, Rope)
  nameWithType.vb: Text.Equals(Span(Of Char), Rope)
- uid: Stringier.Text.Equals(System.Span{System.Char},Stringier.Rope,Stringier.Case)
  name: Equals(Span<Char>, Rope, Case)
  href: api/Stringier.Text.html#Stringier_Text_Equals_System_Span_System_Char__Stringier_Rope_Stringier_Case_
  commentId: M:Stringier.Text.Equals(System.Span{System.Char},Stringier.Rope,Stringier.Case)
  name.vb: Equals(Span(Of Char), Rope, Case)
  fullName: Stringier.Text.Equals(System.Span<System.Char>, Stringier.Rope, Stringier.Case)
  fullName.vb: Stringier.Text.Equals(System.Span(Of System.Char), Stringier.Rope, Stringier.Case)
  nameWithType: Text.Equals(Span<Char>, Rope, Case)
  nameWithType.vb: Text.Equals(Span(Of Char), Rope, Case)
- uid: Stringier.Text.Equals(System.Span{System.Char},System.Char)
  name: Equals(Span<Char>, Char)
  href: api/Stringier.Text.html#Stringier_Text_Equals_System_Span_System_Char__System_Char_
  commentId: M:Stringier.Text.Equals(System.Span{System.Char},System.Char)
  name.vb: Equals(Span(Of Char), Char)
  fullName: Stringier.Text.Equals(System.Span<System.Char>, System.Char)
  fullName.vb: Stringier.Text.Equals(System.Span(Of System.Char), System.Char)
  nameWithType: Text.Equals(Span<Char>, Char)
  nameWithType.vb: Text.Equals(Span(Of Char), Char)
- uid: Stringier.Text.Equals(System.Span{System.Char},System.Char*,System.Int32)
  name: Equals(Span<Char>, Char*, Int32)
  href: api/Stringier.Text.html#Stringier_Text_Equals_System_Span_System_Char__System_Char__System_Int32_
  commentId: M:Stringier.Text.Equals(System.Span{System.Char},System.Char*,System.Int32)
  name.vb: Equals(Span(Of Char), Char*, Int32)
  fullName: Stringier.Text.Equals(System.Span<System.Char>, System.Char*, System.Int32)
  fullName.vb: Stringier.Text.Equals(System.Span(Of System.Char), System.Char*, System.Int32)
  nameWithType: Text.Equals(Span<Char>, Char*, Int32)
  nameWithType.vb: Text.Equals(Span(Of Char), Char*, Int32)
- uid: Stringier.Text.Equals(System.Span{System.Char},System.Char*,System.Int32,Stringier.Case)
  name: Equals(Span<Char>, Char*, Int32, Case)
  href: api/Stringier.Text.html#Stringier_Text_Equals_System_Span_System_Char__System_Char__System_Int32_Stringier_Case_
  commentId: M:Stringier.Text.Equals(System.Span{System.Char},System.Char*,System.Int32,Stringier.Case)
  name.vb: Equals(Span(Of Char), Char*, Int32, Case)
  fullName: Stringier.Text.Equals(System.Span<System.Char>, System.Char*, System.Int32, Stringier.Case)
  fullName.vb: Stringier.Text.Equals(System.Span(Of System.Char), System.Char*, System.Int32, Stringier.Case)
  nameWithType: Text.Equals(Span<Char>, Char*, Int32, Case)
  nameWithType.vb: Text.Equals(Span(Of Char), Char*, Int32, Case)
- uid: Stringier.Text.Equals(System.Span{System.Char},System.Char,Stringier.Case)
  name: Equals(Span<Char>, Char, Case)
  href: api/Stringier.Text.html#Stringier_Text_Equals_System_Span_System_Char__System_Char_Stringier_Case_
  commentId: M:Stringier.Text.Equals(System.Span{System.Char},System.Char,Stringier.Case)
  name.vb: Equals(Span(Of Char), Char, Case)
  fullName: Stringier.Text.Equals(System.Span<System.Char>, System.Char, Stringier.Case)
  fullName.vb: Stringier.Text.Equals(System.Span(Of System.Char), System.Char, Stringier.Case)
  nameWithType: Text.Equals(Span<Char>, Char, Case)
  nameWithType.vb: Text.Equals(Span(Of Char), Char, Case)
- uid: Stringier.Text.Equals(System.Span{System.Char},System.Char[])
  name: Equals(Span<Char>, Char[])
  href: api/Stringier.Text.html#Stringier_Text_Equals_System_Span_System_Char__System_Char___
  commentId: M:Stringier.Text.Equals(System.Span{System.Char},System.Char[])
  name.vb: Equals(Span(Of Char), Char())
  fullName: Stringier.Text.Equals(System.Span<System.Char>, System.Char[])
  fullName.vb: Stringier.Text.Equals(System.Span(Of System.Char), System.Char())
  nameWithType: Text.Equals(Span<Char>, Char[])
  nameWithType.vb: Text.Equals(Span(Of Char), Char())
- uid: Stringier.Text.Equals(System.Span{System.Char},System.Char[],Stringier.Case)
  name: Equals(Span<Char>, Char[], Case)
  href: api/Stringier.Text.html#Stringier_Text_Equals_System_Span_System_Char__System_Char___Stringier_Case_
  commentId: M:Stringier.Text.Equals(System.Span{System.Char},System.Char[],Stringier.Case)
  name.vb: Equals(Span(Of Char), Char(), Case)
  fullName: Stringier.Text.Equals(System.Span<System.Char>, System.Char[], Stringier.Case)
  fullName.vb: Stringier.Text.Equals(System.Span(Of System.Char), System.Char(), Stringier.Case)
  nameWithType: Text.Equals(Span<Char>, Char[], Case)
  nameWithType.vb: Text.Equals(Span(Of Char), Char(), Case)
- uid: Stringier.Text.Equals(System.Span{System.Char},System.Memory{System.Char})
  name: Equals(Span<Char>, Memory<Char>)
  href: api/Stringier.Text.html#Stringier_Text_Equals_System_Span_System_Char__System_Memory_System_Char__
  commentId: M:Stringier.Text.Equals(System.Span{System.Char},System.Memory{System.Char})
  name.vb: Equals(Span(Of Char), Memory(Of Char))
  fullName: Stringier.Text.Equals(System.Span<System.Char>, System.Memory<System.Char>)
  fullName.vb: Stringier.Text.Equals(System.Span(Of System.Char), System.Memory(Of System.Char))
  nameWithType: Text.Equals(Span<Char>, Memory<Char>)
  nameWithType.vb: Text.Equals(Span(Of Char), Memory(Of Char))
- uid: Stringier.Text.Equals(System.Span{System.Char},System.Memory{System.Char},Stringier.Case)
  name: Equals(Span<Char>, Memory<Char>, Case)
  href: api/Stringier.Text.html#Stringier_Text_Equals_System_Span_System_Char__System_Memory_System_Char__Stringier_Case_
  commentId: M:Stringier.Text.Equals(System.Span{System.Char},System.Memory{System.Char},Stringier.Case)
  name.vb: Equals(Span(Of Char), Memory(Of Char), Case)
  fullName: Stringier.Text.Equals(System.Span<System.Char>, System.Memory<System.Char>, Stringier.Case)
  fullName.vb: Stringier.Text.Equals(System.Span(Of System.Char), System.Memory(Of System.Char), Stringier.Case)
  nameWithType: Text.Equals(Span<Char>, Memory<Char>, Case)
  nameWithType.vb: Text.Equals(Span(Of Char), Memory(Of Char), Case)
- uid: Stringier.Text.Equals(System.Span{System.Char},System.ReadOnlyMemory{System.Char})
  name: Equals(Span<Char>, ReadOnlyMemory<Char>)
  href: api/Stringier.Text.html#Stringier_Text_Equals_System_Span_System_Char__System_ReadOnlyMemory_System_Char__
  commentId: M:Stringier.Text.Equals(System.Span{System.Char},System.ReadOnlyMemory{System.Char})
  name.vb: Equals(Span(Of Char), ReadOnlyMemory(Of Char))
  fullName: Stringier.Text.Equals(System.Span<System.Char>, System.ReadOnlyMemory<System.Char>)
  fullName.vb: Stringier.Text.Equals(System.Span(Of System.Char), System.ReadOnlyMemory(Of System.Char))
  nameWithType: Text.Equals(Span<Char>, ReadOnlyMemory<Char>)
  nameWithType.vb: Text.Equals(Span(Of Char), ReadOnlyMemory(Of Char))
- uid: Stringier.Text.Equals(System.Span{System.Char},System.ReadOnlyMemory{System.Char},Stringier.Case)
  name: Equals(Span<Char>, ReadOnlyMemory<Char>, Case)
  href: api/Stringier.Text.html#Stringier_Text_Equals_System_Span_System_Char__System_ReadOnlyMemory_System_Char__Stringier_Case_
  commentId: M:Stringier.Text.Equals(System.Span{System.Char},System.ReadOnlyMemory{System.Char},Stringier.Case)
  name.vb: Equals(Span(Of Char), ReadOnlyMemory(Of Char), Case)
  fullName: Stringier.Text.Equals(System.Span<System.Char>, System.ReadOnlyMemory<System.Char>, Stringier.Case)
  fullName.vb: Stringier.Text.Equals(System.Span(Of System.Char), System.ReadOnlyMemory(Of System.Char), Stringier.Case)
  nameWithType: Text.Equals(Span<Char>, ReadOnlyMemory<Char>, Case)
  nameWithType.vb: Text.Equals(Span(Of Char), ReadOnlyMemory(Of Char), Case)
- uid: Stringier.Text.Equals(System.Span{System.Char},System.ReadOnlySpan{System.Char})
  name: Equals(Span<Char>, ReadOnlySpan<Char>)
  href: api/Stringier.Text.html#Stringier_Text_Equals_System_Span_System_Char__System_ReadOnlySpan_System_Char__
  commentId: M:Stringier.Text.Equals(System.Span{System.Char},System.ReadOnlySpan{System.Char})
  name.vb: Equals(Span(Of Char), ReadOnlySpan(Of Char))
  fullName: Stringier.Text.Equals(System.Span<System.Char>, System.ReadOnlySpan<System.Char>)
  fullName.vb: Stringier.Text.Equals(System.Span(Of System.Char), System.ReadOnlySpan(Of System.Char))
  nameWithType: Text.Equals(Span<Char>, ReadOnlySpan<Char>)
  nameWithType.vb: Text.Equals(Span(Of Char), ReadOnlySpan(Of Char))
- uid: Stringier.Text.Equals(System.Span{System.Char},System.ReadOnlySpan{System.Char},Stringier.Case)
  name: Equals(Span<Char>, ReadOnlySpan<Char>, Case)
  href: api/Stringier.Text.html#Stringier_Text_Equals_System_Span_System_Char__System_ReadOnlySpan_System_Char__Stringier_Case_
  commentId: M:Stringier.Text.Equals(System.Span{System.Char},System.ReadOnlySpan{System.Char},Stringier.Case)
  name.vb: Equals(Span(Of Char), ReadOnlySpan(Of Char), Case)
  fullName: Stringier.Text.Equals(System.Span<System.Char>, System.ReadOnlySpan<System.Char>, Stringier.Case)
  fullName.vb: Stringier.Text.Equals(System.Span(Of System.Char), System.ReadOnlySpan(Of System.Char), Stringier.Case)
  nameWithType: Text.Equals(Span<Char>, ReadOnlySpan<Char>, Case)
  nameWithType.vb: Text.Equals(Span(Of Char), ReadOnlySpan(Of Char), Case)
- uid: Stringier.Text.Equals(System.Span{System.Char},System.Span{System.Char})
  name: Equals(Span<Char>, Span<Char>)
  href: api/Stringier.Text.html#Stringier_Text_Equals_System_Span_System_Char__System_Span_System_Char__
  commentId: M:Stringier.Text.Equals(System.Span{System.Char},System.Span{System.Char})
  name.vb: Equals(Span(Of Char), Span(Of Char))
  fullName: Stringier.Text.Equals(System.Span<System.Char>, System.Span<System.Char>)
  fullName.vb: Stringier.Text.Equals(System.Span(Of System.Char), System.Span(Of System.Char))
  nameWithType: Text.Equals(Span<Char>, Span<Char>)
  nameWithType.vb: Text.Equals(Span(Of Char), Span(Of Char))
- uid: Stringier.Text.Equals(System.Span{System.Char},System.Span{System.Char},Stringier.Case)
  name: Equals(Span<Char>, Span<Char>, Case)
  href: api/Stringier.Text.html#Stringier_Text_Equals_System_Span_System_Char__System_Span_System_Char__Stringier_Case_
  commentId: M:Stringier.Text.Equals(System.Span{System.Char},System.Span{System.Char},Stringier.Case)
  name.vb: Equals(Span(Of Char), Span(Of Char), Case)
  fullName: Stringier.Text.Equals(System.Span<System.Char>, System.Span<System.Char>, Stringier.Case)
  fullName.vb: Stringier.Text.Equals(System.Span(Of System.Char), System.Span(Of System.Char), Stringier.Case)
  nameWithType: Text.Equals(Span<Char>, Span<Char>, Case)
  nameWithType.vb: Text.Equals(Span(Of Char), Span(Of Char), Case)
- uid: Stringier.Text.Equals(System.Span{System.Char},System.String)
  name: Equals(Span<Char>, String)
  href: api/Stringier.Text.html#Stringier_Text_Equals_System_Span_System_Char__System_String_
  commentId: M:Stringier.Text.Equals(System.Span{System.Char},System.String)
  name.vb: Equals(Span(Of Char), String)
  fullName: Stringier.Text.Equals(System.Span<System.Char>, System.String)
  fullName.vb: Stringier.Text.Equals(System.Span(Of System.Char), System.String)
  nameWithType: Text.Equals(Span<Char>, String)
  nameWithType.vb: Text.Equals(Span(Of Char), String)
- uid: Stringier.Text.Equals(System.Span{System.Char},System.String,Stringier.Case)
  name: Equals(Span<Char>, String, Case)
  href: api/Stringier.Text.html#Stringier_Text_Equals_System_Span_System_Char__System_String_Stringier_Case_
  commentId: M:Stringier.Text.Equals(System.Span{System.Char},System.String,Stringier.Case)
  name.vb: Equals(Span(Of Char), String, Case)
  fullName: Stringier.Text.Equals(System.Span<System.Char>, System.String, Stringier.Case)
  fullName.vb: Stringier.Text.Equals(System.Span(Of System.Char), System.String, Stringier.Case)
  nameWithType: Text.Equals(Span<Char>, String, Case)
  nameWithType.vb: Text.Equals(Span(Of Char), String, Case)
- uid: Stringier.Text.Equals(System.String,Stringier.Rope)
  name: Equals(String, Rope)
  href: api/Stringier.Text.html#Stringier_Text_Equals_System_String_Stringier_Rope_
  commentId: M:Stringier.Text.Equals(System.String,Stringier.Rope)
  fullName: Stringier.Text.Equals(System.String, Stringier.Rope)
  nameWithType: Text.Equals(String, Rope)
- uid: Stringier.Text.Equals(System.String,Stringier.Rope,Stringier.Case)
  name: Equals(String, Rope, Case)
  href: api/Stringier.Text.html#Stringier_Text_Equals_System_String_Stringier_Rope_Stringier_Case_
  commentId: M:Stringier.Text.Equals(System.String,Stringier.Rope,Stringier.Case)
  fullName: Stringier.Text.Equals(System.String, Stringier.Rope, Stringier.Case)
  nameWithType: Text.Equals(String, Rope, Case)
- uid: Stringier.Text.Equals(System.String,System.Char)
  name: Equals(String, Char)
  href: api/Stringier.Text.html#Stringier_Text_Equals_System_String_System_Char_
  commentId: M:Stringier.Text.Equals(System.String,System.Char)
  fullName: Stringier.Text.Equals(System.String, System.Char)
  nameWithType: Text.Equals(String, Char)
- uid: Stringier.Text.Equals(System.String,System.Char*,System.Int32)
  name: Equals(String, Char*, Int32)
  href: api/Stringier.Text.html#Stringier_Text_Equals_System_String_System_Char__System_Int32_
  commentId: M:Stringier.Text.Equals(System.String,System.Char*,System.Int32)
  fullName: Stringier.Text.Equals(System.String, System.Char*, System.Int32)
  nameWithType: Text.Equals(String, Char*, Int32)
- uid: Stringier.Text.Equals(System.String,System.Char*,System.Int32,Stringier.Case)
  name: Equals(String, Char*, Int32, Case)
  href: api/Stringier.Text.html#Stringier_Text_Equals_System_String_System_Char__System_Int32_Stringier_Case_
  commentId: M:Stringier.Text.Equals(System.String,System.Char*,System.Int32,Stringier.Case)
  fullName: Stringier.Text.Equals(System.String, System.Char*, System.Int32, Stringier.Case)
  nameWithType: Text.Equals(String, Char*, Int32, Case)
- uid: Stringier.Text.Equals(System.String,System.Char,Stringier.Case)
  name: Equals(String, Char, Case)
  href: api/Stringier.Text.html#Stringier_Text_Equals_System_String_System_Char_Stringier_Case_
  commentId: M:Stringier.Text.Equals(System.String,System.Char,Stringier.Case)
  fullName: Stringier.Text.Equals(System.String, System.Char, Stringier.Case)
  nameWithType: Text.Equals(String, Char, Case)
- uid: Stringier.Text.Equals(System.String,System.Char[])
  name: Equals(String, Char[])
  href: api/Stringier.Text.html#Stringier_Text_Equals_System_String_System_Char___
  commentId: M:Stringier.Text.Equals(System.String,System.Char[])
  name.vb: Equals(String, Char())
  fullName: Stringier.Text.Equals(System.String, System.Char[])
  fullName.vb: Stringier.Text.Equals(System.String, System.Char())
  nameWithType: Text.Equals(String, Char[])
  nameWithType.vb: Text.Equals(String, Char())
- uid: Stringier.Text.Equals(System.String,System.Char[],Stringier.Case)
  name: Equals(String, Char[], Case)
  href: api/Stringier.Text.html#Stringier_Text_Equals_System_String_System_Char___Stringier_Case_
  commentId: M:Stringier.Text.Equals(System.String,System.Char[],Stringier.Case)
  name.vb: Equals(String, Char(), Case)
  fullName: Stringier.Text.Equals(System.String, System.Char[], Stringier.Case)
  fullName.vb: Stringier.Text.Equals(System.String, System.Char(), Stringier.Case)
  nameWithType: Text.Equals(String, Char[], Case)
  nameWithType.vb: Text.Equals(String, Char(), Case)
- uid: Stringier.Text.Equals(System.String,System.Memory{System.Char})
  name: Equals(String, Memory<Char>)
  href: api/Stringier.Text.html#Stringier_Text_Equals_System_String_System_Memory_System_Char__
  commentId: M:Stringier.Text.Equals(System.String,System.Memory{System.Char})
  name.vb: Equals(String, Memory(Of Char))
  fullName: Stringier.Text.Equals(System.String, System.Memory<System.Char>)
  fullName.vb: Stringier.Text.Equals(System.String, System.Memory(Of System.Char))
  nameWithType: Text.Equals(String, Memory<Char>)
  nameWithType.vb: Text.Equals(String, Memory(Of Char))
- uid: Stringier.Text.Equals(System.String,System.Memory{System.Char},Stringier.Case)
  name: Equals(String, Memory<Char>, Case)
  href: api/Stringier.Text.html#Stringier_Text_Equals_System_String_System_Memory_System_Char__Stringier_Case_
  commentId: M:Stringier.Text.Equals(System.String,System.Memory{System.Char},Stringier.Case)
  name.vb: Equals(String, Memory(Of Char), Case)
  fullName: Stringier.Text.Equals(System.String, System.Memory<System.Char>, Stringier.Case)
  fullName.vb: Stringier.Text.Equals(System.String, System.Memory(Of System.Char), Stringier.Case)
  nameWithType: Text.Equals(String, Memory<Char>, Case)
  nameWithType.vb: Text.Equals(String, Memory(Of Char), Case)
- uid: Stringier.Text.Equals(System.String,System.ReadOnlyMemory{System.Char})
  name: Equals(String, ReadOnlyMemory<Char>)
  href: api/Stringier.Text.html#Stringier_Text_Equals_System_String_System_ReadOnlyMemory_System_Char__
  commentId: M:Stringier.Text.Equals(System.String,System.ReadOnlyMemory{System.Char})
  name.vb: Equals(String, ReadOnlyMemory(Of Char))
  fullName: Stringier.Text.Equals(System.String, System.ReadOnlyMemory<System.Char>)
  fullName.vb: Stringier.Text.Equals(System.String, System.ReadOnlyMemory(Of System.Char))
  nameWithType: Text.Equals(String, ReadOnlyMemory<Char>)
  nameWithType.vb: Text.Equals(String, ReadOnlyMemory(Of Char))
- uid: Stringier.Text.Equals(System.String,System.ReadOnlyMemory{System.Char},Stringier.Case)
  name: Equals(String, ReadOnlyMemory<Char>, Case)
  href: api/Stringier.Text.html#Stringier_Text_Equals_System_String_System_ReadOnlyMemory_System_Char__Stringier_Case_
  commentId: M:Stringier.Text.Equals(System.String,System.ReadOnlyMemory{System.Char},Stringier.Case)
  name.vb: Equals(String, ReadOnlyMemory(Of Char), Case)
  fullName: Stringier.Text.Equals(System.String, System.ReadOnlyMemory<System.Char>, Stringier.Case)
  fullName.vb: Stringier.Text.Equals(System.String, System.ReadOnlyMemory(Of System.Char), Stringier.Case)
  nameWithType: Text.Equals(String, ReadOnlyMemory<Char>, Case)
  nameWithType.vb: Text.Equals(String, ReadOnlyMemory(Of Char), Case)
- uid: Stringier.Text.Equals(System.String,System.ReadOnlySpan{System.Char})
  name: Equals(String, ReadOnlySpan<Char>)
  href: api/Stringier.Text.html#Stringier_Text_Equals_System_String_System_ReadOnlySpan_System_Char__
  commentId: M:Stringier.Text.Equals(System.String,System.ReadOnlySpan{System.Char})
  name.vb: Equals(String, ReadOnlySpan(Of Char))
  fullName: Stringier.Text.Equals(System.String, System.ReadOnlySpan<System.Char>)
  fullName.vb: Stringier.Text.Equals(System.String, System.ReadOnlySpan(Of System.Char))
  nameWithType: Text.Equals(String, ReadOnlySpan<Char>)
  nameWithType.vb: Text.Equals(String, ReadOnlySpan(Of Char))
- uid: Stringier.Text.Equals(System.String,System.ReadOnlySpan{System.Char},Stringier.Case)
  name: Equals(String, ReadOnlySpan<Char>, Case)
  href: api/Stringier.Text.html#Stringier_Text_Equals_System_String_System_ReadOnlySpan_System_Char__Stringier_Case_
  commentId: M:Stringier.Text.Equals(System.String,System.ReadOnlySpan{System.Char},Stringier.Case)
  name.vb: Equals(String, ReadOnlySpan(Of Char), Case)
  fullName: Stringier.Text.Equals(System.String, System.ReadOnlySpan<System.Char>, Stringier.Case)
  fullName.vb: Stringier.Text.Equals(System.String, System.ReadOnlySpan(Of System.Char), Stringier.Case)
  nameWithType: Text.Equals(String, ReadOnlySpan<Char>, Case)
  nameWithType.vb: Text.Equals(String, ReadOnlySpan(Of Char), Case)
- uid: Stringier.Text.Equals(System.String,System.Span{System.Char})
  name: Equals(String, Span<Char>)
  href: api/Stringier.Text.html#Stringier_Text_Equals_System_String_System_Span_System_Char__
  commentId: M:Stringier.Text.Equals(System.String,System.Span{System.Char})
  name.vb: Equals(String, Span(Of Char))
  fullName: Stringier.Text.Equals(System.String, System.Span<System.Char>)
  fullName.vb: Stringier.Text.Equals(System.String, System.Span(Of System.Char))
  nameWithType: Text.Equals(String, Span<Char>)
  nameWithType.vb: Text.Equals(String, Span(Of Char))
- uid: Stringier.Text.Equals(System.String,System.Span{System.Char},Stringier.Case)
  name: Equals(String, Span<Char>, Case)
  href: api/Stringier.Text.html#Stringier_Text_Equals_System_String_System_Span_System_Char__Stringier_Case_
  commentId: M:Stringier.Text.Equals(System.String,System.Span{System.Char},Stringier.Case)
  name.vb: Equals(String, Span(Of Char), Case)
  fullName: Stringier.Text.Equals(System.String, System.Span<System.Char>, Stringier.Case)
  fullName.vb: Stringier.Text.Equals(System.String, System.Span(Of System.Char), Stringier.Case)
  nameWithType: Text.Equals(String, Span<Char>, Case)
  nameWithType.vb: Text.Equals(String, Span(Of Char), Case)
- uid: Stringier.Text.Equals(System.String,System.String)
  name: Equals(String, String)
  href: api/Stringier.Text.html#Stringier_Text_Equals_System_String_System_String_
  commentId: M:Stringier.Text.Equals(System.String,System.String)
  fullName: Stringier.Text.Equals(System.String, System.String)
  nameWithType: Text.Equals(String, String)
- uid: Stringier.Text.Equals(System.String,System.String,Stringier.Case)
  name: Equals(String, String, Case)
  href: api/Stringier.Text.html#Stringier_Text_Equals_System_String_System_String_Stringier_Case_
  commentId: M:Stringier.Text.Equals(System.String,System.String,Stringier.Case)
  fullName: Stringier.Text.Equals(System.String, System.String, Stringier.Case)
  nameWithType: Text.Equals(String, String, Case)
- uid: Stringier.Text.Equals*
  name: Equals
  href: api/Stringier.Text.html#Stringier_Text_Equals_
  commentId: Overload:Stringier.Text.Equals
  isSpec: "True"
  fullName: Stringier.Text.Equals
  nameWithType: Text.Equals
- uid: Stringier.UTF16
  name: UTF16
  href: api/Stringier.UTF16.html
  commentId: T:Stringier.UTF16
  fullName: Stringier.UTF16
  nameWithType: UTF16
- uid: Stringier.UTF16.BE
  name: UTF16.BE
  href: api/Stringier.UTF16.BE.html
  commentId: T:Stringier.UTF16.BE
  fullName: Stringier.UTF16.BE
  nameWithType: UTF16.BE
- uid: Stringier.UTF16.BE.BOM
  name: BOM
  href: api/Stringier.UTF16.BE.html#Stringier_UTF16_BE_BOM
  commentId: P:Stringier.UTF16.BE.BOM
  fullName: Stringier.UTF16.BE.BOM
  nameWithType: UTF16.BE.BOM
- uid: Stringier.UTF16.BE.BOM*
  name: BOM
  href: api/Stringier.UTF16.BE.html#Stringier_UTF16_BE_BOM_
  commentId: Overload:Stringier.UTF16.BE.BOM
  isSpec: "True"
  fullName: Stringier.UTF16.BE.BOM
  nameWithType: UTF16.BE.BOM
- uid: Stringier.UTF16.IsFirstUnit(System.Char)
  name: IsFirstUnit(Char)
  href: api/Stringier.UTF16.html#Stringier_UTF16_IsFirstUnit_System_Char_
  commentId: M:Stringier.UTF16.IsFirstUnit(System.Char)
  fullName: Stringier.UTF16.IsFirstUnit(System.Char)
  nameWithType: UTF16.IsFirstUnit(Char)
- uid: Stringier.UTF16.IsFirstUnit(System.UInt16)
  name: IsFirstUnit(UInt16)
  href: api/Stringier.UTF16.html#Stringier_UTF16_IsFirstUnit_System_UInt16_
  commentId: M:Stringier.UTF16.IsFirstUnit(System.UInt16)
  fullName: Stringier.UTF16.IsFirstUnit(System.UInt16)
  nameWithType: UTF16.IsFirstUnit(UInt16)
- uid: Stringier.UTF16.IsFirstUnit*
  name: IsFirstUnit
  href: api/Stringier.UTF16.html#Stringier_UTF16_IsFirstUnit_
  commentId: Overload:Stringier.UTF16.IsFirstUnit
  isSpec: "True"
  fullName: Stringier.UTF16.IsFirstUnit
  nameWithType: UTF16.IsFirstUnit
- uid: Stringier.UTF16.IsHighSurrogate(System.Char)
  name: IsHighSurrogate(Char)
  href: api/Stringier.UTF16.html#Stringier_UTF16_IsHighSurrogate_System_Char_
  commentId: M:Stringier.UTF16.IsHighSurrogate(System.Char)
  fullName: Stringier.UTF16.IsHighSurrogate(System.Char)
  nameWithType: UTF16.IsHighSurrogate(Char)
- uid: Stringier.UTF16.IsHighSurrogate(System.UInt32)
  name: IsHighSurrogate(UInt32)
  href: api/Stringier.UTF16.html#Stringier_UTF16_IsHighSurrogate_System_UInt32_
  commentId: M:Stringier.UTF16.IsHighSurrogate(System.UInt32)
  fullName: Stringier.UTF16.IsHighSurrogate(System.UInt32)
  nameWithType: UTF16.IsHighSurrogate(UInt32)
- uid: Stringier.UTF16.IsHighSurrogate*
  name: IsHighSurrogate
  href: api/Stringier.UTF16.html#Stringier_UTF16_IsHighSurrogate_
  commentId: Overload:Stringier.UTF16.IsHighSurrogate
  isSpec: "True"
  fullName: Stringier.UTF16.IsHighSurrogate
  nameWithType: UTF16.IsHighSurrogate
- uid: Stringier.UTF16.IsLowSurrogate(System.Char)
  name: IsLowSurrogate(Char)
  href: api/Stringier.UTF16.html#Stringier_UTF16_IsLowSurrogate_System_Char_
  commentId: M:Stringier.UTF16.IsLowSurrogate(System.Char)
  fullName: Stringier.UTF16.IsLowSurrogate(System.Char)
  nameWithType: UTF16.IsLowSurrogate(Char)
- uid: Stringier.UTF16.IsLowSurrogate(System.UInt32)
  name: IsLowSurrogate(UInt32)
  href: api/Stringier.UTF16.html#Stringier_UTF16_IsLowSurrogate_System_UInt32_
  commentId: M:Stringier.UTF16.IsLowSurrogate(System.UInt32)
  fullName: Stringier.UTF16.IsLowSurrogate(System.UInt32)
  nameWithType: UTF16.IsLowSurrogate(UInt32)
- uid: Stringier.UTF16.IsLowSurrogate*
  name: IsLowSurrogate
  href: api/Stringier.UTF16.html#Stringier_UTF16_IsLowSurrogate_
  commentId: Overload:Stringier.UTF16.IsLowSurrogate
  isSpec: "True"
  fullName: Stringier.UTF16.IsLowSurrogate
  nameWithType: UTF16.IsLowSurrogate
- uid: Stringier.UTF16.IsSurrogate(System.Char)
  name: IsSurrogate(Char)
  href: api/Stringier.UTF16.html#Stringier_UTF16_IsSurrogate_System_Char_
  commentId: M:Stringier.UTF16.IsSurrogate(System.Char)
  fullName: Stringier.UTF16.IsSurrogate(System.Char)
  nameWithType: UTF16.IsSurrogate(Char)
- uid: Stringier.UTF16.IsSurrogate(System.UInt32)
  name: IsSurrogate(UInt32)
  href: api/Stringier.UTF16.html#Stringier_UTF16_IsSurrogate_System_UInt32_
  commentId: M:Stringier.UTF16.IsSurrogate(System.UInt32)
  fullName: Stringier.UTF16.IsSurrogate(System.UInt32)
  nameWithType: UTF16.IsSurrogate(UInt32)
- uid: Stringier.UTF16.IsSurrogate*
  name: IsSurrogate
  href: api/Stringier.UTF16.html#Stringier_UTF16_IsSurrogate_
  commentId: Overload:Stringier.UTF16.IsSurrogate
  isSpec: "True"
  fullName: Stringier.UTF16.IsSurrogate
  nameWithType: UTF16.IsSurrogate
- uid: Stringier.UTF16.LE
  name: UTF16.LE
  href: api/Stringier.UTF16.LE.html
  commentId: T:Stringier.UTF16.LE
  fullName: Stringier.UTF16.LE
  nameWithType: UTF16.LE
- uid: Stringier.UTF16.LE.BOM
  name: BOM
  href: api/Stringier.UTF16.LE.html#Stringier_UTF16_LE_BOM
  commentId: P:Stringier.UTF16.LE.BOM
  fullName: Stringier.UTF16.LE.BOM
  nameWithType: UTF16.LE.BOM
- uid: Stringier.UTF16.LE.BOM*
  name: BOM
  href: api/Stringier.UTF16.LE.html#Stringier_UTF16_LE_BOM_
  commentId: Overload:Stringier.UTF16.LE.BOM
  isSpec: "True"
  fullName: Stringier.UTF16.LE.BOM
  nameWithType: UTF16.LE.BOM
- uid: Stringier.UTF16.NextUnitRange(System.Char,System.Char@,System.Char@)
  name: NextUnitRange(Char, out Char, out Char)
  href: api/Stringier.UTF16.html#Stringier_UTF16_NextUnitRange_System_Char_System_Char__System_Char__
  commentId: M:Stringier.UTF16.NextUnitRange(System.Char,System.Char@,System.Char@)
  name.vb: NextUnitRange(Char, ByRef Char, ByRef Char)
  fullName: Stringier.UTF16.NextUnitRange(System.Char, out System.Char, out System.Char)
  fullName.vb: Stringier.UTF16.NextUnitRange(System.Char, ByRef System.Char, ByRef System.Char)
  nameWithType: UTF16.NextUnitRange(Char, out Char, out Char)
  nameWithType.vb: UTF16.NextUnitRange(Char, ByRef Char, ByRef Char)
- uid: Stringier.UTF16.NextUnitRange(System.UInt16,System.UInt16@,System.UInt16@)
  name: NextUnitRange(UInt16, out UInt16, out UInt16)
  href: api/Stringier.UTF16.html#Stringier_UTF16_NextUnitRange_System_UInt16_System_UInt16__System_UInt16__
  commentId: M:Stringier.UTF16.NextUnitRange(System.UInt16,System.UInt16@,System.UInt16@)
  name.vb: NextUnitRange(UInt16, ByRef UInt16, ByRef UInt16)
  fullName: Stringier.UTF16.NextUnitRange(System.UInt16, out System.UInt16, out System.UInt16)
  fullName.vb: Stringier.UTF16.NextUnitRange(System.UInt16, ByRef System.UInt16, ByRef System.UInt16)
  nameWithType: UTF16.NextUnitRange(UInt16, out UInt16, out UInt16)
  nameWithType.vb: UTF16.NextUnitRange(UInt16, ByRef UInt16, ByRef UInt16)
- uid: Stringier.UTF16.NextUnitRange*
  name: NextUnitRange
  href: api/Stringier.UTF16.html#Stringier_UTF16_NextUnitRange_
  commentId: Overload:Stringier.UTF16.NextUnitRange
  isSpec: "True"
  fullName: Stringier.UTF16.NextUnitRange
  nameWithType: UTF16.NextUnitRange
- uid: Stringier.UTF16.SequenceLength(System.Char)
  name: SequenceLength(Char)
  href: api/Stringier.UTF16.html#Stringier_UTF16_SequenceLength_System_Char_
  commentId: M:Stringier.UTF16.SequenceLength(System.Char)
  fullName: Stringier.UTF16.SequenceLength(System.Char)
  nameWithType: UTF16.SequenceLength(Char)
- uid: Stringier.UTF16.SequenceLength(System.UInt16)
  name: SequenceLength(UInt16)
  href: api/Stringier.UTF16.html#Stringier_UTF16_SequenceLength_System_UInt16_
  commentId: M:Stringier.UTF16.SequenceLength(System.UInt16)
  fullName: Stringier.UTF16.SequenceLength(System.UInt16)
  nameWithType: UTF16.SequenceLength(UInt16)
- uid: Stringier.UTF16.SequenceLength*
  name: SequenceLength
  href: api/Stringier.UTF16.html#Stringier_UTF16_SequenceLength_
  commentId: Overload:Stringier.UTF16.SequenceLength
  isSpec: "True"
  fullName: Stringier.UTF16.SequenceLength
  nameWithType: UTF16.SequenceLength
- uid: Stringier.UTF32
  name: UTF32
  href: api/Stringier.UTF32.html
  commentId: T:Stringier.UTF32
  fullName: Stringier.UTF32
  nameWithType: UTF32
- uid: Stringier.UTF32.BE
  name: UTF32.BE
  href: api/Stringier.UTF32.BE.html
  commentId: T:Stringier.UTF32.BE
  fullName: Stringier.UTF32.BE
  nameWithType: UTF32.BE
- uid: Stringier.UTF32.BE.BOM
  name: BOM
  href: api/Stringier.UTF32.BE.html#Stringier_UTF32_BE_BOM
  commentId: P:Stringier.UTF32.BE.BOM
  fullName: Stringier.UTF32.BE.BOM
  nameWithType: UTF32.BE.BOM
- uid: Stringier.UTF32.BE.BOM*
  name: BOM
  href: api/Stringier.UTF32.BE.html#Stringier_UTF32_BE_BOM_
  commentId: Overload:Stringier.UTF32.BE.BOM
  isSpec: "True"
  fullName: Stringier.UTF32.BE.BOM
  nameWithType: UTF32.BE.BOM
- uid: Stringier.UTF32.LE
  name: UTF32.LE
  href: api/Stringier.UTF32.LE.html
  commentId: T:Stringier.UTF32.LE
  fullName: Stringier.UTF32.LE
  nameWithType: UTF32.LE
- uid: Stringier.UTF32.LE.BOM
  name: BOM
  href: api/Stringier.UTF32.LE.html#Stringier_UTF32_LE_BOM
  commentId: P:Stringier.UTF32.LE.BOM
  fullName: Stringier.UTF32.LE.BOM
  nameWithType: UTF32.LE.BOM
- uid: Stringier.UTF32.LE.BOM*
  name: BOM
  href: api/Stringier.UTF32.LE.html#Stringier_UTF32_LE_BOM_
  commentId: Overload:Stringier.UTF32.LE.BOM
  isSpec: "True"
  fullName: Stringier.UTF32.LE.BOM
  nameWithType: UTF32.LE.BOM
- uid: Stringier.UTF8
  name: UTF8
  href: api/Stringier.UTF8.html
  commentId: T:Stringier.UTF8
  fullName: Stringier.UTF8
  nameWithType: UTF8
- uid: Stringier.UTF8.BOM
  name: BOM
  href: api/Stringier.UTF8.html#Stringier_UTF8_BOM
  commentId: P:Stringier.UTF8.BOM
  fullName: Stringier.UTF8.BOM
  nameWithType: UTF8.BOM
- uid: Stringier.UTF8.BOM*
  name: BOM
  href: api/Stringier.UTF8.html#Stringier_UTF8_BOM_
  commentId: Overload:Stringier.UTF8.BOM
  isSpec: "True"
  fullName: Stringier.UTF8.BOM
  nameWithType: UTF8.BOM
- uid: Stringier.UTF8.IsFirstUnit(System.Byte)
  name: IsFirstUnit(Byte)
  href: api/Stringier.UTF8.html#Stringier_UTF8_IsFirstUnit_System_Byte_
  commentId: M:Stringier.UTF8.IsFirstUnit(System.Byte)
  fullName: Stringier.UTF8.IsFirstUnit(System.Byte)
  nameWithType: UTF8.IsFirstUnit(Byte)
- uid: Stringier.UTF8.IsFirstUnit*
  name: IsFirstUnit
  href: api/Stringier.UTF8.html#Stringier_UTF8_IsFirstUnit_
  commentId: Overload:Stringier.UTF8.IsFirstUnit
  isSpec: "True"
  fullName: Stringier.UTF8.IsFirstUnit
  nameWithType: UTF8.IsFirstUnit
- uid: Stringier.UTF8.IsNextUnit(System.Byte,System.Byte,System.Byte)
  name: IsNextUnit(Byte, Byte, Byte)
  href: api/Stringier.UTF8.html#Stringier_UTF8_IsNextUnit_System_Byte_System_Byte_System_Byte_
  commentId: M:Stringier.UTF8.IsNextUnit(System.Byte,System.Byte,System.Byte)
  fullName: Stringier.UTF8.IsNextUnit(System.Byte, System.Byte, System.Byte)
  nameWithType: UTF8.IsNextUnit(Byte, Byte, Byte)
- uid: Stringier.UTF8.IsNextUnit*
  name: IsNextUnit
  href: api/Stringier.UTF8.html#Stringier_UTF8_IsNextUnit_
  commentId: Overload:Stringier.UTF8.IsNextUnit
  isSpec: "True"
  fullName: Stringier.UTF8.IsNextUnit
  nameWithType: UTF8.IsNextUnit
- uid: Stringier.UTF8.NextUnitRange(System.Byte,System.Byte@,System.Byte@)
  name: NextUnitRange(Byte, out Byte, out Byte)
  href: api/Stringier.UTF8.html#Stringier_UTF8_NextUnitRange_System_Byte_System_Byte__System_Byte__
  commentId: M:Stringier.UTF8.NextUnitRange(System.Byte,System.Byte@,System.Byte@)
  name.vb: NextUnitRange(Byte, ByRef Byte, ByRef Byte)
  fullName: Stringier.UTF8.NextUnitRange(System.Byte, out System.Byte, out System.Byte)
  fullName.vb: Stringier.UTF8.NextUnitRange(System.Byte, ByRef System.Byte, ByRef System.Byte)
  nameWithType: UTF8.NextUnitRange(Byte, out Byte, out Byte)
  nameWithType.vb: UTF8.NextUnitRange(Byte, ByRef Byte, ByRef Byte)
- uid: Stringier.UTF8.NextUnitRange*
  name: NextUnitRange
  href: api/Stringier.UTF8.html#Stringier_UTF8_NextUnitRange_
  commentId: Overload:Stringier.UTF8.NextUnitRange
  isSpec: "True"
  fullName: Stringier.UTF8.NextUnitRange
  nameWithType: UTF8.NextUnitRange
- uid: Stringier.UTF8.SequenceLength(System.Byte)
  name: SequenceLength(Byte)
  href: api/Stringier.UTF8.html#Stringier_UTF8_SequenceLength_System_Byte_
  commentId: M:Stringier.UTF8.SequenceLength(System.Byte)
  fullName: Stringier.UTF8.SequenceLength(System.Byte)
  nameWithType: UTF8.SequenceLength(Byte)
- uid: Stringier.UTF8.SequenceLength*
  name: SequenceLength
  href: api/Stringier.UTF8.html#Stringier_UTF8_SequenceLength_
  commentId: Overload:Stringier.UTF8.SequenceLength
  isSpec: "True"
  fullName: Stringier.UTF8.SequenceLength
  nameWithType: UTF8.SequenceLength
- uid: System
  name: System
  href: api/System.html
  commentId: N:System
  fullName: System
  nameWithType: System
- uid: System.Diagnostics.CodeAnalysis
  name: System.Diagnostics.CodeAnalysis
  href: api/System.Diagnostics.CodeAnalysis.html
  commentId: N:System.Diagnostics.CodeAnalysis
  fullName: System.Diagnostics.CodeAnalysis
  nameWithType: System.Diagnostics.CodeAnalysis
- uid: System.Diagnostics.CodeAnalysis.AllowNullAttribute
  name: AllowNullAttribute
  href: api/System.Diagnostics.CodeAnalysis.AllowNullAttribute.html
  commentId: T:System.Diagnostics.CodeAnalysis.AllowNullAttribute
  fullName: System.Diagnostics.CodeAnalysis.AllowNullAttribute
  nameWithType: AllowNullAttribute
- uid: System.Diagnostics.CodeAnalysis.Complexity
  name: Complexity
  href: api/System.Diagnostics.CodeAnalysis.Complexity.html
  commentId: T:System.Diagnostics.CodeAnalysis.Complexity
  fullName: System.Diagnostics.CodeAnalysis.Complexity
  nameWithType: Complexity
- uid: System.Diagnostics.CodeAnalysis.Complexity.k
  name: k
  href: api/System.Diagnostics.CodeAnalysis.Complexity.html#System_Diagnostics_CodeAnalysis_Complexity_k
  commentId: F:System.Diagnostics.CodeAnalysis.Complexity.k
  fullName: System.Diagnostics.CodeAnalysis.Complexity.k
  nameWithType: Complexity.k
- uid: System.Diagnostics.CodeAnalysis.Complexity.log_log_n
  name: log_log_n
  href: api/System.Diagnostics.CodeAnalysis.Complexity.html#System_Diagnostics_CodeAnalysis_Complexity_log_log_n
  commentId: F:System.Diagnostics.CodeAnalysis.Complexity.log_log_n
  fullName: System.Diagnostics.CodeAnalysis.Complexity.log_log_n
  nameWithType: Complexity.log_log_n
- uid: System.Diagnostics.CodeAnalysis.Complexity.log_n
  name: log_n
  href: api/System.Diagnostics.CodeAnalysis.Complexity.html#System_Diagnostics_CodeAnalysis_Complexity_log_n
  commentId: F:System.Diagnostics.CodeAnalysis.Complexity.log_n
  fullName: System.Diagnostics.CodeAnalysis.Complexity.log_n
  nameWithType: Complexity.log_n
- uid: System.Diagnostics.CodeAnalysis.Complexity.n
  name: n
  href: api/System.Diagnostics.CodeAnalysis.Complexity.html#System_Diagnostics_CodeAnalysis_Complexity_n
  commentId: F:System.Diagnostics.CodeAnalysis.Complexity.n
  fullName: System.Diagnostics.CodeAnalysis.Complexity.n
  nameWithType: Complexity.n
- uid: System.Diagnostics.CodeAnalysis.Complexity.n_plus_k
  name: n_plus_k
  href: api/System.Diagnostics.CodeAnalysis.Complexity.html#System_Diagnostics_CodeAnalysis_Complexity_n_plus_k
  commentId: F:System.Diagnostics.CodeAnalysis.Complexity.n_plus_k
  fullName: System.Diagnostics.CodeAnalysis.Complexity.n_plus_k
  nameWithType: Complexity.n_plus_k
- uid: System.Diagnostics.CodeAnalysis.Complexity.n_squared
  name: n_squared
  href: api/System.Diagnostics.CodeAnalysis.Complexity.html#System_Diagnostics_CodeAnalysis_Complexity_n_squared
  commentId: F:System.Diagnostics.CodeAnalysis.Complexity.n_squared
  fullName: System.Diagnostics.CodeAnalysis.Complexity.n_squared
  nameWithType: Complexity.n_squared
- uid: System.Diagnostics.CodeAnalysis.Complexity.n_to_k
  name: n_to_k
  href: api/System.Diagnostics.CodeAnalysis.Complexity.html#System_Diagnostics_CodeAnalysis_Complexity_n_to_k
  commentId: F:System.Diagnostics.CodeAnalysis.Complexity.n_to_k
  fullName: System.Diagnostics.CodeAnalysis.Complexity.n_to_k
  nameWithType: Complexity.n_to_k
- uid: System.Diagnostics.CodeAnalysis.Complexity.n_to_n
  name: n_to_n
  href: api/System.Diagnostics.CodeAnalysis.Complexity.html#System_Diagnostics_CodeAnalysis_Complexity_n_to_n
  commentId: F:System.Diagnostics.CodeAnalysis.Complexity.n_to_n
  fullName: System.Diagnostics.CodeAnalysis.Complexity.n_to_n
  nameWithType: Complexity.n_to_n
- uid: System.Diagnostics.CodeAnalysis.Complexity.One
  name: One
  href: api/System.Diagnostics.CodeAnalysis.Complexity.html#System_Diagnostics_CodeAnalysis_Complexity_One
  commentId: F:System.Diagnostics.CodeAnalysis.Complexity.One
  fullName: System.Diagnostics.CodeAnalysis.Complexity.One
  nameWithType: Complexity.One
- uid: System.Diagnostics.CodeAnalysis.Complexity.Unknown
  name: Unknown
  href: api/System.Diagnostics.CodeAnalysis.Complexity.html#System_Diagnostics_CodeAnalysis_Complexity_Unknown
  commentId: F:System.Diagnostics.CodeAnalysis.Complexity.Unknown
  fullName: System.Diagnostics.CodeAnalysis.Complexity.Unknown
  nameWithType: Complexity.Unknown
- uid: System.Diagnostics.CodeAnalysis.DisallowNullAttribute
  name: DisallowNullAttribute
  href: api/System.Diagnostics.CodeAnalysis.DisallowNullAttribute.html
  commentId: T:System.Diagnostics.CodeAnalysis.DisallowNullAttribute
  fullName: System.Diagnostics.CodeAnalysis.DisallowNullAttribute
  nameWithType: DisallowNullAttribute
- uid: System.Diagnostics.CodeAnalysis.DoesNotReturnAttribute
  name: DoesNotReturnAttribute
  href: api/System.Diagnostics.CodeAnalysis.DoesNotReturnAttribute.html
  commentId: T:System.Diagnostics.CodeAnalysis.DoesNotReturnAttribute
  fullName: System.Diagnostics.CodeAnalysis.DoesNotReturnAttribute
  nameWithType: DoesNotReturnAttribute
- uid: System.Diagnostics.CodeAnalysis.DoesNotReturnIfAttribute
  name: DoesNotReturnIfAttribute
  href: api/System.Diagnostics.CodeAnalysis.DoesNotReturnIfAttribute.html
  commentId: T:System.Diagnostics.CodeAnalysis.DoesNotReturnIfAttribute
  fullName: System.Diagnostics.CodeAnalysis.DoesNotReturnIfAttribute
  nameWithType: DoesNotReturnIfAttribute
- uid: System.Diagnostics.CodeAnalysis.DoesNotReturnIfAttribute.#ctor(System.Boolean)
  name: DoesNotReturnIfAttribute(Boolean)
  href: api/System.Diagnostics.CodeAnalysis.DoesNotReturnIfAttribute.html#System_Diagnostics_CodeAnalysis_DoesNotReturnIfAttribute__ctor_System_Boolean_
  commentId: M:System.Diagnostics.CodeAnalysis.DoesNotReturnIfAttribute.#ctor(System.Boolean)
  fullName: System.Diagnostics.CodeAnalysis.DoesNotReturnIfAttribute.DoesNotReturnIfAttribute(System.Boolean)
  nameWithType: DoesNotReturnIfAttribute.DoesNotReturnIfAttribute(Boolean)
- uid: System.Diagnostics.CodeAnalysis.DoesNotReturnIfAttribute.#ctor*
  name: DoesNotReturnIfAttribute
  href: api/System.Diagnostics.CodeAnalysis.DoesNotReturnIfAttribute.html#System_Diagnostics_CodeAnalysis_DoesNotReturnIfAttribute__ctor_
  commentId: Overload:System.Diagnostics.CodeAnalysis.DoesNotReturnIfAttribute.#ctor
  isSpec: "True"
  fullName: System.Diagnostics.CodeAnalysis.DoesNotReturnIfAttribute.DoesNotReturnIfAttribute
  nameWithType: DoesNotReturnIfAttribute.DoesNotReturnIfAttribute
- uid: System.Diagnostics.CodeAnalysis.DoesNotReturnIfAttribute.ParameterValue
  name: ParameterValue
  href: api/System.Diagnostics.CodeAnalysis.DoesNotReturnIfAttribute.html#System_Diagnostics_CodeAnalysis_DoesNotReturnIfAttribute_ParameterValue
  commentId: P:System.Diagnostics.CodeAnalysis.DoesNotReturnIfAttribute.ParameterValue
  fullName: System.Diagnostics.CodeAnalysis.DoesNotReturnIfAttribute.ParameterValue
  nameWithType: DoesNotReturnIfAttribute.ParameterValue
- uid: System.Diagnostics.CodeAnalysis.DoesNotReturnIfAttribute.ParameterValue*
  name: ParameterValue
  href: api/System.Diagnostics.CodeAnalysis.DoesNotReturnIfAttribute.html#System_Diagnostics_CodeAnalysis_DoesNotReturnIfAttribute_ParameterValue_
  commentId: Overload:System.Diagnostics.CodeAnalysis.DoesNotReturnIfAttribute.ParameterValue
  isSpec: "True"
  fullName: System.Diagnostics.CodeAnalysis.DoesNotReturnIfAttribute.ParameterValue
  nameWithType: DoesNotReturnIfAttribute.ParameterValue
- uid: System.Diagnostics.CodeAnalysis.MaybeNullAttribute
  name: MaybeNullAttribute
  href: api/System.Diagnostics.CodeAnalysis.MaybeNullAttribute.html
  commentId: T:System.Diagnostics.CodeAnalysis.MaybeNullAttribute
  fullName: System.Diagnostics.CodeAnalysis.MaybeNullAttribute
  nameWithType: MaybeNullAttribute
- uid: System.Diagnostics.CodeAnalysis.MaybeNullWhenAttribute
  name: MaybeNullWhenAttribute
  href: api/System.Diagnostics.CodeAnalysis.MaybeNullWhenAttribute.html
  commentId: T:System.Diagnostics.CodeAnalysis.MaybeNullWhenAttribute
  fullName: System.Diagnostics.CodeAnalysis.MaybeNullWhenAttribute
  nameWithType: MaybeNullWhenAttribute
- uid: System.Diagnostics.CodeAnalysis.MaybeNullWhenAttribute.#ctor(System.Boolean)
  name: MaybeNullWhenAttribute(Boolean)
  href: api/System.Diagnostics.CodeAnalysis.MaybeNullWhenAttribute.html#System_Diagnostics_CodeAnalysis_MaybeNullWhenAttribute__ctor_System_Boolean_
  commentId: M:System.Diagnostics.CodeAnalysis.MaybeNullWhenAttribute.#ctor(System.Boolean)
  fullName: System.Diagnostics.CodeAnalysis.MaybeNullWhenAttribute.MaybeNullWhenAttribute(System.Boolean)
  nameWithType: MaybeNullWhenAttribute.MaybeNullWhenAttribute(Boolean)
- uid: System.Diagnostics.CodeAnalysis.MaybeNullWhenAttribute.#ctor*
  name: MaybeNullWhenAttribute
  href: api/System.Diagnostics.CodeAnalysis.MaybeNullWhenAttribute.html#System_Diagnostics_CodeAnalysis_MaybeNullWhenAttribute__ctor_
  commentId: Overload:System.Diagnostics.CodeAnalysis.MaybeNullWhenAttribute.#ctor
  isSpec: "True"
  fullName: System.Diagnostics.CodeAnalysis.MaybeNullWhenAttribute.MaybeNullWhenAttribute
  nameWithType: MaybeNullWhenAttribute.MaybeNullWhenAttribute
- uid: System.Diagnostics.CodeAnalysis.MaybeNullWhenAttribute.ReturnValue
  name: ReturnValue
  href: api/System.Diagnostics.CodeAnalysis.MaybeNullWhenAttribute.html#System_Diagnostics_CodeAnalysis_MaybeNullWhenAttribute_ReturnValue
  commentId: P:System.Diagnostics.CodeAnalysis.MaybeNullWhenAttribute.ReturnValue
  fullName: System.Diagnostics.CodeAnalysis.MaybeNullWhenAttribute.ReturnValue
  nameWithType: MaybeNullWhenAttribute.ReturnValue
- uid: System.Diagnostics.CodeAnalysis.MaybeNullWhenAttribute.ReturnValue*
  name: ReturnValue
  href: api/System.Diagnostics.CodeAnalysis.MaybeNullWhenAttribute.html#System_Diagnostics_CodeAnalysis_MaybeNullWhenAttribute_ReturnValue_
  commentId: Overload:System.Diagnostics.CodeAnalysis.MaybeNullWhenAttribute.ReturnValue
  isSpec: "True"
  fullName: System.Diagnostics.CodeAnalysis.MaybeNullWhenAttribute.ReturnValue
  nameWithType: MaybeNullWhenAttribute.ReturnValue
- uid: System.Diagnostics.CodeAnalysis.MemberNotNullAttribute
  name: MemberNotNullAttribute
  href: api/System.Diagnostics.CodeAnalysis.MemberNotNullAttribute.html
  commentId: T:System.Diagnostics.CodeAnalysis.MemberNotNullAttribute
  fullName: System.Diagnostics.CodeAnalysis.MemberNotNullAttribute
  nameWithType: MemberNotNullAttribute
- uid: System.Diagnostics.CodeAnalysis.MemberNotNullAttribute.#ctor(System.String)
  name: MemberNotNullAttribute(String)
  href: api/System.Diagnostics.CodeAnalysis.MemberNotNullAttribute.html#System_Diagnostics_CodeAnalysis_MemberNotNullAttribute__ctor_System_String_
  commentId: M:System.Diagnostics.CodeAnalysis.MemberNotNullAttribute.#ctor(System.String)
  fullName: System.Diagnostics.CodeAnalysis.MemberNotNullAttribute.MemberNotNullAttribute(System.String)
  nameWithType: MemberNotNullAttribute.MemberNotNullAttribute(String)
- uid: System.Diagnostics.CodeAnalysis.MemberNotNullAttribute.#ctor(System.String[])
  name: MemberNotNullAttribute(String[])
  href: api/System.Diagnostics.CodeAnalysis.MemberNotNullAttribute.html#System_Diagnostics_CodeAnalysis_MemberNotNullAttribute__ctor_System_String___
  commentId: M:System.Diagnostics.CodeAnalysis.MemberNotNullAttribute.#ctor(System.String[])
  name.vb: MemberNotNullAttribute(String())
  fullName: System.Diagnostics.CodeAnalysis.MemberNotNullAttribute.MemberNotNullAttribute(System.String[])
  fullName.vb: System.Diagnostics.CodeAnalysis.MemberNotNullAttribute.MemberNotNullAttribute(System.String())
  nameWithType: MemberNotNullAttribute.MemberNotNullAttribute(String[])
  nameWithType.vb: MemberNotNullAttribute.MemberNotNullAttribute(String())
- uid: System.Diagnostics.CodeAnalysis.MemberNotNullAttribute.#ctor*
  name: MemberNotNullAttribute
  href: api/System.Diagnostics.CodeAnalysis.MemberNotNullAttribute.html#System_Diagnostics_CodeAnalysis_MemberNotNullAttribute__ctor_
  commentId: Overload:System.Diagnostics.CodeAnalysis.MemberNotNullAttribute.#ctor
  isSpec: "True"
  fullName: System.Diagnostics.CodeAnalysis.MemberNotNullAttribute.MemberNotNullAttribute
  nameWithType: MemberNotNullAttribute.MemberNotNullAttribute
- uid: System.Diagnostics.CodeAnalysis.MemberNotNullAttribute.Members
  name: Members
  href: api/System.Diagnostics.CodeAnalysis.MemberNotNullAttribute.html#System_Diagnostics_CodeAnalysis_MemberNotNullAttribute_Members
  commentId: P:System.Diagnostics.CodeAnalysis.MemberNotNullAttribute.Members
  fullName: System.Diagnostics.CodeAnalysis.MemberNotNullAttribute.Members
  nameWithType: MemberNotNullAttribute.Members
- uid: System.Diagnostics.CodeAnalysis.MemberNotNullAttribute.Members*
  name: Members
  href: api/System.Diagnostics.CodeAnalysis.MemberNotNullAttribute.html#System_Diagnostics_CodeAnalysis_MemberNotNullAttribute_Members_
  commentId: Overload:System.Diagnostics.CodeAnalysis.MemberNotNullAttribute.Members
  isSpec: "True"
  fullName: System.Diagnostics.CodeAnalysis.MemberNotNullAttribute.Members
  nameWithType: MemberNotNullAttribute.Members
- uid: System.Diagnostics.CodeAnalysis.MemberNotNullWhenAttribute
  name: MemberNotNullWhenAttribute
  href: api/System.Diagnostics.CodeAnalysis.MemberNotNullWhenAttribute.html
  commentId: T:System.Diagnostics.CodeAnalysis.MemberNotNullWhenAttribute
  fullName: System.Diagnostics.CodeAnalysis.MemberNotNullWhenAttribute
  nameWithType: MemberNotNullWhenAttribute
- uid: System.Diagnostics.CodeAnalysis.MemberNotNullWhenAttribute.#ctor(System.Boolean,System.String)
  name: MemberNotNullWhenAttribute(Boolean, String)
  href: api/System.Diagnostics.CodeAnalysis.MemberNotNullWhenAttribute.html#System_Diagnostics_CodeAnalysis_MemberNotNullWhenAttribute__ctor_System_Boolean_System_String_
  commentId: M:System.Diagnostics.CodeAnalysis.MemberNotNullWhenAttribute.#ctor(System.Boolean,System.String)
  fullName: System.Diagnostics.CodeAnalysis.MemberNotNullWhenAttribute.MemberNotNullWhenAttribute(System.Boolean, System.String)
  nameWithType: MemberNotNullWhenAttribute.MemberNotNullWhenAttribute(Boolean, String)
- uid: System.Diagnostics.CodeAnalysis.MemberNotNullWhenAttribute.#ctor(System.Boolean,System.String[])
  name: MemberNotNullWhenAttribute(Boolean, String[])
  href: api/System.Diagnostics.CodeAnalysis.MemberNotNullWhenAttribute.html#System_Diagnostics_CodeAnalysis_MemberNotNullWhenAttribute__ctor_System_Boolean_System_String___
  commentId: M:System.Diagnostics.CodeAnalysis.MemberNotNullWhenAttribute.#ctor(System.Boolean,System.String[])
  name.vb: MemberNotNullWhenAttribute(Boolean, String())
  fullName: System.Diagnostics.CodeAnalysis.MemberNotNullWhenAttribute.MemberNotNullWhenAttribute(System.Boolean, System.String[])
  fullName.vb: System.Diagnostics.CodeAnalysis.MemberNotNullWhenAttribute.MemberNotNullWhenAttribute(System.Boolean, System.String())
  nameWithType: MemberNotNullWhenAttribute.MemberNotNullWhenAttribute(Boolean, String[])
  nameWithType.vb: MemberNotNullWhenAttribute.MemberNotNullWhenAttribute(Boolean, String())
- uid: System.Diagnostics.CodeAnalysis.MemberNotNullWhenAttribute.#ctor*
  name: MemberNotNullWhenAttribute
  href: api/System.Diagnostics.CodeAnalysis.MemberNotNullWhenAttribute.html#System_Diagnostics_CodeAnalysis_MemberNotNullWhenAttribute__ctor_
  commentId: Overload:System.Diagnostics.CodeAnalysis.MemberNotNullWhenAttribute.#ctor
  isSpec: "True"
  fullName: System.Diagnostics.CodeAnalysis.MemberNotNullWhenAttribute.MemberNotNullWhenAttribute
  nameWithType: MemberNotNullWhenAttribute.MemberNotNullWhenAttribute
- uid: System.Diagnostics.CodeAnalysis.MemberNotNullWhenAttribute.Members
  name: Members
  href: api/System.Diagnostics.CodeAnalysis.MemberNotNullWhenAttribute.html#System_Diagnostics_CodeAnalysis_MemberNotNullWhenAttribute_Members
  commentId: P:System.Diagnostics.CodeAnalysis.MemberNotNullWhenAttribute.Members
  fullName: System.Diagnostics.CodeAnalysis.MemberNotNullWhenAttribute.Members
  nameWithType: MemberNotNullWhenAttribute.Members
- uid: System.Diagnostics.CodeAnalysis.MemberNotNullWhenAttribute.Members*
  name: Members
  href: api/System.Diagnostics.CodeAnalysis.MemberNotNullWhenAttribute.html#System_Diagnostics_CodeAnalysis_MemberNotNullWhenAttribute_Members_
  commentId: Overload:System.Diagnostics.CodeAnalysis.MemberNotNullWhenAttribute.Members
  isSpec: "True"
  fullName: System.Diagnostics.CodeAnalysis.MemberNotNullWhenAttribute.Members
  nameWithType: MemberNotNullWhenAttribute.Members
- uid: System.Diagnostics.CodeAnalysis.MemberNotNullWhenAttribute.ReturnValue
  name: ReturnValue
  href: api/System.Diagnostics.CodeAnalysis.MemberNotNullWhenAttribute.html#System_Diagnostics_CodeAnalysis_MemberNotNullWhenAttribute_ReturnValue
  commentId: P:System.Diagnostics.CodeAnalysis.MemberNotNullWhenAttribute.ReturnValue
  fullName: System.Diagnostics.CodeAnalysis.MemberNotNullWhenAttribute.ReturnValue
  nameWithType: MemberNotNullWhenAttribute.ReturnValue
- uid: System.Diagnostics.CodeAnalysis.MemberNotNullWhenAttribute.ReturnValue*
  name: ReturnValue
  href: api/System.Diagnostics.CodeAnalysis.MemberNotNullWhenAttribute.html#System_Diagnostics_CodeAnalysis_MemberNotNullWhenAttribute_ReturnValue_
  commentId: Overload:System.Diagnostics.CodeAnalysis.MemberNotNullWhenAttribute.ReturnValue
  isSpec: "True"
  fullName: System.Diagnostics.CodeAnalysis.MemberNotNullWhenAttribute.ReturnValue
  nameWithType: MemberNotNullWhenAttribute.ReturnValue
- uid: System.Diagnostics.CodeAnalysis.NotNullAttribute
  name: NotNullAttribute
  href: api/System.Diagnostics.CodeAnalysis.NotNullAttribute.html
  commentId: T:System.Diagnostics.CodeAnalysis.NotNullAttribute
  fullName: System.Diagnostics.CodeAnalysis.NotNullAttribute
  nameWithType: NotNullAttribute
- uid: System.Diagnostics.CodeAnalysis.NotNullIfNotNullAttribute
  name: NotNullIfNotNullAttribute
  href: api/System.Diagnostics.CodeAnalysis.NotNullIfNotNullAttribute.html
  commentId: T:System.Diagnostics.CodeAnalysis.NotNullIfNotNullAttribute
  fullName: System.Diagnostics.CodeAnalysis.NotNullIfNotNullAttribute
  nameWithType: NotNullIfNotNullAttribute
- uid: System.Diagnostics.CodeAnalysis.NotNullIfNotNullAttribute.#ctor(System.String)
  name: NotNullIfNotNullAttribute(String)
  href: api/System.Diagnostics.CodeAnalysis.NotNullIfNotNullAttribute.html#System_Diagnostics_CodeAnalysis_NotNullIfNotNullAttribute__ctor_System_String_
  commentId: M:System.Diagnostics.CodeAnalysis.NotNullIfNotNullAttribute.#ctor(System.String)
  fullName: System.Diagnostics.CodeAnalysis.NotNullIfNotNullAttribute.NotNullIfNotNullAttribute(System.String)
  nameWithType: NotNullIfNotNullAttribute.NotNullIfNotNullAttribute(String)
- uid: System.Diagnostics.CodeAnalysis.NotNullIfNotNullAttribute.#ctor*
  name: NotNullIfNotNullAttribute
  href: api/System.Diagnostics.CodeAnalysis.NotNullIfNotNullAttribute.html#System_Diagnostics_CodeAnalysis_NotNullIfNotNullAttribute__ctor_
  commentId: Overload:System.Diagnostics.CodeAnalysis.NotNullIfNotNullAttribute.#ctor
  isSpec: "True"
  fullName: System.Diagnostics.CodeAnalysis.NotNullIfNotNullAttribute.NotNullIfNotNullAttribute
  nameWithType: NotNullIfNotNullAttribute.NotNullIfNotNullAttribute
- uid: System.Diagnostics.CodeAnalysis.NotNullIfNotNullAttribute.ParameterName
  name: ParameterName
  href: api/System.Diagnostics.CodeAnalysis.NotNullIfNotNullAttribute.html#System_Diagnostics_CodeAnalysis_NotNullIfNotNullAttribute_ParameterName
  commentId: P:System.Diagnostics.CodeAnalysis.NotNullIfNotNullAttribute.ParameterName
  fullName: System.Diagnostics.CodeAnalysis.NotNullIfNotNullAttribute.ParameterName
  nameWithType: NotNullIfNotNullAttribute.ParameterName
- uid: System.Diagnostics.CodeAnalysis.NotNullIfNotNullAttribute.ParameterName*
  name: ParameterName
  href: api/System.Diagnostics.CodeAnalysis.NotNullIfNotNullAttribute.html#System_Diagnostics_CodeAnalysis_NotNullIfNotNullAttribute_ParameterName_
  commentId: Overload:System.Diagnostics.CodeAnalysis.NotNullIfNotNullAttribute.ParameterName
  isSpec: "True"
  fullName: System.Diagnostics.CodeAnalysis.NotNullIfNotNullAttribute.ParameterName
  nameWithType: NotNullIfNotNullAttribute.ParameterName
- uid: System.Diagnostics.CodeAnalysis.NotNullWhenAttribute
  name: NotNullWhenAttribute
  href: api/System.Diagnostics.CodeAnalysis.NotNullWhenAttribute.html
  commentId: T:System.Diagnostics.CodeAnalysis.NotNullWhenAttribute
  fullName: System.Diagnostics.CodeAnalysis.NotNullWhenAttribute
  nameWithType: NotNullWhenAttribute
- uid: System.Diagnostics.CodeAnalysis.NotNullWhenAttribute.#ctor(System.Boolean)
  name: NotNullWhenAttribute(Boolean)
  href: api/System.Diagnostics.CodeAnalysis.NotNullWhenAttribute.html#System_Diagnostics_CodeAnalysis_NotNullWhenAttribute__ctor_System_Boolean_
  commentId: M:System.Diagnostics.CodeAnalysis.NotNullWhenAttribute.#ctor(System.Boolean)
  fullName: System.Diagnostics.CodeAnalysis.NotNullWhenAttribute.NotNullWhenAttribute(System.Boolean)
  nameWithType: NotNullWhenAttribute.NotNullWhenAttribute(Boolean)
- uid: System.Diagnostics.CodeAnalysis.NotNullWhenAttribute.#ctor*
  name: NotNullWhenAttribute
  href: api/System.Diagnostics.CodeAnalysis.NotNullWhenAttribute.html#System_Diagnostics_CodeAnalysis_NotNullWhenAttribute__ctor_
  commentId: Overload:System.Diagnostics.CodeAnalysis.NotNullWhenAttribute.#ctor
  isSpec: "True"
  fullName: System.Diagnostics.CodeAnalysis.NotNullWhenAttribute.NotNullWhenAttribute
  nameWithType: NotNullWhenAttribute.NotNullWhenAttribute
- uid: System.Diagnostics.CodeAnalysis.NotNullWhenAttribute.ReturnValue
  name: ReturnValue
  href: api/System.Diagnostics.CodeAnalysis.NotNullWhenAttribute.html#System_Diagnostics_CodeAnalysis_NotNullWhenAttribute_ReturnValue
  commentId: P:System.Diagnostics.CodeAnalysis.NotNullWhenAttribute.ReturnValue
  fullName: System.Diagnostics.CodeAnalysis.NotNullWhenAttribute.ReturnValue
  nameWithType: NotNullWhenAttribute.ReturnValue
- uid: System.Diagnostics.CodeAnalysis.NotNullWhenAttribute.ReturnValue*
  name: ReturnValue
  href: api/System.Diagnostics.CodeAnalysis.NotNullWhenAttribute.html#System_Diagnostics_CodeAnalysis_NotNullWhenAttribute_ReturnValue_
  commentId: Overload:System.Diagnostics.CodeAnalysis.NotNullWhenAttribute.ReturnValue
  isSpec: "True"
  fullName: System.Diagnostics.CodeAnalysis.NotNullWhenAttribute.ReturnValue
  nameWithType: NotNullWhenAttribute.ReturnValue
- uid: System.Diagnostics.CodeAnalysis.OAttribute
  name: OAttribute
  href: api/System.Diagnostics.CodeAnalysis.OAttribute.html
  commentId: T:System.Diagnostics.CodeAnalysis.OAttribute
  fullName: System.Diagnostics.CodeAnalysis.OAttribute
  nameWithType: OAttribute
- uid: System.Diagnostics.CodeAnalysis.OAttribute.#ctor(System.Diagnostics.CodeAnalysis.Complexity)
  name: OAttribute(Complexity)
  href: api/System.Diagnostics.CodeAnalysis.OAttribute.html#System_Diagnostics_CodeAnalysis_OAttribute__ctor_System_Diagnostics_CodeAnalysis_Complexity_
  commentId: M:System.Diagnostics.CodeAnalysis.OAttribute.#ctor(System.Diagnostics.CodeAnalysis.Complexity)
  fullName: System.Diagnostics.CodeAnalysis.OAttribute.OAttribute(System.Diagnostics.CodeAnalysis.Complexity)
  nameWithType: OAttribute.OAttribute(Complexity)
- uid: System.Diagnostics.CodeAnalysis.OAttribute.#ctor(System.Int32)
  name: OAttribute(Int32)
  href: api/System.Diagnostics.CodeAnalysis.OAttribute.html#System_Diagnostics_CodeAnalysis_OAttribute__ctor_System_Int32_
  commentId: M:System.Diagnostics.CodeAnalysis.OAttribute.#ctor(System.Int32)
  fullName: System.Diagnostics.CodeAnalysis.OAttribute.OAttribute(System.Int32)
  nameWithType: OAttribute.OAttribute(Int32)
- uid: System.Diagnostics.CodeAnalysis.OAttribute.#ctor*
  name: OAttribute
  href: api/System.Diagnostics.CodeAnalysis.OAttribute.html#System_Diagnostics_CodeAnalysis_OAttribute__ctor_
  commentId: Overload:System.Diagnostics.CodeAnalysis.OAttribute.#ctor
  isSpec: "True"
  fullName: System.Diagnostics.CodeAnalysis.OAttribute.OAttribute
  nameWithType: OAttribute.OAttribute
- uid: System.Diagnostics.CodeAnalysis.ΘAttribute
  name: ΘAttribute
  href: api/System.Diagnostics.CodeAnalysis.%CE%98Attribute.html
  commentId: T:System.Diagnostics.CodeAnalysis.ΘAttribute
  fullName: System.Diagnostics.CodeAnalysis.ΘAttribute
  nameWithType: ΘAttribute
- uid: System.Diagnostics.CodeAnalysis.ΘAttribute.#ctor(System.Diagnostics.CodeAnalysis.Complexity)
  name: ΘAttribute(Complexity)
  href: api/System.Diagnostics.CodeAnalysis.%CE%98Attribute.html#System_Diagnostics_CodeAnalysis__Attribute__ctor_System_Diagnostics_CodeAnalysis_Complexity_
  commentId: M:System.Diagnostics.CodeAnalysis.ΘAttribute.#ctor(System.Diagnostics.CodeAnalysis.Complexity)
  fullName: System.Diagnostics.CodeAnalysis.ΘAttribute.ΘAttribute(System.Diagnostics.CodeAnalysis.Complexity)
  nameWithType: ΘAttribute.ΘAttribute(Complexity)
- uid: System.Diagnostics.CodeAnalysis.ΘAttribute.#ctor(System.Int32)
  name: ΘAttribute(Int32)
  href: api/System.Diagnostics.CodeAnalysis.%CE%98Attribute.html#System_Diagnostics_CodeAnalysis__Attribute__ctor_System_Int32_
  commentId: M:System.Diagnostics.CodeAnalysis.ΘAttribute.#ctor(System.Int32)
  fullName: System.Diagnostics.CodeAnalysis.ΘAttribute.ΘAttribute(System.Int32)
  nameWithType: ΘAttribute.ΘAttribute(Int32)
- uid: System.Diagnostics.CodeAnalysis.ΘAttribute.#ctor*
  name: ΘAttribute
  href: api/System.Diagnostics.CodeAnalysis.%CE%98Attribute.html#System_Diagnostics_CodeAnalysis__Attribute__ctor_
  commentId: Overload:System.Diagnostics.CodeAnalysis.ΘAttribute.#ctor
  isSpec: "True"
  fullName: System.Diagnostics.CodeAnalysis.ΘAttribute.ΘAttribute
  nameWithType: ΘAttribute.ΘAttribute
- uid: System.Diagnostics.CodeAnalysis.ΩAttribute
  name: ΩAttribute
  href: api/System.Diagnostics.CodeAnalysis.%CE%A9Attribute.html
  commentId: T:System.Diagnostics.CodeAnalysis.ΩAttribute
  fullName: System.Diagnostics.CodeAnalysis.ΩAttribute
  nameWithType: ΩAttribute
- uid: System.Diagnostics.CodeAnalysis.ΩAttribute.#ctor(System.Diagnostics.CodeAnalysis.Complexity)
  name: ΩAttribute(Complexity)
  href: api/System.Diagnostics.CodeAnalysis.%CE%A9Attribute.html#System_Diagnostics_CodeAnalysis__Attribute__ctor_System_Diagnostics_CodeAnalysis_Complexity_
  commentId: M:System.Diagnostics.CodeAnalysis.ΩAttribute.#ctor(System.Diagnostics.CodeAnalysis.Complexity)
  fullName: System.Diagnostics.CodeAnalysis.ΩAttribute.ΩAttribute(System.Diagnostics.CodeAnalysis.Complexity)
  nameWithType: ΩAttribute.ΩAttribute(Complexity)
- uid: System.Diagnostics.CodeAnalysis.ΩAttribute.#ctor(System.Int32)
  name: ΩAttribute(Int32)
  href: api/System.Diagnostics.CodeAnalysis.%CE%A9Attribute.html#System_Diagnostics_CodeAnalysis__Attribute__ctor_System_Int32_
  commentId: M:System.Diagnostics.CodeAnalysis.ΩAttribute.#ctor(System.Int32)
  fullName: System.Diagnostics.CodeAnalysis.ΩAttribute.ΩAttribute(System.Int32)
  nameWithType: ΩAttribute.ΩAttribute(Int32)
- uid: System.Diagnostics.CodeAnalysis.ΩAttribute.#ctor*
  name: ΩAttribute
  href: api/System.Diagnostics.CodeAnalysis.%CE%A9Attribute.html#System_Diagnostics_CodeAnalysis__Attribute__ctor_
  commentId: Overload:System.Diagnostics.CodeAnalysis.ΩAttribute.#ctor
  isSpec: "True"
  fullName: System.Diagnostics.CodeAnalysis.ΩAttribute.ΩAttribute
  nameWithType: ΩAttribute.ΩAttribute
- uid: System.TraitExtensions
  name: TraitExtensions
  href: api/System.TraitExtensions.html
  commentId: T:System.TraitExtensions
  fullName: System.TraitExtensions
  nameWithType: TraitExtensions
- uid: System.TraitExtensions.Add(System.Traits.IAdd{System.Char},System.String)
  name: Add(IAdd<Char>, String)
  href: api/System.TraitExtensions.html#System_TraitExtensions_Add_System_Traits_IAdd_System_Char__System_String_
  commentId: M:System.TraitExtensions.Add(System.Traits.IAdd{System.Char},System.String)
  name.vb: Add(IAdd(Of Char), String)
  fullName: System.TraitExtensions.Add(System.Traits.IAdd<System.Char>, System.String)
  fullName.vb: System.TraitExtensions.Add(System.Traits.IAdd(Of System.Char), System.String)
  nameWithType: TraitExtensions.Add(IAdd<Char>, String)
  nameWithType.vb: TraitExtensions.Add(IAdd(Of Char), String)
- uid: System.TraitExtensions.Add(System.Traits.IAddMemory{System.Char},System.String)
  name: Add(IAddMemory<Char>, String)
  href: api/System.TraitExtensions.html#System_TraitExtensions_Add_System_Traits_IAddMemory_System_Char__System_String_
  commentId: M:System.TraitExtensions.Add(System.Traits.IAddMemory{System.Char},System.String)
  name.vb: Add(IAddMemory(Of Char), String)
  fullName: System.TraitExtensions.Add(System.Traits.IAddMemory<System.Char>, System.String)
  fullName.vb: System.TraitExtensions.Add(System.Traits.IAddMemory(Of System.Char), System.String)
  nameWithType: TraitExtensions.Add(IAddMemory<Char>, String)
  nameWithType.vb: TraitExtensions.Add(IAddMemory(Of Char), String)
- uid: System.TraitExtensions.Add*
  name: Add
  href: api/System.TraitExtensions.html#System_TraitExtensions_Add_
  commentId: Overload:System.TraitExtensions.Add
  isSpec: "True"
  fullName: System.TraitExtensions.Add
  nameWithType: TraitExtensions.Add
- uid: System.TraitExtensions.Add``1(System.Traits.IAdd{``0},``0*,System.Int32)
  name: Add<TElement>(IAdd<TElement>, TElement*, Int32)
  href: api/System.TraitExtensions.html#System_TraitExtensions_Add__1_System_Traits_IAdd___0____0__System_Int32_
  commentId: M:System.TraitExtensions.Add``1(System.Traits.IAdd{``0},``0*,System.Int32)
  name.vb: Add(Of TElement)(IAdd(Of TElement), TElement*, Int32)
  fullName: System.TraitExtensions.Add<TElement>(System.Traits.IAdd<TElement>, TElement*, System.Int32)
  fullName.vb: System.TraitExtensions.Add(Of TElement)(System.Traits.IAdd(Of TElement), TElement*, System.Int32)
  nameWithType: TraitExtensions.Add<TElement>(IAdd<TElement>, TElement*, Int32)
  nameWithType.vb: TraitExtensions.Add(Of TElement)(IAdd(Of TElement), TElement*, Int32)
- uid: System.TraitExtensions.Add``1(System.Traits.IAdd{``0},``0[])
  name: Add<TElement>(IAdd<TElement>, TElement[])
  href: api/System.TraitExtensions.html#System_TraitExtensions_Add__1_System_Traits_IAdd___0____0___
  commentId: M:System.TraitExtensions.Add``1(System.Traits.IAdd{``0},``0[])
  name.vb: Add(Of TElement)(IAdd(Of TElement), TElement())
  fullName: System.TraitExtensions.Add<TElement>(System.Traits.IAdd<TElement>, TElement[])
  fullName.vb: System.TraitExtensions.Add(Of TElement)(System.Traits.IAdd(Of TElement), TElement())
  nameWithType: TraitExtensions.Add<TElement>(IAdd<TElement>, TElement[])
  nameWithType.vb: TraitExtensions.Add(Of TElement)(IAdd(Of TElement), TElement())
- uid: System.TraitExtensions.Add``1(System.Traits.IAdd{``0},System.Collections.Generic.IEnumerable{``0})
  name: Add<TElement>(IAdd<TElement>, IEnumerable<TElement>)
  href: api/System.TraitExtensions.html#System_TraitExtensions_Add__1_System_Traits_IAdd___0__System_Collections_Generic_IEnumerable___0__
  commentId: M:System.TraitExtensions.Add``1(System.Traits.IAdd{``0},System.Collections.Generic.IEnumerable{``0})
  name.vb: Add(Of TElement)(IAdd(Of TElement), IEnumerable(Of TElement))
  fullName: System.TraitExtensions.Add<TElement>(System.Traits.IAdd<TElement>, System.Collections.Generic.IEnumerable<TElement>)
  fullName.vb: System.TraitExtensions.Add(Of TElement)(System.Traits.IAdd(Of TElement), System.Collections.Generic.IEnumerable(Of TElement))
  nameWithType: TraitExtensions.Add<TElement>(IAdd<TElement>, IEnumerable<TElement>)
  nameWithType.vb: TraitExtensions.Add(Of TElement)(IAdd(Of TElement), IEnumerable(Of TElement))
- uid: System.TraitExtensions.Add``1(System.Traits.IAdd{``0},System.Memory{``0})
  name: Add<TElement>(IAdd<TElement>, Memory<TElement>)
  href: api/System.TraitExtensions.html#System_TraitExtensions_Add__1_System_Traits_IAdd___0__System_Memory___0__
  commentId: M:System.TraitExtensions.Add``1(System.Traits.IAdd{``0},System.Memory{``0})
  name.vb: Add(Of TElement)(IAdd(Of TElement), Memory(Of TElement))
  fullName: System.TraitExtensions.Add<TElement>(System.Traits.IAdd<TElement>, System.Memory<TElement>)
  fullName.vb: System.TraitExtensions.Add(Of TElement)(System.Traits.IAdd(Of TElement), System.Memory(Of TElement))
  nameWithType: TraitExtensions.Add<TElement>(IAdd<TElement>, Memory<TElement>)
  nameWithType.vb: TraitExtensions.Add(Of TElement)(IAdd(Of TElement), Memory(Of TElement))
- uid: System.TraitExtensions.Add``1(System.Traits.IAdd{``0},System.ReadOnlyMemory{``0})
  name: Add<TElement>(IAdd<TElement>, ReadOnlyMemory<TElement>)
  href: api/System.TraitExtensions.html#System_TraitExtensions_Add__1_System_Traits_IAdd___0__System_ReadOnlyMemory___0__
  commentId: M:System.TraitExtensions.Add``1(System.Traits.IAdd{``0},System.ReadOnlyMemory{``0})
  name.vb: Add(Of TElement)(IAdd(Of TElement), ReadOnlyMemory(Of TElement))
  fullName: System.TraitExtensions.Add<TElement>(System.Traits.IAdd<TElement>, System.ReadOnlyMemory<TElement>)
  fullName.vb: System.TraitExtensions.Add(Of TElement)(System.Traits.IAdd(Of TElement), System.ReadOnlyMemory(Of TElement))
  nameWithType: TraitExtensions.Add<TElement>(IAdd<TElement>, ReadOnlyMemory<TElement>)
  nameWithType.vb: TraitExtensions.Add(Of TElement)(IAdd(Of TElement), ReadOnlyMemory(Of TElement))
- uid: System.TraitExtensions.Add``1(System.Traits.IAdd{``0},System.ReadOnlySpan{``0})
  name: Add<TElement>(IAdd<TElement>, ReadOnlySpan<TElement>)
  href: api/System.TraitExtensions.html#System_TraitExtensions_Add__1_System_Traits_IAdd___0__System_ReadOnlySpan___0__
  commentId: M:System.TraitExtensions.Add``1(System.Traits.IAdd{``0},System.ReadOnlySpan{``0})
  name.vb: Add(Of TElement)(IAdd(Of TElement), ReadOnlySpan(Of TElement))
  fullName: System.TraitExtensions.Add<TElement>(System.Traits.IAdd<TElement>, System.ReadOnlySpan<TElement>)
  fullName.vb: System.TraitExtensions.Add(Of TElement)(System.Traits.IAdd(Of TElement), System.ReadOnlySpan(Of TElement))
  nameWithType: TraitExtensions.Add<TElement>(IAdd<TElement>, ReadOnlySpan<TElement>)
  nameWithType.vb: TraitExtensions.Add(Of TElement)(IAdd(Of TElement), ReadOnlySpan(Of TElement))
- uid: System.TraitExtensions.Add``1(System.Traits.IAdd{``0},System.Span{``0})
  name: Add<TElement>(IAdd<TElement>, Span<TElement>)
  href: api/System.TraitExtensions.html#System_TraitExtensions_Add__1_System_Traits_IAdd___0__System_Span___0__
  commentId: M:System.TraitExtensions.Add``1(System.Traits.IAdd{``0},System.Span{``0})
  name.vb: Add(Of TElement)(IAdd(Of TElement), Span(Of TElement))
  fullName: System.TraitExtensions.Add<TElement>(System.Traits.IAdd<TElement>, System.Span<TElement>)
  fullName.vb: System.TraitExtensions.Add(Of TElement)(System.Traits.IAdd(Of TElement), System.Span(Of TElement))
  nameWithType: TraitExtensions.Add<TElement>(IAdd<TElement>, Span<TElement>)
  nameWithType.vb: TraitExtensions.Add(Of TElement)(IAdd(Of TElement), Span(Of TElement))
- uid: System.TraitExtensions.Add``1(System.Traits.IAddSpan{``0},``0*,System.Int32)
  name: Add<TElement>(IAddSpan<TElement>, TElement*, Int32)
  href: api/System.TraitExtensions.html#System_TraitExtensions_Add__1_System_Traits_IAddSpan___0____0__System_Int32_
  commentId: M:System.TraitExtensions.Add``1(System.Traits.IAddSpan{``0},``0*,System.Int32)
  name.vb: Add(Of TElement)(IAddSpan(Of TElement), TElement*, Int32)
  fullName: System.TraitExtensions.Add<TElement>(System.Traits.IAddSpan<TElement>, TElement*, System.Int32)
  fullName.vb: System.TraitExtensions.Add(Of TElement)(System.Traits.IAddSpan(Of TElement), TElement*, System.Int32)
  nameWithType: TraitExtensions.Add<TElement>(IAddSpan<TElement>, TElement*, Int32)
  nameWithType.vb: TraitExtensions.Add(Of TElement)(IAddSpan(Of TElement), TElement*, Int32)
- uid: System.TraitExtensions.Add``2(System.Traits.IAdd{``0},System.Traits.ISequence{``0,``1})
  name: Add<TElement, TEnumerator>(IAdd<TElement>, ISequence<TElement, TEnumerator>)
  href: api/System.TraitExtensions.html#System_TraitExtensions_Add__2_System_Traits_IAdd___0__System_Traits_ISequence___0___1__
  commentId: M:System.TraitExtensions.Add``2(System.Traits.IAdd{``0},System.Traits.ISequence{``0,``1})
  name.vb: Add(Of TElement, TEnumerator)(IAdd(Of TElement), ISequence(Of TElement, TEnumerator))
  fullName: System.TraitExtensions.Add<TElement, TEnumerator>(System.Traits.IAdd<TElement>, System.Traits.ISequence<TElement, TEnumerator>)
  fullName.vb: System.TraitExtensions.Add(Of TElement, TEnumerator)(System.Traits.IAdd(Of TElement), System.Traits.ISequence(Of TElement, TEnumerator))
  nameWithType: TraitExtensions.Add<TElement, TEnumerator>(IAdd<TElement>, ISequence<TElement, TEnumerator>)
  nameWithType.vb: TraitExtensions.Add(Of TElement, TEnumerator)(IAdd(Of TElement), ISequence(Of TElement, TEnumerator))
- uid: System.TraitExtensions.Contains*
  name: Contains
  href: api/System.TraitExtensions.html#System_TraitExtensions_Contains_
  commentId: Overload:System.TraitExtensions.Contains
  isSpec: "True"
  fullName: System.TraitExtensions.Contains
  nameWithType: TraitExtensions.Contains
- uid: System.TraitExtensions.Contains``2(System.Traits.ISequence{``0,``1},``0)
  name: Contains<TElement, TEnumerator>(ISequence<TElement, TEnumerator>, TElement)
  href: api/System.TraitExtensions.html#System_TraitExtensions_Contains__2_System_Traits_ISequence___0___1____0_
  commentId: M:System.TraitExtensions.Contains``2(System.Traits.ISequence{``0,``1},``0)
  name.vb: Contains(Of TElement, TEnumerator)(ISequence(Of TElement, TEnumerator), TElement)
  fullName: System.TraitExtensions.Contains<TElement, TEnumerator>(System.Traits.ISequence<TElement, TEnumerator>, TElement)
  fullName.vb: System.TraitExtensions.Contains(Of TElement, TEnumerator)(System.Traits.ISequence(Of TElement, TEnumerator), TElement)
  nameWithType: TraitExtensions.Contains<TElement, TEnumerator>(ISequence<TElement, TEnumerator>, TElement)
  nameWithType.vb: TraitExtensions.Contains(Of TElement, TEnumerator)(ISequence(Of TElement, TEnumerator), TElement)
- uid: System.TraitExtensions.ContainsAll*
  name: ContainsAll
  href: api/System.TraitExtensions.html#System_TraitExtensions_ContainsAll_
  commentId: Overload:System.TraitExtensions.ContainsAll
  isSpec: "True"
  fullName: System.TraitExtensions.ContainsAll
  nameWithType: TraitExtensions.ContainsAll
- uid: System.TraitExtensions.ContainsAll``1(System.Traits.IContains{``0},``0[])
  name: ContainsAll<TElement>(IContains<TElement>, TElement[])
  href: api/System.TraitExtensions.html#System_TraitExtensions_ContainsAll__1_System_Traits_IContains___0____0___
  commentId: M:System.TraitExtensions.ContainsAll``1(System.Traits.IContains{``0},``0[])
  name.vb: ContainsAll(Of TElement)(IContains(Of TElement), TElement())
  fullName: System.TraitExtensions.ContainsAll<TElement>(System.Traits.IContains<TElement>, TElement[])
  fullName.vb: System.TraitExtensions.ContainsAll(Of TElement)(System.Traits.IContains(Of TElement), TElement())
  nameWithType: TraitExtensions.ContainsAll<TElement>(IContains<TElement>, TElement[])
  nameWithType.vb: TraitExtensions.ContainsAll(Of TElement)(IContains(Of TElement), TElement())
- uid: System.TraitExtensions.ContainsAll``2(System.Traits.ISequence{``0,``1},``0[])
  name: ContainsAll<TElement, TEnumerator>(ISequence<TElement, TEnumerator>, TElement[])
  href: api/System.TraitExtensions.html#System_TraitExtensions_ContainsAll__2_System_Traits_ISequence___0___1____0___
  commentId: M:System.TraitExtensions.ContainsAll``2(System.Traits.ISequence{``0,``1},``0[])
  name.vb: ContainsAll(Of TElement, TEnumerator)(ISequence(Of TElement, TEnumerator), TElement())
  fullName: System.TraitExtensions.ContainsAll<TElement, TEnumerator>(System.Traits.ISequence<TElement, TEnumerator>, TElement[])
  fullName.vb: System.TraitExtensions.ContainsAll(Of TElement, TEnumerator)(System.Traits.ISequence(Of TElement, TEnumerator), TElement())
  nameWithType: TraitExtensions.ContainsAll<TElement, TEnumerator>(ISequence<TElement, TEnumerator>, TElement[])
  nameWithType.vb: TraitExtensions.ContainsAll(Of TElement, TEnumerator)(ISequence(Of TElement, TEnumerator), TElement())
- uid: System.TraitExtensions.ContainsAny*
  name: ContainsAny
  href: api/System.TraitExtensions.html#System_TraitExtensions_ContainsAny_
  commentId: Overload:System.TraitExtensions.ContainsAny
  isSpec: "True"
  fullName: System.TraitExtensions.ContainsAny
  nameWithType: TraitExtensions.ContainsAny
- uid: System.TraitExtensions.ContainsAny``1(System.Traits.IContains{``0},``0[])
  name: ContainsAny<TElement>(IContains<TElement>, TElement[])
  href: api/System.TraitExtensions.html#System_TraitExtensions_ContainsAny__1_System_Traits_IContains___0____0___
  commentId: M:System.TraitExtensions.ContainsAny``1(System.Traits.IContains{``0},``0[])
  name.vb: ContainsAny(Of TElement)(IContains(Of TElement), TElement())
  fullName: System.TraitExtensions.ContainsAny<TElement>(System.Traits.IContains<TElement>, TElement[])
  fullName.vb: System.TraitExtensions.ContainsAny(Of TElement)(System.Traits.IContains(Of TElement), TElement())
  nameWithType: TraitExtensions.ContainsAny<TElement>(IContains<TElement>, TElement[])
  nameWithType.vb: TraitExtensions.ContainsAny(Of TElement)(IContains(Of TElement), TElement())
- uid: System.TraitExtensions.ContainsAny``2(System.Traits.ISequence{``0,``1},``0[])
  name: ContainsAny<TElement, TEnumerator>(ISequence<TElement, TEnumerator>, TElement[])
  href: api/System.TraitExtensions.html#System_TraitExtensions_ContainsAny__2_System_Traits_ISequence___0___1____0___
  commentId: M:System.TraitExtensions.ContainsAny``2(System.Traits.ISequence{``0,``1},``0[])
  name.vb: ContainsAny(Of TElement, TEnumerator)(ISequence(Of TElement, TEnumerator), TElement())
  fullName: System.TraitExtensions.ContainsAny<TElement, TEnumerator>(System.Traits.ISequence<TElement, TEnumerator>, TElement[])
  fullName.vb: System.TraitExtensions.ContainsAny(Of TElement, TEnumerator)(System.Traits.ISequence(Of TElement, TEnumerator), TElement())
  nameWithType: TraitExtensions.ContainsAny<TElement, TEnumerator>(ISequence<TElement, TEnumerator>, TElement[])
  nameWithType.vb: TraitExtensions.ContainsAny(Of TElement, TEnumerator)(ISequence(Of TElement, TEnumerator), TElement())
- uid: System.TraitExtensions.CopyTo*
  name: CopyTo
  href: api/System.TraitExtensions.html#System_TraitExtensions_CopyTo_
  commentId: Overload:System.TraitExtensions.CopyTo
  isSpec: "True"
  fullName: System.TraitExtensions.CopyTo
  nameWithType: TraitExtensions.CopyTo
- uid: System.TraitExtensions.CopyTo``2(System.Traits.ISequence{``0,``1},``0[])
  name: CopyTo<TElement, TEnumerator>(ISequence<TElement, TEnumerator>, TElement[])
  href: api/System.TraitExtensions.html#System_TraitExtensions_CopyTo__2_System_Traits_ISequence___0___1____0___
  commentId: M:System.TraitExtensions.CopyTo``2(System.Traits.ISequence{``0,``1},``0[])
  name.vb: CopyTo(Of TElement, TEnumerator)(ISequence(Of TElement, TEnumerator), TElement())
  fullName: System.TraitExtensions.CopyTo<TElement, TEnumerator>(System.Traits.ISequence<TElement, TEnumerator>, TElement[])
  fullName.vb: System.TraitExtensions.CopyTo(Of TElement, TEnumerator)(System.Traits.ISequence(Of TElement, TEnumerator), TElement())
  nameWithType: TraitExtensions.CopyTo<TElement, TEnumerator>(ISequence<TElement, TEnumerator>, TElement[])
  nameWithType.vb: TraitExtensions.CopyTo(Of TElement, TEnumerator)(ISequence(Of TElement, TEnumerator), TElement())
- uid: System.TraitExtensions.CopyTo``2(System.Traits.ISequence{``0,``1},System.Memory{``0})
  name: CopyTo<TElement, TEnumerator>(ISequence<TElement, TEnumerator>, Memory<TElement>)
  href: api/System.TraitExtensions.html#System_TraitExtensions_CopyTo__2_System_Traits_ISequence___0___1__System_Memory___0__
  commentId: M:System.TraitExtensions.CopyTo``2(System.Traits.ISequence{``0,``1},System.Memory{``0})
  name.vb: CopyTo(Of TElement, TEnumerator)(ISequence(Of TElement, TEnumerator), Memory(Of TElement))
  fullName: System.TraitExtensions.CopyTo<TElement, TEnumerator>(System.Traits.ISequence<TElement, TEnumerator>, System.Memory<TElement>)
  fullName.vb: System.TraitExtensions.CopyTo(Of TElement, TEnumerator)(System.Traits.ISequence(Of TElement, TEnumerator), System.Memory(Of TElement))
  nameWithType: TraitExtensions.CopyTo<TElement, TEnumerator>(ISequence<TElement, TEnumerator>, Memory<TElement>)
  nameWithType.vb: TraitExtensions.CopyTo(Of TElement, TEnumerator)(ISequence(Of TElement, TEnumerator), Memory(Of TElement))
- uid: System.TraitExtensions.CopyTo``2(System.Traits.ISequence{``0,``1},System.Span{``0})
  name: CopyTo<TElement, TEnumerator>(ISequence<TElement, TEnumerator>, Span<TElement>)
  href: api/System.TraitExtensions.html#System_TraitExtensions_CopyTo__2_System_Traits_ISequence___0___1__System_Span___0__
  commentId: M:System.TraitExtensions.CopyTo``2(System.Traits.ISequence{``0,``1},System.Span{``0})
  name.vb: CopyTo(Of TElement, TEnumerator)(ISequence(Of TElement, TEnumerator), Span(Of TElement))
  fullName: System.TraitExtensions.CopyTo<TElement, TEnumerator>(System.Traits.ISequence<TElement, TEnumerator>, System.Span<TElement>)
  fullName.vb: System.TraitExtensions.CopyTo(Of TElement, TEnumerator)(System.Traits.ISequence(Of TElement, TEnumerator), System.Span(Of TElement))
  nameWithType: TraitExtensions.CopyTo<TElement, TEnumerator>(ISequence<TElement, TEnumerator>, Span<TElement>)
  nameWithType.vb: TraitExtensions.CopyTo(Of TElement, TEnumerator)(ISequence(Of TElement, TEnumerator), Span(Of TElement))
- uid: System.TraitExtensions.EnsureLoaded*
  name: EnsureLoaded
  href: api/System.TraitExtensions.html#System_TraitExtensions_EnsureLoaded_
  commentId: Overload:System.TraitExtensions.EnsureLoaded
  isSpec: "True"
  fullName: System.TraitExtensions.EnsureLoaded
  nameWithType: TraitExtensions.EnsureLoaded
- uid: System.TraitExtensions.EnsureLoaded``1(System.Traits.IWrite{``0},nint,System.Traits.IRead{``0})
  name: EnsureLoaded<TElement>(IWrite<TElement>, nint, IRead<TElement>)
  href: api/System.TraitExtensions.html#System_TraitExtensions_EnsureLoaded__1_System_Traits_IWrite___0__nint_System_Traits_IRead___0__
  commentId: M:System.TraitExtensions.EnsureLoaded``1(System.Traits.IWrite{``0},nint,System.Traits.IRead{``0})
  name.vb: EnsureLoaded(Of TElement)(IWrite(Of TElement), nint, IRead(Of TElement))
  fullName: System.TraitExtensions.EnsureLoaded<TElement>(System.Traits.IWrite<TElement>, nint, System.Traits.IRead<TElement>)
  fullName.vb: System.TraitExtensions.EnsureLoaded(Of TElement)(System.Traits.IWrite(Of TElement), nint, System.Traits.IRead(Of TElement))
  nameWithType: TraitExtensions.EnsureLoaded<TElement>(IWrite<TElement>, nint, IRead<TElement>)
  nameWithType.vb: TraitExtensions.EnsureLoaded(Of TElement)(IWrite(Of TElement), nint, IRead(Of TElement))
- uid: System.TraitExtensions.Fold*
  name: Fold
  href: api/System.TraitExtensions.html#System_TraitExtensions_Fold_
  commentId: Overload:System.TraitExtensions.Fold
  isSpec: "True"
  fullName: System.TraitExtensions.Fold
  nameWithType: TraitExtensions.Fold
- uid: System.TraitExtensions.Fold``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``0,``0},``0)
  name: Fold<TElement>(IEnumerable<TElement>, Func<TElement, TElement, TElement>, TElement)
  href: api/System.TraitExtensions.html#System_TraitExtensions_Fold__1_System_Collections_Generic_IEnumerable___0__System_Func___0___0___0____0_
  commentId: M:System.TraitExtensions.Fold``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``0,``0},``0)
  name.vb: Fold(Of TElement)(IEnumerable(Of TElement), Func(Of TElement, TElement, TElement), TElement)
  fullName: System.TraitExtensions.Fold<TElement>(System.Collections.Generic.IEnumerable<TElement>, System.Func<TElement, TElement, TElement>, TElement)
  fullName.vb: System.TraitExtensions.Fold(Of TElement)(System.Collections.Generic.IEnumerable(Of TElement), System.Func(Of TElement, TElement, TElement), TElement)
  nameWithType: TraitExtensions.Fold<TElement>(IEnumerable<TElement>, Func<TElement, TElement, TElement>, TElement)
  nameWithType.vb: TraitExtensions.Fold(Of TElement)(IEnumerable(Of TElement), Func(Of TElement, TElement, TElement), TElement)
- uid: System.TraitExtensions.Fold``2(System.Traits.ISequence{``0,``1},System.Func{``0,``0,``0},``0)
  name: Fold<TElement, TEnumerator>(ISequence<TElement, TEnumerator>, Func<TElement, TElement, TElement>, TElement)
  href: api/System.TraitExtensions.html#System_TraitExtensions_Fold__2_System_Traits_ISequence___0___1__System_Func___0___0___0____0_
  commentId: M:System.TraitExtensions.Fold``2(System.Traits.ISequence{``0,``1},System.Func{``0,``0,``0},``0)
  name.vb: Fold(Of TElement, TEnumerator)(ISequence(Of TElement, TEnumerator), Func(Of TElement, TElement, TElement), TElement)
  fullName: System.TraitExtensions.Fold<TElement, TEnumerator>(System.Traits.ISequence<TElement, TEnumerator>, System.Func<TElement, TElement, TElement>, TElement)
  fullName.vb: System.TraitExtensions.Fold(Of TElement, TEnumerator)(System.Traits.ISequence(Of TElement, TEnumerator), System.Func(Of TElement, TElement, TElement), TElement)
  nameWithType: TraitExtensions.Fold<TElement, TEnumerator>(ISequence<TElement, TEnumerator>, Func<TElement, TElement, TElement>, TElement)
  nameWithType.vb: TraitExtensions.Fold(Of TElement, TEnumerator)(ISequence(Of TElement, TEnumerator), Func(Of TElement, TElement, TElement), TElement)
- uid: System.TraitExtensions.Grow(System.Traits.IResize)
  name: Grow(IResize)
  href: api/System.TraitExtensions.html#System_TraitExtensions_Grow_System_Traits_IResize_
  commentId: M:System.TraitExtensions.Grow(System.Traits.IResize)
  fullName: System.TraitExtensions.Grow(System.Traits.IResize)
  nameWithType: TraitExtensions.Grow(IResize)
- uid: System.TraitExtensions.Grow(System.Traits.IResize,nint)
  name: Grow(IResize, nint)
  href: api/System.TraitExtensions.html#System_TraitExtensions_Grow_System_Traits_IResize_nint_
  commentId: M:System.TraitExtensions.Grow(System.Traits.IResize,nint)
  fullName: System.TraitExtensions.Grow(System.Traits.IResize, nint)
  nameWithType: TraitExtensions.Grow(IResize, nint)
- uid: System.TraitExtensions.Grow*
  name: Grow
  href: api/System.TraitExtensions.html#System_TraitExtensions_Grow_
  commentId: Overload:System.TraitExtensions.Grow
  isSpec: "True"
  fullName: System.TraitExtensions.Grow
  nameWithType: TraitExtensions.Grow
- uid: System.TraitExtensions.Insert(System.Traits.IInsert{nint,System.Char},nint,System.String)
  name: Insert(IInsert<nint, Char>, nint, String)
  href: api/System.TraitExtensions.html#System_TraitExtensions_Insert_System_Traits_IInsert_nint_System_Char__nint_System_String_
  commentId: M:System.TraitExtensions.Insert(System.Traits.IInsert{nint,System.Char},nint,System.String)
  name.vb: Insert(IInsert(Of nint, Char), nint, String)
  fullName: System.TraitExtensions.Insert(System.Traits.IInsert<nint, System.Char>, nint, System.String)
  fullName.vb: System.TraitExtensions.Insert(System.Traits.IInsert(Of nint, System.Char), nint, System.String)
  nameWithType: TraitExtensions.Insert(IInsert<nint, Char>, nint, String)
  nameWithType.vb: TraitExtensions.Insert(IInsert(Of nint, Char), nint, String)
- uid: System.TraitExtensions.Insert(System.Traits.IInsertMemory{nint,System.Char},nint,System.String)
  name: Insert(IInsertMemory<nint, Char>, nint, String)
  href: api/System.TraitExtensions.html#System_TraitExtensions_Insert_System_Traits_IInsertMemory_nint_System_Char__nint_System_String_
  commentId: M:System.TraitExtensions.Insert(System.Traits.IInsertMemory{nint,System.Char},nint,System.String)
  name.vb: Insert(IInsertMemory(Of nint, Char), nint, String)
  fullName: System.TraitExtensions.Insert(System.Traits.IInsertMemory<nint, System.Char>, nint, System.String)
  fullName.vb: System.TraitExtensions.Insert(System.Traits.IInsertMemory(Of nint, System.Char), nint, System.String)
  nameWithType: TraitExtensions.Insert(IInsertMemory<nint, Char>, nint, String)
  nameWithType.vb: TraitExtensions.Insert(IInsertMemory(Of nint, Char), nint, String)
- uid: System.TraitExtensions.Insert*
  name: Insert
  href: api/System.TraitExtensions.html#System_TraitExtensions_Insert_
  commentId: Overload:System.TraitExtensions.Insert
  isSpec: "True"
  fullName: System.TraitExtensions.Insert
  nameWithType: TraitExtensions.Insert
- uid: System.TraitExtensions.Insert``1(System.Traits.IInsert{nint,``0},nint,``0*,System.Int32)
  name: Insert<TElement>(IInsert<nint, TElement>, nint, TElement*, Int32)
  href: api/System.TraitExtensions.html#System_TraitExtensions_Insert__1_System_Traits_IInsert_nint___0__nint___0__System_Int32_
  commentId: M:System.TraitExtensions.Insert``1(System.Traits.IInsert{nint,``0},nint,``0*,System.Int32)
  name.vb: Insert(Of TElement)(IInsert(Of nint, TElement), nint, TElement*, Int32)
  fullName: System.TraitExtensions.Insert<TElement>(System.Traits.IInsert<nint, TElement>, nint, TElement*, System.Int32)
  fullName.vb: System.TraitExtensions.Insert(Of TElement)(System.Traits.IInsert(Of nint, TElement), nint, TElement*, System.Int32)
  nameWithType: TraitExtensions.Insert<TElement>(IInsert<nint, TElement>, nint, TElement*, Int32)
  nameWithType.vb: TraitExtensions.Insert(Of TElement)(IInsert(Of nint, TElement), nint, TElement*, Int32)
- uid: System.TraitExtensions.Insert``1(System.Traits.IInsert{nint,``0},nint,``0[])
  name: Insert<TElement>(IInsert<nint, TElement>, nint, TElement[])
  href: api/System.TraitExtensions.html#System_TraitExtensions_Insert__1_System_Traits_IInsert_nint___0__nint___0___
  commentId: M:System.TraitExtensions.Insert``1(System.Traits.IInsert{nint,``0},nint,``0[])
  name.vb: Insert(Of TElement)(IInsert(Of nint, TElement), nint, TElement())
  fullName: System.TraitExtensions.Insert<TElement>(System.Traits.IInsert<nint, TElement>, nint, TElement[])
  fullName.vb: System.TraitExtensions.Insert(Of TElement)(System.Traits.IInsert(Of nint, TElement), nint, TElement())
  nameWithType: TraitExtensions.Insert<TElement>(IInsert<nint, TElement>, nint, TElement[])
  nameWithType.vb: TraitExtensions.Insert(Of TElement)(IInsert(Of nint, TElement), nint, TElement())
- uid: System.TraitExtensions.Insert``1(System.Traits.IInsert{nint,``0},nint,System.Memory{``0})
  name: Insert<TElement>(IInsert<nint, TElement>, nint, Memory<TElement>)
  href: api/System.TraitExtensions.html#System_TraitExtensions_Insert__1_System_Traits_IInsert_nint___0__nint_System_Memory___0__
  commentId: M:System.TraitExtensions.Insert``1(System.Traits.IInsert{nint,``0},nint,System.Memory{``0})
  name.vb: Insert(Of TElement)(IInsert(Of nint, TElement), nint, Memory(Of TElement))
  fullName: System.TraitExtensions.Insert<TElement>(System.Traits.IInsert<nint, TElement>, nint, System.Memory<TElement>)
  fullName.vb: System.TraitExtensions.Insert(Of TElement)(System.Traits.IInsert(Of nint, TElement), nint, System.Memory(Of TElement))
  nameWithType: TraitExtensions.Insert<TElement>(IInsert<nint, TElement>, nint, Memory<TElement>)
  nameWithType.vb: TraitExtensions.Insert(Of TElement)(IInsert(Of nint, TElement), nint, Memory(Of TElement))
- uid: System.TraitExtensions.Insert``1(System.Traits.IInsert{nint,``0},nint,System.ReadOnlyMemory{``0})
  name: Insert<TElement>(IInsert<nint, TElement>, nint, ReadOnlyMemory<TElement>)
  href: api/System.TraitExtensions.html#System_TraitExtensions_Insert__1_System_Traits_IInsert_nint___0__nint_System_ReadOnlyMemory___0__
  commentId: M:System.TraitExtensions.Insert``1(System.Traits.IInsert{nint,``0},nint,System.ReadOnlyMemory{``0})
  name.vb: Insert(Of TElement)(IInsert(Of nint, TElement), nint, ReadOnlyMemory(Of TElement))
  fullName: System.TraitExtensions.Insert<TElement>(System.Traits.IInsert<nint, TElement>, nint, System.ReadOnlyMemory<TElement>)
  fullName.vb: System.TraitExtensions.Insert(Of TElement)(System.Traits.IInsert(Of nint, TElement), nint, System.ReadOnlyMemory(Of TElement))
  nameWithType: TraitExtensions.Insert<TElement>(IInsert<nint, TElement>, nint, ReadOnlyMemory<TElement>)
  nameWithType.vb: TraitExtensions.Insert(Of TElement)(IInsert(Of nint, TElement), nint, ReadOnlyMemory(Of TElement))
- uid: System.TraitExtensions.Insert``1(System.Traits.IInsert{nint,``0},nint,System.ReadOnlySpan{``0})
  name: Insert<TElement>(IInsert<nint, TElement>, nint, ReadOnlySpan<TElement>)
  href: api/System.TraitExtensions.html#System_TraitExtensions_Insert__1_System_Traits_IInsert_nint___0__nint_System_ReadOnlySpan___0__
  commentId: M:System.TraitExtensions.Insert``1(System.Traits.IInsert{nint,``0},nint,System.ReadOnlySpan{``0})
  name.vb: Insert(Of TElement)(IInsert(Of nint, TElement), nint, ReadOnlySpan(Of TElement))
  fullName: System.TraitExtensions.Insert<TElement>(System.Traits.IInsert<nint, TElement>, nint, System.ReadOnlySpan<TElement>)
  fullName.vb: System.TraitExtensions.Insert(Of TElement)(System.Traits.IInsert(Of nint, TElement), nint, System.ReadOnlySpan(Of TElement))
  nameWithType: TraitExtensions.Insert<TElement>(IInsert<nint, TElement>, nint, ReadOnlySpan<TElement>)
  nameWithType.vb: TraitExtensions.Insert(Of TElement)(IInsert(Of nint, TElement), nint, ReadOnlySpan(Of TElement))
- uid: System.TraitExtensions.Insert``1(System.Traits.IInsert{nint,``0},nint,System.Span{``0})
  name: Insert<TElement>(IInsert<nint, TElement>, nint, Span<TElement>)
  href: api/System.TraitExtensions.html#System_TraitExtensions_Insert__1_System_Traits_IInsert_nint___0__nint_System_Span___0__
  commentId: M:System.TraitExtensions.Insert``1(System.Traits.IInsert{nint,``0},nint,System.Span{``0})
  name.vb: Insert(Of TElement)(IInsert(Of nint, TElement), nint, Span(Of TElement))
  fullName: System.TraitExtensions.Insert<TElement>(System.Traits.IInsert<nint, TElement>, nint, System.Span<TElement>)
  fullName.vb: System.TraitExtensions.Insert(Of TElement)(System.Traits.IInsert(Of nint, TElement), nint, System.Span(Of TElement))
  nameWithType: TraitExtensions.Insert<TElement>(IInsert<nint, TElement>, nint, Span<TElement>)
  nameWithType.vb: TraitExtensions.Insert(Of TElement)(IInsert(Of nint, TElement), nint, Span(Of TElement))
- uid: System.TraitExtensions.Insert``1(System.Traits.IInsertSpan{nint,``0},nint,``0*,System.Int32)
  name: Insert<TElement>(IInsertSpan<nint, TElement>, nint, TElement*, Int32)
  href: api/System.TraitExtensions.html#System_TraitExtensions_Insert__1_System_Traits_IInsertSpan_nint___0__nint___0__System_Int32_
  commentId: M:System.TraitExtensions.Insert``1(System.Traits.IInsertSpan{nint,``0},nint,``0*,System.Int32)
  name.vb: Insert(Of TElement)(IInsertSpan(Of nint, TElement), nint, TElement*, Int32)
  fullName: System.TraitExtensions.Insert<TElement>(System.Traits.IInsertSpan<nint, TElement>, nint, TElement*, System.Int32)
  fullName.vb: System.TraitExtensions.Insert(Of TElement)(System.Traits.IInsertSpan(Of nint, TElement), nint, TElement*, System.Int32)
  nameWithType: TraitExtensions.Insert<TElement>(IInsertSpan<nint, TElement>, nint, TElement*, Int32)
  nameWithType.vb: TraitExtensions.Insert(Of TElement)(IInsertSpan(Of nint, TElement), nint, TElement*, Int32)
- uid: System.TraitExtensions.Insert``2(System.Traits.IInsert{nint,``0},nint,System.Traits.ISequence{``0,``1})
  name: Insert<TElement, TEnumerator>(IInsert<nint, TElement>, nint, ISequence<TElement, TEnumerator>)
  href: api/System.TraitExtensions.html#System_TraitExtensions_Insert__2_System_Traits_IInsert_nint___0__nint_System_Traits_ISequence___0___1__
  commentId: M:System.TraitExtensions.Insert``2(System.Traits.IInsert{nint,``0},nint,System.Traits.ISequence{``0,``1})
  name.vb: Insert(Of TElement, TEnumerator)(IInsert(Of nint, TElement), nint, ISequence(Of TElement, TEnumerator))
  fullName: System.TraitExtensions.Insert<TElement, TEnumerator>(System.Traits.IInsert<nint, TElement>, nint, System.Traits.ISequence<TElement, TEnumerator>)
  fullName.vb: System.TraitExtensions.Insert(Of TElement, TEnumerator)(System.Traits.IInsert(Of nint, TElement), nint, System.Traits.ISequence(Of TElement, TEnumerator))
  nameWithType: TraitExtensions.Insert<TElement, TEnumerator>(IInsert<nint, TElement>, nint, ISequence<TElement, TEnumerator>)
  nameWithType.vb: TraitExtensions.Insert(Of TElement, TEnumerator)(IInsert(Of nint, TElement), nint, ISequence(Of TElement, TEnumerator))
- uid: System.TraitExtensions.Load*
  name: Load
  href: api/System.TraitExtensions.html#System_TraitExtensions_Load_
  commentId: Overload:System.TraitExtensions.Load
  isSpec: "True"
  fullName: System.TraitExtensions.Load
  nameWithType: TraitExtensions.Load
- uid: System.TraitExtensions.Load``1(System.Traits.IWrite{``0},nint,System.Traits.IRead{``0})
  name: Load<TElement>(IWrite<TElement>, nint, IRead<TElement>)
  href: api/System.TraitExtensions.html#System_TraitExtensions_Load__1_System_Traits_IWrite___0__nint_System_Traits_IRead___0__
  commentId: M:System.TraitExtensions.Load``1(System.Traits.IWrite{``0},nint,System.Traits.IRead{``0})
  name.vb: Load(Of TElement)(IWrite(Of TElement), nint, IRead(Of TElement))
  fullName: System.TraitExtensions.Load<TElement>(System.Traits.IWrite<TElement>, nint, System.Traits.IRead<TElement>)
  fullName.vb: System.TraitExtensions.Load(Of TElement)(System.Traits.IWrite(Of TElement), nint, System.Traits.IRead(Of TElement))
  nameWithType: TraitExtensions.Load<TElement>(IWrite<TElement>, nint, IRead<TElement>)
  nameWithType.vb: TraitExtensions.Load(Of TElement)(IWrite(Of TElement), nint, IRead(Of TElement))
- uid: System.TraitExtensions.Load``1(System.Traits.IWrite{``0},System.Traits.IRead{``0})
  name: Load<TElement>(IWrite<TElement>, IRead<TElement>)
  href: api/System.TraitExtensions.html#System_TraitExtensions_Load__1_System_Traits_IWrite___0__System_Traits_IRead___0__
  commentId: M:System.TraitExtensions.Load``1(System.Traits.IWrite{``0},System.Traits.IRead{``0})
  name.vb: Load(Of TElement)(IWrite(Of TElement), IRead(Of TElement))
  fullName: System.TraitExtensions.Load<TElement>(System.Traits.IWrite<TElement>, System.Traits.IRead<TElement>)
  fullName.vb: System.TraitExtensions.Load(Of TElement)(System.Traits.IWrite(Of TElement), System.Traits.IRead(Of TElement))
  nameWithType: TraitExtensions.Load<TElement>(IWrite<TElement>, IRead<TElement>)
  nameWithType.vb: TraitExtensions.Load(Of TElement)(IWrite(Of TElement), IRead(Of TElement))
- uid: System.TraitExtensions.Map*
  name: Map
  href: api/System.TraitExtensions.html#System_TraitExtensions_Map_
  commentId: Overload:System.TraitExtensions.Map
  isSpec: "True"
  fullName: System.TraitExtensions.Map
  nameWithType: TraitExtensions.Map
- uid: System.TraitExtensions.Map``1(System.Traits.IIndex{nint,``0},System.Func{``0,``0})
  name: Map<TElement>(IIndex<nint, TElement>, Func<TElement, TElement>)
  href: api/System.TraitExtensions.html#System_TraitExtensions_Map__1_System_Traits_IIndex_nint___0__System_Func___0___0__
  commentId: M:System.TraitExtensions.Map``1(System.Traits.IIndex{nint,``0},System.Func{``0,``0})
  name.vb: Map(Of TElement)(IIndex(Of nint, TElement), Func(Of TElement, TElement))
  fullName: System.TraitExtensions.Map<TElement>(System.Traits.IIndex<nint, TElement>, System.Func<TElement, TElement>)
  fullName.vb: System.TraitExtensions.Map(Of TElement)(System.Traits.IIndex(Of nint, TElement), System.Func(Of TElement, TElement))
  nameWithType: TraitExtensions.Map<TElement>(IIndex<nint, TElement>, Func<TElement, TElement>)
  nameWithType.vb: TraitExtensions.Map(Of TElement)(IIndex(Of nint, TElement), Func(Of TElement, TElement))
- uid: System.TraitExtensions.Map``1(System.Traits.IIndexRef{nint,``0},System.Func{``0,``0})
  name: Map<TElement>(IIndexRef<nint, TElement>, Func<TElement, TElement>)
  href: api/System.TraitExtensions.html#System_TraitExtensions_Map__1_System_Traits_IIndexRef_nint___0__System_Func___0___0__
  commentId: M:System.TraitExtensions.Map``1(System.Traits.IIndexRef{nint,``0},System.Func{``0,``0})
  name.vb: Map(Of TElement)(IIndexRef(Of nint, TElement), Func(Of TElement, TElement))
  fullName: System.TraitExtensions.Map<TElement>(System.Traits.IIndexRef<nint, TElement>, System.Func<TElement, TElement>)
  fullName.vb: System.TraitExtensions.Map(Of TElement)(System.Traits.IIndexRef(Of nint, TElement), System.Func(Of TElement, TElement))
  nameWithType: TraitExtensions.Map<TElement>(IIndexRef<nint, TElement>, Func<TElement, TElement>)
  nameWithType.vb: TraitExtensions.Map(Of TElement)(IIndexRef(Of nint, TElement), Func(Of TElement, TElement))
- uid: System.TraitExtensions.Occurrences*
  name: Occurrences
  href: api/System.TraitExtensions.html#System_TraitExtensions_Occurrences_
  commentId: Overload:System.TraitExtensions.Occurrences
  isSpec: "True"
  fullName: System.TraitExtensions.Occurrences
  nameWithType: TraitExtensions.Occurrences
- uid: System.TraitExtensions.Occurrences``2(System.Traits.ISequence{``0,``1},``0)
  name: Occurrences<TElement, TEnumerator>(ISequence<TElement, TEnumerator>, TElement)
  href: api/System.TraitExtensions.html#System_TraitExtensions_Occurrences__2_System_Traits_ISequence___0___1____0_
  commentId: M:System.TraitExtensions.Occurrences``2(System.Traits.ISequence{``0,``1},``0)
  name.vb: Occurrences(Of TElement, TEnumerator)(ISequence(Of TElement, TEnumerator), TElement)
  fullName: System.TraitExtensions.Occurrences<TElement, TEnumerator>(System.Traits.ISequence<TElement, TEnumerator>, TElement)
  fullName.vb: System.TraitExtensions.Occurrences(Of TElement, TEnumerator)(System.Traits.ISequence(Of TElement, TEnumerator), TElement)
  nameWithType: TraitExtensions.Occurrences<TElement, TEnumerator>(ISequence<TElement, TEnumerator>, TElement)
  nameWithType.vb: TraitExtensions.Occurrences(Of TElement, TEnumerator)(ISequence(Of TElement, TEnumerator), TElement)
- uid: System.TraitExtensions.Occurrences``2(System.Traits.ISequence{``0,``1},System.Predicate{``0})
  name: Occurrences<TElement, TEnumerator>(ISequence<TElement, TEnumerator>, Predicate<TElement>)
  href: api/System.TraitExtensions.html#System_TraitExtensions_Occurrences__2_System_Traits_ISequence___0___1__System_Predicate___0__
  commentId: M:System.TraitExtensions.Occurrences``2(System.Traits.ISequence{``0,``1},System.Predicate{``0})
  name.vb: Occurrences(Of TElement, TEnumerator)(ISequence(Of TElement, TEnumerator), Predicate(Of TElement))
  fullName: System.TraitExtensions.Occurrences<TElement, TEnumerator>(System.Traits.ISequence<TElement, TEnumerator>, System.Predicate<TElement>)
  fullName.vb: System.TraitExtensions.Occurrences(Of TElement, TEnumerator)(System.Traits.ISequence(Of TElement, TEnumerator), System.Predicate(Of TElement))
  nameWithType: TraitExtensions.Occurrences<TElement, TEnumerator>(ISequence<TElement, TEnumerator>, Predicate<TElement>)
  nameWithType.vb: TraitExtensions.Occurrences(Of TElement, TEnumerator)(ISequence(Of TElement, TEnumerator), Predicate(Of TElement))
- uid: System.TraitExtensions.Postpend(System.Traits.IPostpend{System.Char},System.String)
  name: Postpend(IPostpend<Char>, String)
  href: api/System.TraitExtensions.html#System_TraitExtensions_Postpend_System_Traits_IPostpend_System_Char__System_String_
  commentId: M:System.TraitExtensions.Postpend(System.Traits.IPostpend{System.Char},System.String)
  name.vb: Postpend(IPostpend(Of Char), String)
  fullName: System.TraitExtensions.Postpend(System.Traits.IPostpend<System.Char>, System.String)
  fullName.vb: System.TraitExtensions.Postpend(System.Traits.IPostpend(Of System.Char), System.String)
  nameWithType: TraitExtensions.Postpend(IPostpend<Char>, String)
  nameWithType.vb: TraitExtensions.Postpend(IPostpend(Of Char), String)
- uid: System.TraitExtensions.Postpend(System.Traits.IPostpendMemory{System.Char},System.String)
  name: Postpend(IPostpendMemory<Char>, String)
  href: api/System.TraitExtensions.html#System_TraitExtensions_Postpend_System_Traits_IPostpendMemory_System_Char__System_String_
  commentId: M:System.TraitExtensions.Postpend(System.Traits.IPostpendMemory{System.Char},System.String)
  name.vb: Postpend(IPostpendMemory(Of Char), String)
  fullName: System.TraitExtensions.Postpend(System.Traits.IPostpendMemory<System.Char>, System.String)
  fullName.vb: System.TraitExtensions.Postpend(System.Traits.IPostpendMemory(Of System.Char), System.String)
  nameWithType: TraitExtensions.Postpend(IPostpendMemory<Char>, String)
  nameWithType.vb: TraitExtensions.Postpend(IPostpendMemory(Of Char), String)
- uid: System.TraitExtensions.Postpend*
  name: Postpend
  href: api/System.TraitExtensions.html#System_TraitExtensions_Postpend_
  commentId: Overload:System.TraitExtensions.Postpend
  isSpec: "True"
  fullName: System.TraitExtensions.Postpend
  nameWithType: TraitExtensions.Postpend
- uid: System.TraitExtensions.Postpend``1(System.Traits.IPostpend{``0},``0*,System.Int32)
  name: Postpend<TElement>(IPostpend<TElement>, TElement*, Int32)
  href: api/System.TraitExtensions.html#System_TraitExtensions_Postpend__1_System_Traits_IPostpend___0____0__System_Int32_
  commentId: M:System.TraitExtensions.Postpend``1(System.Traits.IPostpend{``0},``0*,System.Int32)
  name.vb: Postpend(Of TElement)(IPostpend(Of TElement), TElement*, Int32)
  fullName: System.TraitExtensions.Postpend<TElement>(System.Traits.IPostpend<TElement>, TElement*, System.Int32)
  fullName.vb: System.TraitExtensions.Postpend(Of TElement)(System.Traits.IPostpend(Of TElement), TElement*, System.Int32)
  nameWithType: TraitExtensions.Postpend<TElement>(IPostpend<TElement>, TElement*, Int32)
  nameWithType.vb: TraitExtensions.Postpend(Of TElement)(IPostpend(Of TElement), TElement*, Int32)
- uid: System.TraitExtensions.Postpend``1(System.Traits.IPostpend{``0},``0[])
  name: Postpend<TElement>(IPostpend<TElement>, TElement[])
  href: api/System.TraitExtensions.html#System_TraitExtensions_Postpend__1_System_Traits_IPostpend___0____0___
  commentId: M:System.TraitExtensions.Postpend``1(System.Traits.IPostpend{``0},``0[])
  name.vb: Postpend(Of TElement)(IPostpend(Of TElement), TElement())
  fullName: System.TraitExtensions.Postpend<TElement>(System.Traits.IPostpend<TElement>, TElement[])
  fullName.vb: System.TraitExtensions.Postpend(Of TElement)(System.Traits.IPostpend(Of TElement), TElement())
  nameWithType: TraitExtensions.Postpend<TElement>(IPostpend<TElement>, TElement[])
  nameWithType.vb: TraitExtensions.Postpend(Of TElement)(IPostpend(Of TElement), TElement())
- uid: System.TraitExtensions.Postpend``1(System.Traits.IPostpend{``0},System.Collections.Generic.IEnumerable{``0})
  name: Postpend<TElement>(IPostpend<TElement>, IEnumerable<TElement>)
  href: api/System.TraitExtensions.html#System_TraitExtensions_Postpend__1_System_Traits_IPostpend___0__System_Collections_Generic_IEnumerable___0__
  commentId: M:System.TraitExtensions.Postpend``1(System.Traits.IPostpend{``0},System.Collections.Generic.IEnumerable{``0})
  name.vb: Postpend(Of TElement)(IPostpend(Of TElement), IEnumerable(Of TElement))
  fullName: System.TraitExtensions.Postpend<TElement>(System.Traits.IPostpend<TElement>, System.Collections.Generic.IEnumerable<TElement>)
  fullName.vb: System.TraitExtensions.Postpend(Of TElement)(System.Traits.IPostpend(Of TElement), System.Collections.Generic.IEnumerable(Of TElement))
  nameWithType: TraitExtensions.Postpend<TElement>(IPostpend<TElement>, IEnumerable<TElement>)
  nameWithType.vb: TraitExtensions.Postpend(Of TElement)(IPostpend(Of TElement), IEnumerable(Of TElement))
- uid: System.TraitExtensions.Postpend``1(System.Traits.IPostpend{``0},System.Memory{``0})
  name: Postpend<TElement>(IPostpend<TElement>, Memory<TElement>)
  href: api/System.TraitExtensions.html#System_TraitExtensions_Postpend__1_System_Traits_IPostpend___0__System_Memory___0__
  commentId: M:System.TraitExtensions.Postpend``1(System.Traits.IPostpend{``0},System.Memory{``0})
  name.vb: Postpend(Of TElement)(IPostpend(Of TElement), Memory(Of TElement))
  fullName: System.TraitExtensions.Postpend<TElement>(System.Traits.IPostpend<TElement>, System.Memory<TElement>)
  fullName.vb: System.TraitExtensions.Postpend(Of TElement)(System.Traits.IPostpend(Of TElement), System.Memory(Of TElement))
  nameWithType: TraitExtensions.Postpend<TElement>(IPostpend<TElement>, Memory<TElement>)
  nameWithType.vb: TraitExtensions.Postpend(Of TElement)(IPostpend(Of TElement), Memory(Of TElement))
- uid: System.TraitExtensions.Postpend``1(System.Traits.IPostpend{``0},System.ReadOnlyMemory{``0})
  name: Postpend<TElement>(IPostpend<TElement>, ReadOnlyMemory<TElement>)
  href: api/System.TraitExtensions.html#System_TraitExtensions_Postpend__1_System_Traits_IPostpend___0__System_ReadOnlyMemory___0__
  commentId: M:System.TraitExtensions.Postpend``1(System.Traits.IPostpend{``0},System.ReadOnlyMemory{``0})
  name.vb: Postpend(Of TElement)(IPostpend(Of TElement), ReadOnlyMemory(Of TElement))
  fullName: System.TraitExtensions.Postpend<TElement>(System.Traits.IPostpend<TElement>, System.ReadOnlyMemory<TElement>)
  fullName.vb: System.TraitExtensions.Postpend(Of TElement)(System.Traits.IPostpend(Of TElement), System.ReadOnlyMemory(Of TElement))
  nameWithType: TraitExtensions.Postpend<TElement>(IPostpend<TElement>, ReadOnlyMemory<TElement>)
  nameWithType.vb: TraitExtensions.Postpend(Of TElement)(IPostpend(Of TElement), ReadOnlyMemory(Of TElement))
- uid: System.TraitExtensions.Postpend``1(System.Traits.IPostpend{``0},System.ReadOnlySpan{``0})
  name: Postpend<TElement>(IPostpend<TElement>, ReadOnlySpan<TElement>)
  href: api/System.TraitExtensions.html#System_TraitExtensions_Postpend__1_System_Traits_IPostpend___0__System_ReadOnlySpan___0__
  commentId: M:System.TraitExtensions.Postpend``1(System.Traits.IPostpend{``0},System.ReadOnlySpan{``0})
  name.vb: Postpend(Of TElement)(IPostpend(Of TElement), ReadOnlySpan(Of TElement))
  fullName: System.TraitExtensions.Postpend<TElement>(System.Traits.IPostpend<TElement>, System.ReadOnlySpan<TElement>)
  fullName.vb: System.TraitExtensions.Postpend(Of TElement)(System.Traits.IPostpend(Of TElement), System.ReadOnlySpan(Of TElement))
  nameWithType: TraitExtensions.Postpend<TElement>(IPostpend<TElement>, ReadOnlySpan<TElement>)
  nameWithType.vb: TraitExtensions.Postpend(Of TElement)(IPostpend(Of TElement), ReadOnlySpan(Of TElement))
- uid: System.TraitExtensions.Postpend``1(System.Traits.IPostpend{``0},System.Span{``0})
  name: Postpend<TElement>(IPostpend<TElement>, Span<TElement>)
  href: api/System.TraitExtensions.html#System_TraitExtensions_Postpend__1_System_Traits_IPostpend___0__System_Span___0__
  commentId: M:System.TraitExtensions.Postpend``1(System.Traits.IPostpend{``0},System.Span{``0})
  name.vb: Postpend(Of TElement)(IPostpend(Of TElement), Span(Of TElement))
  fullName: System.TraitExtensions.Postpend<TElement>(System.Traits.IPostpend<TElement>, System.Span<TElement>)
  fullName.vb: System.TraitExtensions.Postpend(Of TElement)(System.Traits.IPostpend(Of TElement), System.Span(Of TElement))
  nameWithType: TraitExtensions.Postpend<TElement>(IPostpend<TElement>, Span<TElement>)
  nameWithType.vb: TraitExtensions.Postpend(Of TElement)(IPostpend(Of TElement), Span(Of TElement))
- uid: System.TraitExtensions.Postpend``1(System.Traits.IPostpendSpan{``0},``0*,System.Int32)
  name: Postpend<TElement>(IPostpendSpan<TElement>, TElement*, Int32)
  href: api/System.TraitExtensions.html#System_TraitExtensions_Postpend__1_System_Traits_IPostpendSpan___0____0__System_Int32_
  commentId: M:System.TraitExtensions.Postpend``1(System.Traits.IPostpendSpan{``0},``0*,System.Int32)
  name.vb: Postpend(Of TElement)(IPostpendSpan(Of TElement), TElement*, Int32)
  fullName: System.TraitExtensions.Postpend<TElement>(System.Traits.IPostpendSpan<TElement>, TElement*, System.Int32)
  fullName.vb: System.TraitExtensions.Postpend(Of TElement)(System.Traits.IPostpendSpan(Of TElement), TElement*, System.Int32)
  nameWithType: TraitExtensions.Postpend<TElement>(IPostpendSpan<TElement>, TElement*, Int32)
  nameWithType.vb: TraitExtensions.Postpend(Of TElement)(IPostpendSpan(Of TElement), TElement*, Int32)
- uid: System.TraitExtensions.Postpend``2(System.Traits.IPostpend{``0},System.Traits.ISequence{``0,``1})
  name: Postpend<TElement, TEnumerator>(IPostpend<TElement>, ISequence<TElement, TEnumerator>)
  href: api/System.TraitExtensions.html#System_TraitExtensions_Postpend__2_System_Traits_IPostpend___0__System_Traits_ISequence___0___1__
  commentId: M:System.TraitExtensions.Postpend``2(System.Traits.IPostpend{``0},System.Traits.ISequence{``0,``1})
  name.vb: Postpend(Of TElement, TEnumerator)(IPostpend(Of TElement), ISequence(Of TElement, TEnumerator))
  fullName: System.TraitExtensions.Postpend<TElement, TEnumerator>(System.Traits.IPostpend<TElement>, System.Traits.ISequence<TElement, TEnumerator>)
  fullName.vb: System.TraitExtensions.Postpend(Of TElement, TEnumerator)(System.Traits.IPostpend(Of TElement), System.Traits.ISequence(Of TElement, TEnumerator))
  nameWithType: TraitExtensions.Postpend<TElement, TEnumerator>(IPostpend<TElement>, ISequence<TElement, TEnumerator>)
  nameWithType.vb: TraitExtensions.Postpend(Of TElement, TEnumerator)(IPostpend(Of TElement), ISequence(Of TElement, TEnumerator))
- uid: System.TraitExtensions.Prepend(System.Traits.IPrepend{System.Char},System.String)
  name: Prepend(IPrepend<Char>, String)
  href: api/System.TraitExtensions.html#System_TraitExtensions_Prepend_System_Traits_IPrepend_System_Char__System_String_
  commentId: M:System.TraitExtensions.Prepend(System.Traits.IPrepend{System.Char},System.String)
  name.vb: Prepend(IPrepend(Of Char), String)
  fullName: System.TraitExtensions.Prepend(System.Traits.IPrepend<System.Char>, System.String)
  fullName.vb: System.TraitExtensions.Prepend(System.Traits.IPrepend(Of System.Char), System.String)
  nameWithType: TraitExtensions.Prepend(IPrepend<Char>, String)
  nameWithType.vb: TraitExtensions.Prepend(IPrepend(Of Char), String)
- uid: System.TraitExtensions.Prepend(System.Traits.IPrependMemory{System.Char},System.String)
  name: Prepend(IPrependMemory<Char>, String)
  href: api/System.TraitExtensions.html#System_TraitExtensions_Prepend_System_Traits_IPrependMemory_System_Char__System_String_
  commentId: M:System.TraitExtensions.Prepend(System.Traits.IPrependMemory{System.Char},System.String)
  name.vb: Prepend(IPrependMemory(Of Char), String)
  fullName: System.TraitExtensions.Prepend(System.Traits.IPrependMemory<System.Char>, System.String)
  fullName.vb: System.TraitExtensions.Prepend(System.Traits.IPrependMemory(Of System.Char), System.String)
  nameWithType: TraitExtensions.Prepend(IPrependMemory<Char>, String)
  nameWithType.vb: TraitExtensions.Prepend(IPrependMemory(Of Char), String)
- uid: System.TraitExtensions.Prepend*
  name: Prepend
  href: api/System.TraitExtensions.html#System_TraitExtensions_Prepend_
  commentId: Overload:System.TraitExtensions.Prepend
  isSpec: "True"
  fullName: System.TraitExtensions.Prepend
  nameWithType: TraitExtensions.Prepend
- uid: System.TraitExtensions.Prepend``1(System.Traits.IPrepend{``0},``0*,System.Int32)
  name: Prepend<TElement>(IPrepend<TElement>, TElement*, Int32)
  href: api/System.TraitExtensions.html#System_TraitExtensions_Prepend__1_System_Traits_IPrepend___0____0__System_Int32_
  commentId: M:System.TraitExtensions.Prepend``1(System.Traits.IPrepend{``0},``0*,System.Int32)
  name.vb: Prepend(Of TElement)(IPrepend(Of TElement), TElement*, Int32)
  fullName: System.TraitExtensions.Prepend<TElement>(System.Traits.IPrepend<TElement>, TElement*, System.Int32)
  fullName.vb: System.TraitExtensions.Prepend(Of TElement)(System.Traits.IPrepend(Of TElement), TElement*, System.Int32)
  nameWithType: TraitExtensions.Prepend<TElement>(IPrepend<TElement>, TElement*, Int32)
  nameWithType.vb: TraitExtensions.Prepend(Of TElement)(IPrepend(Of TElement), TElement*, Int32)
- uid: System.TraitExtensions.Prepend``1(System.Traits.IPrepend{``0},``0[])
  name: Prepend<TElement>(IPrepend<TElement>, TElement[])
  href: api/System.TraitExtensions.html#System_TraitExtensions_Prepend__1_System_Traits_IPrepend___0____0___
  commentId: M:System.TraitExtensions.Prepend``1(System.Traits.IPrepend{``0},``0[])
  name.vb: Prepend(Of TElement)(IPrepend(Of TElement), TElement())
  fullName: System.TraitExtensions.Prepend<TElement>(System.Traits.IPrepend<TElement>, TElement[])
  fullName.vb: System.TraitExtensions.Prepend(Of TElement)(System.Traits.IPrepend(Of TElement), TElement())
  nameWithType: TraitExtensions.Prepend<TElement>(IPrepend<TElement>, TElement[])
  nameWithType.vb: TraitExtensions.Prepend(Of TElement)(IPrepend(Of TElement), TElement())
- uid: System.TraitExtensions.Prepend``1(System.Traits.IPrepend{``0},System.Collections.Generic.IEnumerable{``0})
  name: Prepend<TElement>(IPrepend<TElement>, IEnumerable<TElement>)
  href: api/System.TraitExtensions.html#System_TraitExtensions_Prepend__1_System_Traits_IPrepend___0__System_Collections_Generic_IEnumerable___0__
  commentId: M:System.TraitExtensions.Prepend``1(System.Traits.IPrepend{``0},System.Collections.Generic.IEnumerable{``0})
  name.vb: Prepend(Of TElement)(IPrepend(Of TElement), IEnumerable(Of TElement))
  fullName: System.TraitExtensions.Prepend<TElement>(System.Traits.IPrepend<TElement>, System.Collections.Generic.IEnumerable<TElement>)
  fullName.vb: System.TraitExtensions.Prepend(Of TElement)(System.Traits.IPrepend(Of TElement), System.Collections.Generic.IEnumerable(Of TElement))
  nameWithType: TraitExtensions.Prepend<TElement>(IPrepend<TElement>, IEnumerable<TElement>)
  nameWithType.vb: TraitExtensions.Prepend(Of TElement)(IPrepend(Of TElement), IEnumerable(Of TElement))
- uid: System.TraitExtensions.Prepend``1(System.Traits.IPrepend{``0},System.Memory{``0})
  name: Prepend<TElement>(IPrepend<TElement>, Memory<TElement>)
  href: api/System.TraitExtensions.html#System_TraitExtensions_Prepend__1_System_Traits_IPrepend___0__System_Memory___0__
  commentId: M:System.TraitExtensions.Prepend``1(System.Traits.IPrepend{``0},System.Memory{``0})
  name.vb: Prepend(Of TElement)(IPrepend(Of TElement), Memory(Of TElement))
  fullName: System.TraitExtensions.Prepend<TElement>(System.Traits.IPrepend<TElement>, System.Memory<TElement>)
  fullName.vb: System.TraitExtensions.Prepend(Of TElement)(System.Traits.IPrepend(Of TElement), System.Memory(Of TElement))
  nameWithType: TraitExtensions.Prepend<TElement>(IPrepend<TElement>, Memory<TElement>)
  nameWithType.vb: TraitExtensions.Prepend(Of TElement)(IPrepend(Of TElement), Memory(Of TElement))
- uid: System.TraitExtensions.Prepend``1(System.Traits.IPrepend{``0},System.ReadOnlyMemory{``0})
  name: Prepend<TElement>(IPrepend<TElement>, ReadOnlyMemory<TElement>)
  href: api/System.TraitExtensions.html#System_TraitExtensions_Prepend__1_System_Traits_IPrepend___0__System_ReadOnlyMemory___0__
  commentId: M:System.TraitExtensions.Prepend``1(System.Traits.IPrepend{``0},System.ReadOnlyMemory{``0})
  name.vb: Prepend(Of TElement)(IPrepend(Of TElement), ReadOnlyMemory(Of TElement))
  fullName: System.TraitExtensions.Prepend<TElement>(System.Traits.IPrepend<TElement>, System.ReadOnlyMemory<TElement>)
  fullName.vb: System.TraitExtensions.Prepend(Of TElement)(System.Traits.IPrepend(Of TElement), System.ReadOnlyMemory(Of TElement))
  nameWithType: TraitExtensions.Prepend<TElement>(IPrepend<TElement>, ReadOnlyMemory<TElement>)
  nameWithType.vb: TraitExtensions.Prepend(Of TElement)(IPrepend(Of TElement), ReadOnlyMemory(Of TElement))
- uid: System.TraitExtensions.Prepend``1(System.Traits.IPrepend{``0},System.ReadOnlySpan{``0})
  name: Prepend<TElement>(IPrepend<TElement>, ReadOnlySpan<TElement>)
  href: api/System.TraitExtensions.html#System_TraitExtensions_Prepend__1_System_Traits_IPrepend___0__System_ReadOnlySpan___0__
  commentId: M:System.TraitExtensions.Prepend``1(System.Traits.IPrepend{``0},System.ReadOnlySpan{``0})
  name.vb: Prepend(Of TElement)(IPrepend(Of TElement), ReadOnlySpan(Of TElement))
  fullName: System.TraitExtensions.Prepend<TElement>(System.Traits.IPrepend<TElement>, System.ReadOnlySpan<TElement>)
  fullName.vb: System.TraitExtensions.Prepend(Of TElement)(System.Traits.IPrepend(Of TElement), System.ReadOnlySpan(Of TElement))
  nameWithType: TraitExtensions.Prepend<TElement>(IPrepend<TElement>, ReadOnlySpan<TElement>)
  nameWithType.vb: TraitExtensions.Prepend(Of TElement)(IPrepend(Of TElement), ReadOnlySpan(Of TElement))
- uid: System.TraitExtensions.Prepend``1(System.Traits.IPrepend{``0},System.Span{``0})
  name: Prepend<TElement>(IPrepend<TElement>, Span<TElement>)
  href: api/System.TraitExtensions.html#System_TraitExtensions_Prepend__1_System_Traits_IPrepend___0__System_Span___0__
  commentId: M:System.TraitExtensions.Prepend``1(System.Traits.IPrepend{``0},System.Span{``0})
  name.vb: Prepend(Of TElement)(IPrepend(Of TElement), Span(Of TElement))
  fullName: System.TraitExtensions.Prepend<TElement>(System.Traits.IPrepend<TElement>, System.Span<TElement>)
  fullName.vb: System.TraitExtensions.Prepend(Of TElement)(System.Traits.IPrepend(Of TElement), System.Span(Of TElement))
  nameWithType: TraitExtensions.Prepend<TElement>(IPrepend<TElement>, Span<TElement>)
  nameWithType.vb: TraitExtensions.Prepend(Of TElement)(IPrepend(Of TElement), Span(Of TElement))
- uid: System.TraitExtensions.Prepend``1(System.Traits.IPrependSpan{``0},``0*,System.Int32)
  name: Prepend<TElement>(IPrependSpan<TElement>, TElement*, Int32)
  href: api/System.TraitExtensions.html#System_TraitExtensions_Prepend__1_System_Traits_IPrependSpan___0____0__System_Int32_
  commentId: M:System.TraitExtensions.Prepend``1(System.Traits.IPrependSpan{``0},``0*,System.Int32)
  name.vb: Prepend(Of TElement)(IPrependSpan(Of TElement), TElement*, Int32)
  fullName: System.TraitExtensions.Prepend<TElement>(System.Traits.IPrependSpan<TElement>, TElement*, System.Int32)
  fullName.vb: System.TraitExtensions.Prepend(Of TElement)(System.Traits.IPrependSpan(Of TElement), TElement*, System.Int32)
  nameWithType: TraitExtensions.Prepend<TElement>(IPrependSpan<TElement>, TElement*, Int32)
  nameWithType.vb: TraitExtensions.Prepend(Of TElement)(IPrependSpan(Of TElement), TElement*, Int32)
- uid: System.TraitExtensions.Prepend``2(System.Traits.IPrepend{``0},System.Traits.ISequence{``0,``1})
  name: Prepend<TElement, TEnumerator>(IPrepend<TElement>, ISequence<TElement, TEnumerator>)
  href: api/System.TraitExtensions.html#System_TraitExtensions_Prepend__2_System_Traits_IPrepend___0__System_Traits_ISequence___0___1__
  commentId: M:System.TraitExtensions.Prepend``2(System.Traits.IPrepend{``0},System.Traits.ISequence{``0,``1})
  name.vb: Prepend(Of TElement, TEnumerator)(IPrepend(Of TElement), ISequence(Of TElement, TEnumerator))
  fullName: System.TraitExtensions.Prepend<TElement, TEnumerator>(System.Traits.IPrepend<TElement>, System.Traits.ISequence<TElement, TEnumerator>)
  fullName.vb: System.TraitExtensions.Prepend(Of TElement, TEnumerator)(System.Traits.IPrepend(Of TElement), System.Traits.ISequence(Of TElement, TEnumerator))
  nameWithType: TraitExtensions.Prepend<TElement, TEnumerator>(IPrepend<TElement>, ISequence<TElement, TEnumerator>)
  nameWithType.vb: TraitExtensions.Prepend(Of TElement, TEnumerator)(IPrepend(Of TElement), ISequence(Of TElement, TEnumerator))
- uid: System.TraitExtensions.Read*
  name: Read
  href: api/System.TraitExtensions.html#System_TraitExtensions_Read_
  commentId: Overload:System.TraitExtensions.Read
  isSpec: "True"
  fullName: System.TraitExtensions.Read
  nameWithType: TraitExtensions.Read
- uid: System.TraitExtensions.Read``1(System.Traits.IRead{``0},``0*,System.Int32)
  name: Read<TElement>(IRead<TElement>, TElement*, Int32)
  href: api/System.TraitExtensions.html#System_TraitExtensions_Read__1_System_Traits_IRead___0____0__System_Int32_
  commentId: M:System.TraitExtensions.Read``1(System.Traits.IRead{``0},``0*,System.Int32)
  name.vb: Read(Of TElement)(IRead(Of TElement), TElement*, Int32)
  fullName: System.TraitExtensions.Read<TElement>(System.Traits.IRead<TElement>, TElement*, System.Int32)
  fullName.vb: System.TraitExtensions.Read(Of TElement)(System.Traits.IRead(Of TElement), TElement*, System.Int32)
  nameWithType: TraitExtensions.Read<TElement>(IRead<TElement>, TElement*, Int32)
  nameWithType.vb: TraitExtensions.Read(Of TElement)(IRead(Of TElement), TElement*, Int32)
- uid: System.TraitExtensions.Read``1(System.Traits.IRead{``0},``0[])
  name: Read<TElement>(IRead<TElement>, TElement[])
  href: api/System.TraitExtensions.html#System_TraitExtensions_Read__1_System_Traits_IRead___0____0___
  commentId: M:System.TraitExtensions.Read``1(System.Traits.IRead{``0},``0[])
  name.vb: Read(Of TElement)(IRead(Of TElement), TElement())
  fullName: System.TraitExtensions.Read<TElement>(System.Traits.IRead<TElement>, TElement[])
  fullName.vb: System.TraitExtensions.Read(Of TElement)(System.Traits.IRead(Of TElement), TElement())
  nameWithType: TraitExtensions.Read<TElement>(IRead<TElement>, TElement[])
  nameWithType.vb: TraitExtensions.Read(Of TElement)(IRead(Of TElement), TElement())
- uid: System.TraitExtensions.Read``1(System.Traits.IRead{``0},nint,System.ReadOnlyMemory{``0}@)
  name: Read<TElement>(IRead<TElement>, nint, out ReadOnlyMemory<TElement>)
  href: api/System.TraitExtensions.html#System_TraitExtensions_Read__1_System_Traits_IRead___0__nint_System_ReadOnlyMemory___0___
  commentId: M:System.TraitExtensions.Read``1(System.Traits.IRead{``0},nint,System.ReadOnlyMemory{``0}@)
  name.vb: Read(Of TElement)(IRead(Of TElement), nint, ByRef ReadOnlyMemory(Of TElement))
  fullName: System.TraitExtensions.Read<TElement>(System.Traits.IRead<TElement>, nint, out System.ReadOnlyMemory<TElement>)
  fullName.vb: System.TraitExtensions.Read(Of TElement)(System.Traits.IRead(Of TElement), nint, ByRef System.ReadOnlyMemory(Of TElement))
  nameWithType: TraitExtensions.Read<TElement>(IRead<TElement>, nint, out ReadOnlyMemory<TElement>)
  nameWithType.vb: TraitExtensions.Read(Of TElement)(IRead(Of TElement), nint, ByRef ReadOnlyMemory(Of TElement))
- uid: System.TraitExtensions.Read``1(System.Traits.IRead{``0},nint,System.ReadOnlySpan{``0}@)
  name: Read<TElement>(IRead<TElement>, nint, out ReadOnlySpan<TElement>)
  href: api/System.TraitExtensions.html#System_TraitExtensions_Read__1_System_Traits_IRead___0__nint_System_ReadOnlySpan___0___
  commentId: M:System.TraitExtensions.Read``1(System.Traits.IRead{``0},nint,System.ReadOnlySpan{``0}@)
  name.vb: Read(Of TElement)(IRead(Of TElement), nint, ByRef ReadOnlySpan(Of TElement))
  fullName: System.TraitExtensions.Read<TElement>(System.Traits.IRead<TElement>, nint, out System.ReadOnlySpan<TElement>)
  fullName.vb: System.TraitExtensions.Read(Of TElement)(System.Traits.IRead(Of TElement), nint, ByRef System.ReadOnlySpan(Of TElement))
  nameWithType: TraitExtensions.Read<TElement>(IRead<TElement>, nint, out ReadOnlySpan<TElement>)
  nameWithType.vb: TraitExtensions.Read(Of TElement)(IRead(Of TElement), nint, ByRef ReadOnlySpan(Of TElement))
- uid: System.TraitExtensions.Read``1(System.Traits.IRead{``0},System.Memory{``0})
  name: Read<TElement>(IRead<TElement>, Memory<TElement>)
  href: api/System.TraitExtensions.html#System_TraitExtensions_Read__1_System_Traits_IRead___0__System_Memory___0__
  commentId: M:System.TraitExtensions.Read``1(System.Traits.IRead{``0},System.Memory{``0})
  name.vb: Read(Of TElement)(IRead(Of TElement), Memory(Of TElement))
  fullName: System.TraitExtensions.Read<TElement>(System.Traits.IRead<TElement>, System.Memory<TElement>)
  fullName.vb: System.TraitExtensions.Read(Of TElement)(System.Traits.IRead(Of TElement), System.Memory(Of TElement))
  nameWithType: TraitExtensions.Read<TElement>(IRead<TElement>, Memory<TElement>)
  nameWithType.vb: TraitExtensions.Read(Of TElement)(IRead(Of TElement), Memory(Of TElement))
- uid: System.TraitExtensions.Read``1(System.Traits.IRead{``0},System.Span{``0})
  name: Read<TElement>(IRead<TElement>, Span<TElement>)
  href: api/System.TraitExtensions.html#System_TraitExtensions_Read__1_System_Traits_IRead___0__System_Span___0__
  commentId: M:System.TraitExtensions.Read``1(System.Traits.IRead{``0},System.Span{``0})
  name.vb: Read(Of TElement)(IRead(Of TElement), Span(Of TElement))
  fullName: System.TraitExtensions.Read<TElement>(System.Traits.IRead<TElement>, System.Span<TElement>)
  fullName.vb: System.TraitExtensions.Read(Of TElement)(System.Traits.IRead(Of TElement), System.Span(Of TElement))
  nameWithType: TraitExtensions.Read<TElement>(IRead<TElement>, Span<TElement>)
  nameWithType.vb: TraitExtensions.Read(Of TElement)(IRead(Of TElement), Span(Of TElement))
- uid: System.TraitExtensions.Remove(System.Traits.IRemove{System.Char},System.String)
  name: Remove(IRemove<Char>, String)
  href: api/System.TraitExtensions.html#System_TraitExtensions_Remove_System_Traits_IRemove_System_Char__System_String_
  commentId: M:System.TraitExtensions.Remove(System.Traits.IRemove{System.Char},System.String)
  name.vb: Remove(IRemove(Of Char), String)
  fullName: System.TraitExtensions.Remove(System.Traits.IRemove<System.Char>, System.String)
  fullName.vb: System.TraitExtensions.Remove(System.Traits.IRemove(Of System.Char), System.String)
  nameWithType: TraitExtensions.Remove(IRemove<Char>, String)
  nameWithType.vb: TraitExtensions.Remove(IRemove(Of Char), String)
- uid: System.TraitExtensions.Remove*
  name: Remove
  href: api/System.TraitExtensions.html#System_TraitExtensions_Remove_
  commentId: Overload:System.TraitExtensions.Remove
  isSpec: "True"
  fullName: System.TraitExtensions.Remove
  nameWithType: TraitExtensions.Remove
- uid: System.TraitExtensions.Remove``1(System.Traits.IRemove{``0},``0*,System.Int32)
  name: Remove<TElement>(IRemove<TElement>, TElement*, Int32)
  href: api/System.TraitExtensions.html#System_TraitExtensions_Remove__1_System_Traits_IRemove___0____0__System_Int32_
  commentId: M:System.TraitExtensions.Remove``1(System.Traits.IRemove{``0},``0*,System.Int32)
  name.vb: Remove(Of TElement)(IRemove(Of TElement), TElement*, Int32)
  fullName: System.TraitExtensions.Remove<TElement>(System.Traits.IRemove<TElement>, TElement*, System.Int32)
  fullName.vb: System.TraitExtensions.Remove(Of TElement)(System.Traits.IRemove(Of TElement), TElement*, System.Int32)
  nameWithType: TraitExtensions.Remove<TElement>(IRemove<TElement>, TElement*, Int32)
  nameWithType.vb: TraitExtensions.Remove(Of TElement)(IRemove(Of TElement), TElement*, Int32)
- uid: System.TraitExtensions.Remove``1(System.Traits.IRemove{``0},``0[])
  name: Remove<TElement>(IRemove<TElement>, TElement[])
  href: api/System.TraitExtensions.html#System_TraitExtensions_Remove__1_System_Traits_IRemove___0____0___
  commentId: M:System.TraitExtensions.Remove``1(System.Traits.IRemove{``0},``0[])
  name.vb: Remove(Of TElement)(IRemove(Of TElement), TElement())
  fullName: System.TraitExtensions.Remove<TElement>(System.Traits.IRemove<TElement>, TElement[])
  fullName.vb: System.TraitExtensions.Remove(Of TElement)(System.Traits.IRemove(Of TElement), TElement())
  nameWithType: TraitExtensions.Remove<TElement>(IRemove<TElement>, TElement[])
  nameWithType.vb: TraitExtensions.Remove(Of TElement)(IRemove(Of TElement), TElement())
- uid: System.TraitExtensions.Remove``1(System.Traits.IRemove{``0},System.Collections.Generic.IEnumerable{``0})
  name: Remove<TElement>(IRemove<TElement>, IEnumerable<TElement>)
  href: api/System.TraitExtensions.html#System_TraitExtensions_Remove__1_System_Traits_IRemove___0__System_Collections_Generic_IEnumerable___0__
  commentId: M:System.TraitExtensions.Remove``1(System.Traits.IRemove{``0},System.Collections.Generic.IEnumerable{``0})
  name.vb: Remove(Of TElement)(IRemove(Of TElement), IEnumerable(Of TElement))
  fullName: System.TraitExtensions.Remove<TElement>(System.Traits.IRemove<TElement>, System.Collections.Generic.IEnumerable<TElement>)
  fullName.vb: System.TraitExtensions.Remove(Of TElement)(System.Traits.IRemove(Of TElement), System.Collections.Generic.IEnumerable(Of TElement))
  nameWithType: TraitExtensions.Remove<TElement>(IRemove<TElement>, IEnumerable<TElement>)
  nameWithType.vb: TraitExtensions.Remove(Of TElement)(IRemove(Of TElement), IEnumerable(Of TElement))
- uid: System.TraitExtensions.Remove``1(System.Traits.IRemove{``0},System.Memory{``0})
  name: Remove<TElement>(IRemove<TElement>, Memory<TElement>)
  href: api/System.TraitExtensions.html#System_TraitExtensions_Remove__1_System_Traits_IRemove___0__System_Memory___0__
  commentId: M:System.TraitExtensions.Remove``1(System.Traits.IRemove{``0},System.Memory{``0})
  name.vb: Remove(Of TElement)(IRemove(Of TElement), Memory(Of TElement))
  fullName: System.TraitExtensions.Remove<TElement>(System.Traits.IRemove<TElement>, System.Memory<TElement>)
  fullName.vb: System.TraitExtensions.Remove(Of TElement)(System.Traits.IRemove(Of TElement), System.Memory(Of TElement))
  nameWithType: TraitExtensions.Remove<TElement>(IRemove<TElement>, Memory<TElement>)
  nameWithType.vb: TraitExtensions.Remove(Of TElement)(IRemove(Of TElement), Memory(Of TElement))
- uid: System.TraitExtensions.Remove``1(System.Traits.IRemove{``0},System.ReadOnlyMemory{``0})
  name: Remove<TElement>(IRemove<TElement>, ReadOnlyMemory<TElement>)
  href: api/System.TraitExtensions.html#System_TraitExtensions_Remove__1_System_Traits_IRemove___0__System_ReadOnlyMemory___0__
  commentId: M:System.TraitExtensions.Remove``1(System.Traits.IRemove{``0},System.ReadOnlyMemory{``0})
  name.vb: Remove(Of TElement)(IRemove(Of TElement), ReadOnlyMemory(Of TElement))
  fullName: System.TraitExtensions.Remove<TElement>(System.Traits.IRemove<TElement>, System.ReadOnlyMemory<TElement>)
  fullName.vb: System.TraitExtensions.Remove(Of TElement)(System.Traits.IRemove(Of TElement), System.ReadOnlyMemory(Of TElement))
  nameWithType: TraitExtensions.Remove<TElement>(IRemove<TElement>, ReadOnlyMemory<TElement>)
  nameWithType.vb: TraitExtensions.Remove(Of TElement)(IRemove(Of TElement), ReadOnlyMemory(Of TElement))
- uid: System.TraitExtensions.Remove``1(System.Traits.IRemove{``0},System.ReadOnlySpan{``0})
  name: Remove<TElement>(IRemove<TElement>, ReadOnlySpan<TElement>)
  href: api/System.TraitExtensions.html#System_TraitExtensions_Remove__1_System_Traits_IRemove___0__System_ReadOnlySpan___0__
  commentId: M:System.TraitExtensions.Remove``1(System.Traits.IRemove{``0},System.ReadOnlySpan{``0})
  name.vb: Remove(Of TElement)(IRemove(Of TElement), ReadOnlySpan(Of TElement))
  fullName: System.TraitExtensions.Remove<TElement>(System.Traits.IRemove<TElement>, System.ReadOnlySpan<TElement>)
  fullName.vb: System.TraitExtensions.Remove(Of TElement)(System.Traits.IRemove(Of TElement), System.ReadOnlySpan(Of TElement))
  nameWithType: TraitExtensions.Remove<TElement>(IRemove<TElement>, ReadOnlySpan<TElement>)
  nameWithType.vb: TraitExtensions.Remove(Of TElement)(IRemove(Of TElement), ReadOnlySpan(Of TElement))
- uid: System.TraitExtensions.Remove``1(System.Traits.IRemove{``0},System.Span{``0})
  name: Remove<TElement>(IRemove<TElement>, Span<TElement>)
  href: api/System.TraitExtensions.html#System_TraitExtensions_Remove__1_System_Traits_IRemove___0__System_Span___0__
  commentId: M:System.TraitExtensions.Remove``1(System.Traits.IRemove{``0},System.Span{``0})
  name.vb: Remove(Of TElement)(IRemove(Of TElement), Span(Of TElement))
  fullName: System.TraitExtensions.Remove<TElement>(System.Traits.IRemove<TElement>, System.Span<TElement>)
  fullName.vb: System.TraitExtensions.Remove(Of TElement)(System.Traits.IRemove(Of TElement), System.Span(Of TElement))
  nameWithType: TraitExtensions.Remove<TElement>(IRemove<TElement>, Span<TElement>)
  nameWithType.vb: TraitExtensions.Remove(Of TElement)(IRemove(Of TElement), Span(Of TElement))
- uid: System.TraitExtensions.Remove``2(System.Traits.IRemove{``0},System.Traits.ISequence{``0,``1})
  name: Remove<TElement, TEnumerator>(IRemove<TElement>, ISequence<TElement, TEnumerator>)
  href: api/System.TraitExtensions.html#System_TraitExtensions_Remove__2_System_Traits_IRemove___0__System_Traits_ISequence___0___1__
  commentId: M:System.TraitExtensions.Remove``2(System.Traits.IRemove{``0},System.Traits.ISequence{``0,``1})
  name.vb: Remove(Of TElement, TEnumerator)(IRemove(Of TElement), ISequence(Of TElement, TEnumerator))
  fullName: System.TraitExtensions.Remove<TElement, TEnumerator>(System.Traits.IRemove<TElement>, System.Traits.ISequence<TElement, TEnumerator>)
  fullName.vb: System.TraitExtensions.Remove(Of TElement, TEnumerator)(System.Traits.IRemove(Of TElement), System.Traits.ISequence(Of TElement, TEnumerator))
  nameWithType: TraitExtensions.Remove<TElement, TEnumerator>(IRemove<TElement>, ISequence<TElement, TEnumerator>)
  nameWithType.vb: TraitExtensions.Remove(Of TElement, TEnumerator)(IRemove(Of TElement), ISequence(Of TElement, TEnumerator))
- uid: System.TraitExtensions.RemoveFirst(System.Traits.IRemove{System.Char},System.String)
  name: RemoveFirst(IRemove<Char>, String)
  href: api/System.TraitExtensions.html#System_TraitExtensions_RemoveFirst_System_Traits_IRemove_System_Char__System_String_
  commentId: M:System.TraitExtensions.RemoveFirst(System.Traits.IRemove{System.Char},System.String)
  name.vb: RemoveFirst(IRemove(Of Char), String)
  fullName: System.TraitExtensions.RemoveFirst(System.Traits.IRemove<System.Char>, System.String)
  fullName.vb: System.TraitExtensions.RemoveFirst(System.Traits.IRemove(Of System.Char), System.String)
  nameWithType: TraitExtensions.RemoveFirst(IRemove<Char>, String)
  nameWithType.vb: TraitExtensions.RemoveFirst(IRemove(Of Char), String)
- uid: System.TraitExtensions.RemoveFirst*
  name: RemoveFirst
  href: api/System.TraitExtensions.html#System_TraitExtensions_RemoveFirst_
  commentId: Overload:System.TraitExtensions.RemoveFirst
  isSpec: "True"
  fullName: System.TraitExtensions.RemoveFirst
  nameWithType: TraitExtensions.RemoveFirst
- uid: System.TraitExtensions.RemoveFirst``1(System.Traits.IRemove{``0},``0*,System.Int32)
  name: RemoveFirst<TElement>(IRemove<TElement>, TElement*, Int32)
  href: api/System.TraitExtensions.html#System_TraitExtensions_RemoveFirst__1_System_Traits_IRemove___0____0__System_Int32_
  commentId: M:System.TraitExtensions.RemoveFirst``1(System.Traits.IRemove{``0},``0*,System.Int32)
  name.vb: RemoveFirst(Of TElement)(IRemove(Of TElement), TElement*, Int32)
  fullName: System.TraitExtensions.RemoveFirst<TElement>(System.Traits.IRemove<TElement>, TElement*, System.Int32)
  fullName.vb: System.TraitExtensions.RemoveFirst(Of TElement)(System.Traits.IRemove(Of TElement), TElement*, System.Int32)
  nameWithType: TraitExtensions.RemoveFirst<TElement>(IRemove<TElement>, TElement*, Int32)
  nameWithType.vb: TraitExtensions.RemoveFirst(Of TElement)(IRemove(Of TElement), TElement*, Int32)
- uid: System.TraitExtensions.RemoveFirst``1(System.Traits.IRemove{``0},``0[])
  name: RemoveFirst<TElement>(IRemove<TElement>, TElement[])
  href: api/System.TraitExtensions.html#System_TraitExtensions_RemoveFirst__1_System_Traits_IRemove___0____0___
  commentId: M:System.TraitExtensions.RemoveFirst``1(System.Traits.IRemove{``0},``0[])
  name.vb: RemoveFirst(Of TElement)(IRemove(Of TElement), TElement())
  fullName: System.TraitExtensions.RemoveFirst<TElement>(System.Traits.IRemove<TElement>, TElement[])
  fullName.vb: System.TraitExtensions.RemoveFirst(Of TElement)(System.Traits.IRemove(Of TElement), TElement())
  nameWithType: TraitExtensions.RemoveFirst<TElement>(IRemove<TElement>, TElement[])
  nameWithType.vb: TraitExtensions.RemoveFirst(Of TElement)(IRemove(Of TElement), TElement())
- uid: System.TraitExtensions.RemoveFirst``1(System.Traits.IRemove{``0},System.Collections.Generic.IEnumerable{``0})
  name: RemoveFirst<TElement>(IRemove<TElement>, IEnumerable<TElement>)
  href: api/System.TraitExtensions.html#System_TraitExtensions_RemoveFirst__1_System_Traits_IRemove___0__System_Collections_Generic_IEnumerable___0__
  commentId: M:System.TraitExtensions.RemoveFirst``1(System.Traits.IRemove{``0},System.Collections.Generic.IEnumerable{``0})
  name.vb: RemoveFirst(Of TElement)(IRemove(Of TElement), IEnumerable(Of TElement))
  fullName: System.TraitExtensions.RemoveFirst<TElement>(System.Traits.IRemove<TElement>, System.Collections.Generic.IEnumerable<TElement>)
  fullName.vb: System.TraitExtensions.RemoveFirst(Of TElement)(System.Traits.IRemove(Of TElement), System.Collections.Generic.IEnumerable(Of TElement))
  nameWithType: TraitExtensions.RemoveFirst<TElement>(IRemove<TElement>, IEnumerable<TElement>)
  nameWithType.vb: TraitExtensions.RemoveFirst(Of TElement)(IRemove(Of TElement), IEnumerable(Of TElement))
- uid: System.TraitExtensions.RemoveFirst``1(System.Traits.IRemove{``0},System.Memory{``0})
  name: RemoveFirst<TElement>(IRemove<TElement>, Memory<TElement>)
  href: api/System.TraitExtensions.html#System_TraitExtensions_RemoveFirst__1_System_Traits_IRemove___0__System_Memory___0__
  commentId: M:System.TraitExtensions.RemoveFirst``1(System.Traits.IRemove{``0},System.Memory{``0})
  name.vb: RemoveFirst(Of TElement)(IRemove(Of TElement), Memory(Of TElement))
  fullName: System.TraitExtensions.RemoveFirst<TElement>(System.Traits.IRemove<TElement>, System.Memory<TElement>)
  fullName.vb: System.TraitExtensions.RemoveFirst(Of TElement)(System.Traits.IRemove(Of TElement), System.Memory(Of TElement))
  nameWithType: TraitExtensions.RemoveFirst<TElement>(IRemove<TElement>, Memory<TElement>)
  nameWithType.vb: TraitExtensions.RemoveFirst(Of TElement)(IRemove(Of TElement), Memory(Of TElement))
- uid: System.TraitExtensions.RemoveFirst``1(System.Traits.IRemove{``0},System.ReadOnlyMemory{``0})
  name: RemoveFirst<TElement>(IRemove<TElement>, ReadOnlyMemory<TElement>)
  href: api/System.TraitExtensions.html#System_TraitExtensions_RemoveFirst__1_System_Traits_IRemove___0__System_ReadOnlyMemory___0__
  commentId: M:System.TraitExtensions.RemoveFirst``1(System.Traits.IRemove{``0},System.ReadOnlyMemory{``0})
  name.vb: RemoveFirst(Of TElement)(IRemove(Of TElement), ReadOnlyMemory(Of TElement))
  fullName: System.TraitExtensions.RemoveFirst<TElement>(System.Traits.IRemove<TElement>, System.ReadOnlyMemory<TElement>)
  fullName.vb: System.TraitExtensions.RemoveFirst(Of TElement)(System.Traits.IRemove(Of TElement), System.ReadOnlyMemory(Of TElement))
  nameWithType: TraitExtensions.RemoveFirst<TElement>(IRemove<TElement>, ReadOnlyMemory<TElement>)
  nameWithType.vb: TraitExtensions.RemoveFirst(Of TElement)(IRemove(Of TElement), ReadOnlyMemory(Of TElement))
- uid: System.TraitExtensions.RemoveFirst``1(System.Traits.IRemove{``0},System.ReadOnlySpan{``0})
  name: RemoveFirst<TElement>(IRemove<TElement>, ReadOnlySpan<TElement>)
  href: api/System.TraitExtensions.html#System_TraitExtensions_RemoveFirst__1_System_Traits_IRemove___0__System_ReadOnlySpan___0__
  commentId: M:System.TraitExtensions.RemoveFirst``1(System.Traits.IRemove{``0},System.ReadOnlySpan{``0})
  name.vb: RemoveFirst(Of TElement)(IRemove(Of TElement), ReadOnlySpan(Of TElement))
  fullName: System.TraitExtensions.RemoveFirst<TElement>(System.Traits.IRemove<TElement>, System.ReadOnlySpan<TElement>)
  fullName.vb: System.TraitExtensions.RemoveFirst(Of TElement)(System.Traits.IRemove(Of TElement), System.ReadOnlySpan(Of TElement))
  nameWithType: TraitExtensions.RemoveFirst<TElement>(IRemove<TElement>, ReadOnlySpan<TElement>)
  nameWithType.vb: TraitExtensions.RemoveFirst(Of TElement)(IRemove(Of TElement), ReadOnlySpan(Of TElement))
- uid: System.TraitExtensions.RemoveFirst``1(System.Traits.IRemove{``0},System.Span{``0})
  name: RemoveFirst<TElement>(IRemove<TElement>, Span<TElement>)
  href: api/System.TraitExtensions.html#System_TraitExtensions_RemoveFirst__1_System_Traits_IRemove___0__System_Span___0__
  commentId: M:System.TraitExtensions.RemoveFirst``1(System.Traits.IRemove{``0},System.Span{``0})
  name.vb: RemoveFirst(Of TElement)(IRemove(Of TElement), Span(Of TElement))
  fullName: System.TraitExtensions.RemoveFirst<TElement>(System.Traits.IRemove<TElement>, System.Span<TElement>)
  fullName.vb: System.TraitExtensions.RemoveFirst(Of TElement)(System.Traits.IRemove(Of TElement), System.Span(Of TElement))
  nameWithType: TraitExtensions.RemoveFirst<TElement>(IRemove<TElement>, Span<TElement>)
  nameWithType.vb: TraitExtensions.RemoveFirst(Of TElement)(IRemove(Of TElement), Span(Of TElement))
- uid: System.TraitExtensions.RemoveFirst``2(System.Traits.IRemove{``0},System.Traits.ISequence{``0,``1})
  name: RemoveFirst<TElement, TEnumerator>(IRemove<TElement>, ISequence<TElement, TEnumerator>)
  href: api/System.TraitExtensions.html#System_TraitExtensions_RemoveFirst__2_System_Traits_IRemove___0__System_Traits_ISequence___0___1__
  commentId: M:System.TraitExtensions.RemoveFirst``2(System.Traits.IRemove{``0},System.Traits.ISequence{``0,``1})
  name.vb: RemoveFirst(Of TElement, TEnumerator)(IRemove(Of TElement), ISequence(Of TElement, TEnumerator))
  fullName: System.TraitExtensions.RemoveFirst<TElement, TEnumerator>(System.Traits.IRemove<TElement>, System.Traits.ISequence<TElement, TEnumerator>)
  fullName.vb: System.TraitExtensions.RemoveFirst(Of TElement, TEnumerator)(System.Traits.IRemove(Of TElement), System.Traits.ISequence(Of TElement, TEnumerator))
  nameWithType: TraitExtensions.RemoveFirst<TElement, TEnumerator>(IRemove<TElement>, ISequence<TElement, TEnumerator>)
  nameWithType.vb: TraitExtensions.RemoveFirst(Of TElement, TEnumerator)(IRemove(Of TElement), ISequence(Of TElement, TEnumerator))
- uid: System.TraitExtensions.RemoveLast(System.Traits.IRemove{System.Char},System.String)
  name: RemoveLast(IRemove<Char>, String)
  href: api/System.TraitExtensions.html#System_TraitExtensions_RemoveLast_System_Traits_IRemove_System_Char__System_String_
  commentId: M:System.TraitExtensions.RemoveLast(System.Traits.IRemove{System.Char},System.String)
  name.vb: RemoveLast(IRemove(Of Char), String)
  fullName: System.TraitExtensions.RemoveLast(System.Traits.IRemove<System.Char>, System.String)
  fullName.vb: System.TraitExtensions.RemoveLast(System.Traits.IRemove(Of System.Char), System.String)
  nameWithType: TraitExtensions.RemoveLast(IRemove<Char>, String)
  nameWithType.vb: TraitExtensions.RemoveLast(IRemove(Of Char), String)
- uid: System.TraitExtensions.RemoveLast*
  name: RemoveLast
  href: api/System.TraitExtensions.html#System_TraitExtensions_RemoveLast_
  commentId: Overload:System.TraitExtensions.RemoveLast
  isSpec: "True"
  fullName: System.TraitExtensions.RemoveLast
  nameWithType: TraitExtensions.RemoveLast
- uid: System.TraitExtensions.RemoveLast``1(System.Traits.IRemove{``0},``0*,System.Int32)
  name: RemoveLast<TElement>(IRemove<TElement>, TElement*, Int32)
  href: api/System.TraitExtensions.html#System_TraitExtensions_RemoveLast__1_System_Traits_IRemove___0____0__System_Int32_
  commentId: M:System.TraitExtensions.RemoveLast``1(System.Traits.IRemove{``0},``0*,System.Int32)
  name.vb: RemoveLast(Of TElement)(IRemove(Of TElement), TElement*, Int32)
  fullName: System.TraitExtensions.RemoveLast<TElement>(System.Traits.IRemove<TElement>, TElement*, System.Int32)
  fullName.vb: System.TraitExtensions.RemoveLast(Of TElement)(System.Traits.IRemove(Of TElement), TElement*, System.Int32)
  nameWithType: TraitExtensions.RemoveLast<TElement>(IRemove<TElement>, TElement*, Int32)
  nameWithType.vb: TraitExtensions.RemoveLast(Of TElement)(IRemove(Of TElement), TElement*, Int32)
- uid: System.TraitExtensions.RemoveLast``1(System.Traits.IRemove{``0},``0[])
  name: RemoveLast<TElement>(IRemove<TElement>, TElement[])
  href: api/System.TraitExtensions.html#System_TraitExtensions_RemoveLast__1_System_Traits_IRemove___0____0___
  commentId: M:System.TraitExtensions.RemoveLast``1(System.Traits.IRemove{``0},``0[])
  name.vb: RemoveLast(Of TElement)(IRemove(Of TElement), TElement())
  fullName: System.TraitExtensions.RemoveLast<TElement>(System.Traits.IRemove<TElement>, TElement[])
  fullName.vb: System.TraitExtensions.RemoveLast(Of TElement)(System.Traits.IRemove(Of TElement), TElement())
  nameWithType: TraitExtensions.RemoveLast<TElement>(IRemove<TElement>, TElement[])
  nameWithType.vb: TraitExtensions.RemoveLast(Of TElement)(IRemove(Of TElement), TElement())
- uid: System.TraitExtensions.RemoveLast``1(System.Traits.IRemove{``0},System.Collections.Generic.IEnumerable{``0})
  name: RemoveLast<TElement>(IRemove<TElement>, IEnumerable<TElement>)
  href: api/System.TraitExtensions.html#System_TraitExtensions_RemoveLast__1_System_Traits_IRemove___0__System_Collections_Generic_IEnumerable___0__
  commentId: M:System.TraitExtensions.RemoveLast``1(System.Traits.IRemove{``0},System.Collections.Generic.IEnumerable{``0})
  name.vb: RemoveLast(Of TElement)(IRemove(Of TElement), IEnumerable(Of TElement))
  fullName: System.TraitExtensions.RemoveLast<TElement>(System.Traits.IRemove<TElement>, System.Collections.Generic.IEnumerable<TElement>)
  fullName.vb: System.TraitExtensions.RemoveLast(Of TElement)(System.Traits.IRemove(Of TElement), System.Collections.Generic.IEnumerable(Of TElement))
  nameWithType: TraitExtensions.RemoveLast<TElement>(IRemove<TElement>, IEnumerable<TElement>)
  nameWithType.vb: TraitExtensions.RemoveLast(Of TElement)(IRemove(Of TElement), IEnumerable(Of TElement))
- uid: System.TraitExtensions.RemoveLast``1(System.Traits.IRemove{``0},System.Memory{``0})
  name: RemoveLast<TElement>(IRemove<TElement>, Memory<TElement>)
  href: api/System.TraitExtensions.html#System_TraitExtensions_RemoveLast__1_System_Traits_IRemove___0__System_Memory___0__
  commentId: M:System.TraitExtensions.RemoveLast``1(System.Traits.IRemove{``0},System.Memory{``0})
  name.vb: RemoveLast(Of TElement)(IRemove(Of TElement), Memory(Of TElement))
  fullName: System.TraitExtensions.RemoveLast<TElement>(System.Traits.IRemove<TElement>, System.Memory<TElement>)
  fullName.vb: System.TraitExtensions.RemoveLast(Of TElement)(System.Traits.IRemove(Of TElement), System.Memory(Of TElement))
  nameWithType: TraitExtensions.RemoveLast<TElement>(IRemove<TElement>, Memory<TElement>)
  nameWithType.vb: TraitExtensions.RemoveLast(Of TElement)(IRemove(Of TElement), Memory(Of TElement))
- uid: System.TraitExtensions.RemoveLast``1(System.Traits.IRemove{``0},System.ReadOnlyMemory{``0})
  name: RemoveLast<TElement>(IRemove<TElement>, ReadOnlyMemory<TElement>)
  href: api/System.TraitExtensions.html#System_TraitExtensions_RemoveLast__1_System_Traits_IRemove___0__System_ReadOnlyMemory___0__
  commentId: M:System.TraitExtensions.RemoveLast``1(System.Traits.IRemove{``0},System.ReadOnlyMemory{``0})
  name.vb: RemoveLast(Of TElement)(IRemove(Of TElement), ReadOnlyMemory(Of TElement))
  fullName: System.TraitExtensions.RemoveLast<TElement>(System.Traits.IRemove<TElement>, System.ReadOnlyMemory<TElement>)
  fullName.vb: System.TraitExtensions.RemoveLast(Of TElement)(System.Traits.IRemove(Of TElement), System.ReadOnlyMemory(Of TElement))
  nameWithType: TraitExtensions.RemoveLast<TElement>(IRemove<TElement>, ReadOnlyMemory<TElement>)
  nameWithType.vb: TraitExtensions.RemoveLast(Of TElement)(IRemove(Of TElement), ReadOnlyMemory(Of TElement))
- uid: System.TraitExtensions.RemoveLast``1(System.Traits.IRemove{``0},System.ReadOnlySpan{``0})
  name: RemoveLast<TElement>(IRemove<TElement>, ReadOnlySpan<TElement>)
  href: api/System.TraitExtensions.html#System_TraitExtensions_RemoveLast__1_System_Traits_IRemove___0__System_ReadOnlySpan___0__
  commentId: M:System.TraitExtensions.RemoveLast``1(System.Traits.IRemove{``0},System.ReadOnlySpan{``0})
  name.vb: RemoveLast(Of TElement)(IRemove(Of TElement), ReadOnlySpan(Of TElement))
  fullName: System.TraitExtensions.RemoveLast<TElement>(System.Traits.IRemove<TElement>, System.ReadOnlySpan<TElement>)
  fullName.vb: System.TraitExtensions.RemoveLast(Of TElement)(System.Traits.IRemove(Of TElement), System.ReadOnlySpan(Of TElement))
  nameWithType: TraitExtensions.RemoveLast<TElement>(IRemove<TElement>, ReadOnlySpan<TElement>)
  nameWithType.vb: TraitExtensions.RemoveLast(Of TElement)(IRemove(Of TElement), ReadOnlySpan(Of TElement))
- uid: System.TraitExtensions.RemoveLast``1(System.Traits.IRemove{``0},System.Span{``0})
  name: RemoveLast<TElement>(IRemove<TElement>, Span<TElement>)
  href: api/System.TraitExtensions.html#System_TraitExtensions_RemoveLast__1_System_Traits_IRemove___0__System_Span___0__
  commentId: M:System.TraitExtensions.RemoveLast``1(System.Traits.IRemove{``0},System.Span{``0})
  name.vb: RemoveLast(Of TElement)(IRemove(Of TElement), Span(Of TElement))
  fullName: System.TraitExtensions.RemoveLast<TElement>(System.Traits.IRemove<TElement>, System.Span<TElement>)
  fullName.vb: System.TraitExtensions.RemoveLast(Of TElement)(System.Traits.IRemove(Of TElement), System.Span(Of TElement))
  nameWithType: TraitExtensions.RemoveLast<TElement>(IRemove<TElement>, Span<TElement>)
  nameWithType.vb: TraitExtensions.RemoveLast(Of TElement)(IRemove(Of TElement), Span(Of TElement))
- uid: System.TraitExtensions.RemoveLast``2(System.Traits.IRemove{``0},System.Traits.ISequence{``0,``1})
  name: RemoveLast<TElement, TEnumerator>(IRemove<TElement>, ISequence<TElement, TEnumerator>)
  href: api/System.TraitExtensions.html#System_TraitExtensions_RemoveLast__2_System_Traits_IRemove___0__System_Traits_ISequence___0___1__
  commentId: M:System.TraitExtensions.RemoveLast``2(System.Traits.IRemove{``0},System.Traits.ISequence{``0,``1})
  name.vb: RemoveLast(Of TElement, TEnumerator)(IRemove(Of TElement), ISequence(Of TElement, TEnumerator))
  fullName: System.TraitExtensions.RemoveLast<TElement, TEnumerator>(System.Traits.IRemove<TElement>, System.Traits.ISequence<TElement, TEnumerator>)
  fullName.vb: System.TraitExtensions.RemoveLast(Of TElement, TEnumerator)(System.Traits.IRemove(Of TElement), System.Traits.ISequence(Of TElement, TEnumerator))
  nameWithType: TraitExtensions.RemoveLast<TElement, TEnumerator>(IRemove<TElement>, ISequence<TElement, TEnumerator>)
  nameWithType.vb: TraitExtensions.RemoveLast(Of TElement, TEnumerator)(IRemove(Of TElement), ISequence(Of TElement, TEnumerator))
- uid: System.TraitExtensions.Shrink(System.Traits.IResize)
  name: Shrink(IResize)
  href: api/System.TraitExtensions.html#System_TraitExtensions_Shrink_System_Traits_IResize_
  commentId: M:System.TraitExtensions.Shrink(System.Traits.IResize)
  fullName: System.TraitExtensions.Shrink(System.Traits.IResize)
  nameWithType: TraitExtensions.Shrink(IResize)
- uid: System.TraitExtensions.Shrink*
  name: Shrink
  href: api/System.TraitExtensions.html#System_TraitExtensions_Shrink_
  commentId: Overload:System.TraitExtensions.Shrink
  isSpec: "True"
  fullName: System.TraitExtensions.Shrink
  nameWithType: TraitExtensions.Shrink
- uid: System.TraitExtensions.ToArray*
  name: ToArray
  href: api/System.TraitExtensions.html#System_TraitExtensions_ToArray_
  commentId: Overload:System.TraitExtensions.ToArray
  isSpec: "True"
  fullName: System.TraitExtensions.ToArray
  nameWithType: TraitExtensions.ToArray
- uid: System.TraitExtensions.ToArray``2(System.Traits.ISequence{``0,``1})
  name: ToArray<TElement, TEnumerator>(ISequence<TElement, TEnumerator>)
  href: api/System.TraitExtensions.html#System_TraitExtensions_ToArray__2_System_Traits_ISequence___0___1__
  commentId: M:System.TraitExtensions.ToArray``2(System.Traits.ISequence{``0,``1})
  name.vb: ToArray(Of TElement, TEnumerator)(ISequence(Of TElement, TEnumerator))
  fullName: System.TraitExtensions.ToArray<TElement, TEnumerator>(System.Traits.ISequence<TElement, TEnumerator>)
  fullName.vb: System.TraitExtensions.ToArray(Of TElement, TEnumerator)(System.Traits.ISequence(Of TElement, TEnumerator))
  nameWithType: TraitExtensions.ToArray<TElement, TEnumerator>(ISequence<TElement, TEnumerator>)
  nameWithType.vb: TraitExtensions.ToArray(Of TElement, TEnumerator)(ISequence(Of TElement, TEnumerator))
- uid: System.TraitExtensions.Write(System.Traits.IWrite{System.Char},System.String)
  name: Write(IWrite<Char>, String)
  href: api/System.TraitExtensions.html#System_TraitExtensions_Write_System_Traits_IWrite_System_Char__System_String_
  commentId: M:System.TraitExtensions.Write(System.Traits.IWrite{System.Char},System.String)
  name.vb: Write(IWrite(Of Char), String)
  fullName: System.TraitExtensions.Write(System.Traits.IWrite<System.Char>, System.String)
  fullName.vb: System.TraitExtensions.Write(System.Traits.IWrite(Of System.Char), System.String)
  nameWithType: TraitExtensions.Write(IWrite<Char>, String)
  nameWithType.vb: TraitExtensions.Write(IWrite(Of Char), String)
- uid: System.TraitExtensions.Write*
  name: Write
  href: api/System.TraitExtensions.html#System_TraitExtensions_Write_
  commentId: Overload:System.TraitExtensions.Write
  isSpec: "True"
  fullName: System.TraitExtensions.Write
  nameWithType: TraitExtensions.Write
- uid: System.TraitExtensions.Write``1(System.Traits.IWrite{``0},``0*,System.Int32)
  name: Write<TElement>(IWrite<TElement>, TElement*, Int32)
  href: api/System.TraitExtensions.html#System_TraitExtensions_Write__1_System_Traits_IWrite___0____0__System_Int32_
  commentId: M:System.TraitExtensions.Write``1(System.Traits.IWrite{``0},``0*,System.Int32)
  name.vb: Write(Of TElement)(IWrite(Of TElement), TElement*, Int32)
  fullName: System.TraitExtensions.Write<TElement>(System.Traits.IWrite<TElement>, TElement*, System.Int32)
  fullName.vb: System.TraitExtensions.Write(Of TElement)(System.Traits.IWrite(Of TElement), TElement*, System.Int32)
  nameWithType: TraitExtensions.Write<TElement>(IWrite<TElement>, TElement*, Int32)
  nameWithType.vb: TraitExtensions.Write(Of TElement)(IWrite(Of TElement), TElement*, Int32)
- uid: System.TraitExtensions.Write``1(System.Traits.IWrite{``0},``0[])
  name: Write<TElement>(IWrite<TElement>, TElement[])
  href: api/System.TraitExtensions.html#System_TraitExtensions_Write__1_System_Traits_IWrite___0____0___
  commentId: M:System.TraitExtensions.Write``1(System.Traits.IWrite{``0},``0[])
  name.vb: Write(Of TElement)(IWrite(Of TElement), TElement())
  fullName: System.TraitExtensions.Write<TElement>(System.Traits.IWrite<TElement>, TElement[])
  fullName.vb: System.TraitExtensions.Write(Of TElement)(System.Traits.IWrite(Of TElement), TElement())
  nameWithType: TraitExtensions.Write<TElement>(IWrite<TElement>, TElement[])
  nameWithType.vb: TraitExtensions.Write(Of TElement)(IWrite(Of TElement), TElement())
- uid: System.TraitExtensions.Write``1(System.Traits.IWrite{``0},System.Collections.Generic.IEnumerable{``0})
  name: Write<TElement>(IWrite<TElement>, IEnumerable<TElement>)
  href: api/System.TraitExtensions.html#System_TraitExtensions_Write__1_System_Traits_IWrite___0__System_Collections_Generic_IEnumerable___0__
  commentId: M:System.TraitExtensions.Write``1(System.Traits.IWrite{``0},System.Collections.Generic.IEnumerable{``0})
  name.vb: Write(Of TElement)(IWrite(Of TElement), IEnumerable(Of TElement))
  fullName: System.TraitExtensions.Write<TElement>(System.Traits.IWrite<TElement>, System.Collections.Generic.IEnumerable<TElement>)
  fullName.vb: System.TraitExtensions.Write(Of TElement)(System.Traits.IWrite(Of TElement), System.Collections.Generic.IEnumerable(Of TElement))
  nameWithType: TraitExtensions.Write<TElement>(IWrite<TElement>, IEnumerable<TElement>)
  nameWithType.vb: TraitExtensions.Write(Of TElement)(IWrite(Of TElement), IEnumerable(Of TElement))
- uid: System.TraitExtensions.Write``1(System.Traits.IWrite{``0},System.Memory{``0})
  name: Write<TElement>(IWrite<TElement>, Memory<TElement>)
  href: api/System.TraitExtensions.html#System_TraitExtensions_Write__1_System_Traits_IWrite___0__System_Memory___0__
  commentId: M:System.TraitExtensions.Write``1(System.Traits.IWrite{``0},System.Memory{``0})
  name.vb: Write(Of TElement)(IWrite(Of TElement), Memory(Of TElement))
  fullName: System.TraitExtensions.Write<TElement>(System.Traits.IWrite<TElement>, System.Memory<TElement>)
  fullName.vb: System.TraitExtensions.Write(Of TElement)(System.Traits.IWrite(Of TElement), System.Memory(Of TElement))
  nameWithType: TraitExtensions.Write<TElement>(IWrite<TElement>, Memory<TElement>)
  nameWithType.vb: TraitExtensions.Write(Of TElement)(IWrite(Of TElement), Memory(Of TElement))
- uid: System.TraitExtensions.Write``1(System.Traits.IWrite{``0},System.ReadOnlyMemory{``0})
  name: Write<TElement>(IWrite<TElement>, ReadOnlyMemory<TElement>)
  href: api/System.TraitExtensions.html#System_TraitExtensions_Write__1_System_Traits_IWrite___0__System_ReadOnlyMemory___0__
  commentId: M:System.TraitExtensions.Write``1(System.Traits.IWrite{``0},System.ReadOnlyMemory{``0})
  name.vb: Write(Of TElement)(IWrite(Of TElement), ReadOnlyMemory(Of TElement))
  fullName: System.TraitExtensions.Write<TElement>(System.Traits.IWrite<TElement>, System.ReadOnlyMemory<TElement>)
  fullName.vb: System.TraitExtensions.Write(Of TElement)(System.Traits.IWrite(Of TElement), System.ReadOnlyMemory(Of TElement))
  nameWithType: TraitExtensions.Write<TElement>(IWrite<TElement>, ReadOnlyMemory<TElement>)
  nameWithType.vb: TraitExtensions.Write(Of TElement)(IWrite(Of TElement), ReadOnlyMemory(Of TElement))
- uid: System.TraitExtensions.Write``1(System.Traits.IWrite{``0},System.ReadOnlySpan{``0})
  name: Write<TElement>(IWrite<TElement>, ReadOnlySpan<TElement>)
  href: api/System.TraitExtensions.html#System_TraitExtensions_Write__1_System_Traits_IWrite___0__System_ReadOnlySpan___0__
  commentId: M:System.TraitExtensions.Write``1(System.Traits.IWrite{``0},System.ReadOnlySpan{``0})
  name.vb: Write(Of TElement)(IWrite(Of TElement), ReadOnlySpan(Of TElement))
  fullName: System.TraitExtensions.Write<TElement>(System.Traits.IWrite<TElement>, System.ReadOnlySpan<TElement>)
  fullName.vb: System.TraitExtensions.Write(Of TElement)(System.Traits.IWrite(Of TElement), System.ReadOnlySpan(Of TElement))
  nameWithType: TraitExtensions.Write<TElement>(IWrite<TElement>, ReadOnlySpan<TElement>)
  nameWithType.vb: TraitExtensions.Write(Of TElement)(IWrite(Of TElement), ReadOnlySpan(Of TElement))
- uid: System.TraitExtensions.Write``1(System.Traits.IWrite{``0},System.Span{``0})
  name: Write<TElement>(IWrite<TElement>, Span<TElement>)
  href: api/System.TraitExtensions.html#System_TraitExtensions_Write__1_System_Traits_IWrite___0__System_Span___0__
  commentId: M:System.TraitExtensions.Write``1(System.Traits.IWrite{``0},System.Span{``0})
  name.vb: Write(Of TElement)(IWrite(Of TElement), Span(Of TElement))
  fullName: System.TraitExtensions.Write<TElement>(System.Traits.IWrite<TElement>, System.Span<TElement>)
  fullName.vb: System.TraitExtensions.Write(Of TElement)(System.Traits.IWrite(Of TElement), System.Span(Of TElement))
  nameWithType: TraitExtensions.Write<TElement>(IWrite<TElement>, Span<TElement>)
  nameWithType.vb: TraitExtensions.Write(Of TElement)(IWrite(Of TElement), Span(Of TElement))
- uid: System.TraitExtensions.Write``2(System.Traits.IWrite{``0},System.Traits.ISequence{``0,``1})
  name: Write<TElement, TEnumerator>(IWrite<TElement>, ISequence<TElement, TEnumerator>)
  href: api/System.TraitExtensions.html#System_TraitExtensions_Write__2_System_Traits_IWrite___0__System_Traits_ISequence___0___1__
  commentId: M:System.TraitExtensions.Write``2(System.Traits.IWrite{``0},System.Traits.ISequence{``0,``1})
  name.vb: Write(Of TElement, TEnumerator)(IWrite(Of TElement), ISequence(Of TElement, TEnumerator))
  fullName: System.TraitExtensions.Write<TElement, TEnumerator>(System.Traits.IWrite<TElement>, System.Traits.ISequence<TElement, TEnumerator>)
  fullName.vb: System.TraitExtensions.Write(Of TElement, TEnumerator)(System.Traits.IWrite(Of TElement), System.Traits.ISequence(Of TElement, TEnumerator))
  nameWithType: TraitExtensions.Write<TElement, TEnumerator>(IWrite<TElement>, ISequence<TElement, TEnumerator>)
  nameWithType.vb: TraitExtensions.Write(Of TElement, TEnumerator)(IWrite(Of TElement), ISequence(Of TElement, TEnumerator))
- uid: System.Traits
  name: System.Traits
  href: api/System.Traits.html
  commentId: N:System.Traits
  fullName: System.Traits
  nameWithType: System.Traits
- uid: System.Traits.IAdd`1
  name: IAdd<TElement>
  href: api/System.Traits.IAdd-1.html
  commentId: T:System.Traits.IAdd`1
  name.vb: IAdd(Of TElement)
  fullName: System.Traits.IAdd<TElement>
  fullName.vb: System.Traits.IAdd(Of TElement)
  nameWithType: IAdd<TElement>
  nameWithType.vb: IAdd(Of TElement)
- uid: System.Traits.IAdd`1.Add(`0)
  name: Add(TElement)
  href: api/System.Traits.IAdd-1.html#System_Traits_IAdd_1_Add__0_
  commentId: M:System.Traits.IAdd`1.Add(`0)
  fullName: System.Traits.IAdd<TElement>.Add(TElement)
  fullName.vb: System.Traits.IAdd(Of TElement).Add(TElement)
  nameWithType: IAdd<TElement>.Add(TElement)
  nameWithType.vb: IAdd(Of TElement).Add(TElement)
- uid: System.Traits.IAdd`1.Add*
  name: Add
  href: api/System.Traits.IAdd-1.html#System_Traits_IAdd_1_Add_
  commentId: Overload:System.Traits.IAdd`1.Add
  isSpec: "True"
  fullName: System.Traits.IAdd<TElement>.Add
  fullName.vb: System.Traits.IAdd(Of TElement).Add
  nameWithType: IAdd<TElement>.Add
  nameWithType.vb: IAdd(Of TElement).Add
- uid: System.Traits.IAddMemory`1
  name: IAddMemory<TElement>
  href: api/System.Traits.IAddMemory-1.html
  commentId: T:System.Traits.IAddMemory`1
  name.vb: IAddMemory(Of TElement)
  fullName: System.Traits.IAddMemory<TElement>
  fullName.vb: System.Traits.IAddMemory(Of TElement)
  nameWithType: IAddMemory<TElement>
  nameWithType.vb: IAddMemory(Of TElement)
- uid: System.Traits.IAddMemory`1.Add(`0[])
  name: Add(TElement[])
  href: api/System.Traits.IAddMemory-1.html#System_Traits_IAddMemory_1_Add__0___
  commentId: M:System.Traits.IAddMemory`1.Add(`0[])
  name.vb: Add(TElement())
  fullName: System.Traits.IAddMemory<TElement>.Add(TElement[])
  fullName.vb: System.Traits.IAddMemory(Of TElement).Add(TElement())
  nameWithType: IAddMemory<TElement>.Add(TElement[])
  nameWithType.vb: IAddMemory(Of TElement).Add(TElement())
- uid: System.Traits.IAddMemory`1.Add(System.Memory{`0})
  name: Add(Memory<TElement>)
  href: api/System.Traits.IAddMemory-1.html#System_Traits_IAddMemory_1_Add_System_Memory__0__
  commentId: M:System.Traits.IAddMemory`1.Add(System.Memory{`0})
  name.vb: Add(Memory(Of TElement))
  fullName: System.Traits.IAddMemory<TElement>.Add(System.Memory<TElement>)
  fullName.vb: System.Traits.IAddMemory(Of TElement).Add(System.Memory(Of TElement))
  nameWithType: IAddMemory<TElement>.Add(Memory<TElement>)
  nameWithType.vb: IAddMemory(Of TElement).Add(Memory(Of TElement))
- uid: System.Traits.IAddMemory`1.Add(System.ReadOnlyMemory{`0})
  name: Add(ReadOnlyMemory<TElement>)
  href: api/System.Traits.IAddMemory-1.html#System_Traits_IAddMemory_1_Add_System_ReadOnlyMemory__0__
  commentId: M:System.Traits.IAddMemory`1.Add(System.ReadOnlyMemory{`0})
  name.vb: Add(ReadOnlyMemory(Of TElement))
  fullName: System.Traits.IAddMemory<TElement>.Add(System.ReadOnlyMemory<TElement>)
  fullName.vb: System.Traits.IAddMemory(Of TElement).Add(System.ReadOnlyMemory(Of TElement))
  nameWithType: IAddMemory<TElement>.Add(ReadOnlyMemory<TElement>)
  nameWithType.vb: IAddMemory(Of TElement).Add(ReadOnlyMemory(Of TElement))
- uid: System.Traits.IAddMemory`1.Add*
  name: Add
  href: api/System.Traits.IAddMemory-1.html#System_Traits_IAddMemory_1_Add_
  commentId: Overload:System.Traits.IAddMemory`1.Add
  isSpec: "True"
  fullName: System.Traits.IAddMemory<TElement>.Add
  fullName.vb: System.Traits.IAddMemory(Of TElement).Add
  nameWithType: IAddMemory<TElement>.Add
  nameWithType.vb: IAddMemory(Of TElement).Add
- uid: System.Traits.IAddSpan`1
  name: IAddSpan<TElement>
  href: api/System.Traits.IAddSpan-1.html
  commentId: T:System.Traits.IAddSpan`1
  name.vb: IAddSpan(Of TElement)
  fullName: System.Traits.IAddSpan<TElement>
  fullName.vb: System.Traits.IAddSpan(Of TElement)
  nameWithType: IAddSpan<TElement>
  nameWithType.vb: IAddSpan(Of TElement)
- uid: System.Traits.IAddSpan`1.Add(System.ReadOnlySpan{`0})
  name: Add(ReadOnlySpan<TElement>)
  href: api/System.Traits.IAddSpan-1.html#System_Traits_IAddSpan_1_Add_System_ReadOnlySpan__0__
  commentId: M:System.Traits.IAddSpan`1.Add(System.ReadOnlySpan{`0})
  name.vb: Add(ReadOnlySpan(Of TElement))
  fullName: System.Traits.IAddSpan<TElement>.Add(System.ReadOnlySpan<TElement>)
  fullName.vb: System.Traits.IAddSpan(Of TElement).Add(System.ReadOnlySpan(Of TElement))
  nameWithType: IAddSpan<TElement>.Add(ReadOnlySpan<TElement>)
  nameWithType.vb: IAddSpan(Of TElement).Add(ReadOnlySpan(Of TElement))
- uid: System.Traits.IAddSpan`1.Add(System.Span{`0})
  name: Add(Span<TElement>)
  href: api/System.Traits.IAddSpan-1.html#System_Traits_IAddSpan_1_Add_System_Span__0__
  commentId: M:System.Traits.IAddSpan`1.Add(System.Span{`0})
  name.vb: Add(Span(Of TElement))
  fullName: System.Traits.IAddSpan<TElement>.Add(System.Span<TElement>)
  fullName.vb: System.Traits.IAddSpan(Of TElement).Add(System.Span(Of TElement))
  nameWithType: IAddSpan<TElement>.Add(Span<TElement>)
  nameWithType.vb: IAddSpan(Of TElement).Add(Span(Of TElement))
- uid: System.Traits.IAddSpan`1.Add*
  name: Add
  href: api/System.Traits.IAddSpan-1.html#System_Traits_IAddSpan_1_Add_
  commentId: Overload:System.Traits.IAddSpan`1.Add
  isSpec: "True"
  fullName: System.Traits.IAddSpan<TElement>.Add
  fullName.vb: System.Traits.IAddSpan(Of TElement).Add
  nameWithType: IAddSpan<TElement>.Add
  nameWithType.vb: IAddSpan(Of TElement).Add
- uid: System.Traits.ICapacity
  name: ICapacity
  href: api/System.Traits.ICapacity.html
  commentId: T:System.Traits.ICapacity
  fullName: System.Traits.ICapacity
  nameWithType: ICapacity
- uid: System.Traits.ICapacity.Capacity
  name: Capacity
  href: api/System.Traits.ICapacity.html#System_Traits_ICapacity_Capacity
  commentId: P:System.Traits.ICapacity.Capacity
  fullName: System.Traits.ICapacity.Capacity
  nameWithType: ICapacity.Capacity
- uid: System.Traits.ICapacity.Capacity*
  name: Capacity
  href: api/System.Traits.ICapacity.html#System_Traits_ICapacity_Capacity_
  commentId: Overload:System.Traits.ICapacity.Capacity
  isSpec: "True"
  fullName: System.Traits.ICapacity.Capacity
  nameWithType: ICapacity.Capacity
- uid: System.Traits.IClear
  name: IClear
  href: api/System.Traits.IClear.html
  commentId: T:System.Traits.IClear
  fullName: System.Traits.IClear
  nameWithType: IClear
- uid: System.Traits.IClear.Clear
  name: Clear()
  href: api/System.Traits.IClear.html#System_Traits_IClear_Clear
  commentId: M:System.Traits.IClear.Clear
  fullName: System.Traits.IClear.Clear()
  nameWithType: IClear.Clear()
- uid: System.Traits.IClear.Clear*
  name: Clear
  href: api/System.Traits.IClear.html#System_Traits_IClear_Clear_
  commentId: Overload:System.Traits.IClear.Clear
  isSpec: "True"
  fullName: System.Traits.IClear.Clear
  nameWithType: IClear.Clear
- uid: System.Traits.ICompare`1
  name: ICompare<TElement>
  href: api/System.Traits.ICompare-1.html
  commentId: T:System.Traits.ICompare`1
  name.vb: ICompare(Of TElement)
  fullName: System.Traits.ICompare<TElement>
  fullName.vb: System.Traits.ICompare(Of TElement)
  nameWithType: ICompare<TElement>
  nameWithType.vb: ICompare(Of TElement)
- uid: System.Traits.IContains`1
  name: IContains<TElement>
  href: api/System.Traits.IContains-1.html
  commentId: T:System.Traits.IContains`1
  name.vb: IContains(Of TElement)
  fullName: System.Traits.IContains<TElement>
  fullName.vb: System.Traits.IContains(Of TElement)
  nameWithType: IContains<TElement>
  nameWithType.vb: IContains(Of TElement)
- uid: System.Traits.IContains`1.Contains(`0)
  name: Contains(TElement)
  href: api/System.Traits.IContains-1.html#System_Traits_IContains_1_Contains__0_
  commentId: M:System.Traits.IContains`1.Contains(`0)
  fullName: System.Traits.IContains<TElement>.Contains(TElement)
  fullName.vb: System.Traits.IContains(Of TElement).Contains(TElement)
  nameWithType: IContains<TElement>.Contains(TElement)
  nameWithType.vb: IContains(Of TElement).Contains(TElement)
- uid: System.Traits.IContains`1.Contains*
  name: Contains
  href: api/System.Traits.IContains-1.html#System_Traits_IContains_1_Contains_
  commentId: Overload:System.Traits.IContains`1.Contains
  isSpec: "True"
  fullName: System.Traits.IContains<TElement>.Contains
  fullName.vb: System.Traits.IContains(Of TElement).Contains
  nameWithType: IContains<TElement>.Contains
  nameWithType.vb: IContains(Of TElement).Contains
- uid: System.Traits.IControlled
  name: IControlled
  href: api/System.Traits.IControlled.html
  commentId: T:System.Traits.IControlled
  fullName: System.Traits.IControlled
  nameWithType: IControlled
- uid: System.Traits.IControlled.Dispose(System.Boolean)
  name: Dispose(Boolean)
  href: api/System.Traits.IControlled.html#System_Traits_IControlled_Dispose_System_Boolean_
  commentId: M:System.Traits.IControlled.Dispose(System.Boolean)
  fullName: System.Traits.IControlled.Dispose(System.Boolean)
  nameWithType: IControlled.Dispose(Boolean)
- uid: System.Traits.IControlled.Dispose*
  name: Dispose
  href: api/System.Traits.IControlled.html#System_Traits_IControlled_Dispose_
  commentId: Overload:System.Traits.IControlled.Dispose
  isSpec: "True"
  fullName: System.Traits.IControlled.Dispose
  nameWithType: IControlled.Dispose
- uid: System.Traits.IControlled.Disposed
  name: Disposed
  href: api/System.Traits.IControlled.html#System_Traits_IControlled_Disposed
  commentId: P:System.Traits.IControlled.Disposed
  fullName: System.Traits.IControlled.Disposed
  nameWithType: IControlled.Disposed
- uid: System.Traits.IControlled.Disposed*
  name: Disposed
  href: api/System.Traits.IControlled.html#System_Traits_IControlled_Disposed_
  commentId: Overload:System.Traits.IControlled.Disposed
  isSpec: "True"
  fullName: System.Traits.IControlled.Disposed
  nameWithType: IControlled.Disposed
- uid: System.Traits.IControlled.DisposeManaged
  name: DisposeManaged()
  href: api/System.Traits.IControlled.html#System_Traits_IControlled_DisposeManaged
  commentId: M:System.Traits.IControlled.DisposeManaged
  fullName: System.Traits.IControlled.DisposeManaged()
  nameWithType: IControlled.DisposeManaged()
- uid: System.Traits.IControlled.DisposeManaged*
  name: DisposeManaged
  href: api/System.Traits.IControlled.html#System_Traits_IControlled_DisposeManaged_
  commentId: Overload:System.Traits.IControlled.DisposeManaged
  isSpec: "True"
  fullName: System.Traits.IControlled.DisposeManaged
  nameWithType: IControlled.DisposeManaged
- uid: System.Traits.IControlled.DisposeUnmanaged
  name: DisposeUnmanaged()
  href: api/System.Traits.IControlled.html#System_Traits_IControlled_DisposeUnmanaged
  commentId: M:System.Traits.IControlled.DisposeUnmanaged
  fullName: System.Traits.IControlled.DisposeUnmanaged()
  nameWithType: IControlled.DisposeUnmanaged()
- uid: System.Traits.IControlled.DisposeUnmanaged*
  name: DisposeUnmanaged
  href: api/System.Traits.IControlled.html#System_Traits_IControlled_DisposeUnmanaged_
  commentId: Overload:System.Traits.IControlled.DisposeUnmanaged
  isSpec: "True"
  fullName: System.Traits.IControlled.DisposeUnmanaged
  nameWithType: IControlled.DisposeUnmanaged
- uid: System.Traits.IControlled.NullLargeFields
  name: NullLargeFields()
  href: api/System.Traits.IControlled.html#System_Traits_IControlled_NullLargeFields
  commentId: M:System.Traits.IControlled.NullLargeFields
  fullName: System.Traits.IControlled.NullLargeFields()
  nameWithType: IControlled.NullLargeFields()
- uid: System.Traits.IControlled.NullLargeFields*
  name: NullLargeFields
  href: api/System.Traits.IControlled.html#System_Traits_IControlled_NullLargeFields_
  commentId: Overload:System.Traits.IControlled.NullLargeFields
  isSpec: "True"
  fullName: System.Traits.IControlled.NullLargeFields
  nameWithType: IControlled.NullLargeFields
- uid: System.Traits.ICount
  name: ICount
  href: api/System.Traits.ICount.html
  commentId: T:System.Traits.ICount
  fullName: System.Traits.ICount
  nameWithType: ICount
- uid: System.Traits.ICount.Count
  name: Count
  href: api/System.Traits.ICount.html#System_Traits_ICount_Count
  commentId: P:System.Traits.ICount.Count
  fullName: System.Traits.ICount.Count
  nameWithType: ICount.Count
- uid: System.Traits.ICount.Count*
  name: Count
  href: api/System.Traits.ICount.html#System_Traits_ICount_Count_
  commentId: Overload:System.Traits.ICount.Count
  isSpec: "True"
  fullName: System.Traits.ICount.Count
  nameWithType: ICount.Count
- uid: System.Traits.IEnumerator`1
  name: IEnumerator<TElement>
  href: api/System.Traits.IEnumerator-1.html
  commentId: T:System.Traits.IEnumerator`1
  name.vb: IEnumerator(Of TElement)
  fullName: System.Traits.IEnumerator<TElement>
  fullName.vb: System.Traits.IEnumerator(Of TElement)
  nameWithType: IEnumerator<TElement>
  nameWithType.vb: IEnumerator(Of TElement)
- uid: System.Traits.IIndex`2
  name: IIndex<TIndex, TElement>
  href: api/System.Traits.IIndex-2.html
  commentId: T:System.Traits.IIndex`2
  name.vb: IIndex(Of TIndex, TElement)
  fullName: System.Traits.IIndex<TIndex, TElement>
  fullName.vb: System.Traits.IIndex(Of TIndex, TElement)
  nameWithType: IIndex<TIndex, TElement>
  nameWithType.vb: IIndex(Of TIndex, TElement)
- uid: System.Traits.IIndex`2.Item(`0)
  name: Item[TIndex]
  href: api/System.Traits.IIndex-2.html#System_Traits_IIndex_2_Item__0_
  commentId: P:System.Traits.IIndex`2.Item(`0)
  name.vb: Item(TIndex)
  fullName: System.Traits.IIndex<TIndex, TElement>.Item[TIndex]
  fullName.vb: System.Traits.IIndex(Of TIndex, TElement).Item(TIndex)
  nameWithType: IIndex<TIndex, TElement>.Item[TIndex]
  nameWithType.vb: IIndex(Of TIndex, TElement).Item(TIndex)
- uid: System.Traits.IIndex`2.Item*
  name: Item
  href: api/System.Traits.IIndex-2.html#System_Traits_IIndex_2_Item_
  commentId: Overload:System.Traits.IIndex`2.Item
  isSpec: "True"
  fullName: System.Traits.IIndex<TIndex, TElement>.Item
  fullName.vb: System.Traits.IIndex(Of TIndex, TElement).Item
  nameWithType: IIndex<TIndex, TElement>.Item
  nameWithType.vb: IIndex(Of TIndex, TElement).Item
- uid: System.Traits.IIndexReadOnly`2
  name: IIndexReadOnly<TIndex, TElement>
  href: api/System.Traits.IIndexReadOnly-2.html
  commentId: T:System.Traits.IIndexReadOnly`2
  name.vb: IIndexReadOnly(Of TIndex, TElement)
  fullName: System.Traits.IIndexReadOnly<TIndex, TElement>
  fullName.vb: System.Traits.IIndexReadOnly(Of TIndex, TElement)
  nameWithType: IIndexReadOnly<TIndex, TElement>
  nameWithType.vb: IIndexReadOnly(Of TIndex, TElement)
- uid: System.Traits.IIndexReadOnly`2.Item(`0)
  name: Item[TIndex]
  href: api/System.Traits.IIndexReadOnly-2.html#System_Traits_IIndexReadOnly_2_Item__0_
  commentId: P:System.Traits.IIndexReadOnly`2.Item(`0)
  name.vb: Item(TIndex)
  fullName: System.Traits.IIndexReadOnly<TIndex, TElement>.Item[TIndex]
  fullName.vb: System.Traits.IIndexReadOnly(Of TIndex, TElement).Item(TIndex)
  nameWithType: IIndexReadOnly<TIndex, TElement>.Item[TIndex]
  nameWithType.vb: IIndexReadOnly(Of TIndex, TElement).Item(TIndex)
- uid: System.Traits.IIndexReadOnly`2.Item*
  name: Item
  href: api/System.Traits.IIndexReadOnly-2.html#System_Traits_IIndexReadOnly_2_Item_
  commentId: Overload:System.Traits.IIndexReadOnly`2.Item
  isSpec: "True"
  fullName: System.Traits.IIndexReadOnly<TIndex, TElement>.Item
  fullName.vb: System.Traits.IIndexReadOnly(Of TIndex, TElement).Item
  nameWithType: IIndexReadOnly<TIndex, TElement>.Item
  nameWithType.vb: IIndexReadOnly(Of TIndex, TElement).Item
- uid: System.Traits.IIndexReadOnlyUnsafe`2
  name: IIndexReadOnlyUnsafe<TIndex, TElement>
  href: api/System.Traits.IIndexReadOnlyUnsafe-2.html
  commentId: T:System.Traits.IIndexReadOnlyUnsafe`2
  name.vb: IIndexReadOnlyUnsafe(Of TIndex, TElement)
  fullName: System.Traits.IIndexReadOnlyUnsafe<TIndex, TElement>
  fullName.vb: System.Traits.IIndexReadOnlyUnsafe(Of TIndex, TElement)
  nameWithType: IIndexReadOnlyUnsafe<TIndex, TElement>
  nameWithType.vb: IIndexReadOnlyUnsafe(Of TIndex, TElement)
- uid: System.Traits.IIndexReadOnlyUnsafe`2.Item(`0*,System.Int32)
  name: Item[TIndex*, Int32]
  href: api/System.Traits.IIndexReadOnlyUnsafe-2.html#System_Traits_IIndexReadOnlyUnsafe_2_Item__0__System_Int32_
  commentId: P:System.Traits.IIndexReadOnlyUnsafe`2.Item(`0*,System.Int32)
  name.vb: Item(TIndex*, Int32)
  fullName: System.Traits.IIndexReadOnlyUnsafe<TIndex, TElement>.Item[TIndex*, System.Int32]
  fullName.vb: System.Traits.IIndexReadOnlyUnsafe(Of TIndex, TElement).Item(TIndex*, System.Int32)
  nameWithType: IIndexReadOnlyUnsafe<TIndex, TElement>.Item[TIndex*, Int32]
  nameWithType.vb: IIndexReadOnlyUnsafe(Of TIndex, TElement).Item(TIndex*, Int32)
- uid: System.Traits.IIndexReadOnlyUnsafe`2.Item*
  name: Item
  href: api/System.Traits.IIndexReadOnlyUnsafe-2.html#System_Traits_IIndexReadOnlyUnsafe_2_Item_
  commentId: Overload:System.Traits.IIndexReadOnlyUnsafe`2.Item
  isSpec: "True"
  fullName: System.Traits.IIndexReadOnlyUnsafe<TIndex, TElement>.Item
  fullName.vb: System.Traits.IIndexReadOnlyUnsafe(Of TIndex, TElement).Item
  nameWithType: IIndexReadOnlyUnsafe<TIndex, TElement>.Item
  nameWithType.vb: IIndexReadOnlyUnsafe(Of TIndex, TElement).Item
- uid: System.Traits.IIndexRef`2
  name: IIndexRef<TIndex, TElement>
  href: api/System.Traits.IIndexRef-2.html
  commentId: T:System.Traits.IIndexRef`2
  name.vb: IIndexRef(Of TIndex, TElement)
  fullName: System.Traits.IIndexRef<TIndex, TElement>
  fullName.vb: System.Traits.IIndexRef(Of TIndex, TElement)
  nameWithType: IIndexRef<TIndex, TElement>
  nameWithType.vb: IIndexRef(Of TIndex, TElement)
- uid: System.Traits.IIndexRef`2.Item(`0)
  name: Item[TIndex]
  href: api/System.Traits.IIndexRef-2.html#System_Traits_IIndexRef_2_Item__0_
  commentId: P:System.Traits.IIndexRef`2.Item(`0)
  name.vb: Item(TIndex)
  fullName: System.Traits.IIndexRef<TIndex, TElement>.Item[TIndex]
  fullName.vb: System.Traits.IIndexRef(Of TIndex, TElement).Item(TIndex)
  nameWithType: IIndexRef<TIndex, TElement>.Item[TIndex]
  nameWithType.vb: IIndexRef(Of TIndex, TElement).Item(TIndex)
- uid: System.Traits.IIndexRef`2.Item*
  name: Item
  href: api/System.Traits.IIndexRef-2.html#System_Traits_IIndexRef_2_Item_
  commentId: Overload:System.Traits.IIndexRef`2.Item
  isSpec: "True"
  fullName: System.Traits.IIndexRef<TIndex, TElement>.Item
  fullName.vb: System.Traits.IIndexRef(Of TIndex, TElement).Item
  nameWithType: IIndexRef<TIndex, TElement>.Item
  nameWithType.vb: IIndexRef(Of TIndex, TElement).Item
- uid: System.Traits.IIndexRefReadOnly`2
  name: IIndexRefReadOnly<TIndex, TElement>
  href: api/System.Traits.IIndexRefReadOnly-2.html
  commentId: T:System.Traits.IIndexRefReadOnly`2
  name.vb: IIndexRefReadOnly(Of TIndex, TElement)
  fullName: System.Traits.IIndexRefReadOnly<TIndex, TElement>
  fullName.vb: System.Traits.IIndexRefReadOnly(Of TIndex, TElement)
  nameWithType: IIndexRefReadOnly<TIndex, TElement>
  nameWithType.vb: IIndexRefReadOnly(Of TIndex, TElement)
- uid: System.Traits.IIndexRefReadOnly`2.Item(`0)
  name: Item[TIndex]
  href: api/System.Traits.IIndexRefReadOnly-2.html#System_Traits_IIndexRefReadOnly_2_Item__0_
  commentId: P:System.Traits.IIndexRefReadOnly`2.Item(`0)
  name.vb: Item(TIndex)
  fullName: System.Traits.IIndexRefReadOnly<TIndex, TElement>.Item[TIndex]
  fullName.vb: System.Traits.IIndexRefReadOnly(Of TIndex, TElement).Item(TIndex)
  nameWithType: IIndexRefReadOnly<TIndex, TElement>.Item[TIndex]
  nameWithType.vb: IIndexRefReadOnly(Of TIndex, TElement).Item(TIndex)
- uid: System.Traits.IIndexRefReadOnly`2.Item*
  name: Item
  href: api/System.Traits.IIndexRefReadOnly-2.html#System_Traits_IIndexRefReadOnly_2_Item_
  commentId: Overload:System.Traits.IIndexRefReadOnly`2.Item
  isSpec: "True"
  fullName: System.Traits.IIndexRefReadOnly<TIndex, TElement>.Item
  fullName.vb: System.Traits.IIndexRefReadOnly(Of TIndex, TElement).Item
  nameWithType: IIndexRefReadOnly<TIndex, TElement>.Item
  nameWithType.vb: IIndexRefReadOnly(Of TIndex, TElement).Item
- uid: System.Traits.IIndexUnsafe`2
  name: IIndexUnsafe<TIndex, TElement>
  href: api/System.Traits.IIndexUnsafe-2.html
  commentId: T:System.Traits.IIndexUnsafe`2
  name.vb: IIndexUnsafe(Of TIndex, TElement)
  fullName: System.Traits.IIndexUnsafe<TIndex, TElement>
  fullName.vb: System.Traits.IIndexUnsafe(Of TIndex, TElement)
  nameWithType: IIndexUnsafe<TIndex, TElement>
  nameWithType.vb: IIndexUnsafe(Of TIndex, TElement)
- uid: System.Traits.IIndexUnsafe`2.Item(`0*,System.Int32)
  name: Item[TIndex*, Int32]
  href: api/System.Traits.IIndexUnsafe-2.html#System_Traits_IIndexUnsafe_2_Item__0__System_Int32_
  commentId: P:System.Traits.IIndexUnsafe`2.Item(`0*,System.Int32)
  name.vb: Item(TIndex*, Int32)
  fullName: System.Traits.IIndexUnsafe<TIndex, TElement>.Item[TIndex*, System.Int32]
  fullName.vb: System.Traits.IIndexUnsafe(Of TIndex, TElement).Item(TIndex*, System.Int32)
  nameWithType: IIndexUnsafe<TIndex, TElement>.Item[TIndex*, Int32]
  nameWithType.vb: IIndexUnsafe(Of TIndex, TElement).Item(TIndex*, Int32)
- uid: System.Traits.IIndexUnsafe`2.Item*
  name: Item
  href: api/System.Traits.IIndexUnsafe-2.html#System_Traits_IIndexUnsafe_2_Item_
  commentId: Overload:System.Traits.IIndexUnsafe`2.Item
  isSpec: "True"
  fullName: System.Traits.IIndexUnsafe<TIndex, TElement>.Item
  fullName.vb: System.Traits.IIndexUnsafe(Of TIndex, TElement).Item
  nameWithType: IIndexUnsafe<TIndex, TElement>.Item
  nameWithType.vb: IIndexUnsafe(Of TIndex, TElement).Item
- uid: System.Traits.IInsert`2
  name: IInsert<TIndex, TElement>
  href: api/System.Traits.IInsert-2.html
  commentId: T:System.Traits.IInsert`2
  name.vb: IInsert(Of TIndex, TElement)
  fullName: System.Traits.IInsert<TIndex, TElement>
  fullName.vb: System.Traits.IInsert(Of TIndex, TElement)
  nameWithType: IInsert<TIndex, TElement>
  nameWithType.vb: IInsert(Of TIndex, TElement)
- uid: System.Traits.IInsert`2.Insert(`0,`1)
  name: Insert(TIndex, TElement)
  href: api/System.Traits.IInsert-2.html#System_Traits_IInsert_2_Insert__0__1_
  commentId: M:System.Traits.IInsert`2.Insert(`0,`1)
  fullName: System.Traits.IInsert<TIndex, TElement>.Insert(TIndex, TElement)
  fullName.vb: System.Traits.IInsert(Of TIndex, TElement).Insert(TIndex, TElement)
  nameWithType: IInsert<TIndex, TElement>.Insert(TIndex, TElement)
  nameWithType.vb: IInsert(Of TIndex, TElement).Insert(TIndex, TElement)
- uid: System.Traits.IInsert`2.Insert*
  name: Insert
  href: api/System.Traits.IInsert-2.html#System_Traits_IInsert_2_Insert_
  commentId: Overload:System.Traits.IInsert`2.Insert
  isSpec: "True"
  fullName: System.Traits.IInsert<TIndex, TElement>.Insert
  fullName.vb: System.Traits.IInsert(Of TIndex, TElement).Insert
  nameWithType: IInsert<TIndex, TElement>.Insert
  nameWithType.vb: IInsert(Of TIndex, TElement).Insert
- uid: System.Traits.IInsertMemory`2
  name: IInsertMemory<TIndex, TElement>
  href: api/System.Traits.IInsertMemory-2.html
  commentId: T:System.Traits.IInsertMemory`2
  name.vb: IInsertMemory(Of TIndex, TElement)
  fullName: System.Traits.IInsertMemory<TIndex, TElement>
  fullName.vb: System.Traits.IInsertMemory(Of TIndex, TElement)
  nameWithType: IInsertMemory<TIndex, TElement>
  nameWithType.vb: IInsertMemory(Of TIndex, TElement)
- uid: System.Traits.IInsertMemory`2.Insert(`0,`1[])
  name: Insert(TIndex, TElement[])
  href: api/System.Traits.IInsertMemory-2.html#System_Traits_IInsertMemory_2_Insert__0__1___
  commentId: M:System.Traits.IInsertMemory`2.Insert(`0,`1[])
  name.vb: Insert(TIndex, TElement())
  fullName: System.Traits.IInsertMemory<TIndex, TElement>.Insert(TIndex, TElement[])
  fullName.vb: System.Traits.IInsertMemory(Of TIndex, TElement).Insert(TIndex, TElement())
  nameWithType: IInsertMemory<TIndex, TElement>.Insert(TIndex, TElement[])
  nameWithType.vb: IInsertMemory(Of TIndex, TElement).Insert(TIndex, TElement())
- uid: System.Traits.IInsertMemory`2.Insert(`0,System.Memory{`1})
  name: Insert(TIndex, Memory<TElement>)
  href: api/System.Traits.IInsertMemory-2.html#System_Traits_IInsertMemory_2_Insert__0_System_Memory__1__
  commentId: M:System.Traits.IInsertMemory`2.Insert(`0,System.Memory{`1})
  name.vb: Insert(TIndex, Memory(Of TElement))
  fullName: System.Traits.IInsertMemory<TIndex, TElement>.Insert(TIndex, System.Memory<TElement>)
  fullName.vb: System.Traits.IInsertMemory(Of TIndex, TElement).Insert(TIndex, System.Memory(Of TElement))
  nameWithType: IInsertMemory<TIndex, TElement>.Insert(TIndex, Memory<TElement>)
  nameWithType.vb: IInsertMemory(Of TIndex, TElement).Insert(TIndex, Memory(Of TElement))
- uid: System.Traits.IInsertMemory`2.Insert(`0,System.ReadOnlyMemory{`1})
  name: Insert(TIndex, ReadOnlyMemory<TElement>)
  href: api/System.Traits.IInsertMemory-2.html#System_Traits_IInsertMemory_2_Insert__0_System_ReadOnlyMemory__1__
  commentId: M:System.Traits.IInsertMemory`2.Insert(`0,System.ReadOnlyMemory{`1})
  name.vb: Insert(TIndex, ReadOnlyMemory(Of TElement))
  fullName: System.Traits.IInsertMemory<TIndex, TElement>.Insert(TIndex, System.ReadOnlyMemory<TElement>)
  fullName.vb: System.Traits.IInsertMemory(Of TIndex, TElement).Insert(TIndex, System.ReadOnlyMemory(Of TElement))
  nameWithType: IInsertMemory<TIndex, TElement>.Insert(TIndex, ReadOnlyMemory<TElement>)
  nameWithType.vb: IInsertMemory(Of TIndex, TElement).Insert(TIndex, ReadOnlyMemory(Of TElement))
- uid: System.Traits.IInsertMemory`2.Insert*
  name: Insert
  href: api/System.Traits.IInsertMemory-2.html#System_Traits_IInsertMemory_2_Insert_
  commentId: Overload:System.Traits.IInsertMemory`2.Insert
  isSpec: "True"
  fullName: System.Traits.IInsertMemory<TIndex, TElement>.Insert
  fullName.vb: System.Traits.IInsertMemory(Of TIndex, TElement).Insert
  nameWithType: IInsertMemory<TIndex, TElement>.Insert
  nameWithType.vb: IInsertMemory(Of TIndex, TElement).Insert
- uid: System.Traits.IInsertSpan`2
  name: IInsertSpan<TIndex, TElement>
  href: api/System.Traits.IInsertSpan-2.html
  commentId: T:System.Traits.IInsertSpan`2
  name.vb: IInsertSpan(Of TIndex, TElement)
  fullName: System.Traits.IInsertSpan<TIndex, TElement>
  fullName.vb: System.Traits.IInsertSpan(Of TIndex, TElement)
  nameWithType: IInsertSpan<TIndex, TElement>
  nameWithType.vb: IInsertSpan(Of TIndex, TElement)
- uid: System.Traits.IInsertSpan`2.Insert(`0,System.ReadOnlySpan{`1})
  name: Insert(TIndex, ReadOnlySpan<TElement>)
  href: api/System.Traits.IInsertSpan-2.html#System_Traits_IInsertSpan_2_Insert__0_System_ReadOnlySpan__1__
  commentId: M:System.Traits.IInsertSpan`2.Insert(`0,System.ReadOnlySpan{`1})
  name.vb: Insert(TIndex, ReadOnlySpan(Of TElement))
  fullName: System.Traits.IInsertSpan<TIndex, TElement>.Insert(TIndex, System.ReadOnlySpan<TElement>)
  fullName.vb: System.Traits.IInsertSpan(Of TIndex, TElement).Insert(TIndex, System.ReadOnlySpan(Of TElement))
  nameWithType: IInsertSpan<TIndex, TElement>.Insert(TIndex, ReadOnlySpan<TElement>)
  nameWithType.vb: IInsertSpan(Of TIndex, TElement).Insert(TIndex, ReadOnlySpan(Of TElement))
- uid: System.Traits.IInsertSpan`2.Insert(`0,System.Span{`1})
  name: Insert(TIndex, Span<TElement>)
  href: api/System.Traits.IInsertSpan-2.html#System_Traits_IInsertSpan_2_Insert__0_System_Span__1__
  commentId: M:System.Traits.IInsertSpan`2.Insert(`0,System.Span{`1})
  name.vb: Insert(TIndex, Span(Of TElement))
  fullName: System.Traits.IInsertSpan<TIndex, TElement>.Insert(TIndex, System.Span<TElement>)
  fullName.vb: System.Traits.IInsertSpan(Of TIndex, TElement).Insert(TIndex, System.Span(Of TElement))
  nameWithType: IInsertSpan<TIndex, TElement>.Insert(TIndex, Span<TElement>)
  nameWithType.vb: IInsertSpan(Of TIndex, TElement).Insert(TIndex, Span(Of TElement))
- uid: System.Traits.IInsertSpan`2.Insert*
  name: Insert
  href: api/System.Traits.IInsertSpan-2.html#System_Traits_IInsertSpan_2_Insert_
  commentId: Overload:System.Traits.IInsertSpan`2.Insert
  isSpec: "True"
  fullName: System.Traits.IInsertSpan<TIndex, TElement>.Insert
  fullName.vb: System.Traits.IInsertSpan(Of TIndex, TElement).Insert
  nameWithType: IInsertSpan<TIndex, TElement>.Insert
  nameWithType.vb: IInsertSpan(Of TIndex, TElement).Insert
- uid: System.Traits.IPeek`1
  name: IPeek<TElement>
  href: api/System.Traits.IPeek-1.html
  commentId: T:System.Traits.IPeek`1
  name.vb: IPeek(Of TElement)
  fullName: System.Traits.IPeek<TElement>
  fullName.vb: System.Traits.IPeek(Of TElement)
  nameWithType: IPeek<TElement>
  nameWithType.vb: IPeek(Of TElement)
- uid: System.Traits.IPeek`1.Peek(`0@)
  name: Peek(out TElement)
  href: api/System.Traits.IPeek-1.html#System_Traits_IPeek_1_Peek__0__
  commentId: M:System.Traits.IPeek`1.Peek(`0@)
  name.vb: Peek(ByRef TElement)
  fullName: System.Traits.IPeek<TElement>.Peek(out TElement)
  fullName.vb: System.Traits.IPeek(Of TElement).Peek(ByRef TElement)
  nameWithType: IPeek<TElement>.Peek(out TElement)
  nameWithType.vb: IPeek(Of TElement).Peek(ByRef TElement)
- uid: System.Traits.IPeek`1.Peek*
  name: Peek
  href: api/System.Traits.IPeek-1.html#System_Traits_IPeek_1_Peek_
  commentId: Overload:System.Traits.IPeek`1.Peek
  isSpec: "True"
  fullName: System.Traits.IPeek<TElement>.Peek
  fullName.vb: System.Traits.IPeek(Of TElement).Peek
  nameWithType: IPeek<TElement>.Peek
  nameWithType.vb: IPeek(Of TElement).Peek
- uid: System.Traits.IPostpend`1
  name: IPostpend<TElement>
  href: api/System.Traits.IPostpend-1.html
  commentId: T:System.Traits.IPostpend`1
  name.vb: IPostpend(Of TElement)
  fullName: System.Traits.IPostpend<TElement>
  fullName.vb: System.Traits.IPostpend(Of TElement)
  nameWithType: IPostpend<TElement>
  nameWithType.vb: IPostpend(Of TElement)
- uid: System.Traits.IPostpend`1.Postpend(`0)
  name: Postpend(TElement)
  href: api/System.Traits.IPostpend-1.html#System_Traits_IPostpend_1_Postpend__0_
  commentId: M:System.Traits.IPostpend`1.Postpend(`0)
  fullName: System.Traits.IPostpend<TElement>.Postpend(TElement)
  fullName.vb: System.Traits.IPostpend(Of TElement).Postpend(TElement)
  nameWithType: IPostpend<TElement>.Postpend(TElement)
  nameWithType.vb: IPostpend(Of TElement).Postpend(TElement)
- uid: System.Traits.IPostpend`1.Postpend*
  name: Postpend
  href: api/System.Traits.IPostpend-1.html#System_Traits_IPostpend_1_Postpend_
  commentId: Overload:System.Traits.IPostpend`1.Postpend
  isSpec: "True"
  fullName: System.Traits.IPostpend<TElement>.Postpend
  fullName.vb: System.Traits.IPostpend(Of TElement).Postpend
  nameWithType: IPostpend<TElement>.Postpend
  nameWithType.vb: IPostpend(Of TElement).Postpend
- uid: System.Traits.IPostpendMemory`1
  name: IPostpendMemory<TElement>
  href: api/System.Traits.IPostpendMemory-1.html
  commentId: T:System.Traits.IPostpendMemory`1
  name.vb: IPostpendMemory(Of TElement)
  fullName: System.Traits.IPostpendMemory<TElement>
  fullName.vb: System.Traits.IPostpendMemory(Of TElement)
  nameWithType: IPostpendMemory<TElement>
  nameWithType.vb: IPostpendMemory(Of TElement)
- uid: System.Traits.IPostpendMemory`1.Postpend(`0[])
  name: Postpend(TElement[])
  href: api/System.Traits.IPostpendMemory-1.html#System_Traits_IPostpendMemory_1_Postpend__0___
  commentId: M:System.Traits.IPostpendMemory`1.Postpend(`0[])
  name.vb: Postpend(TElement())
  fullName: System.Traits.IPostpendMemory<TElement>.Postpend(TElement[])
  fullName.vb: System.Traits.IPostpendMemory(Of TElement).Postpend(TElement())
  nameWithType: IPostpendMemory<TElement>.Postpend(TElement[])
  nameWithType.vb: IPostpendMemory(Of TElement).Postpend(TElement())
- uid: System.Traits.IPostpendMemory`1.Postpend(System.Memory{`0})
  name: Postpend(Memory<TElement>)
  href: api/System.Traits.IPostpendMemory-1.html#System_Traits_IPostpendMemory_1_Postpend_System_Memory__0__
  commentId: M:System.Traits.IPostpendMemory`1.Postpend(System.Memory{`0})
  name.vb: Postpend(Memory(Of TElement))
  fullName: System.Traits.IPostpendMemory<TElement>.Postpend(System.Memory<TElement>)
  fullName.vb: System.Traits.IPostpendMemory(Of TElement).Postpend(System.Memory(Of TElement))
  nameWithType: IPostpendMemory<TElement>.Postpend(Memory<TElement>)
  nameWithType.vb: IPostpendMemory(Of TElement).Postpend(Memory(Of TElement))
- uid: System.Traits.IPostpendMemory`1.Postpend(System.ReadOnlyMemory{`0})
  name: Postpend(ReadOnlyMemory<TElement>)
  href: api/System.Traits.IPostpendMemory-1.html#System_Traits_IPostpendMemory_1_Postpend_System_ReadOnlyMemory__0__
  commentId: M:System.Traits.IPostpendMemory`1.Postpend(System.ReadOnlyMemory{`0})
  name.vb: Postpend(ReadOnlyMemory(Of TElement))
  fullName: System.Traits.IPostpendMemory<TElement>.Postpend(System.ReadOnlyMemory<TElement>)
  fullName.vb: System.Traits.IPostpendMemory(Of TElement).Postpend(System.ReadOnlyMemory(Of TElement))
  nameWithType: IPostpendMemory<TElement>.Postpend(ReadOnlyMemory<TElement>)
  nameWithType.vb: IPostpendMemory(Of TElement).Postpend(ReadOnlyMemory(Of TElement))
- uid: System.Traits.IPostpendMemory`1.Postpend*
  name: Postpend
  href: api/System.Traits.IPostpendMemory-1.html#System_Traits_IPostpendMemory_1_Postpend_
  commentId: Overload:System.Traits.IPostpendMemory`1.Postpend
  isSpec: "True"
  fullName: System.Traits.IPostpendMemory<TElement>.Postpend
  fullName.vb: System.Traits.IPostpendMemory(Of TElement).Postpend
  nameWithType: IPostpendMemory<TElement>.Postpend
  nameWithType.vb: IPostpendMemory(Of TElement).Postpend
- uid: System.Traits.IPostpendSpan`1
  name: IPostpendSpan<TElement>
  href: api/System.Traits.IPostpendSpan-1.html
  commentId: T:System.Traits.IPostpendSpan`1
  name.vb: IPostpendSpan(Of TElement)
  fullName: System.Traits.IPostpendSpan<TElement>
  fullName.vb: System.Traits.IPostpendSpan(Of TElement)
  nameWithType: IPostpendSpan<TElement>
  nameWithType.vb: IPostpendSpan(Of TElement)
- uid: System.Traits.IPostpendSpan`1.Postpend(System.ReadOnlySpan{`0})
  name: Postpend(ReadOnlySpan<TElement>)
  href: api/System.Traits.IPostpendSpan-1.html#System_Traits_IPostpendSpan_1_Postpend_System_ReadOnlySpan__0__
  commentId: M:System.Traits.IPostpendSpan`1.Postpend(System.ReadOnlySpan{`0})
  name.vb: Postpend(ReadOnlySpan(Of TElement))
  fullName: System.Traits.IPostpendSpan<TElement>.Postpend(System.ReadOnlySpan<TElement>)
  fullName.vb: System.Traits.IPostpendSpan(Of TElement).Postpend(System.ReadOnlySpan(Of TElement))
  nameWithType: IPostpendSpan<TElement>.Postpend(ReadOnlySpan<TElement>)
  nameWithType.vb: IPostpendSpan(Of TElement).Postpend(ReadOnlySpan(Of TElement))
- uid: System.Traits.IPostpendSpan`1.Postpend(System.Span{`0})
  name: Postpend(Span<TElement>)
  href: api/System.Traits.IPostpendSpan-1.html#System_Traits_IPostpendSpan_1_Postpend_System_Span__0__
  commentId: M:System.Traits.IPostpendSpan`1.Postpend(System.Span{`0})
  name.vb: Postpend(Span(Of TElement))
  fullName: System.Traits.IPostpendSpan<TElement>.Postpend(System.Span<TElement>)
  fullName.vb: System.Traits.IPostpendSpan(Of TElement).Postpend(System.Span(Of TElement))
  nameWithType: IPostpendSpan<TElement>.Postpend(Span<TElement>)
  nameWithType.vb: IPostpendSpan(Of TElement).Postpend(Span(Of TElement))
- uid: System.Traits.IPostpendSpan`1.Postpend*
  name: Postpend
  href: api/System.Traits.IPostpendSpan-1.html#System_Traits_IPostpendSpan_1_Postpend_
  commentId: Overload:System.Traits.IPostpendSpan`1.Postpend
  isSpec: "True"
  fullName: System.Traits.IPostpendSpan<TElement>.Postpend
  fullName.vb: System.Traits.IPostpendSpan(Of TElement).Postpend
  nameWithType: IPostpendSpan<TElement>.Postpend
  nameWithType.vb: IPostpendSpan(Of TElement).Postpend
- uid: System.Traits.IPrepend`1
  name: IPrepend<TElement>
  href: api/System.Traits.IPrepend-1.html
  commentId: T:System.Traits.IPrepend`1
  name.vb: IPrepend(Of TElement)
  fullName: System.Traits.IPrepend<TElement>
  fullName.vb: System.Traits.IPrepend(Of TElement)
  nameWithType: IPrepend<TElement>
  nameWithType.vb: IPrepend(Of TElement)
- uid: System.Traits.IPrepend`1.Prepend(`0)
  name: Prepend(TElement)
  href: api/System.Traits.IPrepend-1.html#System_Traits_IPrepend_1_Prepend__0_
  commentId: M:System.Traits.IPrepend`1.Prepend(`0)
  fullName: System.Traits.IPrepend<TElement>.Prepend(TElement)
  fullName.vb: System.Traits.IPrepend(Of TElement).Prepend(TElement)
  nameWithType: IPrepend<TElement>.Prepend(TElement)
  nameWithType.vb: IPrepend(Of TElement).Prepend(TElement)
- uid: System.Traits.IPrepend`1.Prepend*
  name: Prepend
  href: api/System.Traits.IPrepend-1.html#System_Traits_IPrepend_1_Prepend_
  commentId: Overload:System.Traits.IPrepend`1.Prepend
  isSpec: "True"
  fullName: System.Traits.IPrepend<TElement>.Prepend
  fullName.vb: System.Traits.IPrepend(Of TElement).Prepend
  nameWithType: IPrepend<TElement>.Prepend
  nameWithType.vb: IPrepend(Of TElement).Prepend
- uid: System.Traits.IPrependMemory`1
  name: IPrependMemory<TElement>
  href: api/System.Traits.IPrependMemory-1.html
  commentId: T:System.Traits.IPrependMemory`1
  name.vb: IPrependMemory(Of TElement)
  fullName: System.Traits.IPrependMemory<TElement>
  fullName.vb: System.Traits.IPrependMemory(Of TElement)
  nameWithType: IPrependMemory<TElement>
  nameWithType.vb: IPrependMemory(Of TElement)
- uid: System.Traits.IPrependMemory`1.Prepend(`0[])
  name: Prepend(TElement[])
  href: api/System.Traits.IPrependMemory-1.html#System_Traits_IPrependMemory_1_Prepend__0___
  commentId: M:System.Traits.IPrependMemory`1.Prepend(`0[])
  name.vb: Prepend(TElement())
  fullName: System.Traits.IPrependMemory<TElement>.Prepend(TElement[])
  fullName.vb: System.Traits.IPrependMemory(Of TElement).Prepend(TElement())
  nameWithType: IPrependMemory<TElement>.Prepend(TElement[])
  nameWithType.vb: IPrependMemory(Of TElement).Prepend(TElement())
- uid: System.Traits.IPrependMemory`1.Prepend(System.Memory{`0})
  name: Prepend(Memory<TElement>)
  href: api/System.Traits.IPrependMemory-1.html#System_Traits_IPrependMemory_1_Prepend_System_Memory__0__
  commentId: M:System.Traits.IPrependMemory`1.Prepend(System.Memory{`0})
  name.vb: Prepend(Memory(Of TElement))
  fullName: System.Traits.IPrependMemory<TElement>.Prepend(System.Memory<TElement>)
  fullName.vb: System.Traits.IPrependMemory(Of TElement).Prepend(System.Memory(Of TElement))
  nameWithType: IPrependMemory<TElement>.Prepend(Memory<TElement>)
  nameWithType.vb: IPrependMemory(Of TElement).Prepend(Memory(Of TElement))
- uid: System.Traits.IPrependMemory`1.Prepend(System.ReadOnlyMemory{`0})
  name: Prepend(ReadOnlyMemory<TElement>)
  href: api/System.Traits.IPrependMemory-1.html#System_Traits_IPrependMemory_1_Prepend_System_ReadOnlyMemory__0__
  commentId: M:System.Traits.IPrependMemory`1.Prepend(System.ReadOnlyMemory{`0})
  name.vb: Prepend(ReadOnlyMemory(Of TElement))
  fullName: System.Traits.IPrependMemory<TElement>.Prepend(System.ReadOnlyMemory<TElement>)
  fullName.vb: System.Traits.IPrependMemory(Of TElement).Prepend(System.ReadOnlyMemory(Of TElement))
  nameWithType: IPrependMemory<TElement>.Prepend(ReadOnlyMemory<TElement>)
  nameWithType.vb: IPrependMemory(Of TElement).Prepend(ReadOnlyMemory(Of TElement))
- uid: System.Traits.IPrependMemory`1.Prepend*
  name: Prepend
  href: api/System.Traits.IPrependMemory-1.html#System_Traits_IPrependMemory_1_Prepend_
  commentId: Overload:System.Traits.IPrependMemory`1.Prepend
  isSpec: "True"
  fullName: System.Traits.IPrependMemory<TElement>.Prepend
  fullName.vb: System.Traits.IPrependMemory(Of TElement).Prepend
  nameWithType: IPrependMemory<TElement>.Prepend
  nameWithType.vb: IPrependMemory(Of TElement).Prepend
- uid: System.Traits.IPrependSpan`1
  name: IPrependSpan<TElement>
  href: api/System.Traits.IPrependSpan-1.html
  commentId: T:System.Traits.IPrependSpan`1
  name.vb: IPrependSpan(Of TElement)
  fullName: System.Traits.IPrependSpan<TElement>
  fullName.vb: System.Traits.IPrependSpan(Of TElement)
  nameWithType: IPrependSpan<TElement>
  nameWithType.vb: IPrependSpan(Of TElement)
- uid: System.Traits.IPrependSpan`1.Prepend(System.ReadOnlySpan{`0})
  name: Prepend(ReadOnlySpan<TElement>)
  href: api/System.Traits.IPrependSpan-1.html#System_Traits_IPrependSpan_1_Prepend_System_ReadOnlySpan__0__
  commentId: M:System.Traits.IPrependSpan`1.Prepend(System.ReadOnlySpan{`0})
  name.vb: Prepend(ReadOnlySpan(Of TElement))
  fullName: System.Traits.IPrependSpan<TElement>.Prepend(System.ReadOnlySpan<TElement>)
  fullName.vb: System.Traits.IPrependSpan(Of TElement).Prepend(System.ReadOnlySpan(Of TElement))
  nameWithType: IPrependSpan<TElement>.Prepend(ReadOnlySpan<TElement>)
  nameWithType.vb: IPrependSpan(Of TElement).Prepend(ReadOnlySpan(Of TElement))
- uid: System.Traits.IPrependSpan`1.Prepend(System.Span{`0})
  name: Prepend(Span<TElement>)
  href: api/System.Traits.IPrependSpan-1.html#System_Traits_IPrependSpan_1_Prepend_System_Span__0__
  commentId: M:System.Traits.IPrependSpan`1.Prepend(System.Span{`0})
  name.vb: Prepend(Span(Of TElement))
  fullName: System.Traits.IPrependSpan<TElement>.Prepend(System.Span<TElement>)
  fullName.vb: System.Traits.IPrependSpan(Of TElement).Prepend(System.Span(Of TElement))
  nameWithType: IPrependSpan<TElement>.Prepend(Span<TElement>)
  nameWithType.vb: IPrependSpan(Of TElement).Prepend(Span(Of TElement))
- uid: System.Traits.IPrependSpan`1.Prepend*
  name: Prepend
  href: api/System.Traits.IPrependSpan-1.html#System_Traits_IPrependSpan_1_Prepend_
  commentId: Overload:System.Traits.IPrependSpan`1.Prepend
  isSpec: "True"
  fullName: System.Traits.IPrependSpan<TElement>.Prepend
  fullName.vb: System.Traits.IPrependSpan(Of TElement).Prepend
  nameWithType: IPrependSpan<TElement>.Prepend
  nameWithType.vb: IPrependSpan(Of TElement).Prepend
- uid: System.Traits.IRead`1
  name: IRead<TElement>
  href: api/System.Traits.IRead-1.html
  commentId: T:System.Traits.IRead`1
  name.vb: IRead(Of TElement)
  fullName: System.Traits.IRead<TElement>
  fullName.vb: System.Traits.IRead(Of TElement)
  nameWithType: IRead<TElement>
  nameWithType.vb: IRead(Of TElement)
- uid: System.Traits.IRead`1.Read(`0@)
  name: Read(out TElement)
  href: api/System.Traits.IRead-1.html#System_Traits_IRead_1_Read__0__
  commentId: M:System.Traits.IRead`1.Read(`0@)
  name.vb: Read(ByRef TElement)
  fullName: System.Traits.IRead<TElement>.Read(out TElement)
  fullName.vb: System.Traits.IRead(Of TElement).Read(ByRef TElement)
  nameWithType: IRead<TElement>.Read(out TElement)
  nameWithType.vb: IRead(Of TElement).Read(ByRef TElement)
- uid: System.Traits.IRead`1.Read*
  name: Read
  href: api/System.Traits.IRead-1.html#System_Traits_IRead_1_Read_
  commentId: Overload:System.Traits.IRead`1.Read
  isSpec: "True"
  fullName: System.Traits.IRead<TElement>.Read
  fullName.vb: System.Traits.IRead(Of TElement).Read
  nameWithType: IRead<TElement>.Read
  nameWithType.vb: IRead(Of TElement).Read
- uid: System.Traits.IRead`1.Readable
  name: Readable
  href: api/System.Traits.IRead-1.html#System_Traits_IRead_1_Readable
  commentId: P:System.Traits.IRead`1.Readable
  fullName: System.Traits.IRead<TElement>.Readable
  fullName.vb: System.Traits.IRead(Of TElement).Readable
  nameWithType: IRead<TElement>.Readable
  nameWithType.vb: IRead(Of TElement).Readable
- uid: System.Traits.IRead`1.Readable*
  name: Readable
  href: api/System.Traits.IRead-1.html#System_Traits_IRead_1_Readable_
  commentId: Overload:System.Traits.IRead`1.Readable
  isSpec: "True"
  fullName: System.Traits.IRead<TElement>.Readable
  fullName.vb: System.Traits.IRead(Of TElement).Readable
  nameWithType: IRead<TElement>.Readable
  nameWithType.vb: IRead(Of TElement).Readable
- uid: System.Traits.IRemove`1
  name: IRemove<TElement>
  href: api/System.Traits.IRemove-1.html
  commentId: T:System.Traits.IRemove`1
  name.vb: IRemove(Of TElement)
  fullName: System.Traits.IRemove<TElement>
  fullName.vb: System.Traits.IRemove(Of TElement)
  nameWithType: IRemove<TElement>
  nameWithType.vb: IRemove(Of TElement)
- uid: System.Traits.IRemove`1.Remove(`0)
  name: Remove(TElement)
  href: api/System.Traits.IRemove-1.html#System_Traits_IRemove_1_Remove__0_
  commentId: M:System.Traits.IRemove`1.Remove(`0)
  fullName: System.Traits.IRemove<TElement>.Remove(TElement)
  fullName.vb: System.Traits.IRemove(Of TElement).Remove(TElement)
  nameWithType: IRemove<TElement>.Remove(TElement)
  nameWithType.vb: IRemove(Of TElement).Remove(TElement)
- uid: System.Traits.IRemove`1.Remove*
  name: Remove
  href: api/System.Traits.IRemove-1.html#System_Traits_IRemove_1_Remove_
  commentId: Overload:System.Traits.IRemove`1.Remove
  isSpec: "True"
  fullName: System.Traits.IRemove<TElement>.Remove
  fullName.vb: System.Traits.IRemove(Of TElement).Remove
  nameWithType: IRemove<TElement>.Remove
  nameWithType.vb: IRemove(Of TElement).Remove
- uid: System.Traits.IRemove`1.RemoveFirst(`0)
  name: RemoveFirst(TElement)
  href: api/System.Traits.IRemove-1.html#System_Traits_IRemove_1_RemoveFirst__0_
  commentId: M:System.Traits.IRemove`1.RemoveFirst(`0)
  fullName: System.Traits.IRemove<TElement>.RemoveFirst(TElement)
  fullName.vb: System.Traits.IRemove(Of TElement).RemoveFirst(TElement)
  nameWithType: IRemove<TElement>.RemoveFirst(TElement)
  nameWithType.vb: IRemove(Of TElement).RemoveFirst(TElement)
- uid: System.Traits.IRemove`1.RemoveFirst*
  name: RemoveFirst
  href: api/System.Traits.IRemove-1.html#System_Traits_IRemove_1_RemoveFirst_
  commentId: Overload:System.Traits.IRemove`1.RemoveFirst
  isSpec: "True"
  fullName: System.Traits.IRemove<TElement>.RemoveFirst
  fullName.vb: System.Traits.IRemove(Of TElement).RemoveFirst
  nameWithType: IRemove<TElement>.RemoveFirst
  nameWithType.vb: IRemove(Of TElement).RemoveFirst
- uid: System.Traits.IRemove`1.RemoveLast(`0)
  name: RemoveLast(TElement)
  href: api/System.Traits.IRemove-1.html#System_Traits_IRemove_1_RemoveLast__0_
  commentId: M:System.Traits.IRemove`1.RemoveLast(`0)
  fullName: System.Traits.IRemove<TElement>.RemoveLast(TElement)
  fullName.vb: System.Traits.IRemove(Of TElement).RemoveLast(TElement)
  nameWithType: IRemove<TElement>.RemoveLast(TElement)
  nameWithType.vb: IRemove(Of TElement).RemoveLast(TElement)
- uid: System.Traits.IRemove`1.RemoveLast*
  name: RemoveLast
  href: api/System.Traits.IRemove-1.html#System_Traits_IRemove_1_RemoveLast_
  commentId: Overload:System.Traits.IRemove`1.RemoveLast
  isSpec: "True"
  fullName: System.Traits.IRemove<TElement>.RemoveLast
  fullName.vb: System.Traits.IRemove(Of TElement).RemoveLast
  nameWithType: IRemove<TElement>.RemoveLast
  nameWithType.vb: IRemove(Of TElement).RemoveLast
- uid: System.Traits.IReplace`1
  name: IReplace<TElement>
  href: api/System.Traits.IReplace-1.html
  commentId: T:System.Traits.IReplace`1
  name.vb: IReplace(Of TElement)
  fullName: System.Traits.IReplace<TElement>
  fullName.vb: System.Traits.IReplace(Of TElement)
  nameWithType: IReplace<TElement>
  nameWithType.vb: IReplace(Of TElement)
- uid: System.Traits.IReplace`2
  name: IReplace<TSearch, TReplace>
  href: api/System.Traits.IReplace-2.html
  commentId: T:System.Traits.IReplace`2
  name.vb: IReplace(Of TSearch, TReplace)
  fullName: System.Traits.IReplace<TSearch, TReplace>
  fullName.vb: System.Traits.IReplace(Of TSearch, TReplace)
  nameWithType: IReplace<TSearch, TReplace>
  nameWithType.vb: IReplace(Of TSearch, TReplace)
- uid: System.Traits.IReplace`2.Replace(`0,`1)
  name: Replace(TSearch, TReplace)
  href: api/System.Traits.IReplace-2.html#System_Traits_IReplace_2_Replace__0__1_
  commentId: M:System.Traits.IReplace`2.Replace(`0,`1)
  fullName: System.Traits.IReplace<TSearch, TReplace>.Replace(TSearch, TReplace)
  fullName.vb: System.Traits.IReplace(Of TSearch, TReplace).Replace(TSearch, TReplace)
  nameWithType: IReplace<TSearch, TReplace>.Replace(TSearch, TReplace)
  nameWithType.vb: IReplace(Of TSearch, TReplace).Replace(TSearch, TReplace)
- uid: System.Traits.IReplace`2.Replace*
  name: Replace
  href: api/System.Traits.IReplace-2.html#System_Traits_IReplace_2_Replace_
  commentId: Overload:System.Traits.IReplace`2.Replace
  isSpec: "True"
  fullName: System.Traits.IReplace<TSearch, TReplace>.Replace
  fullName.vb: System.Traits.IReplace(Of TSearch, TReplace).Replace
  nameWithType: IReplace<TSearch, TReplace>.Replace
  nameWithType.vb: IReplace(Of TSearch, TReplace).Replace
- uid: System.Traits.IResize
  name: IResize
  href: api/System.Traits.IResize.html
  commentId: T:System.Traits.IResize
  fullName: System.Traits.IResize
  nameWithType: IResize
- uid: System.Traits.IResize.Capacity
  name: Capacity
  href: api/System.Traits.IResize.html#System_Traits_IResize_Capacity
  commentId: P:System.Traits.IResize.Capacity
  fullName: System.Traits.IResize.Capacity
  nameWithType: IResize.Capacity
- uid: System.Traits.IResize.Capacity*
  name: Capacity
  href: api/System.Traits.IResize.html#System_Traits_IResize_Capacity_
  commentId: Overload:System.Traits.IResize.Capacity
  isSpec: "True"
  fullName: System.Traits.IResize.Capacity
  nameWithType: IResize.Capacity
- uid: System.Traits.IResize.Resize(nint)
  name: Resize(nint)
  href: api/System.Traits.IResize.html#System_Traits_IResize_Resize_nint_
  commentId: M:System.Traits.IResize.Resize(nint)
  fullName: System.Traits.IResize.Resize(nint)
  nameWithType: IResize.Resize(nint)
- uid: System.Traits.IResize.Resize*
  name: Resize
  href: api/System.Traits.IResize.html#System_Traits_IResize_Resize_
  commentId: Overload:System.Traits.IResize.Resize
  isSpec: "True"
  fullName: System.Traits.IResize.Resize
  nameWithType: IResize.Resize
- uid: System.Traits.ISeek
  name: ISeek
  href: api/System.Traits.ISeek.html
  commentId: T:System.Traits.ISeek
  fullName: System.Traits.ISeek
  nameWithType: ISeek
- uid: System.Traits.ISeek.Position
  name: Position
  href: api/System.Traits.ISeek.html#System_Traits_ISeek_Position
  commentId: P:System.Traits.ISeek.Position
  fullName: System.Traits.ISeek.Position
  nameWithType: ISeek.Position
- uid: System.Traits.ISeek.Position*
  name: Position
  href: api/System.Traits.ISeek.html#System_Traits_ISeek_Position_
  commentId: Overload:System.Traits.ISeek.Position
  isSpec: "True"
  fullName: System.Traits.ISeek.Position
  nameWithType: ISeek.Position
- uid: System.Traits.ISeek.Seek(nint)
  name: Seek(nint)
  href: api/System.Traits.ISeek.html#System_Traits_ISeek_Seek_nint_
  commentId: M:System.Traits.ISeek.Seek(nint)
  fullName: System.Traits.ISeek.Seek(nint)
  nameWithType: ISeek.Seek(nint)
- uid: System.Traits.ISeek.Seek*
  name: Seek
  href: api/System.Traits.ISeek.html#System_Traits_ISeek_Seek_
  commentId: Overload:System.Traits.ISeek.Seek
  isSpec: "True"
  fullName: System.Traits.ISeek.Seek
  nameWithType: ISeek.Seek
- uid: System.Traits.ISeek.Seekable
  name: Seekable
  href: api/System.Traits.ISeek.html#System_Traits_ISeek_Seekable
  commentId: P:System.Traits.ISeek.Seekable
  fullName: System.Traits.ISeek.Seekable
  nameWithType: ISeek.Seekable
- uid: System.Traits.ISeek.Seekable*
  name: Seekable
  href: api/System.Traits.ISeek.html#System_Traits_ISeek_Seekable_
  commentId: Overload:System.Traits.ISeek.Seekable
  isSpec: "True"
  fullName: System.Traits.ISeek.Seekable
  nameWithType: ISeek.Seekable
- uid: System.Traits.ISequence`2
  name: ISequence<TElement, TEnumerator>
  href: api/System.Traits.ISequence-2.html
  commentId: T:System.Traits.ISequence`2
  name.vb: ISequence(Of TElement, TEnumerator)
  fullName: System.Traits.ISequence<TElement, TEnumerator>
  fullName.vb: System.Traits.ISequence(Of TElement, TEnumerator)
  nameWithType: ISequence<TElement, TEnumerator>
  nameWithType.vb: ISequence(Of TElement, TEnumerator)
- uid: System.Traits.ISequence`2.GetEnumerator
  name: GetEnumerator()
  href: api/System.Traits.ISequence-2.html#System_Traits_ISequence_2_GetEnumerator
  commentId: M:System.Traits.ISequence`2.GetEnumerator
  fullName: System.Traits.ISequence<TElement, TEnumerator>.GetEnumerator()
  fullName.vb: System.Traits.ISequence(Of TElement, TEnumerator).GetEnumerator()
  nameWithType: ISequence<TElement, TEnumerator>.GetEnumerator()
  nameWithType.vb: ISequence(Of TElement, TEnumerator).GetEnumerator()
- uid: System.Traits.ISequence`2.GetEnumerator*
  name: GetEnumerator
  href: api/System.Traits.ISequence-2.html#System_Traits_ISequence_2_GetEnumerator_
  commentId: Overload:System.Traits.ISequence`2.GetEnumerator
  isSpec: "True"
  fullName: System.Traits.ISequence<TElement, TEnumerator>.GetEnumerator
  fullName.vb: System.Traits.ISequence(Of TElement, TEnumerator).GetEnumerator
  nameWithType: ISequence<TElement, TEnumerator>.GetEnumerator
  nameWithType.vb: ISequence(Of TElement, TEnumerator).GetEnumerator
- uid: System.Traits.ISequence`2.ToString(nint)
  name: ToString(nint)
  href: api/System.Traits.ISequence-2.html#System_Traits_ISequence_2_ToString_nint_
  commentId: M:System.Traits.ISequence`2.ToString(nint)
  fullName: System.Traits.ISequence<TElement, TEnumerator>.ToString(nint)
  fullName.vb: System.Traits.ISequence(Of TElement, TEnumerator).ToString(nint)
  nameWithType: ISequence<TElement, TEnumerator>.ToString(nint)
  nameWithType.vb: ISequence(Of TElement, TEnumerator).ToString(nint)
- uid: System.Traits.ISequence`2.ToString*
  name: ToString
  href: api/System.Traits.ISequence-2.html#System_Traits_ISequence_2_ToString_
  commentId: Overload:System.Traits.ISequence`2.ToString
  isSpec: "True"
  fullName: System.Traits.ISequence<TElement, TEnumerator>.ToString
  fullName.vb: System.Traits.ISequence(Of TElement, TEnumerator).ToString
  nameWithType: ISequence<TElement, TEnumerator>.ToString
  nameWithType.vb: ISequence(Of TElement, TEnumerator).ToString
- uid: System.Traits.IShift
  name: IShift
  href: api/System.Traits.IShift.html
  commentId: T:System.Traits.IShift
  fullName: System.Traits.IShift
  nameWithType: IShift
- uid: System.Traits.IShift.ShiftLeft
  name: ShiftLeft()
  href: api/System.Traits.IShift.html#System_Traits_IShift_ShiftLeft
  commentId: M:System.Traits.IShift.ShiftLeft
  fullName: System.Traits.IShift.ShiftLeft()
  nameWithType: IShift.ShiftLeft()
- uid: System.Traits.IShift.ShiftLeft(nint)
  name: ShiftLeft(nint)
  href: api/System.Traits.IShift.html#System_Traits_IShift_ShiftLeft_nint_
  commentId: M:System.Traits.IShift.ShiftLeft(nint)
  fullName: System.Traits.IShift.ShiftLeft(nint)
  nameWithType: IShift.ShiftLeft(nint)
- uid: System.Traits.IShift.ShiftLeft*
  name: ShiftLeft
  href: api/System.Traits.IShift.html#System_Traits_IShift_ShiftLeft_
  commentId: Overload:System.Traits.IShift.ShiftLeft
  isSpec: "True"
  fullName: System.Traits.IShift.ShiftLeft
  nameWithType: IShift.ShiftLeft
- uid: System.Traits.IShift.ShiftRight
  name: ShiftRight()
  href: api/System.Traits.IShift.html#System_Traits_IShift_ShiftRight
  commentId: M:System.Traits.IShift.ShiftRight
  fullName: System.Traits.IShift.ShiftRight()
  nameWithType: IShift.ShiftRight()
- uid: System.Traits.IShift.ShiftRight(nint)
  name: ShiftRight(nint)
  href: api/System.Traits.IShift.html#System_Traits_IShift_ShiftRight_nint_
  commentId: M:System.Traits.IShift.ShiftRight(nint)
  fullName: System.Traits.IShift.ShiftRight(nint)
  nameWithType: IShift.ShiftRight(nint)
- uid: System.Traits.IShift.ShiftRight*
  name: ShiftRight
  href: api/System.Traits.IShift.html#System_Traits_IShift_ShiftRight_
  commentId: Overload:System.Traits.IShift.ShiftRight
  isSpec: "True"
  fullName: System.Traits.IShift.ShiftRight
  nameWithType: IShift.ShiftRight
- uid: System.Traits.ISlice`1
  name: ISlice<TResult>
  href: api/System.Traits.ISlice-1.html
  commentId: T:System.Traits.ISlice`1
  name.vb: ISlice(Of TResult)
  fullName: System.Traits.ISlice<TResult>
  fullName.vb: System.Traits.ISlice(Of TResult)
  nameWithType: ISlice<TResult>
  nameWithType.vb: ISlice(Of TResult)
- uid: System.Traits.ISlice`1.Slice
  name: Slice()
  href: api/System.Traits.ISlice-1.html#System_Traits_ISlice_1_Slice
  commentId: M:System.Traits.ISlice`1.Slice
  fullName: System.Traits.ISlice<TResult>.Slice()
  fullName.vb: System.Traits.ISlice(Of TResult).Slice()
  nameWithType: ISlice<TResult>.Slice()
  nameWithType.vb: ISlice(Of TResult).Slice()
- uid: System.Traits.ISlice`1.Slice(nint)
  name: Slice(nint)
  href: api/System.Traits.ISlice-1.html#System_Traits_ISlice_1_Slice_nint_
  commentId: M:System.Traits.ISlice`1.Slice(nint)
  fullName: System.Traits.ISlice<TResult>.Slice(nint)
  fullName.vb: System.Traits.ISlice(Of TResult).Slice(nint)
  nameWithType: ISlice<TResult>.Slice(nint)
  nameWithType.vb: ISlice(Of TResult).Slice(nint)
- uid: System.Traits.ISlice`1.Slice(nint,nint)
  name: Slice(nint, nint)
  href: api/System.Traits.ISlice-1.html#System_Traits_ISlice_1_Slice_nint_nint_
  commentId: M:System.Traits.ISlice`1.Slice(nint,nint)
  fullName: System.Traits.ISlice<TResult>.Slice(nint, nint)
  fullName.vb: System.Traits.ISlice(Of TResult).Slice(nint, nint)
  nameWithType: ISlice<TResult>.Slice(nint, nint)
  nameWithType.vb: ISlice(Of TResult).Slice(nint, nint)
- uid: System.Traits.ISlice`1.Slice*
  name: Slice
  href: api/System.Traits.ISlice-1.html#System_Traits_ISlice_1_Slice_
  commentId: Overload:System.Traits.ISlice`1.Slice
  isSpec: "True"
  fullName: System.Traits.ISlice<TResult>.Slice
  fullName.vb: System.Traits.ISlice(Of TResult).Slice
  nameWithType: ISlice<TResult>.Slice
  nameWithType.vb: ISlice(Of TResult).Slice
- uid: System.Traits.IWrite`1
  name: IWrite<TElement>
  href: api/System.Traits.IWrite-1.html
  commentId: T:System.Traits.IWrite`1
  name.vb: IWrite(Of TElement)
  fullName: System.Traits.IWrite<TElement>
  fullName.vb: System.Traits.IWrite(Of TElement)
  nameWithType: IWrite<TElement>
  nameWithType.vb: IWrite(Of TElement)
- uid: System.Traits.IWrite`1.Writable
  name: Writable
  href: api/System.Traits.IWrite-1.html#System_Traits_IWrite_1_Writable
  commentId: P:System.Traits.IWrite`1.Writable
  fullName: System.Traits.IWrite<TElement>.Writable
  fullName.vb: System.Traits.IWrite(Of TElement).Writable
  nameWithType: IWrite<TElement>.Writable
  nameWithType.vb: IWrite(Of TElement).Writable
- uid: System.Traits.IWrite`1.Writable*
  name: Writable
  href: api/System.Traits.IWrite-1.html#System_Traits_IWrite_1_Writable_
  commentId: Overload:System.Traits.IWrite`1.Writable
  isSpec: "True"
  fullName: System.Traits.IWrite<TElement>.Writable
  fullName.vb: System.Traits.IWrite(Of TElement).Writable
  nameWithType: IWrite<TElement>.Writable
  nameWithType.vb: IWrite(Of TElement).Writable
- uid: System.Traits.IWrite`1.Write(`0)
  name: Write(TElement)
  href: api/System.Traits.IWrite-1.html#System_Traits_IWrite_1_Write__0_
  commentId: M:System.Traits.IWrite`1.Write(`0)
  fullName: System.Traits.IWrite<TElement>.Write(TElement)
  fullName.vb: System.Traits.IWrite(Of TElement).Write(TElement)
  nameWithType: IWrite<TElement>.Write(TElement)
  nameWithType.vb: IWrite(Of TElement).Write(TElement)
- uid: System.Traits.IWrite`1.Write*
  name: Write
  href: api/System.Traits.IWrite-1.html#System_Traits_IWrite_1_Write_
  commentId: Overload:System.Traits.IWrite`1.Write
  isSpec: "True"
  fullName: System.Traits.IWrite<TElement>.Write
  fullName.vb: System.Traits.IWrite(Of TElement).Write
  nameWithType: IWrite<TElement>.Write
  nameWithType.vb: IWrite(Of TElement).Write
