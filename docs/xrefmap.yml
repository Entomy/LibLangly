### YamlMime:XRefMap
sorted: true
references:
- uid: Langly
  name: Langly
  href: api/Langly.html
  commentId: N:Langly
  fullName: Langly
  nameWithType: Langly
- uid: Langly.CoreExtensions
  name: CoreExtensions
  href: api/Langly.CoreExtensions.html
  commentId: T:Langly.CoreExtensions
  fullName: Langly.CoreExtensions
  nameWithType: CoreExtensions
- uid: Langly.CoreExtensions.Add*
  name: Add
  href: api/Langly.CoreExtensions.html#Langly_CoreExtensions_Add_
  commentId: Overload:Langly.CoreExtensions.Add
  isSpec: "True"
  fullName: Langly.CoreExtensions.Add
  nameWithType: CoreExtensions.Add
- uid: Langly.CoreExtensions.Add``2(Langly.IAdd{``0,``1},``0)
  name: Add<TElement, TResult>(IAdd<TElement, TResult>, TElement)
  href: api/Langly.CoreExtensions.html#Langly_CoreExtensions_Add__2_Langly_IAdd___0___1____0_
  commentId: M:Langly.CoreExtensions.Add``2(Langly.IAdd{``0,``1},``0)
  name.vb: Add(Of TElement, TResult)(IAdd(Of TElement, TResult), TElement)
  fullName: Langly.CoreExtensions.Add<TElement, TResult>(Langly.IAdd<TElement, TResult>, TElement)
  fullName.vb: Langly.CoreExtensions.Add(Of TElement, TResult)(Langly.IAdd(Of TElement, TResult), TElement)
  nameWithType: CoreExtensions.Add<TElement, TResult>(IAdd<TElement, TResult>, TElement)
  nameWithType.vb: CoreExtensions.Add(Of TElement, TResult)(IAdd(Of TElement, TResult), TElement)
- uid: Langly.CoreExtensions.Add``2(Langly.IAdd{``0,``1},``0[])
  name: Add<TElement, TResult>(IAdd<TElement, TResult>, TElement[])
  href: api/Langly.CoreExtensions.html#Langly_CoreExtensions_Add__2_Langly_IAdd___0___1____0___
  commentId: M:Langly.CoreExtensions.Add``2(Langly.IAdd{``0,``1},``0[])
  name.vb: Add(Of TElement, TResult)(IAdd(Of TElement, TResult), TElement())
  fullName: Langly.CoreExtensions.Add<TElement, TResult>(Langly.IAdd<TElement, TResult>, TElement[])
  fullName.vb: Langly.CoreExtensions.Add(Of TElement, TResult)(Langly.IAdd(Of TElement, TResult), TElement())
  nameWithType: CoreExtensions.Add<TElement, TResult>(IAdd<TElement, TResult>, TElement[])
  nameWithType.vb: CoreExtensions.Add(Of TElement, TResult)(IAdd(Of TElement, TResult), TElement())
- uid: Langly.CoreExtensions.Add``2(Langly.IAdd{``0,``1},System.Memory{``0})
  name: Add<TElement, TResult>(IAdd<TElement, TResult>, Memory<TElement>)
  href: api/Langly.CoreExtensions.html#Langly_CoreExtensions_Add__2_Langly_IAdd___0___1__System_Memory___0__
  commentId: M:Langly.CoreExtensions.Add``2(Langly.IAdd{``0,``1},System.Memory{``0})
  name.vb: Add(Of TElement, TResult)(IAdd(Of TElement, TResult), Memory(Of TElement))
  fullName: Langly.CoreExtensions.Add<TElement, TResult>(Langly.IAdd<TElement, TResult>, System.Memory<TElement>)
  fullName.vb: Langly.CoreExtensions.Add(Of TElement, TResult)(Langly.IAdd(Of TElement, TResult), System.Memory(Of TElement))
  nameWithType: CoreExtensions.Add<TElement, TResult>(IAdd<TElement, TResult>, Memory<TElement>)
  nameWithType.vb: CoreExtensions.Add(Of TElement, TResult)(IAdd(Of TElement, TResult), Memory(Of TElement))
- uid: Langly.CoreExtensions.Add``2(Langly.IAdd{``0,``1},System.ReadOnlyMemory{``0})
  name: Add<TElement, TResult>(IAdd<TElement, TResult>, ReadOnlyMemory<TElement>)
  href: api/Langly.CoreExtensions.html#Langly_CoreExtensions_Add__2_Langly_IAdd___0___1__System_ReadOnlyMemory___0__
  commentId: M:Langly.CoreExtensions.Add``2(Langly.IAdd{``0,``1},System.ReadOnlyMemory{``0})
  name.vb: Add(Of TElement, TResult)(IAdd(Of TElement, TResult), ReadOnlyMemory(Of TElement))
  fullName: Langly.CoreExtensions.Add<TElement, TResult>(Langly.IAdd<TElement, TResult>, System.ReadOnlyMemory<TElement>)
  fullName.vb: Langly.CoreExtensions.Add(Of TElement, TResult)(Langly.IAdd(Of TElement, TResult), System.ReadOnlyMemory(Of TElement))
  nameWithType: CoreExtensions.Add<TElement, TResult>(IAdd<TElement, TResult>, ReadOnlyMemory<TElement>)
  nameWithType.vb: CoreExtensions.Add(Of TElement, TResult)(IAdd(Of TElement, TResult), ReadOnlyMemory(Of TElement))
- uid: Langly.CoreExtensions.Add``2(Langly.IAdd{``0,``1},System.ReadOnlySpan{``0})
  name: Add<TElement, TResult>(IAdd<TElement, TResult>, ReadOnlySpan<TElement>)
  href: api/Langly.CoreExtensions.html#Langly_CoreExtensions_Add__2_Langly_IAdd___0___1__System_ReadOnlySpan___0__
  commentId: M:Langly.CoreExtensions.Add``2(Langly.IAdd{``0,``1},System.ReadOnlySpan{``0})
  name.vb: Add(Of TElement, TResult)(IAdd(Of TElement, TResult), ReadOnlySpan(Of TElement))
  fullName: Langly.CoreExtensions.Add<TElement, TResult>(Langly.IAdd<TElement, TResult>, System.ReadOnlySpan<TElement>)
  fullName.vb: Langly.CoreExtensions.Add(Of TElement, TResult)(Langly.IAdd(Of TElement, TResult), System.ReadOnlySpan(Of TElement))
  nameWithType: CoreExtensions.Add<TElement, TResult>(IAdd<TElement, TResult>, ReadOnlySpan<TElement>)
  nameWithType.vb: CoreExtensions.Add(Of TElement, TResult)(IAdd(Of TElement, TResult), ReadOnlySpan(Of TElement))
- uid: Langly.CoreExtensions.Add``2(Langly.IAdd{``0,``1},System.Span{``0})
  name: Add<TElement, TResult>(IAdd<TElement, TResult>, Span<TElement>)
  href: api/Langly.CoreExtensions.html#Langly_CoreExtensions_Add__2_Langly_IAdd___0___1__System_Span___0__
  commentId: M:Langly.CoreExtensions.Add``2(Langly.IAdd{``0,``1},System.Span{``0})
  name.vb: Add(Of TElement, TResult)(IAdd(Of TElement, TResult), Span(Of TElement))
  fullName: Langly.CoreExtensions.Add<TElement, TResult>(Langly.IAdd<TElement, TResult>, System.Span<TElement>)
  fullName.vb: Langly.CoreExtensions.Add(Of TElement, TResult)(Langly.IAdd(Of TElement, TResult), System.Span(Of TElement))
  nameWithType: CoreExtensions.Add<TElement, TResult>(IAdd<TElement, TResult>, Span<TElement>)
  nameWithType.vb: CoreExtensions.Add(Of TElement, TResult)(IAdd(Of TElement, TResult), Span(Of TElement))
- uid: Langly.CoreExtensions.Add``3(Langly.IAdd{``0,``2},Langly.ISequence{``0,``1})
  name: Add<TElement, TEnumerator, TResult>(IAdd<TElement, TResult>, ISequence<TElement, TEnumerator>)
  href: api/Langly.CoreExtensions.html#Langly_CoreExtensions_Add__3_Langly_IAdd___0___2__Langly_ISequence___0___1__
  commentId: M:Langly.CoreExtensions.Add``3(Langly.IAdd{``0,``2},Langly.ISequence{``0,``1})
  name.vb: Add(Of TElement, TEnumerator, TResult)(IAdd(Of TElement, TResult), ISequence(Of TElement, TEnumerator))
  fullName: Langly.CoreExtensions.Add<TElement, TEnumerator, TResult>(Langly.IAdd<TElement, TResult>, Langly.ISequence<TElement, TEnumerator>)
  fullName.vb: Langly.CoreExtensions.Add(Of TElement, TEnumerator, TResult)(Langly.IAdd(Of TElement, TResult), Langly.ISequence(Of TElement, TEnumerator))
  nameWithType: CoreExtensions.Add<TElement, TEnumerator, TResult>(IAdd<TElement, TResult>, ISequence<TElement, TEnumerator>)
  nameWithType.vb: CoreExtensions.Add(Of TElement, TEnumerator, TResult)(IAdd(Of TElement, TResult), ISequence(Of TElement, TEnumerator))
- uid: Langly.CoreExtensions.Clear(Langly.IClear)
  name: Clear(IClear)
  href: api/Langly.CoreExtensions.html#Langly_CoreExtensions_Clear_Langly_IClear_
  commentId: M:Langly.CoreExtensions.Clear(Langly.IClear)
  fullName: Langly.CoreExtensions.Clear(Langly.IClear)
  nameWithType: CoreExtensions.Clear(IClear)
- uid: Langly.CoreExtensions.Clear*
  name: Clear
  href: api/Langly.CoreExtensions.html#Langly_CoreExtensions_Clear_
  commentId: Overload:Langly.CoreExtensions.Clear
  isSpec: "True"
  fullName: Langly.CoreExtensions.Clear
  nameWithType: CoreExtensions.Clear
- uid: Langly.CoreExtensions.Contains*
  name: Contains
  href: api/Langly.CoreExtensions.html#Langly_CoreExtensions_Contains_
  commentId: Overload:Langly.CoreExtensions.Contains
  isSpec: "True"
  fullName: Langly.CoreExtensions.Contains
  nameWithType: CoreExtensions.Contains
- uid: Langly.CoreExtensions.Contains``1(Langly.IContains{``0},``0)
  name: Contains<TElement>(IContains<TElement>, TElement)
  href: api/Langly.CoreExtensions.html#Langly_CoreExtensions_Contains__1_Langly_IContains___0____0_
  commentId: M:Langly.CoreExtensions.Contains``1(Langly.IContains{``0},``0)
  name.vb: Contains(Of TElement)(IContains(Of TElement), TElement)
  fullName: Langly.CoreExtensions.Contains<TElement>(Langly.IContains<TElement>, TElement)
  fullName.vb: Langly.CoreExtensions.Contains(Of TElement)(Langly.IContains(Of TElement), TElement)
  nameWithType: CoreExtensions.Contains<TElement>(IContains<TElement>, TElement)
  nameWithType.vb: CoreExtensions.Contains(Of TElement)(IContains(Of TElement), TElement)
- uid: Langly.CoreExtensions.Fold*
  name: Fold
  href: api/Langly.CoreExtensions.html#Langly_CoreExtensions_Fold_
  commentId: Overload:Langly.CoreExtensions.Fold
  isSpec: "True"
  fullName: Langly.CoreExtensions.Fold
  nameWithType: CoreExtensions.Fold
- uid: Langly.CoreExtensions.Fold``2(Langly.ISequence{``0,``1},System.Func{``0,``0,``0},``0)
  name: Fold<TElement, TEnumerator>(ISequence<TElement, TEnumerator>, Func<TElement, TElement, TElement>, TElement)
  href: api/Langly.CoreExtensions.html#Langly_CoreExtensions_Fold__2_Langly_ISequence___0___1__System_Func___0___0___0____0_
  commentId: M:Langly.CoreExtensions.Fold``2(Langly.ISequence{``0,``1},System.Func{``0,``0,``0},``0)
  name.vb: Fold(Of TElement, TEnumerator)(ISequence(Of TElement, TEnumerator), Func(Of TElement, TElement, TElement), TElement)
  fullName: Langly.CoreExtensions.Fold<TElement, TEnumerator>(Langly.ISequence<TElement, TEnumerator>, System.Func<TElement, TElement, TElement>, TElement)
  fullName.vb: Langly.CoreExtensions.Fold(Of TElement, TEnumerator)(Langly.ISequence(Of TElement, TEnumerator), System.Func(Of TElement, TElement, TElement), TElement)
  nameWithType: CoreExtensions.Fold<TElement, TEnumerator>(ISequence<TElement, TEnumerator>, Func<TElement, TElement, TElement>, TElement)
  nameWithType.vb: CoreExtensions.Fold(Of TElement, TEnumerator)(ISequence(Of TElement, TEnumerator), Func(Of TElement, TElement, TElement), TElement)
- uid: Langly.CoreExtensions.Grow(Langly.IResizable)
  name: Grow(IResizable)
  href: api/Langly.CoreExtensions.html#Langly_CoreExtensions_Grow_Langly_IResizable_
  commentId: M:Langly.CoreExtensions.Grow(Langly.IResizable)
  fullName: Langly.CoreExtensions.Grow(Langly.IResizable)
  nameWithType: CoreExtensions.Grow(IResizable)
- uid: Langly.CoreExtensions.Grow*
  name: Grow
  href: api/Langly.CoreExtensions.html#Langly_CoreExtensions_Grow_
  commentId: Overload:Langly.CoreExtensions.Grow
  isSpec: "True"
  fullName: Langly.CoreExtensions.Grow
  nameWithType: CoreExtensions.Grow
- uid: Langly.CoreExtensions.IndexOfFirst*
  name: IndexOfFirst
  href: api/Langly.CoreExtensions.html#Langly_CoreExtensions_IndexOfFirst_
  commentId: Overload:Langly.CoreExtensions.IndexOfFirst
  isSpec: "True"
  fullName: Langly.CoreExtensions.IndexOfFirst
  nameWithType: CoreExtensions.IndexOfFirst
- uid: Langly.CoreExtensions.IndexOfFirst``1(Langly.IIndexReadOnly{``0},``0)
  name: IndexOfFirst<TElement>(IIndexReadOnly<TElement>, TElement)
  href: api/Langly.CoreExtensions.html#Langly_CoreExtensions_IndexOfFirst__1_Langly_IIndexReadOnly___0____0_
  commentId: M:Langly.CoreExtensions.IndexOfFirst``1(Langly.IIndexReadOnly{``0},``0)
  name.vb: IndexOfFirst(Of TElement)(IIndexReadOnly(Of TElement), TElement)
  fullName: Langly.CoreExtensions.IndexOfFirst<TElement>(Langly.IIndexReadOnly<TElement>, TElement)
  fullName.vb: Langly.CoreExtensions.IndexOfFirst(Of TElement)(Langly.IIndexReadOnly(Of TElement), TElement)
  nameWithType: CoreExtensions.IndexOfFirst<TElement>(IIndexReadOnly<TElement>, TElement)
  nameWithType.vb: CoreExtensions.IndexOfFirst(Of TElement)(IIndexReadOnly(Of TElement), TElement)
- uid: Langly.CoreExtensions.IndexOfFirst``1(Langly.IIndexReadOnly{``0},Langly.IEquals{``0})
  name: IndexOfFirst<TElement>(IIndexReadOnly<TElement>, IEquals<TElement>)
  href: api/Langly.CoreExtensions.html#Langly_CoreExtensions_IndexOfFirst__1_Langly_IIndexReadOnly___0__Langly_IEquals___0__
  commentId: M:Langly.CoreExtensions.IndexOfFirst``1(Langly.IIndexReadOnly{``0},Langly.IEquals{``0})
  name.vb: IndexOfFirst(Of TElement)(IIndexReadOnly(Of TElement), IEquals(Of TElement))
  fullName: Langly.CoreExtensions.IndexOfFirst<TElement>(Langly.IIndexReadOnly<TElement>, Langly.IEquals<TElement>)
  fullName.vb: Langly.CoreExtensions.IndexOfFirst(Of TElement)(Langly.IIndexReadOnly(Of TElement), Langly.IEquals(Of TElement))
  nameWithType: CoreExtensions.IndexOfFirst<TElement>(IIndexReadOnly<TElement>, IEquals<TElement>)
  nameWithType.vb: CoreExtensions.IndexOfFirst(Of TElement)(IIndexReadOnly(Of TElement), IEquals(Of TElement))
- uid: Langly.CoreExtensions.IndexOfFirst``1(Langly.IIndexReadOnly{``0},System.Predicate{``0})
  name: IndexOfFirst<TElement>(IIndexReadOnly<TElement>, Predicate<TElement>)
  href: api/Langly.CoreExtensions.html#Langly_CoreExtensions_IndexOfFirst__1_Langly_IIndexReadOnly___0__System_Predicate___0__
  commentId: M:Langly.CoreExtensions.IndexOfFirst``1(Langly.IIndexReadOnly{``0},System.Predicate{``0})
  name.vb: IndexOfFirst(Of TElement)(IIndexReadOnly(Of TElement), Predicate(Of TElement))
  fullName: Langly.CoreExtensions.IndexOfFirst<TElement>(Langly.IIndexReadOnly<TElement>, System.Predicate<TElement>)
  fullName.vb: Langly.CoreExtensions.IndexOfFirst(Of TElement)(Langly.IIndexReadOnly(Of TElement), System.Predicate(Of TElement))
  nameWithType: CoreExtensions.IndexOfFirst<TElement>(IIndexReadOnly<TElement>, Predicate<TElement>)
  nameWithType.vb: CoreExtensions.IndexOfFirst(Of TElement)(IIndexReadOnly(Of TElement), Predicate(Of TElement))
- uid: Langly.CoreExtensions.IndexOfFirst``1(Langly.IIndexRefReadOnly{``0},``0)
  name: IndexOfFirst<TElement>(IIndexRefReadOnly<TElement>, TElement)
  href: api/Langly.CoreExtensions.html#Langly_CoreExtensions_IndexOfFirst__1_Langly_IIndexRefReadOnly___0____0_
  commentId: M:Langly.CoreExtensions.IndexOfFirst``1(Langly.IIndexRefReadOnly{``0},``0)
  name.vb: IndexOfFirst(Of TElement)(IIndexRefReadOnly(Of TElement), TElement)
  fullName: Langly.CoreExtensions.IndexOfFirst<TElement>(Langly.IIndexRefReadOnly<TElement>, TElement)
  fullName.vb: Langly.CoreExtensions.IndexOfFirst(Of TElement)(Langly.IIndexRefReadOnly(Of TElement), TElement)
  nameWithType: CoreExtensions.IndexOfFirst<TElement>(IIndexRefReadOnly<TElement>, TElement)
  nameWithType.vb: CoreExtensions.IndexOfFirst(Of TElement)(IIndexRefReadOnly(Of TElement), TElement)
- uid: Langly.CoreExtensions.IndexOfFirst``1(Langly.IIndexRefReadOnly{``0},Langly.IEquals{``0})
  name: IndexOfFirst<TElement>(IIndexRefReadOnly<TElement>, IEquals<TElement>)
  href: api/Langly.CoreExtensions.html#Langly_CoreExtensions_IndexOfFirst__1_Langly_IIndexRefReadOnly___0__Langly_IEquals___0__
  commentId: M:Langly.CoreExtensions.IndexOfFirst``1(Langly.IIndexRefReadOnly{``0},Langly.IEquals{``0})
  name.vb: IndexOfFirst(Of TElement)(IIndexRefReadOnly(Of TElement), IEquals(Of TElement))
  fullName: Langly.CoreExtensions.IndexOfFirst<TElement>(Langly.IIndexRefReadOnly<TElement>, Langly.IEquals<TElement>)
  fullName.vb: Langly.CoreExtensions.IndexOfFirst(Of TElement)(Langly.IIndexRefReadOnly(Of TElement), Langly.IEquals(Of TElement))
  nameWithType: CoreExtensions.IndexOfFirst<TElement>(IIndexRefReadOnly<TElement>, IEquals<TElement>)
  nameWithType.vb: CoreExtensions.IndexOfFirst(Of TElement)(IIndexRefReadOnly(Of TElement), IEquals(Of TElement))
- uid: Langly.CoreExtensions.IndexOfFirst``1(Langly.IIndexRefReadOnly{``0},System.Predicate{``0})
  name: IndexOfFirst<TElement>(IIndexRefReadOnly<TElement>, Predicate<TElement>)
  href: api/Langly.CoreExtensions.html#Langly_CoreExtensions_IndexOfFirst__1_Langly_IIndexRefReadOnly___0__System_Predicate___0__
  commentId: M:Langly.CoreExtensions.IndexOfFirst``1(Langly.IIndexRefReadOnly{``0},System.Predicate{``0})
  name.vb: IndexOfFirst(Of TElement)(IIndexRefReadOnly(Of TElement), Predicate(Of TElement))
  fullName: Langly.CoreExtensions.IndexOfFirst<TElement>(Langly.IIndexRefReadOnly<TElement>, System.Predicate<TElement>)
  fullName.vb: Langly.CoreExtensions.IndexOfFirst(Of TElement)(Langly.IIndexRefReadOnly(Of TElement), System.Predicate(Of TElement))
  nameWithType: CoreExtensions.IndexOfFirst<TElement>(IIndexRefReadOnly<TElement>, Predicate<TElement>)
  nameWithType.vb: CoreExtensions.IndexOfFirst(Of TElement)(IIndexRefReadOnly(Of TElement), Predicate(Of TElement))
- uid: Langly.CoreExtensions.IndexOfLast*
  name: IndexOfLast
  href: api/Langly.CoreExtensions.html#Langly_CoreExtensions_IndexOfLast_
  commentId: Overload:Langly.CoreExtensions.IndexOfLast
  isSpec: "True"
  fullName: Langly.CoreExtensions.IndexOfLast
  nameWithType: CoreExtensions.IndexOfLast
- uid: Langly.CoreExtensions.IndexOfLast``1(Langly.IIndexReadOnly{``0},``0)
  name: IndexOfLast<TElement>(IIndexReadOnly<TElement>, TElement)
  href: api/Langly.CoreExtensions.html#Langly_CoreExtensions_IndexOfLast__1_Langly_IIndexReadOnly___0____0_
  commentId: M:Langly.CoreExtensions.IndexOfLast``1(Langly.IIndexReadOnly{``0},``0)
  name.vb: IndexOfLast(Of TElement)(IIndexReadOnly(Of TElement), TElement)
  fullName: Langly.CoreExtensions.IndexOfLast<TElement>(Langly.IIndexReadOnly<TElement>, TElement)
  fullName.vb: Langly.CoreExtensions.IndexOfLast(Of TElement)(Langly.IIndexReadOnly(Of TElement), TElement)
  nameWithType: CoreExtensions.IndexOfLast<TElement>(IIndexReadOnly<TElement>, TElement)
  nameWithType.vb: CoreExtensions.IndexOfLast(Of TElement)(IIndexReadOnly(Of TElement), TElement)
- uid: Langly.CoreExtensions.IndexOfLast``1(Langly.IIndexReadOnly{``0},Langly.IEquals{``0})
  name: IndexOfLast<TElement>(IIndexReadOnly<TElement>, IEquals<TElement>)
  href: api/Langly.CoreExtensions.html#Langly_CoreExtensions_IndexOfLast__1_Langly_IIndexReadOnly___0__Langly_IEquals___0__
  commentId: M:Langly.CoreExtensions.IndexOfLast``1(Langly.IIndexReadOnly{``0},Langly.IEquals{``0})
  name.vb: IndexOfLast(Of TElement)(IIndexReadOnly(Of TElement), IEquals(Of TElement))
  fullName: Langly.CoreExtensions.IndexOfLast<TElement>(Langly.IIndexReadOnly<TElement>, Langly.IEquals<TElement>)
  fullName.vb: Langly.CoreExtensions.IndexOfLast(Of TElement)(Langly.IIndexReadOnly(Of TElement), Langly.IEquals(Of TElement))
  nameWithType: CoreExtensions.IndexOfLast<TElement>(IIndexReadOnly<TElement>, IEquals<TElement>)
  nameWithType.vb: CoreExtensions.IndexOfLast(Of TElement)(IIndexReadOnly(Of TElement), IEquals(Of TElement))
- uid: Langly.CoreExtensions.IndexOfLast``1(Langly.IIndexReadOnly{``0},System.Predicate{``0})
  name: IndexOfLast<TElement>(IIndexReadOnly<TElement>, Predicate<TElement>)
  href: api/Langly.CoreExtensions.html#Langly_CoreExtensions_IndexOfLast__1_Langly_IIndexReadOnly___0__System_Predicate___0__
  commentId: M:Langly.CoreExtensions.IndexOfLast``1(Langly.IIndexReadOnly{``0},System.Predicate{``0})
  name.vb: IndexOfLast(Of TElement)(IIndexReadOnly(Of TElement), Predicate(Of TElement))
  fullName: Langly.CoreExtensions.IndexOfLast<TElement>(Langly.IIndexReadOnly<TElement>, System.Predicate<TElement>)
  fullName.vb: Langly.CoreExtensions.IndexOfLast(Of TElement)(Langly.IIndexReadOnly(Of TElement), System.Predicate(Of TElement))
  nameWithType: CoreExtensions.IndexOfLast<TElement>(IIndexReadOnly<TElement>, Predicate<TElement>)
  nameWithType.vb: CoreExtensions.IndexOfLast(Of TElement)(IIndexReadOnly(Of TElement), Predicate(Of TElement))
- uid: Langly.CoreExtensions.IndexOfLast``1(Langly.IIndexRefReadOnly{``0},``0)
  name: IndexOfLast<TElement>(IIndexRefReadOnly<TElement>, TElement)
  href: api/Langly.CoreExtensions.html#Langly_CoreExtensions_IndexOfLast__1_Langly_IIndexRefReadOnly___0____0_
  commentId: M:Langly.CoreExtensions.IndexOfLast``1(Langly.IIndexRefReadOnly{``0},``0)
  name.vb: IndexOfLast(Of TElement)(IIndexRefReadOnly(Of TElement), TElement)
  fullName: Langly.CoreExtensions.IndexOfLast<TElement>(Langly.IIndexRefReadOnly<TElement>, TElement)
  fullName.vb: Langly.CoreExtensions.IndexOfLast(Of TElement)(Langly.IIndexRefReadOnly(Of TElement), TElement)
  nameWithType: CoreExtensions.IndexOfLast<TElement>(IIndexRefReadOnly<TElement>, TElement)
  nameWithType.vb: CoreExtensions.IndexOfLast(Of TElement)(IIndexRefReadOnly(Of TElement), TElement)
- uid: Langly.CoreExtensions.IndexOfLast``1(Langly.IIndexRefReadOnly{``0},Langly.IEquals{``0})
  name: IndexOfLast<TElement>(IIndexRefReadOnly<TElement>, IEquals<TElement>)
  href: api/Langly.CoreExtensions.html#Langly_CoreExtensions_IndexOfLast__1_Langly_IIndexRefReadOnly___0__Langly_IEquals___0__
  commentId: M:Langly.CoreExtensions.IndexOfLast``1(Langly.IIndexRefReadOnly{``0},Langly.IEquals{``0})
  name.vb: IndexOfLast(Of TElement)(IIndexRefReadOnly(Of TElement), IEquals(Of TElement))
  fullName: Langly.CoreExtensions.IndexOfLast<TElement>(Langly.IIndexRefReadOnly<TElement>, Langly.IEquals<TElement>)
  fullName.vb: Langly.CoreExtensions.IndexOfLast(Of TElement)(Langly.IIndexRefReadOnly(Of TElement), Langly.IEquals(Of TElement))
  nameWithType: CoreExtensions.IndexOfLast<TElement>(IIndexRefReadOnly<TElement>, IEquals<TElement>)
  nameWithType.vb: CoreExtensions.IndexOfLast(Of TElement)(IIndexRefReadOnly(Of TElement), IEquals(Of TElement))
- uid: Langly.CoreExtensions.IndexOfLast``1(Langly.IIndexRefReadOnly{``0},System.Predicate{``0})
  name: IndexOfLast<TElement>(IIndexRefReadOnly<TElement>, Predicate<TElement>)
  href: api/Langly.CoreExtensions.html#Langly_CoreExtensions_IndexOfLast__1_Langly_IIndexRefReadOnly___0__System_Predicate___0__
  commentId: M:Langly.CoreExtensions.IndexOfLast``1(Langly.IIndexRefReadOnly{``0},System.Predicate{``0})
  name.vb: IndexOfLast(Of TElement)(IIndexRefReadOnly(Of TElement), Predicate(Of TElement))
  fullName: Langly.CoreExtensions.IndexOfLast<TElement>(Langly.IIndexRefReadOnly<TElement>, System.Predicate<TElement>)
  fullName.vb: Langly.CoreExtensions.IndexOfLast(Of TElement)(Langly.IIndexRefReadOnly(Of TElement), System.Predicate(Of TElement))
  nameWithType: CoreExtensions.IndexOfLast<TElement>(IIndexRefReadOnly<TElement>, Predicate<TElement>)
  nameWithType.vb: CoreExtensions.IndexOfLast(Of TElement)(IIndexRefReadOnly(Of TElement), Predicate(Of TElement))
- uid: Langly.CoreExtensions.Insert*
  name: Insert
  href: api/Langly.CoreExtensions.html#Langly_CoreExtensions_Insert_
  commentId: Overload:Langly.CoreExtensions.Insert
  isSpec: "True"
  fullName: Langly.CoreExtensions.Insert
  nameWithType: CoreExtensions.Insert
- uid: Langly.CoreExtensions.Insert``3(Langly.IInsert{``0,``1,``2},``0,``1)
  name: Insert<TIndex, TElement, TResult>(IInsert<TIndex, TElement, TResult>, TIndex, TElement)
  href: api/Langly.CoreExtensions.html#Langly_CoreExtensions_Insert__3_Langly_IInsert___0___1___2____0___1_
  commentId: M:Langly.CoreExtensions.Insert``3(Langly.IInsert{``0,``1,``2},``0,``1)
  name.vb: Insert(Of TIndex, TElement, TResult)(IInsert(Of TIndex, TElement, TResult), TIndex, TElement)
  fullName: Langly.CoreExtensions.Insert<TIndex, TElement, TResult>(Langly.IInsert<TIndex, TElement, TResult>, TIndex, TElement)
  fullName.vb: Langly.CoreExtensions.Insert(Of TIndex, TElement, TResult)(Langly.IInsert(Of TIndex, TElement, TResult), TIndex, TElement)
  nameWithType: CoreExtensions.Insert<TIndex, TElement, TResult>(IInsert<TIndex, TElement, TResult>, TIndex, TElement)
  nameWithType.vb: CoreExtensions.Insert(Of TIndex, TElement, TResult)(IInsert(Of TIndex, TElement, TResult), TIndex, TElement)
- uid: Langly.CoreExtensions.Insert``3(Langly.IInsert{``0,``1,``2},``0,``1[])
  name: Insert<TIndex, TElement, TResult>(IInsert<TIndex, TElement, TResult>, TIndex, TElement[])
  href: api/Langly.CoreExtensions.html#Langly_CoreExtensions_Insert__3_Langly_IInsert___0___1___2____0___1___
  commentId: M:Langly.CoreExtensions.Insert``3(Langly.IInsert{``0,``1,``2},``0,``1[])
  name.vb: Insert(Of TIndex, TElement, TResult)(IInsert(Of TIndex, TElement, TResult), TIndex, TElement())
  fullName: Langly.CoreExtensions.Insert<TIndex, TElement, TResult>(Langly.IInsert<TIndex, TElement, TResult>, TIndex, TElement[])
  fullName.vb: Langly.CoreExtensions.Insert(Of TIndex, TElement, TResult)(Langly.IInsert(Of TIndex, TElement, TResult), TIndex, TElement())
  nameWithType: CoreExtensions.Insert<TIndex, TElement, TResult>(IInsert<TIndex, TElement, TResult>, TIndex, TElement[])
  nameWithType.vb: CoreExtensions.Insert(Of TIndex, TElement, TResult)(IInsert(Of TIndex, TElement, TResult), TIndex, TElement())
- uid: Langly.CoreExtensions.Insert``3(Langly.IInsert{``0,``1,``2},``0,System.Memory{``1})
  name: Insert<TIndex, TElement, TResult>(IInsert<TIndex, TElement, TResult>, TIndex, Memory<TElement>)
  href: api/Langly.CoreExtensions.html#Langly_CoreExtensions_Insert__3_Langly_IInsert___0___1___2____0_System_Memory___1__
  commentId: M:Langly.CoreExtensions.Insert``3(Langly.IInsert{``0,``1,``2},``0,System.Memory{``1})
  name.vb: Insert(Of TIndex, TElement, TResult)(IInsert(Of TIndex, TElement, TResult), TIndex, Memory(Of TElement))
  fullName: Langly.CoreExtensions.Insert<TIndex, TElement, TResult>(Langly.IInsert<TIndex, TElement, TResult>, TIndex, System.Memory<TElement>)
  fullName.vb: Langly.CoreExtensions.Insert(Of TIndex, TElement, TResult)(Langly.IInsert(Of TIndex, TElement, TResult), TIndex, System.Memory(Of TElement))
  nameWithType: CoreExtensions.Insert<TIndex, TElement, TResult>(IInsert<TIndex, TElement, TResult>, TIndex, Memory<TElement>)
  nameWithType.vb: CoreExtensions.Insert(Of TIndex, TElement, TResult)(IInsert(Of TIndex, TElement, TResult), TIndex, Memory(Of TElement))
- uid: Langly.CoreExtensions.Insert``3(Langly.IInsert{``0,``1,``2},``0,System.ReadOnlyMemory{``1})
  name: Insert<TIndex, TElement, TResult>(IInsert<TIndex, TElement, TResult>, TIndex, ReadOnlyMemory<TElement>)
  href: api/Langly.CoreExtensions.html#Langly_CoreExtensions_Insert__3_Langly_IInsert___0___1___2____0_System_ReadOnlyMemory___1__
  commentId: M:Langly.CoreExtensions.Insert``3(Langly.IInsert{``0,``1,``2},``0,System.ReadOnlyMemory{``1})
  name.vb: Insert(Of TIndex, TElement, TResult)(IInsert(Of TIndex, TElement, TResult), TIndex, ReadOnlyMemory(Of TElement))
  fullName: Langly.CoreExtensions.Insert<TIndex, TElement, TResult>(Langly.IInsert<TIndex, TElement, TResult>, TIndex, System.ReadOnlyMemory<TElement>)
  fullName.vb: Langly.CoreExtensions.Insert(Of TIndex, TElement, TResult)(Langly.IInsert(Of TIndex, TElement, TResult), TIndex, System.ReadOnlyMemory(Of TElement))
  nameWithType: CoreExtensions.Insert<TIndex, TElement, TResult>(IInsert<TIndex, TElement, TResult>, TIndex, ReadOnlyMemory<TElement>)
  nameWithType.vb: CoreExtensions.Insert(Of TIndex, TElement, TResult)(IInsert(Of TIndex, TElement, TResult), TIndex, ReadOnlyMemory(Of TElement))
- uid: Langly.CoreExtensions.Insert``3(Langly.IInsert{``0,``1,``2},``0,System.ReadOnlySpan{``1})
  name: Insert<TIndex, TElement, TResult>(IInsert<TIndex, TElement, TResult>, TIndex, ReadOnlySpan<TElement>)
  href: api/Langly.CoreExtensions.html#Langly_CoreExtensions_Insert__3_Langly_IInsert___0___1___2____0_System_ReadOnlySpan___1__
  commentId: M:Langly.CoreExtensions.Insert``3(Langly.IInsert{``0,``1,``2},``0,System.ReadOnlySpan{``1})
  name.vb: Insert(Of TIndex, TElement, TResult)(IInsert(Of TIndex, TElement, TResult), TIndex, ReadOnlySpan(Of TElement))
  fullName: Langly.CoreExtensions.Insert<TIndex, TElement, TResult>(Langly.IInsert<TIndex, TElement, TResult>, TIndex, System.ReadOnlySpan<TElement>)
  fullName.vb: Langly.CoreExtensions.Insert(Of TIndex, TElement, TResult)(Langly.IInsert(Of TIndex, TElement, TResult), TIndex, System.ReadOnlySpan(Of TElement))
  nameWithType: CoreExtensions.Insert<TIndex, TElement, TResult>(IInsert<TIndex, TElement, TResult>, TIndex, ReadOnlySpan<TElement>)
  nameWithType.vb: CoreExtensions.Insert(Of TIndex, TElement, TResult)(IInsert(Of TIndex, TElement, TResult), TIndex, ReadOnlySpan(Of TElement))
- uid: Langly.CoreExtensions.Insert``3(Langly.IInsert{``0,``1,``2},``0,System.Span{``1})
  name: Insert<TIndex, TElement, TResult>(IInsert<TIndex, TElement, TResult>, TIndex, Span<TElement>)
  href: api/Langly.CoreExtensions.html#Langly_CoreExtensions_Insert__3_Langly_IInsert___0___1___2____0_System_Span___1__
  commentId: M:Langly.CoreExtensions.Insert``3(Langly.IInsert{``0,``1,``2},``0,System.Span{``1})
  name.vb: Insert(Of TIndex, TElement, TResult)(IInsert(Of TIndex, TElement, TResult), TIndex, Span(Of TElement))
  fullName: Langly.CoreExtensions.Insert<TIndex, TElement, TResult>(Langly.IInsert<TIndex, TElement, TResult>, TIndex, System.Span<TElement>)
  fullName.vb: Langly.CoreExtensions.Insert(Of TIndex, TElement, TResult)(Langly.IInsert(Of TIndex, TElement, TResult), TIndex, System.Span(Of TElement))
  nameWithType: CoreExtensions.Insert<TIndex, TElement, TResult>(IInsert<TIndex, TElement, TResult>, TIndex, Span<TElement>)
  nameWithType.vb: CoreExtensions.Insert(Of TIndex, TElement, TResult)(IInsert(Of TIndex, TElement, TResult), TIndex, Span(Of TElement))
- uid: Langly.CoreExtensions.Insert``4(Langly.IInsert{``0,``1,``2},``0,Langly.ISequence{``1,``3})
  name: Insert<TIndex, TElement, TResult, TEnumerator>(IInsert<TIndex, TElement, TResult>, TIndex, ISequence<TElement, TEnumerator>)
  href: api/Langly.CoreExtensions.html#Langly_CoreExtensions_Insert__4_Langly_IInsert___0___1___2____0_Langly_ISequence___1___3__
  commentId: M:Langly.CoreExtensions.Insert``4(Langly.IInsert{``0,``1,``2},``0,Langly.ISequence{``1,``3})
  name.vb: Insert(Of TIndex, TElement, TResult, TEnumerator)(IInsert(Of TIndex, TElement, TResult), TIndex, ISequence(Of TElement, TEnumerator))
  fullName: Langly.CoreExtensions.Insert<TIndex, TElement, TResult, TEnumerator>(Langly.IInsert<TIndex, TElement, TResult>, TIndex, Langly.ISequence<TElement, TEnumerator>)
  fullName.vb: Langly.CoreExtensions.Insert(Of TIndex, TElement, TResult, TEnumerator)(Langly.IInsert(Of TIndex, TElement, TResult), TIndex, Langly.ISequence(Of TElement, TEnumerator))
  nameWithType: CoreExtensions.Insert<TIndex, TElement, TResult, TEnumerator>(IInsert<TIndex, TElement, TResult>, TIndex, ISequence<TElement, TEnumerator>)
  nameWithType.vb: CoreExtensions.Insert(Of TIndex, TElement, TResult, TEnumerator)(IInsert(Of TIndex, TElement, TResult), TIndex, ISequence(Of TElement, TEnumerator))
- uid: Langly.CoreExtensions.Map*
  name: Map
  href: api/Langly.CoreExtensions.html#Langly_CoreExtensions_Map_
  commentId: Overload:Langly.CoreExtensions.Map
  isSpec: "True"
  fullName: Langly.CoreExtensions.Map
  nameWithType: CoreExtensions.Map
- uid: Langly.CoreExtensions.Map``1(Langly.IIndex{``0},System.Func{``0,``0})
  name: Map<TElement>(IIndex<TElement>, Func<TElement, TElement>)
  href: api/Langly.CoreExtensions.html#Langly_CoreExtensions_Map__1_Langly_IIndex___0__System_Func___0___0__
  commentId: M:Langly.CoreExtensions.Map``1(Langly.IIndex{``0},System.Func{``0,``0})
  name.vb: Map(Of TElement)(IIndex(Of TElement), Func(Of TElement, TElement))
  fullName: Langly.CoreExtensions.Map<TElement>(Langly.IIndex<TElement>, System.Func<TElement, TElement>)
  fullName.vb: Langly.CoreExtensions.Map(Of TElement)(Langly.IIndex(Of TElement), System.Func(Of TElement, TElement))
  nameWithType: CoreExtensions.Map<TElement>(IIndex<TElement>, Func<TElement, TElement>)
  nameWithType.vb: CoreExtensions.Map(Of TElement)(IIndex(Of TElement), Func(Of TElement, TElement))
- uid: Langly.CoreExtensions.Map``1(Langly.IIndexRef{``0},System.Func{``0,``0})
  name: Map<TElement>(IIndexRef<TElement>, Func<TElement, TElement>)
  href: api/Langly.CoreExtensions.html#Langly_CoreExtensions_Map__1_Langly_IIndexRef___0__System_Func___0___0__
  commentId: M:Langly.CoreExtensions.Map``1(Langly.IIndexRef{``0},System.Func{``0,``0})
  name.vb: Map(Of TElement)(IIndexRef(Of TElement), Func(Of TElement, TElement))
  fullName: Langly.CoreExtensions.Map<TElement>(Langly.IIndexRef<TElement>, System.Func<TElement, TElement>)
  fullName.vb: Langly.CoreExtensions.Map(Of TElement)(Langly.IIndexRef(Of TElement), System.Func(Of TElement, TElement))
  nameWithType: CoreExtensions.Map<TElement>(IIndexRef<TElement>, Func<TElement, TElement>)
  nameWithType.vb: CoreExtensions.Map(Of TElement)(IIndexRef(Of TElement), Func(Of TElement, TElement))
- uid: Langly.CoreExtensions.Occurrences*
  name: Occurrences
  href: api/Langly.CoreExtensions.html#Langly_CoreExtensions_Occurrences_
  commentId: Overload:Langly.CoreExtensions.Occurrences
  isSpec: "True"
  fullName: Langly.CoreExtensions.Occurrences
  nameWithType: CoreExtensions.Occurrences
- uid: Langly.CoreExtensions.Occurrences``2(Langly.ISequence{``0,``1},``0)
  name: Occurrences<TElement, TEnumerator>(ISequence<TElement, TEnumerator>, TElement)
  href: api/Langly.CoreExtensions.html#Langly_CoreExtensions_Occurrences__2_Langly_ISequence___0___1____0_
  commentId: M:Langly.CoreExtensions.Occurrences``2(Langly.ISequence{``0,``1},``0)
  name.vb: Occurrences(Of TElement, TEnumerator)(ISequence(Of TElement, TEnumerator), TElement)
  fullName: Langly.CoreExtensions.Occurrences<TElement, TEnumerator>(Langly.ISequence<TElement, TEnumerator>, TElement)
  fullName.vb: Langly.CoreExtensions.Occurrences(Of TElement, TEnumerator)(Langly.ISequence(Of TElement, TEnumerator), TElement)
  nameWithType: CoreExtensions.Occurrences<TElement, TEnumerator>(ISequence<TElement, TEnumerator>, TElement)
  nameWithType.vb: CoreExtensions.Occurrences(Of TElement, TEnumerator)(ISequence(Of TElement, TEnumerator), TElement)
- uid: Langly.CoreExtensions.Occurrences``2(Langly.ISequence{``0,``1},Langly.IEquals{``0})
  name: Occurrences<TElement, TEnumerator>(ISequence<TElement, TEnumerator>, IEquals<TElement>)
  href: api/Langly.CoreExtensions.html#Langly_CoreExtensions_Occurrences__2_Langly_ISequence___0___1__Langly_IEquals___0__
  commentId: M:Langly.CoreExtensions.Occurrences``2(Langly.ISequence{``0,``1},Langly.IEquals{``0})
  name.vb: Occurrences(Of TElement, TEnumerator)(ISequence(Of TElement, TEnumerator), IEquals(Of TElement))
  fullName: Langly.CoreExtensions.Occurrences<TElement, TEnumerator>(Langly.ISequence<TElement, TEnumerator>, Langly.IEquals<TElement>)
  fullName.vb: Langly.CoreExtensions.Occurrences(Of TElement, TEnumerator)(Langly.ISequence(Of TElement, TEnumerator), Langly.IEquals(Of TElement))
  nameWithType: CoreExtensions.Occurrences<TElement, TEnumerator>(ISequence<TElement, TEnumerator>, IEquals<TElement>)
  nameWithType.vb: CoreExtensions.Occurrences(Of TElement, TEnumerator)(ISequence(Of TElement, TEnumerator), IEquals(Of TElement))
- uid: Langly.CoreExtensions.Occurrences``2(Langly.ISequence{``0,``1},System.Predicate{``0})
  name: Occurrences<TElement, TEnumerator>(ISequence<TElement, TEnumerator>, Predicate<TElement>)
  href: api/Langly.CoreExtensions.html#Langly_CoreExtensions_Occurrences__2_Langly_ISequence___0___1__System_Predicate___0__
  commentId: M:Langly.CoreExtensions.Occurrences``2(Langly.ISequence{``0,``1},System.Predicate{``0})
  name.vb: Occurrences(Of TElement, TEnumerator)(ISequence(Of TElement, TEnumerator), Predicate(Of TElement))
  fullName: Langly.CoreExtensions.Occurrences<TElement, TEnumerator>(Langly.ISequence<TElement, TEnumerator>, System.Predicate<TElement>)
  fullName.vb: Langly.CoreExtensions.Occurrences(Of TElement, TEnumerator)(Langly.ISequence(Of TElement, TEnumerator), System.Predicate(Of TElement))
  nameWithType: CoreExtensions.Occurrences<TElement, TEnumerator>(ISequence<TElement, TEnumerator>, Predicate<TElement>)
  nameWithType.vb: CoreExtensions.Occurrences(Of TElement, TEnumerator)(ISequence(Of TElement, TEnumerator), Predicate(Of TElement))
- uid: Langly.CoreExtensions.Peek*
  name: Peek
  href: api/Langly.CoreExtensions.html#Langly_CoreExtensions_Peek_
  commentId: Overload:Langly.CoreExtensions.Peek
  isSpec: "True"
  fullName: Langly.CoreExtensions.Peek
  nameWithType: CoreExtensions.Peek
- uid: Langly.CoreExtensions.Peek``2(Langly.IPeek{``0,``1},``0@)
  name: Peek<TElement, TResult>(IPeek<TElement, TResult>, out TElement)
  href: api/Langly.CoreExtensions.html#Langly_CoreExtensions_Peek__2_Langly_IPeek___0___1____0__
  commentId: M:Langly.CoreExtensions.Peek``2(Langly.IPeek{``0,``1},``0@)
  name.vb: Peek(Of TElement, TResult)(IPeek(Of TElement, TResult), ByRef TElement)
  fullName: Langly.CoreExtensions.Peek<TElement, TResult>(Langly.IPeek<TElement, TResult>, out TElement)
  fullName.vb: Langly.CoreExtensions.Peek(Of TElement, TResult)(Langly.IPeek(Of TElement, TResult), ByRef TElement)
  nameWithType: CoreExtensions.Peek<TElement, TResult>(IPeek<TElement, TResult>, out TElement)
  nameWithType.vb: CoreExtensions.Peek(Of TElement, TResult)(IPeek(Of TElement, TResult), ByRef TElement)
- uid: Langly.CoreExtensions.Pop*
  name: Pop
  href: api/Langly.CoreExtensions.html#Langly_CoreExtensions_Pop_
  commentId: Overload:Langly.CoreExtensions.Pop
  isSpec: "True"
  fullName: Langly.CoreExtensions.Pop
  nameWithType: CoreExtensions.Pop
- uid: Langly.CoreExtensions.Pop``2(Langly.IPop{``0,``1},``0@)
  name: Pop<TElement, TResult>(IPop<TElement, TResult>, out TElement)
  href: api/Langly.CoreExtensions.html#Langly_CoreExtensions_Pop__2_Langly_IPop___0___1____0__
  commentId: M:Langly.CoreExtensions.Pop``2(Langly.IPop{``0,``1},``0@)
  name.vb: Pop(Of TElement, TResult)(IPop(Of TElement, TResult), ByRef TElement)
  fullName: Langly.CoreExtensions.Pop<TElement, TResult>(Langly.IPop<TElement, TResult>, out TElement)
  fullName.vb: Langly.CoreExtensions.Pop(Of TElement, TResult)(Langly.IPop(Of TElement, TResult), ByRef TElement)
  nameWithType: CoreExtensions.Pop<TElement, TResult>(IPop<TElement, TResult>, out TElement)
  nameWithType.vb: CoreExtensions.Pop(Of TElement, TResult)(IPop(Of TElement, TResult), ByRef TElement)
- uid: Langly.CoreExtensions.Pop``2(Langly.IPop{``0,``1},nint,``0[]@)
  name: Pop<TElement, TResult>(IPop<TElement, TResult>, nint, out TElement[])
  href: api/Langly.CoreExtensions.html#Langly_CoreExtensions_Pop__2_Langly_IPop___0___1__nint___0____
  commentId: M:Langly.CoreExtensions.Pop``2(Langly.IPop{``0,``1},nint,``0[]@)
  name.vb: Pop(Of TElement, TResult)(IPop(Of TElement, TResult), nint, ByRef TElement())
  fullName: Langly.CoreExtensions.Pop<TElement, TResult>(Langly.IPop<TElement, TResult>, nint, out TElement[])
  fullName.vb: Langly.CoreExtensions.Pop(Of TElement, TResult)(Langly.IPop(Of TElement, TResult), nint, ByRef TElement())
  nameWithType: CoreExtensions.Pop<TElement, TResult>(IPop<TElement, TResult>, nint, out TElement[])
  nameWithType.vb: CoreExtensions.Pop(Of TElement, TResult)(IPop(Of TElement, TResult), nint, ByRef TElement())
- uid: Langly.CoreExtensions.Postpend*
  name: Postpend
  href: api/Langly.CoreExtensions.html#Langly_CoreExtensions_Postpend_
  commentId: Overload:Langly.CoreExtensions.Postpend
  isSpec: "True"
  fullName: Langly.CoreExtensions.Postpend
  nameWithType: CoreExtensions.Postpend
- uid: Langly.CoreExtensions.Postpend``2(Langly.IPostpend{``0,``1},``0)
  name: Postpend<TElement, TResult>(IPostpend<TElement, TResult>, TElement)
  href: api/Langly.CoreExtensions.html#Langly_CoreExtensions_Postpend__2_Langly_IPostpend___0___1____0_
  commentId: M:Langly.CoreExtensions.Postpend``2(Langly.IPostpend{``0,``1},``0)
  name.vb: Postpend(Of TElement, TResult)(IPostpend(Of TElement, TResult), TElement)
  fullName: Langly.CoreExtensions.Postpend<TElement, TResult>(Langly.IPostpend<TElement, TResult>, TElement)
  fullName.vb: Langly.CoreExtensions.Postpend(Of TElement, TResult)(Langly.IPostpend(Of TElement, TResult), TElement)
  nameWithType: CoreExtensions.Postpend<TElement, TResult>(IPostpend<TElement, TResult>, TElement)
  nameWithType.vb: CoreExtensions.Postpend(Of TElement, TResult)(IPostpend(Of TElement, TResult), TElement)
- uid: Langly.CoreExtensions.Postpend``2(Langly.IPostpend{``0,``1},``0[])
  name: Postpend<TElement, TResult>(IPostpend<TElement, TResult>, TElement[])
  href: api/Langly.CoreExtensions.html#Langly_CoreExtensions_Postpend__2_Langly_IPostpend___0___1____0___
  commentId: M:Langly.CoreExtensions.Postpend``2(Langly.IPostpend{``0,``1},``0[])
  name.vb: Postpend(Of TElement, TResult)(IPostpend(Of TElement, TResult), TElement())
  fullName: Langly.CoreExtensions.Postpend<TElement, TResult>(Langly.IPostpend<TElement, TResult>, TElement[])
  fullName.vb: Langly.CoreExtensions.Postpend(Of TElement, TResult)(Langly.IPostpend(Of TElement, TResult), TElement())
  nameWithType: CoreExtensions.Postpend<TElement, TResult>(IPostpend<TElement, TResult>, TElement[])
  nameWithType.vb: CoreExtensions.Postpend(Of TElement, TResult)(IPostpend(Of TElement, TResult), TElement())
- uid: Langly.CoreExtensions.Postpend``2(Langly.IPostpend{``0,``1},System.Memory{``0})
  name: Postpend<TElement, TResult>(IPostpend<TElement, TResult>, Memory<TElement>)
  href: api/Langly.CoreExtensions.html#Langly_CoreExtensions_Postpend__2_Langly_IPostpend___0___1__System_Memory___0__
  commentId: M:Langly.CoreExtensions.Postpend``2(Langly.IPostpend{``0,``1},System.Memory{``0})
  name.vb: Postpend(Of TElement, TResult)(IPostpend(Of TElement, TResult), Memory(Of TElement))
  fullName: Langly.CoreExtensions.Postpend<TElement, TResult>(Langly.IPostpend<TElement, TResult>, System.Memory<TElement>)
  fullName.vb: Langly.CoreExtensions.Postpend(Of TElement, TResult)(Langly.IPostpend(Of TElement, TResult), System.Memory(Of TElement))
  nameWithType: CoreExtensions.Postpend<TElement, TResult>(IPostpend<TElement, TResult>, Memory<TElement>)
  nameWithType.vb: CoreExtensions.Postpend(Of TElement, TResult)(IPostpend(Of TElement, TResult), Memory(Of TElement))
- uid: Langly.CoreExtensions.Postpend``2(Langly.IPostpend{``0,``1},System.ReadOnlyMemory{``0})
  name: Postpend<TElement, TResult>(IPostpend<TElement, TResult>, ReadOnlyMemory<TElement>)
  href: api/Langly.CoreExtensions.html#Langly_CoreExtensions_Postpend__2_Langly_IPostpend___0___1__System_ReadOnlyMemory___0__
  commentId: M:Langly.CoreExtensions.Postpend``2(Langly.IPostpend{``0,``1},System.ReadOnlyMemory{``0})
  name.vb: Postpend(Of TElement, TResult)(IPostpend(Of TElement, TResult), ReadOnlyMemory(Of TElement))
  fullName: Langly.CoreExtensions.Postpend<TElement, TResult>(Langly.IPostpend<TElement, TResult>, System.ReadOnlyMemory<TElement>)
  fullName.vb: Langly.CoreExtensions.Postpend(Of TElement, TResult)(Langly.IPostpend(Of TElement, TResult), System.ReadOnlyMemory(Of TElement))
  nameWithType: CoreExtensions.Postpend<TElement, TResult>(IPostpend<TElement, TResult>, ReadOnlyMemory<TElement>)
  nameWithType.vb: CoreExtensions.Postpend(Of TElement, TResult)(IPostpend(Of TElement, TResult), ReadOnlyMemory(Of TElement))
- uid: Langly.CoreExtensions.Postpend``2(Langly.IPostpend{``0,``1},System.ReadOnlySpan{``0})
  name: Postpend<TElement, TResult>(IPostpend<TElement, TResult>, ReadOnlySpan<TElement>)
  href: api/Langly.CoreExtensions.html#Langly_CoreExtensions_Postpend__2_Langly_IPostpend___0___1__System_ReadOnlySpan___0__
  commentId: M:Langly.CoreExtensions.Postpend``2(Langly.IPostpend{``0,``1},System.ReadOnlySpan{``0})
  name.vb: Postpend(Of TElement, TResult)(IPostpend(Of TElement, TResult), ReadOnlySpan(Of TElement))
  fullName: Langly.CoreExtensions.Postpend<TElement, TResult>(Langly.IPostpend<TElement, TResult>, System.ReadOnlySpan<TElement>)
  fullName.vb: Langly.CoreExtensions.Postpend(Of TElement, TResult)(Langly.IPostpend(Of TElement, TResult), System.ReadOnlySpan(Of TElement))
  nameWithType: CoreExtensions.Postpend<TElement, TResult>(IPostpend<TElement, TResult>, ReadOnlySpan<TElement>)
  nameWithType.vb: CoreExtensions.Postpend(Of TElement, TResult)(IPostpend(Of TElement, TResult), ReadOnlySpan(Of TElement))
- uid: Langly.CoreExtensions.Postpend``2(Langly.IPostpend{``0,``1},System.Span{``0})
  name: Postpend<TElement, TResult>(IPostpend<TElement, TResult>, Span<TElement>)
  href: api/Langly.CoreExtensions.html#Langly_CoreExtensions_Postpend__2_Langly_IPostpend___0___1__System_Span___0__
  commentId: M:Langly.CoreExtensions.Postpend``2(Langly.IPostpend{``0,``1},System.Span{``0})
  name.vb: Postpend(Of TElement, TResult)(IPostpend(Of TElement, TResult), Span(Of TElement))
  fullName: Langly.CoreExtensions.Postpend<TElement, TResult>(Langly.IPostpend<TElement, TResult>, System.Span<TElement>)
  fullName.vb: Langly.CoreExtensions.Postpend(Of TElement, TResult)(Langly.IPostpend(Of TElement, TResult), System.Span(Of TElement))
  nameWithType: CoreExtensions.Postpend<TElement, TResult>(IPostpend<TElement, TResult>, Span<TElement>)
  nameWithType.vb: CoreExtensions.Postpend(Of TElement, TResult)(IPostpend(Of TElement, TResult), Span(Of TElement))
- uid: Langly.CoreExtensions.Prepend*
  name: Prepend
  href: api/Langly.CoreExtensions.html#Langly_CoreExtensions_Prepend_
  commentId: Overload:Langly.CoreExtensions.Prepend
  isSpec: "True"
  fullName: Langly.CoreExtensions.Prepend
  nameWithType: CoreExtensions.Prepend
- uid: Langly.CoreExtensions.Prepend``2(Langly.IPrepend{``0,``1},``0)
  name: Prepend<TElement, TResult>(IPrepend<TElement, TResult>, TElement)
  href: api/Langly.CoreExtensions.html#Langly_CoreExtensions_Prepend__2_Langly_IPrepend___0___1____0_
  commentId: M:Langly.CoreExtensions.Prepend``2(Langly.IPrepend{``0,``1},``0)
  name.vb: Prepend(Of TElement, TResult)(IPrepend(Of TElement, TResult), TElement)
  fullName: Langly.CoreExtensions.Prepend<TElement, TResult>(Langly.IPrepend<TElement, TResult>, TElement)
  fullName.vb: Langly.CoreExtensions.Prepend(Of TElement, TResult)(Langly.IPrepend(Of TElement, TResult), TElement)
  nameWithType: CoreExtensions.Prepend<TElement, TResult>(IPrepend<TElement, TResult>, TElement)
  nameWithType.vb: CoreExtensions.Prepend(Of TElement, TResult)(IPrepend(Of TElement, TResult), TElement)
- uid: Langly.CoreExtensions.Prepend``2(Langly.IPrepend{``0,``1},``0[])
  name: Prepend<TElement, TResult>(IPrepend<TElement, TResult>, TElement[])
  href: api/Langly.CoreExtensions.html#Langly_CoreExtensions_Prepend__2_Langly_IPrepend___0___1____0___
  commentId: M:Langly.CoreExtensions.Prepend``2(Langly.IPrepend{``0,``1},``0[])
  name.vb: Prepend(Of TElement, TResult)(IPrepend(Of TElement, TResult), TElement())
  fullName: Langly.CoreExtensions.Prepend<TElement, TResult>(Langly.IPrepend<TElement, TResult>, TElement[])
  fullName.vb: Langly.CoreExtensions.Prepend(Of TElement, TResult)(Langly.IPrepend(Of TElement, TResult), TElement())
  nameWithType: CoreExtensions.Prepend<TElement, TResult>(IPrepend<TElement, TResult>, TElement[])
  nameWithType.vb: CoreExtensions.Prepend(Of TElement, TResult)(IPrepend(Of TElement, TResult), TElement())
- uid: Langly.CoreExtensions.Prepend``2(Langly.IPrepend{``0,``1},System.Memory{``0})
  name: Prepend<TElement, TResult>(IPrepend<TElement, TResult>, Memory<TElement>)
  href: api/Langly.CoreExtensions.html#Langly_CoreExtensions_Prepend__2_Langly_IPrepend___0___1__System_Memory___0__
  commentId: M:Langly.CoreExtensions.Prepend``2(Langly.IPrepend{``0,``1},System.Memory{``0})
  name.vb: Prepend(Of TElement, TResult)(IPrepend(Of TElement, TResult), Memory(Of TElement))
  fullName: Langly.CoreExtensions.Prepend<TElement, TResult>(Langly.IPrepend<TElement, TResult>, System.Memory<TElement>)
  fullName.vb: Langly.CoreExtensions.Prepend(Of TElement, TResult)(Langly.IPrepend(Of TElement, TResult), System.Memory(Of TElement))
  nameWithType: CoreExtensions.Prepend<TElement, TResult>(IPrepend<TElement, TResult>, Memory<TElement>)
  nameWithType.vb: CoreExtensions.Prepend(Of TElement, TResult)(IPrepend(Of TElement, TResult), Memory(Of TElement))
- uid: Langly.CoreExtensions.Prepend``2(Langly.IPrepend{``0,``1},System.ReadOnlyMemory{``0})
  name: Prepend<TElement, TResult>(IPrepend<TElement, TResult>, ReadOnlyMemory<TElement>)
  href: api/Langly.CoreExtensions.html#Langly_CoreExtensions_Prepend__2_Langly_IPrepend___0___1__System_ReadOnlyMemory___0__
  commentId: M:Langly.CoreExtensions.Prepend``2(Langly.IPrepend{``0,``1},System.ReadOnlyMemory{``0})
  name.vb: Prepend(Of TElement, TResult)(IPrepend(Of TElement, TResult), ReadOnlyMemory(Of TElement))
  fullName: Langly.CoreExtensions.Prepend<TElement, TResult>(Langly.IPrepend<TElement, TResult>, System.ReadOnlyMemory<TElement>)
  fullName.vb: Langly.CoreExtensions.Prepend(Of TElement, TResult)(Langly.IPrepend(Of TElement, TResult), System.ReadOnlyMemory(Of TElement))
  nameWithType: CoreExtensions.Prepend<TElement, TResult>(IPrepend<TElement, TResult>, ReadOnlyMemory<TElement>)
  nameWithType.vb: CoreExtensions.Prepend(Of TElement, TResult)(IPrepend(Of TElement, TResult), ReadOnlyMemory(Of TElement))
- uid: Langly.CoreExtensions.Prepend``2(Langly.IPrepend{``0,``1},System.ReadOnlySpan{``0})
  name: Prepend<TElement, TResult>(IPrepend<TElement, TResult>, ReadOnlySpan<TElement>)
  href: api/Langly.CoreExtensions.html#Langly_CoreExtensions_Prepend__2_Langly_IPrepend___0___1__System_ReadOnlySpan___0__
  commentId: M:Langly.CoreExtensions.Prepend``2(Langly.IPrepend{``0,``1},System.ReadOnlySpan{``0})
  name.vb: Prepend(Of TElement, TResult)(IPrepend(Of TElement, TResult), ReadOnlySpan(Of TElement))
  fullName: Langly.CoreExtensions.Prepend<TElement, TResult>(Langly.IPrepend<TElement, TResult>, System.ReadOnlySpan<TElement>)
  fullName.vb: Langly.CoreExtensions.Prepend(Of TElement, TResult)(Langly.IPrepend(Of TElement, TResult), System.ReadOnlySpan(Of TElement))
  nameWithType: CoreExtensions.Prepend<TElement, TResult>(IPrepend<TElement, TResult>, ReadOnlySpan<TElement>)
  nameWithType.vb: CoreExtensions.Prepend(Of TElement, TResult)(IPrepend(Of TElement, TResult), ReadOnlySpan(Of TElement))
- uid: Langly.CoreExtensions.Prepend``2(Langly.IPrepend{``0,``1},System.Span{``0})
  name: Prepend<TElement, TResult>(IPrepend<TElement, TResult>, Span<TElement>)
  href: api/Langly.CoreExtensions.html#Langly_CoreExtensions_Prepend__2_Langly_IPrepend___0___1__System_Span___0__
  commentId: M:Langly.CoreExtensions.Prepend``2(Langly.IPrepend{``0,``1},System.Span{``0})
  name.vb: Prepend(Of TElement, TResult)(IPrepend(Of TElement, TResult), Span(Of TElement))
  fullName: Langly.CoreExtensions.Prepend<TElement, TResult>(Langly.IPrepend<TElement, TResult>, System.Span<TElement>)
  fullName.vb: Langly.CoreExtensions.Prepend(Of TElement, TResult)(Langly.IPrepend(Of TElement, TResult), System.Span(Of TElement))
  nameWithType: CoreExtensions.Prepend<TElement, TResult>(IPrepend<TElement, TResult>, Span<TElement>)
  nameWithType.vb: CoreExtensions.Prepend(Of TElement, TResult)(IPrepend(Of TElement, TResult), Span(Of TElement))
- uid: Langly.CoreExtensions.Push*
  name: Push
  href: api/Langly.CoreExtensions.html#Langly_CoreExtensions_Push_
  commentId: Overload:Langly.CoreExtensions.Push
  isSpec: "True"
  fullName: Langly.CoreExtensions.Push
  nameWithType: CoreExtensions.Push
- uid: Langly.CoreExtensions.Push``2(Langly.IPush{``0,``1},``0)
  name: Push<TElement, TResult>(IPush<TElement, TResult>, TElement)
  href: api/Langly.CoreExtensions.html#Langly_CoreExtensions_Push__2_Langly_IPush___0___1____0_
  commentId: M:Langly.CoreExtensions.Push``2(Langly.IPush{``0,``1},``0)
  name.vb: Push(Of TElement, TResult)(IPush(Of TElement, TResult), TElement)
  fullName: Langly.CoreExtensions.Push<TElement, TResult>(Langly.IPush<TElement, TResult>, TElement)
  fullName.vb: Langly.CoreExtensions.Push(Of TElement, TResult)(Langly.IPush(Of TElement, TResult), TElement)
  nameWithType: CoreExtensions.Push<TElement, TResult>(IPush<TElement, TResult>, TElement)
  nameWithType.vb: CoreExtensions.Push(Of TElement, TResult)(IPush(Of TElement, TResult), TElement)
- uid: Langly.CoreExtensions.Push``2(Langly.IPush{``0,``1},``0[])
  name: Push<TElement, TResult>(IPush<TElement, TResult>, TElement[])
  href: api/Langly.CoreExtensions.html#Langly_CoreExtensions_Push__2_Langly_IPush___0___1____0___
  commentId: M:Langly.CoreExtensions.Push``2(Langly.IPush{``0,``1},``0[])
  name.vb: Push(Of TElement, TResult)(IPush(Of TElement, TResult), TElement())
  fullName: Langly.CoreExtensions.Push<TElement, TResult>(Langly.IPush<TElement, TResult>, TElement[])
  fullName.vb: Langly.CoreExtensions.Push(Of TElement, TResult)(Langly.IPush(Of TElement, TResult), TElement())
  nameWithType: CoreExtensions.Push<TElement, TResult>(IPush<TElement, TResult>, TElement[])
  nameWithType.vb: CoreExtensions.Push(Of TElement, TResult)(IPush(Of TElement, TResult), TElement())
- uid: Langly.CoreExtensions.Push``2(Langly.IPush{``0,``1},System.Memory{``0})
  name: Push<TElement, TResult>(IPush<TElement, TResult>, Memory<TElement>)
  href: api/Langly.CoreExtensions.html#Langly_CoreExtensions_Push__2_Langly_IPush___0___1__System_Memory___0__
  commentId: M:Langly.CoreExtensions.Push``2(Langly.IPush{``0,``1},System.Memory{``0})
  name.vb: Push(Of TElement, TResult)(IPush(Of TElement, TResult), Memory(Of TElement))
  fullName: Langly.CoreExtensions.Push<TElement, TResult>(Langly.IPush<TElement, TResult>, System.Memory<TElement>)
  fullName.vb: Langly.CoreExtensions.Push(Of TElement, TResult)(Langly.IPush(Of TElement, TResult), System.Memory(Of TElement))
  nameWithType: CoreExtensions.Push<TElement, TResult>(IPush<TElement, TResult>, Memory<TElement>)
  nameWithType.vb: CoreExtensions.Push(Of TElement, TResult)(IPush(Of TElement, TResult), Memory(Of TElement))
- uid: Langly.CoreExtensions.Push``2(Langly.IPush{``0,``1},System.ReadOnlyMemory{``0})
  name: Push<TElement, TResult>(IPush<TElement, TResult>, ReadOnlyMemory<TElement>)
  href: api/Langly.CoreExtensions.html#Langly_CoreExtensions_Push__2_Langly_IPush___0___1__System_ReadOnlyMemory___0__
  commentId: M:Langly.CoreExtensions.Push``2(Langly.IPush{``0,``1},System.ReadOnlyMemory{``0})
  name.vb: Push(Of TElement, TResult)(IPush(Of TElement, TResult), ReadOnlyMemory(Of TElement))
  fullName: Langly.CoreExtensions.Push<TElement, TResult>(Langly.IPush<TElement, TResult>, System.ReadOnlyMemory<TElement>)
  fullName.vb: Langly.CoreExtensions.Push(Of TElement, TResult)(Langly.IPush(Of TElement, TResult), System.ReadOnlyMemory(Of TElement))
  nameWithType: CoreExtensions.Push<TElement, TResult>(IPush<TElement, TResult>, ReadOnlyMemory<TElement>)
  nameWithType.vb: CoreExtensions.Push(Of TElement, TResult)(IPush(Of TElement, TResult), ReadOnlyMemory(Of TElement))
- uid: Langly.CoreExtensions.Push``2(Langly.IPush{``0,``1},System.ReadOnlySpan{``0})
  name: Push<TElement, TResult>(IPush<TElement, TResult>, ReadOnlySpan<TElement>)
  href: api/Langly.CoreExtensions.html#Langly_CoreExtensions_Push__2_Langly_IPush___0___1__System_ReadOnlySpan___0__
  commentId: M:Langly.CoreExtensions.Push``2(Langly.IPush{``0,``1},System.ReadOnlySpan{``0})
  name.vb: Push(Of TElement, TResult)(IPush(Of TElement, TResult), ReadOnlySpan(Of TElement))
  fullName: Langly.CoreExtensions.Push<TElement, TResult>(Langly.IPush<TElement, TResult>, System.ReadOnlySpan<TElement>)
  fullName.vb: Langly.CoreExtensions.Push(Of TElement, TResult)(Langly.IPush(Of TElement, TResult), System.ReadOnlySpan(Of TElement))
  nameWithType: CoreExtensions.Push<TElement, TResult>(IPush<TElement, TResult>, ReadOnlySpan<TElement>)
  nameWithType.vb: CoreExtensions.Push(Of TElement, TResult)(IPush(Of TElement, TResult), ReadOnlySpan(Of TElement))
- uid: Langly.CoreExtensions.Push``2(Langly.IPush{``0,``1},System.Span{``0})
  name: Push<TElement, TResult>(IPush<TElement, TResult>, Span<TElement>)
  href: api/Langly.CoreExtensions.html#Langly_CoreExtensions_Push__2_Langly_IPush___0___1__System_Span___0__
  commentId: M:Langly.CoreExtensions.Push``2(Langly.IPush{``0,``1},System.Span{``0})
  name.vb: Push(Of TElement, TResult)(IPush(Of TElement, TResult), Span(Of TElement))
  fullName: Langly.CoreExtensions.Push<TElement, TResult>(Langly.IPush<TElement, TResult>, System.Span<TElement>)
  fullName.vb: Langly.CoreExtensions.Push(Of TElement, TResult)(Langly.IPush(Of TElement, TResult), System.Span(Of TElement))
  nameWithType: CoreExtensions.Push<TElement, TResult>(IPush<TElement, TResult>, Span<TElement>)
  nameWithType.vb: CoreExtensions.Push(Of TElement, TResult)(IPush(Of TElement, TResult), Span(Of TElement))
- uid: Langly.CoreExtensions.Push``3(Langly.IPush{``0,``1},Langly.ISequence{``0,``2})
  name: Push<TElement, TResult, TEnumerator>(IPush<TElement, TResult>, ISequence<TElement, TEnumerator>)
  href: api/Langly.CoreExtensions.html#Langly_CoreExtensions_Push__3_Langly_IPush___0___1__Langly_ISequence___0___2__
  commentId: M:Langly.CoreExtensions.Push``3(Langly.IPush{``0,``1},Langly.ISequence{``0,``2})
  name.vb: Push(Of TElement, TResult, TEnumerator)(IPush(Of TElement, TResult), ISequence(Of TElement, TEnumerator))
  fullName: Langly.CoreExtensions.Push<TElement, TResult, TEnumerator>(Langly.IPush<TElement, TResult>, Langly.ISequence<TElement, TEnumerator>)
  fullName.vb: Langly.CoreExtensions.Push(Of TElement, TResult, TEnumerator)(Langly.IPush(Of TElement, TResult), Langly.ISequence(Of TElement, TEnumerator))
  nameWithType: CoreExtensions.Push<TElement, TResult, TEnumerator>(IPush<TElement, TResult>, ISequence<TElement, TEnumerator>)
  nameWithType.vb: CoreExtensions.Push(Of TElement, TResult, TEnumerator)(IPush(Of TElement, TResult), ISequence(Of TElement, TEnumerator))
- uid: Langly.CoreExtensions.Replace*
  name: Replace
  href: api/Langly.CoreExtensions.html#Langly_CoreExtensions_Replace_
  commentId: Overload:Langly.CoreExtensions.Replace
  isSpec: "True"
  fullName: Langly.CoreExtensions.Replace
  nameWithType: CoreExtensions.Replace
- uid: Langly.CoreExtensions.Replace``3(Langly.IReplace{``0,``1,``2},``0,``1)
  name: Replace<TSearch, TReplace, TResult>(IReplace<TSearch, TReplace, TResult>, TSearch, TReplace)
  href: api/Langly.CoreExtensions.html#Langly_CoreExtensions_Replace__3_Langly_IReplace___0___1___2____0___1_
  commentId: M:Langly.CoreExtensions.Replace``3(Langly.IReplace{``0,``1,``2},``0,``1)
  name.vb: Replace(Of TSearch, TReplace, TResult)(IReplace(Of TSearch, TReplace, TResult), TSearch, TReplace)
  fullName: Langly.CoreExtensions.Replace<TSearch, TReplace, TResult>(Langly.IReplace<TSearch, TReplace, TResult>, TSearch, TReplace)
  fullName.vb: Langly.CoreExtensions.Replace(Of TSearch, TReplace, TResult)(Langly.IReplace(Of TSearch, TReplace, TResult), TSearch, TReplace)
  nameWithType: CoreExtensions.Replace<TSearch, TReplace, TResult>(IReplace<TSearch, TReplace, TResult>, TSearch, TReplace)
  nameWithType.vb: CoreExtensions.Replace(Of TSearch, TReplace, TResult)(IReplace(Of TSearch, TReplace, TResult), TSearch, TReplace)
- uid: Langly.CoreExtensions.Resize(Langly.IResizable,nint)
  name: Resize(IResizable, nint)
  href: api/Langly.CoreExtensions.html#Langly_CoreExtensions_Resize_Langly_IResizable_nint_
  commentId: M:Langly.CoreExtensions.Resize(Langly.IResizable,nint)
  fullName: Langly.CoreExtensions.Resize(Langly.IResizable, nint)
  nameWithType: CoreExtensions.Resize(IResizable, nint)
- uid: Langly.CoreExtensions.Resize*
  name: Resize
  href: api/Langly.CoreExtensions.html#Langly_CoreExtensions_Resize_
  commentId: Overload:Langly.CoreExtensions.Resize
  isSpec: "True"
  fullName: Langly.CoreExtensions.Resize
  nameWithType: CoreExtensions.Resize
- uid: Langly.CoreExtensions.ShiftLeft(Langly.IShift)
  name: ShiftLeft(IShift)
  href: api/Langly.CoreExtensions.html#Langly_CoreExtensions_ShiftLeft_Langly_IShift_
  commentId: M:Langly.CoreExtensions.ShiftLeft(Langly.IShift)
  fullName: Langly.CoreExtensions.ShiftLeft(Langly.IShift)
  nameWithType: CoreExtensions.ShiftLeft(IShift)
- uid: Langly.CoreExtensions.ShiftLeft(Langly.IShift,nint)
  name: ShiftLeft(IShift, nint)
  href: api/Langly.CoreExtensions.html#Langly_CoreExtensions_ShiftLeft_Langly_IShift_nint_
  commentId: M:Langly.CoreExtensions.ShiftLeft(Langly.IShift,nint)
  fullName: Langly.CoreExtensions.ShiftLeft(Langly.IShift, nint)
  nameWithType: CoreExtensions.ShiftLeft(IShift, nint)
- uid: Langly.CoreExtensions.ShiftLeft*
  name: ShiftLeft
  href: api/Langly.CoreExtensions.html#Langly_CoreExtensions_ShiftLeft_
  commentId: Overload:Langly.CoreExtensions.ShiftLeft
  isSpec: "True"
  fullName: Langly.CoreExtensions.ShiftLeft
  nameWithType: CoreExtensions.ShiftLeft
- uid: Langly.CoreExtensions.ShiftRight(Langly.IShift)
  name: ShiftRight(IShift)
  href: api/Langly.CoreExtensions.html#Langly_CoreExtensions_ShiftRight_Langly_IShift_
  commentId: M:Langly.CoreExtensions.ShiftRight(Langly.IShift)
  fullName: Langly.CoreExtensions.ShiftRight(Langly.IShift)
  nameWithType: CoreExtensions.ShiftRight(IShift)
- uid: Langly.CoreExtensions.ShiftRight(Langly.IShift,nint)
  name: ShiftRight(IShift, nint)
  href: api/Langly.CoreExtensions.html#Langly_CoreExtensions_ShiftRight_Langly_IShift_nint_
  commentId: M:Langly.CoreExtensions.ShiftRight(Langly.IShift,nint)
  fullName: Langly.CoreExtensions.ShiftRight(Langly.IShift, nint)
  nameWithType: CoreExtensions.ShiftRight(IShift, nint)
- uid: Langly.CoreExtensions.ShiftRight*
  name: ShiftRight
  href: api/Langly.CoreExtensions.html#Langly_CoreExtensions_ShiftRight_
  commentId: Overload:Langly.CoreExtensions.ShiftRight
  isSpec: "True"
  fullName: Langly.CoreExtensions.ShiftRight
  nameWithType: CoreExtensions.ShiftRight
- uid: Langly.CoreExtensions.Shrink(Langly.IResizable)
  name: Shrink(IResizable)
  href: api/Langly.CoreExtensions.html#Langly_CoreExtensions_Shrink_Langly_IResizable_
  commentId: M:Langly.CoreExtensions.Shrink(Langly.IResizable)
  fullName: Langly.CoreExtensions.Shrink(Langly.IResizable)
  nameWithType: CoreExtensions.Shrink(IResizable)
- uid: Langly.CoreExtensions.Shrink*
  name: Shrink
  href: api/Langly.CoreExtensions.html#Langly_CoreExtensions_Shrink_
  commentId: Overload:Langly.CoreExtensions.Shrink
  isSpec: "True"
  fullName: Langly.CoreExtensions.Shrink
  nameWithType: CoreExtensions.Shrink
- uid: Langly.CoreExtensions.Slice*
  name: Slice
  href: api/Langly.CoreExtensions.html#Langly_CoreExtensions_Slice_
  commentId: Overload:Langly.CoreExtensions.Slice
  isSpec: "True"
  fullName: Langly.CoreExtensions.Slice
  nameWithType: CoreExtensions.Slice
- uid: Langly.CoreExtensions.Slice``1(Langly.ISlice{``0})
  name: Slice<TSlice>(ISlice<TSlice>)
  href: api/Langly.CoreExtensions.html#Langly_CoreExtensions_Slice__1_Langly_ISlice___0__
  commentId: M:Langly.CoreExtensions.Slice``1(Langly.ISlice{``0})
  name.vb: Slice(Of TSlice)(ISlice(Of TSlice))
  fullName: Langly.CoreExtensions.Slice<TSlice>(Langly.ISlice<TSlice>)
  fullName.vb: Langly.CoreExtensions.Slice(Of TSlice)(Langly.ISlice(Of TSlice))
  nameWithType: CoreExtensions.Slice<TSlice>(ISlice<TSlice>)
  nameWithType.vb: CoreExtensions.Slice(Of TSlice)(ISlice(Of TSlice))
- uid: Langly.CoreExtensions.Slice``1(Langly.ISlice{``0},nint)
  name: Slice<TSlice>(ISlice<TSlice>, nint)
  href: api/Langly.CoreExtensions.html#Langly_CoreExtensions_Slice__1_Langly_ISlice___0__nint_
  commentId: M:Langly.CoreExtensions.Slice``1(Langly.ISlice{``0},nint)
  name.vb: Slice(Of TSlice)(ISlice(Of TSlice), nint)
  fullName: Langly.CoreExtensions.Slice<TSlice>(Langly.ISlice<TSlice>, nint)
  fullName.vb: Langly.CoreExtensions.Slice(Of TSlice)(Langly.ISlice(Of TSlice), nint)
  nameWithType: CoreExtensions.Slice<TSlice>(ISlice<TSlice>, nint)
  nameWithType.vb: CoreExtensions.Slice(Of TSlice)(ISlice(Of TSlice), nint)
- uid: Langly.CoreExtensions.Slice``1(Langly.ISlice{``0},nint,nint)
  name: Slice<TSlice>(ISlice<TSlice>, nint, nint)
  href: api/Langly.CoreExtensions.html#Langly_CoreExtensions_Slice__1_Langly_ISlice___0__nint_nint_
  commentId: M:Langly.CoreExtensions.Slice``1(Langly.ISlice{``0},nint,nint)
  name.vb: Slice(Of TSlice)(ISlice(Of TSlice), nint, nint)
  fullName: Langly.CoreExtensions.Slice<TSlice>(Langly.ISlice<TSlice>, nint, nint)
  fullName.vb: Langly.CoreExtensions.Slice(Of TSlice)(Langly.ISlice(Of TSlice), nint, nint)
  nameWithType: CoreExtensions.Slice<TSlice>(ISlice<TSlice>, nint, nint)
  nameWithType.vb: CoreExtensions.Slice(Of TSlice)(ISlice(Of TSlice), nint, nint)
- uid: Langly.DataStructures
  name: Langly.DataStructures
  href: api/Langly.DataStructures.html
  commentId: N:Langly.DataStructures
  fullName: Langly.DataStructures
  nameWithType: Langly.DataStructures
- uid: Langly.DataStructures.DataStructure`3
  name: DataStructure<TElement, TSelf, TEnumerator>
  href: api/Langly.DataStructures.DataStructure-3.html
  commentId: T:Langly.DataStructures.DataStructure`3
  name.vb: DataStructure(Of TElement, TSelf, TEnumerator)
  fullName: Langly.DataStructures.DataStructure<TElement, TSelf, TEnumerator>
  fullName.vb: Langly.DataStructures.DataStructure(Of TElement, TSelf, TEnumerator)
  nameWithType: DataStructure<TElement, TSelf, TEnumerator>
  nameWithType.vb: DataStructure(Of TElement, TSelf, TEnumerator)
- uid: Langly.DataStructures.DataStructure`3.Count
  name: Count
  href: api/Langly.DataStructures.DataStructure-3.html#Langly_DataStructures_DataStructure_3_Count
  commentId: P:Langly.DataStructures.DataStructure`3.Count
  fullName: Langly.DataStructures.DataStructure<TElement, TSelf, TEnumerator>.Count
  fullName.vb: Langly.DataStructures.DataStructure(Of TElement, TSelf, TEnumerator).Count
  nameWithType: DataStructure<TElement, TSelf, TEnumerator>.Count
  nameWithType.vb: DataStructure(Of TElement, TSelf, TEnumerator).Count
- uid: Langly.DataStructures.DataStructure`3.Count*
  name: Count
  href: api/Langly.DataStructures.DataStructure-3.html#Langly_DataStructures_DataStructure_3_Count_
  commentId: Overload:Langly.DataStructures.DataStructure`3.Count
  isSpec: "True"
  fullName: Langly.DataStructures.DataStructure<TElement, TSelf, TEnumerator>.Count
  fullName.vb: Langly.DataStructures.DataStructure(Of TElement, TSelf, TEnumerator).Count
  nameWithType: DataStructure<TElement, TSelf, TEnumerator>.Count
  nameWithType.vb: DataStructure(Of TElement, TSelf, TEnumerator).Count
- uid: Langly.DataStructures.DataStructure`3.Equals(`1)
  name: Equals(TSelf)
  href: api/Langly.DataStructures.DataStructure-3.html#Langly_DataStructures_DataStructure_3_Equals__1_
  commentId: M:Langly.DataStructures.DataStructure`3.Equals(`1)
  fullName: Langly.DataStructures.DataStructure<TElement, TSelf, TEnumerator>.Equals(TSelf)
  fullName.vb: Langly.DataStructures.DataStructure(Of TElement, TSelf, TEnumerator).Equals(TSelf)
  nameWithType: DataStructure<TElement, TSelf, TEnumerator>.Equals(TSelf)
  nameWithType.vb: DataStructure(Of TElement, TSelf, TEnumerator).Equals(TSelf)
- uid: Langly.DataStructures.DataStructure`3.Equals*
  name: Equals
  href: api/Langly.DataStructures.DataStructure-3.html#Langly_DataStructures_DataStructure_3_Equals_
  commentId: Overload:Langly.DataStructures.DataStructure`3.Equals
  isSpec: "True"
  fullName: Langly.DataStructures.DataStructure<TElement, TSelf, TEnumerator>.Equals
  fullName.vb: Langly.DataStructures.DataStructure(Of TElement, TSelf, TEnumerator).Equals
  nameWithType: DataStructure<TElement, TSelf, TEnumerator>.Equals
  nameWithType.vb: DataStructure(Of TElement, TSelf, TEnumerator).Equals
- uid: Langly.DataStructures.DataStructure`3.Equals``1(Langly.ISequence{`0,``0})
  name: Equals<TOtherEnumerator>(ISequence<TElement, TOtherEnumerator>)
  href: api/Langly.DataStructures.DataStructure-3.html#Langly_DataStructures_DataStructure_3_Equals__1_Langly_ISequence__0___0__
  commentId: M:Langly.DataStructures.DataStructure`3.Equals``1(Langly.ISequence{`0,``0})
  name.vb: Equals(Of TOtherEnumerator)(ISequence(Of TElement, TOtherEnumerator))
  fullName: Langly.DataStructures.DataStructure<TElement, TSelf, TEnumerator>.Equals<TOtherEnumerator>(Langly.ISequence<TElement, TOtherEnumerator>)
  fullName.vb: Langly.DataStructures.DataStructure(Of TElement, TSelf, TEnumerator).Equals(Of TOtherEnumerator)(Langly.ISequence(Of TElement, TOtherEnumerator))
  nameWithType: DataStructure<TElement, TSelf, TEnumerator>.Equals<TOtherEnumerator>(ISequence<TElement, TOtherEnumerator>)
  nameWithType.vb: DataStructure(Of TElement, TSelf, TEnumerator).Equals(Of TOtherEnumerator)(ISequence(Of TElement, TOtherEnumerator))
- uid: Langly.DataStructures.DataStructure`3.Equals``1(Langly.ISequence{Langly.IEquals{`0},``0})
  name: Equals<TOtherEnumerator>(ISequence<IEquals<TElement>, TOtherEnumerator>)
  href: api/Langly.DataStructures.DataStructure-3.html#Langly_DataStructures_DataStructure_3_Equals__1_Langly_ISequence_Langly_IEquals__0____0__
  commentId: M:Langly.DataStructures.DataStructure`3.Equals``1(Langly.ISequence{Langly.IEquals{`0},``0})
  name.vb: Equals(Of TOtherEnumerator)(ISequence(Of IEquals(Of TElement), TOtherEnumerator))
  fullName: Langly.DataStructures.DataStructure<TElement, TSelf, TEnumerator>.Equals<TOtherEnumerator>(Langly.ISequence<Langly.IEquals<TElement>, TOtherEnumerator>)
  fullName.vb: Langly.DataStructures.DataStructure(Of TElement, TSelf, TEnumerator).Equals(Of TOtherEnumerator)(Langly.ISequence(Of Langly.IEquals(Of TElement), TOtherEnumerator))
  nameWithType: DataStructure<TElement, TSelf, TEnumerator>.Equals<TOtherEnumerator>(ISequence<IEquals<TElement>, TOtherEnumerator>)
  nameWithType.vb: DataStructure(Of TElement, TSelf, TEnumerator).Equals(Of TOtherEnumerator)(ISequence(Of IEquals(Of TElement), TOtherEnumerator))
- uid: Langly.DataStructures.DataStructure`3.GetEnumerator
  name: GetEnumerator()
  href: api/Langly.DataStructures.DataStructure-3.html#Langly_DataStructures_DataStructure_3_GetEnumerator
  commentId: M:Langly.DataStructures.DataStructure`3.GetEnumerator
  fullName: Langly.DataStructures.DataStructure<TElement, TSelf, TEnumerator>.GetEnumerator()
  fullName.vb: Langly.DataStructures.DataStructure(Of TElement, TSelf, TEnumerator).GetEnumerator()
  nameWithType: DataStructure<TElement, TSelf, TEnumerator>.GetEnumerator()
  nameWithType.vb: DataStructure(Of TElement, TSelf, TEnumerator).GetEnumerator()
- uid: Langly.DataStructures.DataStructure`3.GetEnumerator*
  name: GetEnumerator
  href: api/Langly.DataStructures.DataStructure-3.html#Langly_DataStructures_DataStructure_3_GetEnumerator_
  commentId: Overload:Langly.DataStructures.DataStructure`3.GetEnumerator
  isSpec: "True"
  fullName: Langly.DataStructures.DataStructure<TElement, TSelf, TEnumerator>.GetEnumerator
  fullName.vb: Langly.DataStructures.DataStructure(Of TElement, TSelf, TEnumerator).GetEnumerator
  nameWithType: DataStructure<TElement, TSelf, TEnumerator>.GetEnumerator
  nameWithType.vb: DataStructure(Of TElement, TSelf, TEnumerator).GetEnumerator
- uid: Langly.DataStructures.DataStructure`3.Langly#IContains{TElement}#Contains(`0)
  name: IContains<TElement>.Contains(TElement)
  href: api/Langly.DataStructures.DataStructure-3.html#Langly_DataStructures_DataStructure_3_Langly_IContains_TElement__Contains__0_
  commentId: M:Langly.DataStructures.DataStructure`3.Langly#IContains{TElement}#Contains(`0)
  name.vb: Langly.IContains<TElement>.Contains(TElement)
  fullName: Langly.DataStructures.DataStructure<TElement, TSelf, TEnumerator>.Langly.IContains<TElement>.Contains(TElement)
  fullName.vb: Langly.DataStructures.DataStructure(Of TElement, TSelf, TEnumerator).Langly.IContains<TElement>.Contains(TElement)
  nameWithType: DataStructure<TElement, TSelf, TEnumerator>.IContains<TElement>.Contains(TElement)
  nameWithType.vb: DataStructure(Of TElement, TSelf, TEnumerator).Langly.IContains<TElement>.Contains(TElement)
- uid: Langly.DataStructures.DataStructure`3.Langly#IContains{TElement}#Contains*
  name: IContains<TElement>.Contains
  href: api/Langly.DataStructures.DataStructure-3.html#Langly_DataStructures_DataStructure_3_Langly_IContains_TElement__Contains_
  commentId: Overload:Langly.DataStructures.DataStructure`3.Langly#IContains{TElement}#Contains
  isSpec: "True"
  name.vb: Langly.IContains<TElement>.Contains
  fullName: Langly.DataStructures.DataStructure<TElement, TSelf, TEnumerator>.Langly.IContains<TElement>.Contains
  fullName.vb: Langly.DataStructures.DataStructure(Of TElement, TSelf, TEnumerator).Langly.IContains<TElement>.Contains
  nameWithType: DataStructure<TElement, TSelf, TEnumerator>.IContains<TElement>.Contains
  nameWithType.vb: DataStructure(Of TElement, TSelf, TEnumerator).Langly.IContains<TElement>.Contains
- uid: Langly.DataStructures.DataStructure`3.op_Equality(Langly.DataStructures.DataStructure{`0,`1,`2},Langly.DataStructures.DataStructure{`0,`1,`2})
  name: Equality(DataStructure<TElement, TSelf, TEnumerator>, DataStructure<TElement, TSelf, TEnumerator>)
  href: api/Langly.DataStructures.DataStructure-3.html#Langly_DataStructures_DataStructure_3_op_Equality_Langly_DataStructures_DataStructure__0__1__2__Langly_DataStructures_DataStructure__0__1__2__
  commentId: M:Langly.DataStructures.DataStructure`3.op_Equality(Langly.DataStructures.DataStructure{`0,`1,`2},Langly.DataStructures.DataStructure{`0,`1,`2})
  name.vb: Equality(DataStructure(Of TElement, TSelf, TEnumerator), DataStructure(Of TElement, TSelf, TEnumerator))
  fullName: Langly.DataStructures.DataStructure<TElement, TSelf, TEnumerator>.Equality(Langly.DataStructures.DataStructure<TElement, TSelf, TEnumerator>, Langly.DataStructures.DataStructure<TElement, TSelf, TEnumerator>)
  fullName.vb: Langly.DataStructures.DataStructure(Of TElement, TSelf, TEnumerator).Equality(Langly.DataStructures.DataStructure(Of TElement, TSelf, TEnumerator), Langly.DataStructures.DataStructure(Of TElement, TSelf, TEnumerator))
  nameWithType: DataStructure<TElement, TSelf, TEnumerator>.Equality(DataStructure<TElement, TSelf, TEnumerator>, DataStructure<TElement, TSelf, TEnumerator>)
  nameWithType.vb: DataStructure(Of TElement, TSelf, TEnumerator).Equality(DataStructure(Of TElement, TSelf, TEnumerator), DataStructure(Of TElement, TSelf, TEnumerator))
- uid: Langly.DataStructures.DataStructure`3.op_Equality*
  name: Equality
  href: api/Langly.DataStructures.DataStructure-3.html#Langly_DataStructures_DataStructure_3_op_Equality_
  commentId: Overload:Langly.DataStructures.DataStructure`3.op_Equality
  isSpec: "True"
  fullName: Langly.DataStructures.DataStructure<TElement, TSelf, TEnumerator>.Equality
  fullName.vb: Langly.DataStructures.DataStructure(Of TElement, TSelf, TEnumerator).Equality
  nameWithType: DataStructure<TElement, TSelf, TEnumerator>.Equality
  nameWithType.vb: DataStructure(Of TElement, TSelf, TEnumerator).Equality
- uid: Langly.DataStructures.DataStructure`3.op_Inequality(Langly.DataStructures.DataStructure{`0,`1,`2},Langly.DataStructures.DataStructure{`0,`1,`2})
  name: Inequality(DataStructure<TElement, TSelf, TEnumerator>, DataStructure<TElement, TSelf, TEnumerator>)
  href: api/Langly.DataStructures.DataStructure-3.html#Langly_DataStructures_DataStructure_3_op_Inequality_Langly_DataStructures_DataStructure__0__1__2__Langly_DataStructures_DataStructure__0__1__2__
  commentId: M:Langly.DataStructures.DataStructure`3.op_Inequality(Langly.DataStructures.DataStructure{`0,`1,`2},Langly.DataStructures.DataStructure{`0,`1,`2})
  name.vb: Inequality(DataStructure(Of TElement, TSelf, TEnumerator), DataStructure(Of TElement, TSelf, TEnumerator))
  fullName: Langly.DataStructures.DataStructure<TElement, TSelf, TEnumerator>.Inequality(Langly.DataStructures.DataStructure<TElement, TSelf, TEnumerator>, Langly.DataStructures.DataStructure<TElement, TSelf, TEnumerator>)
  fullName.vb: Langly.DataStructures.DataStructure(Of TElement, TSelf, TEnumerator).Inequality(Langly.DataStructures.DataStructure(Of TElement, TSelf, TEnumerator), Langly.DataStructures.DataStructure(Of TElement, TSelf, TEnumerator))
  nameWithType: DataStructure<TElement, TSelf, TEnumerator>.Inequality(DataStructure<TElement, TSelf, TEnumerator>, DataStructure<TElement, TSelf, TEnumerator>)
  nameWithType.vb: DataStructure(Of TElement, TSelf, TEnumerator).Inequality(DataStructure(Of TElement, TSelf, TEnumerator), DataStructure(Of TElement, TSelf, TEnumerator))
- uid: Langly.DataStructures.DataStructure`3.op_Inequality*
  name: Inequality
  href: api/Langly.DataStructures.DataStructure-3.html#Langly_DataStructures_DataStructure_3_op_Inequality_
  commentId: Overload:Langly.DataStructures.DataStructure`3.op_Inequality
  isSpec: "True"
  fullName: Langly.DataStructures.DataStructure<TElement, TSelf, TEnumerator>.Inequality
  fullName.vb: Langly.DataStructures.DataStructure(Of TElement, TSelf, TEnumerator).Inequality
  nameWithType: DataStructure<TElement, TSelf, TEnumerator>.Inequality
  nameWithType.vb: DataStructure(Of TElement, TSelf, TEnumerator).Inequality
- uid: Langly.DataStructures.DataStructure`3.ToString
  name: ToString()
  href: api/Langly.DataStructures.DataStructure-3.html#Langly_DataStructures_DataStructure_3_ToString
  commentId: M:Langly.DataStructures.DataStructure`3.ToString
  fullName: Langly.DataStructures.DataStructure<TElement, TSelf, TEnumerator>.ToString()
  fullName.vb: Langly.DataStructures.DataStructure(Of TElement, TSelf, TEnumerator).ToString()
  nameWithType: DataStructure<TElement, TSelf, TEnumerator>.ToString()
  nameWithType.vb: DataStructure(Of TElement, TSelf, TEnumerator).ToString()
- uid: Langly.DataStructures.DataStructure`3.ToString*
  name: ToString
  href: api/Langly.DataStructures.DataStructure-3.html#Langly_DataStructures_DataStructure_3_ToString_
  commentId: Overload:Langly.DataStructures.DataStructure`3.ToString
  isSpec: "True"
  fullName: Langly.DataStructures.DataStructure<TElement, TSelf, TEnumerator>.ToString
  fullName.vb: Langly.DataStructures.DataStructure(Of TElement, TSelf, TEnumerator).ToString
  nameWithType: DataStructure<TElement, TSelf, TEnumerator>.ToString
  nameWithType.vb: DataStructure(Of TElement, TSelf, TEnumerator).ToString
- uid: Langly.DataStructures.Lists
  name: Langly.DataStructures.Lists
  href: api/Langly.DataStructures.Lists.html
  commentId: N:Langly.DataStructures.Lists
  fullName: Langly.DataStructures.Lists
  nameWithType: Langly.DataStructures.Lists
- uid: Langly.DataStructures.Lists.Chain`1
  name: Chain<TElement>
  href: api/Langly.DataStructures.Lists.Chain-1.html
  commentId: T:Langly.DataStructures.Lists.Chain`1
  name.vb: Chain(Of TElement)
  fullName: Langly.DataStructures.Lists.Chain<TElement>
  fullName.vb: Langly.DataStructures.Lists.Chain(Of TElement)
  nameWithType: Chain<TElement>
  nameWithType.vb: Chain(Of TElement)
- uid: Langly.DataStructures.Lists.Chain`1.#ctor
  name: Chain()
  href: api/Langly.DataStructures.Lists.Chain-1.html#Langly_DataStructures_Lists_Chain_1__ctor
  commentId: M:Langly.DataStructures.Lists.Chain`1.#ctor
  fullName: Langly.DataStructures.Lists.Chain<TElement>.Chain()
  fullName.vb: Langly.DataStructures.Lists.Chain(Of TElement).Chain()
  nameWithType: Chain<TElement>.Chain()
  nameWithType.vb: Chain(Of TElement).Chain()
- uid: Langly.DataStructures.Lists.Chain`1.#ctor*
  name: Chain
  href: api/Langly.DataStructures.Lists.Chain-1.html#Langly_DataStructures_Lists_Chain_1__ctor_
  commentId: Overload:Langly.DataStructures.Lists.Chain`1.#ctor
  isSpec: "True"
  fullName: Langly.DataStructures.Lists.Chain<TElement>.Chain
  fullName.vb: Langly.DataStructures.Lists.Chain(Of TElement).Chain
  nameWithType: Chain<TElement>.Chain
  nameWithType.vb: Chain(Of TElement).Chain
- uid: Langly.DataStructures.Lists.Chain`1.Enumerator
  name: Chain<TElement>.Enumerator
  href: api/Langly.DataStructures.Lists.Chain-1.Enumerator.html
  commentId: T:Langly.DataStructures.Lists.Chain`1.Enumerator
  name.vb: Chain(Of TElement).Enumerator
  fullName: Langly.DataStructures.Lists.Chain<TElement>.Enumerator
  fullName.vb: Langly.DataStructures.Lists.Chain(Of TElement).Enumerator
  nameWithType: Chain<TElement>.Enumerator
  nameWithType.vb: Chain(Of TElement).Enumerator
- uid: Langly.DataStructures.Lists.Chain`1.Enumerator.#ctor(Langly.DataStructures.Lists.Chain{`0})
  name: Enumerator(Chain<TElement>)
  href: api/Langly.DataStructures.Lists.Chain-1.Enumerator.html#Langly_DataStructures_Lists_Chain_1_Enumerator__ctor_Langly_DataStructures_Lists_Chain__0__
  commentId: M:Langly.DataStructures.Lists.Chain`1.Enumerator.#ctor(Langly.DataStructures.Lists.Chain{`0})
  name.vb: Enumerator(Chain(Of TElement))
  fullName: Langly.DataStructures.Lists.Chain<TElement>.Enumerator.Enumerator(Langly.DataStructures.Lists.Chain<TElement>)
  fullName.vb: Langly.DataStructures.Lists.Chain(Of TElement).Enumerator.Enumerator(Langly.DataStructures.Lists.Chain(Of TElement))
  nameWithType: Chain<TElement>.Enumerator.Enumerator(Chain<TElement>)
  nameWithType.vb: Chain(Of TElement).Enumerator.Enumerator(Chain(Of TElement))
- uid: Langly.DataStructures.Lists.Chain`1.Enumerator.#ctor*
  name: Enumerator
  href: api/Langly.DataStructures.Lists.Chain-1.Enumerator.html#Langly_DataStructures_Lists_Chain_1_Enumerator__ctor_
  commentId: Overload:Langly.DataStructures.Lists.Chain`1.Enumerator.#ctor
  isSpec: "True"
  fullName: Langly.DataStructures.Lists.Chain<TElement>.Enumerator.Enumerator
  fullName.vb: Langly.DataStructures.Lists.Chain(Of TElement).Enumerator.Enumerator
  nameWithType: Chain<TElement>.Enumerator.Enumerator
  nameWithType.vb: Chain(Of TElement).Enumerator.Enumerator
- uid: Langly.DataStructures.Lists.Chain`1.Enumerator.Count
  name: Count
  href: api/Langly.DataStructures.Lists.Chain-1.Enumerator.html#Langly_DataStructures_Lists_Chain_1_Enumerator_Count
  commentId: P:Langly.DataStructures.Lists.Chain`1.Enumerator.Count
  fullName: Langly.DataStructures.Lists.Chain<TElement>.Enumerator.Count
  fullName.vb: Langly.DataStructures.Lists.Chain(Of TElement).Enumerator.Count
  nameWithType: Chain<TElement>.Enumerator.Count
  nameWithType.vb: Chain(Of TElement).Enumerator.Count
- uid: Langly.DataStructures.Lists.Chain`1.Enumerator.Count*
  name: Count
  href: api/Langly.DataStructures.Lists.Chain-1.Enumerator.html#Langly_DataStructures_Lists_Chain_1_Enumerator_Count_
  commentId: Overload:Langly.DataStructures.Lists.Chain`1.Enumerator.Count
  isSpec: "True"
  fullName: Langly.DataStructures.Lists.Chain<TElement>.Enumerator.Count
  fullName.vb: Langly.DataStructures.Lists.Chain(Of TElement).Enumerator.Count
  nameWithType: Chain<TElement>.Enumerator.Count
  nameWithType.vb: Chain(Of TElement).Enumerator.Count
- uid: Langly.DataStructures.Lists.Chain`1.Enumerator.Current
  name: Current
  href: api/Langly.DataStructures.Lists.Chain-1.Enumerator.html#Langly_DataStructures_Lists_Chain_1_Enumerator_Current
  commentId: P:Langly.DataStructures.Lists.Chain`1.Enumerator.Current
  fullName: Langly.DataStructures.Lists.Chain<TElement>.Enumerator.Current
  fullName.vb: Langly.DataStructures.Lists.Chain(Of TElement).Enumerator.Current
  nameWithType: Chain<TElement>.Enumerator.Current
  nameWithType.vb: Chain(Of TElement).Enumerator.Current
- uid: Langly.DataStructures.Lists.Chain`1.Enumerator.Current*
  name: Current
  href: api/Langly.DataStructures.Lists.Chain-1.Enumerator.html#Langly_DataStructures_Lists_Chain_1_Enumerator_Current_
  commentId: Overload:Langly.DataStructures.Lists.Chain`1.Enumerator.Current
  isSpec: "True"
  fullName: Langly.DataStructures.Lists.Chain<TElement>.Enumerator.Current
  fullName.vb: Langly.DataStructures.Lists.Chain(Of TElement).Enumerator.Current
  nameWithType: Chain<TElement>.Enumerator.Current
  nameWithType.vb: Chain(Of TElement).Enumerator.Current
- uid: Langly.DataStructures.Lists.Chain`1.Enumerator.MoveNext
  name: MoveNext()
  href: api/Langly.DataStructures.Lists.Chain-1.Enumerator.html#Langly_DataStructures_Lists_Chain_1_Enumerator_MoveNext
  commentId: M:Langly.DataStructures.Lists.Chain`1.Enumerator.MoveNext
  fullName: Langly.DataStructures.Lists.Chain<TElement>.Enumerator.MoveNext()
  fullName.vb: Langly.DataStructures.Lists.Chain(Of TElement).Enumerator.MoveNext()
  nameWithType: Chain<TElement>.Enumerator.MoveNext()
  nameWithType.vb: Chain(Of TElement).Enumerator.MoveNext()
- uid: Langly.DataStructures.Lists.Chain`1.Enumerator.MoveNext*
  name: MoveNext
  href: api/Langly.DataStructures.Lists.Chain-1.Enumerator.html#Langly_DataStructures_Lists_Chain_1_Enumerator_MoveNext_
  commentId: Overload:Langly.DataStructures.Lists.Chain`1.Enumerator.MoveNext
  isSpec: "True"
  fullName: Langly.DataStructures.Lists.Chain<TElement>.Enumerator.MoveNext
  fullName.vb: Langly.DataStructures.Lists.Chain(Of TElement).Enumerator.MoveNext
  nameWithType: Chain<TElement>.Enumerator.MoveNext
  nameWithType.vb: Chain(Of TElement).Enumerator.MoveNext
- uid: Langly.DataStructures.Lists.Chain`1.Enumerator.MovePrevious
  name: MovePrevious()
  href: api/Langly.DataStructures.Lists.Chain-1.Enumerator.html#Langly_DataStructures_Lists_Chain_1_Enumerator_MovePrevious
  commentId: M:Langly.DataStructures.Lists.Chain`1.Enumerator.MovePrevious
  fullName: Langly.DataStructures.Lists.Chain<TElement>.Enumerator.MovePrevious()
  fullName.vb: Langly.DataStructures.Lists.Chain(Of TElement).Enumerator.MovePrevious()
  nameWithType: Chain<TElement>.Enumerator.MovePrevious()
  nameWithType.vb: Chain(Of TElement).Enumerator.MovePrevious()
- uid: Langly.DataStructures.Lists.Chain`1.Enumerator.MovePrevious*
  name: MovePrevious
  href: api/Langly.DataStructures.Lists.Chain-1.Enumerator.html#Langly_DataStructures_Lists_Chain_1_Enumerator_MovePrevious_
  commentId: Overload:Langly.DataStructures.Lists.Chain`1.Enumerator.MovePrevious
  isSpec: "True"
  fullName: Langly.DataStructures.Lists.Chain<TElement>.Enumerator.MovePrevious
  fullName.vb: Langly.DataStructures.Lists.Chain(Of TElement).Enumerator.MovePrevious
  nameWithType: Chain<TElement>.Enumerator.MovePrevious
  nameWithType.vb: Chain(Of TElement).Enumerator.MovePrevious
- uid: Langly.DataStructures.Lists.Chain`1.Enumerator.ResetBeginning
  name: ResetBeginning()
  href: api/Langly.DataStructures.Lists.Chain-1.Enumerator.html#Langly_DataStructures_Lists_Chain_1_Enumerator_ResetBeginning
  commentId: M:Langly.DataStructures.Lists.Chain`1.Enumerator.ResetBeginning
  fullName: Langly.DataStructures.Lists.Chain<TElement>.Enumerator.ResetBeginning()
  fullName.vb: Langly.DataStructures.Lists.Chain(Of TElement).Enumerator.ResetBeginning()
  nameWithType: Chain<TElement>.Enumerator.ResetBeginning()
  nameWithType.vb: Chain(Of TElement).Enumerator.ResetBeginning()
- uid: Langly.DataStructures.Lists.Chain`1.Enumerator.ResetBeginning*
  name: ResetBeginning
  href: api/Langly.DataStructures.Lists.Chain-1.Enumerator.html#Langly_DataStructures_Lists_Chain_1_Enumerator_ResetBeginning_
  commentId: Overload:Langly.DataStructures.Lists.Chain`1.Enumerator.ResetBeginning
  isSpec: "True"
  fullName: Langly.DataStructures.Lists.Chain<TElement>.Enumerator.ResetBeginning
  fullName.vb: Langly.DataStructures.Lists.Chain(Of TElement).Enumerator.ResetBeginning
  nameWithType: Chain<TElement>.Enumerator.ResetBeginning
  nameWithType.vb: Chain(Of TElement).Enumerator.ResetBeginning
- uid: Langly.DataStructures.Lists.Chain`1.Enumerator.ResetEnding
  name: ResetEnding()
  href: api/Langly.DataStructures.Lists.Chain-1.Enumerator.html#Langly_DataStructures_Lists_Chain_1_Enumerator_ResetEnding
  commentId: M:Langly.DataStructures.Lists.Chain`1.Enumerator.ResetEnding
  fullName: Langly.DataStructures.Lists.Chain<TElement>.Enumerator.ResetEnding()
  fullName.vb: Langly.DataStructures.Lists.Chain(Of TElement).Enumerator.ResetEnding()
  nameWithType: Chain<TElement>.Enumerator.ResetEnding()
  nameWithType.vb: Chain(Of TElement).Enumerator.ResetEnding()
- uid: Langly.DataStructures.Lists.Chain`1.Enumerator.ResetEnding*
  name: ResetEnding
  href: api/Langly.DataStructures.Lists.Chain-1.Enumerator.html#Langly_DataStructures_Lists_Chain_1_Enumerator_ResetEnding_
  commentId: Overload:Langly.DataStructures.Lists.Chain`1.Enumerator.ResetEnding
  isSpec: "True"
  fullName: Langly.DataStructures.Lists.Chain<TElement>.Enumerator.ResetEnding
  fullName.vb: Langly.DataStructures.Lists.Chain(Of TElement).Enumerator.ResetEnding
  nameWithType: Chain<TElement>.Enumerator.ResetEnding
  nameWithType.vb: Chain(Of TElement).Enumerator.ResetEnding
- uid: Langly.DataStructures.Lists.Chain`1.GetEnumerator
  name: GetEnumerator()
  href: api/Langly.DataStructures.Lists.Chain-1.html#Langly_DataStructures_Lists_Chain_1_GetEnumerator
  commentId: M:Langly.DataStructures.Lists.Chain`1.GetEnumerator
  fullName: Langly.DataStructures.Lists.Chain<TElement>.GetEnumerator()
  fullName.vb: Langly.DataStructures.Lists.Chain(Of TElement).GetEnumerator()
  nameWithType: Chain<TElement>.GetEnumerator()
  nameWithType.vb: Chain(Of TElement).GetEnumerator()
- uid: Langly.DataStructures.Lists.Chain`1.GetEnumerator*
  name: GetEnumerator
  href: api/Langly.DataStructures.Lists.Chain-1.html#Langly_DataStructures_Lists_Chain_1_GetEnumerator_
  commentId: Overload:Langly.DataStructures.Lists.Chain`1.GetEnumerator
  isSpec: "True"
  fullName: Langly.DataStructures.Lists.Chain<TElement>.GetEnumerator
  fullName.vb: Langly.DataStructures.Lists.Chain(Of TElement).GetEnumerator
  nameWithType: Chain<TElement>.GetEnumerator
  nameWithType.vb: Chain(Of TElement).GetEnumerator
- uid: Langly.DataStructures.Lists.Chain`1.Item(nint)
  name: Item[nint]
  href: api/Langly.DataStructures.Lists.Chain-1.html#Langly_DataStructures_Lists_Chain_1_Item_nint_
  commentId: P:Langly.DataStructures.Lists.Chain`1.Item(nint)
  name.vb: Item(nint)
  fullName: Langly.DataStructures.Lists.Chain<TElement>.Item[nint]
  fullName.vb: Langly.DataStructures.Lists.Chain(Of TElement).Item(nint)
  nameWithType: Chain<TElement>.Item[nint]
  nameWithType.vb: Chain(Of TElement).Item(nint)
- uid: Langly.DataStructures.Lists.Chain`1.Item*
  name: Item
  href: api/Langly.DataStructures.Lists.Chain-1.html#Langly_DataStructures_Lists_Chain_1_Item_
  commentId: Overload:Langly.DataStructures.Lists.Chain`1.Item
  isSpec: "True"
  fullName: Langly.DataStructures.Lists.Chain<TElement>.Item
  fullName.vb: Langly.DataStructures.Lists.Chain(Of TElement).Item
  nameWithType: Chain<TElement>.Item
  nameWithType.vb: Chain(Of TElement).Item
- uid: Langly.DataStructures.Lists.Chain`1.Langly#IAdd{TElement,Langly#DataStructures#Lists#Chain{TElement}}#Add(`0)
  name: IAdd<TElement, Chain<TElement>>.Add(TElement)
  href: api/Langly.DataStructures.Lists.Chain-1.html#Langly_DataStructures_Lists_Chain_1_Langly_IAdd_TElement_Langly_DataStructures_Lists_Chain_TElement___Add__0_
  commentId: M:Langly.DataStructures.Lists.Chain`1.Langly#IAdd{TElement,Langly#DataStructures#Lists#Chain{TElement}}#Add(`0)
  name.vb: Langly.IAdd<TElement,Langly.DataStructures.Lists.Chain<TElement>>.Add(TElement)
  fullName: Langly.DataStructures.Lists.Chain<TElement>.Langly.IAdd<TElement, Langly.DataStructures.Lists.Chain<TElement>>.Add(TElement)
  fullName.vb: Langly.DataStructures.Lists.Chain(Of TElement).Langly.IAdd<TElement,Langly.DataStructures.Lists.Chain<TElement>>.Add(TElement)
  nameWithType: Chain<TElement>.IAdd<TElement, Chain<TElement>>.Add(TElement)
  nameWithType.vb: Chain(Of TElement).Langly.IAdd<TElement,Langly.DataStructures.Lists.Chain<TElement>>.Add(TElement)
- uid: Langly.DataStructures.Lists.Chain`1.Langly#IAdd{TElement,Langly#DataStructures#Lists#Chain{TElement}}#Add(System.ReadOnlyMemory{`0})
  name: IAdd<TElement, Chain<TElement>>.Add(ReadOnlyMemory<TElement>)
  href: api/Langly.DataStructures.Lists.Chain-1.html#Langly_DataStructures_Lists_Chain_1_Langly_IAdd_TElement_Langly_DataStructures_Lists_Chain_TElement___Add_System_ReadOnlyMemory__0__
  commentId: M:Langly.DataStructures.Lists.Chain`1.Langly#IAdd{TElement,Langly#DataStructures#Lists#Chain{TElement}}#Add(System.ReadOnlyMemory{`0})
  name.vb: Langly.IAdd<TElement,Langly.DataStructures.Lists.Chain<TElement>>.Add(ReadOnlyMemory(Of TElement))
  fullName: Langly.DataStructures.Lists.Chain<TElement>.Langly.IAdd<TElement, Langly.DataStructures.Lists.Chain<TElement>>.Add(System.ReadOnlyMemory<TElement>)
  fullName.vb: Langly.DataStructures.Lists.Chain(Of TElement).Langly.IAdd<TElement,Langly.DataStructures.Lists.Chain<TElement>>.Add(System.ReadOnlyMemory(Of TElement))
  nameWithType: Chain<TElement>.IAdd<TElement, Chain<TElement>>.Add(ReadOnlyMemory<TElement>)
  nameWithType.vb: Chain(Of TElement).Langly.IAdd<TElement,Langly.DataStructures.Lists.Chain<TElement>>.Add(ReadOnlyMemory(Of TElement))
- uid: Langly.DataStructures.Lists.Chain`1.Langly#IAdd{TElement,Langly#DataStructures#Lists#Chain{TElement}}#Add*
  name: IAdd<TElement, Chain<TElement>>.Add
  href: api/Langly.DataStructures.Lists.Chain-1.html#Langly_DataStructures_Lists_Chain_1_Langly_IAdd_TElement_Langly_DataStructures_Lists_Chain_TElement___Add_
  commentId: Overload:Langly.DataStructures.Lists.Chain`1.Langly#IAdd{TElement,Langly#DataStructures#Lists#Chain{TElement}}#Add
  isSpec: "True"
  name.vb: Langly.IAdd<TElement,Langly.DataStructures.Lists.Chain<TElement>>.Add
  fullName: Langly.DataStructures.Lists.Chain<TElement>.Langly.IAdd<TElement, Langly.DataStructures.Lists.Chain<TElement>>.Add
  fullName.vb: Langly.DataStructures.Lists.Chain(Of TElement).Langly.IAdd<TElement,Langly.DataStructures.Lists.Chain<TElement>>.Add
  nameWithType: Chain<TElement>.IAdd<TElement, Chain<TElement>>.Add
  nameWithType.vb: Chain(Of TElement).Langly.IAdd<TElement,Langly.DataStructures.Lists.Chain<TElement>>.Add
- uid: Langly.DataStructures.Lists.Chain`1.Langly#IInsert{nint,TElement,Langly#DataStructures#Lists#Chain{TElement}}#Insert(nint,`0)
  name: IInsert<nint, TElement, Chain<TElement>>.Insert(nint, TElement)
  href: api/Langly.DataStructures.Lists.Chain-1.html#Langly_DataStructures_Lists_Chain_1_Langly_IInsert_nint_TElement_Langly_DataStructures_Lists_Chain_TElement___Insert_nint__0_
  commentId: M:Langly.DataStructures.Lists.Chain`1.Langly#IInsert{nint,TElement,Langly#DataStructures#Lists#Chain{TElement}}#Insert(nint,`0)
  name.vb: Langly.IInsert<nint,TElement,Langly.DataStructures.Lists.Chain<TElement>>.Insert(nint, TElement)
  fullName: Langly.DataStructures.Lists.Chain<TElement>.Langly.IInsert<nint, TElement, Langly.DataStructures.Lists.Chain<TElement>>.Insert(nint, TElement)
  fullName.vb: Langly.DataStructures.Lists.Chain(Of TElement).Langly.IInsert<nint,TElement,Langly.DataStructures.Lists.Chain<TElement>>.Insert(nint, TElement)
  nameWithType: Chain<TElement>.IInsert<nint, TElement, Chain<TElement>>.Insert(nint, TElement)
  nameWithType.vb: Chain(Of TElement).Langly.IInsert<nint,TElement,Langly.DataStructures.Lists.Chain<TElement>>.Insert(nint, TElement)
- uid: Langly.DataStructures.Lists.Chain`1.Langly#IInsert{nint,TElement,Langly#DataStructures#Lists#Chain{TElement}}#Insert(nint,System.ReadOnlyMemory{`0})
  name: IInsert<nint, TElement, Chain<TElement>>.Insert(nint, ReadOnlyMemory<TElement>)
  href: api/Langly.DataStructures.Lists.Chain-1.html#Langly_DataStructures_Lists_Chain_1_Langly_IInsert_nint_TElement_Langly_DataStructures_Lists_Chain_TElement___Insert_nint_System_ReadOnlyMemory__0__
  commentId: M:Langly.DataStructures.Lists.Chain`1.Langly#IInsert{nint,TElement,Langly#DataStructures#Lists#Chain{TElement}}#Insert(nint,System.ReadOnlyMemory{`0})
  name.vb: Langly.IInsert<nint,TElement,Langly.DataStructures.Lists.Chain<TElement>>.Insert(nint, ReadOnlyMemory(Of TElement))
  fullName: Langly.DataStructures.Lists.Chain<TElement>.Langly.IInsert<nint, TElement, Langly.DataStructures.Lists.Chain<TElement>>.Insert(nint, System.ReadOnlyMemory<TElement>)
  fullName.vb: Langly.DataStructures.Lists.Chain(Of TElement).Langly.IInsert<nint,TElement,Langly.DataStructures.Lists.Chain<TElement>>.Insert(nint, System.ReadOnlyMemory(Of TElement))
  nameWithType: Chain<TElement>.IInsert<nint, TElement, Chain<TElement>>.Insert(nint, ReadOnlyMemory<TElement>)
  nameWithType.vb: Chain(Of TElement).Langly.IInsert<nint,TElement,Langly.DataStructures.Lists.Chain<TElement>>.Insert(nint, ReadOnlyMemory(Of TElement))
- uid: Langly.DataStructures.Lists.Chain`1.Langly#IInsert{nint,TElement,Langly#DataStructures#Lists#Chain{TElement}}#Insert*
  name: IInsert<nint, TElement, Chain<TElement>>.Insert
  href: api/Langly.DataStructures.Lists.Chain-1.html#Langly_DataStructures_Lists_Chain_1_Langly_IInsert_nint_TElement_Langly_DataStructures_Lists_Chain_TElement___Insert_
  commentId: Overload:Langly.DataStructures.Lists.Chain`1.Langly#IInsert{nint,TElement,Langly#DataStructures#Lists#Chain{TElement}}#Insert
  isSpec: "True"
  name.vb: Langly.IInsert<nint,TElement,Langly.DataStructures.Lists.Chain<TElement>>.Insert
  fullName: Langly.DataStructures.Lists.Chain<TElement>.Langly.IInsert<nint, TElement, Langly.DataStructures.Lists.Chain<TElement>>.Insert
  fullName.vb: Langly.DataStructures.Lists.Chain(Of TElement).Langly.IInsert<nint,TElement,Langly.DataStructures.Lists.Chain<TElement>>.Insert
  nameWithType: Chain<TElement>.IInsert<nint, TElement, Chain<TElement>>.Insert
  nameWithType.vb: Chain(Of TElement).Langly.IInsert<nint,TElement,Langly.DataStructures.Lists.Chain<TElement>>.Insert
- uid: Langly.DataStructures.Lists.Chain`1.Langly#IPostpend{TElement,Langly#DataStructures#Lists#Chain{TElement}}#Postpend(`0)
  name: IPostpend<TElement, Chain<TElement>>.Postpend(TElement)
  href: api/Langly.DataStructures.Lists.Chain-1.html#Langly_DataStructures_Lists_Chain_1_Langly_IPostpend_TElement_Langly_DataStructures_Lists_Chain_TElement___Postpend__0_
  commentId: M:Langly.DataStructures.Lists.Chain`1.Langly#IPostpend{TElement,Langly#DataStructures#Lists#Chain{TElement}}#Postpend(`0)
  name.vb: Langly.IPostpend<TElement,Langly.DataStructures.Lists.Chain<TElement>>.Postpend(TElement)
  fullName: Langly.DataStructures.Lists.Chain<TElement>.Langly.IPostpend<TElement, Langly.DataStructures.Lists.Chain<TElement>>.Postpend(TElement)
  fullName.vb: Langly.DataStructures.Lists.Chain(Of TElement).Langly.IPostpend<TElement,Langly.DataStructures.Lists.Chain<TElement>>.Postpend(TElement)
  nameWithType: Chain<TElement>.IPostpend<TElement, Chain<TElement>>.Postpend(TElement)
  nameWithType.vb: Chain(Of TElement).Langly.IPostpend<TElement,Langly.DataStructures.Lists.Chain<TElement>>.Postpend(TElement)
- uid: Langly.DataStructures.Lists.Chain`1.Langly#IPostpend{TElement,Langly#DataStructures#Lists#Chain{TElement}}#Postpend(System.ReadOnlyMemory{`0})
  name: IPostpend<TElement, Chain<TElement>>.Postpend(ReadOnlyMemory<TElement>)
  href: api/Langly.DataStructures.Lists.Chain-1.html#Langly_DataStructures_Lists_Chain_1_Langly_IPostpend_TElement_Langly_DataStructures_Lists_Chain_TElement___Postpend_System_ReadOnlyMemory__0__
  commentId: M:Langly.DataStructures.Lists.Chain`1.Langly#IPostpend{TElement,Langly#DataStructures#Lists#Chain{TElement}}#Postpend(System.ReadOnlyMemory{`0})
  name.vb: Langly.IPostpend<TElement,Langly.DataStructures.Lists.Chain<TElement>>.Postpend(ReadOnlyMemory(Of TElement))
  fullName: Langly.DataStructures.Lists.Chain<TElement>.Langly.IPostpend<TElement, Langly.DataStructures.Lists.Chain<TElement>>.Postpend(System.ReadOnlyMemory<TElement>)
  fullName.vb: Langly.DataStructures.Lists.Chain(Of TElement).Langly.IPostpend<TElement,Langly.DataStructures.Lists.Chain<TElement>>.Postpend(System.ReadOnlyMemory(Of TElement))
  nameWithType: Chain<TElement>.IPostpend<TElement, Chain<TElement>>.Postpend(ReadOnlyMemory<TElement>)
  nameWithType.vb: Chain(Of TElement).Langly.IPostpend<TElement,Langly.DataStructures.Lists.Chain<TElement>>.Postpend(ReadOnlyMemory(Of TElement))
- uid: Langly.DataStructures.Lists.Chain`1.Langly#IPostpend{TElement,Langly#DataStructures#Lists#Chain{TElement}}#Postpend(System.ReadOnlySpan{`0})
  name: IPostpend<TElement, Chain<TElement>>.Postpend(ReadOnlySpan<TElement>)
  href: api/Langly.DataStructures.Lists.Chain-1.html#Langly_DataStructures_Lists_Chain_1_Langly_IPostpend_TElement_Langly_DataStructures_Lists_Chain_TElement___Postpend_System_ReadOnlySpan__0__
  commentId: M:Langly.DataStructures.Lists.Chain`1.Langly#IPostpend{TElement,Langly#DataStructures#Lists#Chain{TElement}}#Postpend(System.ReadOnlySpan{`0})
  name.vb: Langly.IPostpend<TElement,Langly.DataStructures.Lists.Chain<TElement>>.Postpend(ReadOnlySpan(Of TElement))
  fullName: Langly.DataStructures.Lists.Chain<TElement>.Langly.IPostpend<TElement, Langly.DataStructures.Lists.Chain<TElement>>.Postpend(System.ReadOnlySpan<TElement>)
  fullName.vb: Langly.DataStructures.Lists.Chain(Of TElement).Langly.IPostpend<TElement,Langly.DataStructures.Lists.Chain<TElement>>.Postpend(System.ReadOnlySpan(Of TElement))
  nameWithType: Chain<TElement>.IPostpend<TElement, Chain<TElement>>.Postpend(ReadOnlySpan<TElement>)
  nameWithType.vb: Chain(Of TElement).Langly.IPostpend<TElement,Langly.DataStructures.Lists.Chain<TElement>>.Postpend(ReadOnlySpan(Of TElement))
- uid: Langly.DataStructures.Lists.Chain`1.Langly#IPostpend{TElement,Langly#DataStructures#Lists#Chain{TElement}}#Postpend*
  name: IPostpend<TElement, Chain<TElement>>.Postpend
  href: api/Langly.DataStructures.Lists.Chain-1.html#Langly_DataStructures_Lists_Chain_1_Langly_IPostpend_TElement_Langly_DataStructures_Lists_Chain_TElement___Postpend_
  commentId: Overload:Langly.DataStructures.Lists.Chain`1.Langly#IPostpend{TElement,Langly#DataStructures#Lists#Chain{TElement}}#Postpend
  isSpec: "True"
  name.vb: Langly.IPostpend<TElement,Langly.DataStructures.Lists.Chain<TElement>>.Postpend
  fullName: Langly.DataStructures.Lists.Chain<TElement>.Langly.IPostpend<TElement, Langly.DataStructures.Lists.Chain<TElement>>.Postpend
  fullName.vb: Langly.DataStructures.Lists.Chain(Of TElement).Langly.IPostpend<TElement,Langly.DataStructures.Lists.Chain<TElement>>.Postpend
  nameWithType: Chain<TElement>.IPostpend<TElement, Chain<TElement>>.Postpend
  nameWithType.vb: Chain(Of TElement).Langly.IPostpend<TElement,Langly.DataStructures.Lists.Chain<TElement>>.Postpend
- uid: Langly.DataStructures.Lists.Chain`1.Langly#IPrepend{TElement,Langly#DataStructures#Lists#Chain{TElement}}#Prepend(`0)
  name: IPrepend<TElement, Chain<TElement>>.Prepend(TElement)
  href: api/Langly.DataStructures.Lists.Chain-1.html#Langly_DataStructures_Lists_Chain_1_Langly_IPrepend_TElement_Langly_DataStructures_Lists_Chain_TElement___Prepend__0_
  commentId: M:Langly.DataStructures.Lists.Chain`1.Langly#IPrepend{TElement,Langly#DataStructures#Lists#Chain{TElement}}#Prepend(`0)
  name.vb: Langly.IPrepend<TElement,Langly.DataStructures.Lists.Chain<TElement>>.Prepend(TElement)
  fullName: Langly.DataStructures.Lists.Chain<TElement>.Langly.IPrepend<TElement, Langly.DataStructures.Lists.Chain<TElement>>.Prepend(TElement)
  fullName.vb: Langly.DataStructures.Lists.Chain(Of TElement).Langly.IPrepend<TElement,Langly.DataStructures.Lists.Chain<TElement>>.Prepend(TElement)
  nameWithType: Chain<TElement>.IPrepend<TElement, Chain<TElement>>.Prepend(TElement)
  nameWithType.vb: Chain(Of TElement).Langly.IPrepend<TElement,Langly.DataStructures.Lists.Chain<TElement>>.Prepend(TElement)
- uid: Langly.DataStructures.Lists.Chain`1.Langly#IPrepend{TElement,Langly#DataStructures#Lists#Chain{TElement}}#Prepend(System.ReadOnlyMemory{`0})
  name: IPrepend<TElement, Chain<TElement>>.Prepend(ReadOnlyMemory<TElement>)
  href: api/Langly.DataStructures.Lists.Chain-1.html#Langly_DataStructures_Lists_Chain_1_Langly_IPrepend_TElement_Langly_DataStructures_Lists_Chain_TElement___Prepend_System_ReadOnlyMemory__0__
  commentId: M:Langly.DataStructures.Lists.Chain`1.Langly#IPrepend{TElement,Langly#DataStructures#Lists#Chain{TElement}}#Prepend(System.ReadOnlyMemory{`0})
  name.vb: Langly.IPrepend<TElement,Langly.DataStructures.Lists.Chain<TElement>>.Prepend(ReadOnlyMemory(Of TElement))
  fullName: Langly.DataStructures.Lists.Chain<TElement>.Langly.IPrepend<TElement, Langly.DataStructures.Lists.Chain<TElement>>.Prepend(System.ReadOnlyMemory<TElement>)
  fullName.vb: Langly.DataStructures.Lists.Chain(Of TElement).Langly.IPrepend<TElement,Langly.DataStructures.Lists.Chain<TElement>>.Prepend(System.ReadOnlyMemory(Of TElement))
  nameWithType: Chain<TElement>.IPrepend<TElement, Chain<TElement>>.Prepend(ReadOnlyMemory<TElement>)
  nameWithType.vb: Chain(Of TElement).Langly.IPrepend<TElement,Langly.DataStructures.Lists.Chain<TElement>>.Prepend(ReadOnlyMemory(Of TElement))
- uid: Langly.DataStructures.Lists.Chain`1.Langly#IPrepend{TElement,Langly#DataStructures#Lists#Chain{TElement}}#Prepend(System.ReadOnlySpan{`0})
  name: IPrepend<TElement, Chain<TElement>>.Prepend(ReadOnlySpan<TElement>)
  href: api/Langly.DataStructures.Lists.Chain-1.html#Langly_DataStructures_Lists_Chain_1_Langly_IPrepend_TElement_Langly_DataStructures_Lists_Chain_TElement___Prepend_System_ReadOnlySpan__0__
  commentId: M:Langly.DataStructures.Lists.Chain`1.Langly#IPrepend{TElement,Langly#DataStructures#Lists#Chain{TElement}}#Prepend(System.ReadOnlySpan{`0})
  name.vb: Langly.IPrepend<TElement,Langly.DataStructures.Lists.Chain<TElement>>.Prepend(ReadOnlySpan(Of TElement))
  fullName: Langly.DataStructures.Lists.Chain<TElement>.Langly.IPrepend<TElement, Langly.DataStructures.Lists.Chain<TElement>>.Prepend(System.ReadOnlySpan<TElement>)
  fullName.vb: Langly.DataStructures.Lists.Chain(Of TElement).Langly.IPrepend<TElement,Langly.DataStructures.Lists.Chain<TElement>>.Prepend(System.ReadOnlySpan(Of TElement))
  nameWithType: Chain<TElement>.IPrepend<TElement, Chain<TElement>>.Prepend(ReadOnlySpan<TElement>)
  nameWithType.vb: Chain(Of TElement).Langly.IPrepend<TElement,Langly.DataStructures.Lists.Chain<TElement>>.Prepend(ReadOnlySpan(Of TElement))
- uid: Langly.DataStructures.Lists.Chain`1.Langly#IPrepend{TElement,Langly#DataStructures#Lists#Chain{TElement}}#Prepend*
  name: IPrepend<TElement, Chain<TElement>>.Prepend
  href: api/Langly.DataStructures.Lists.Chain-1.html#Langly_DataStructures_Lists_Chain_1_Langly_IPrepend_TElement_Langly_DataStructures_Lists_Chain_TElement___Prepend_
  commentId: Overload:Langly.DataStructures.Lists.Chain`1.Langly#IPrepend{TElement,Langly#DataStructures#Lists#Chain{TElement}}#Prepend
  isSpec: "True"
  name.vb: Langly.IPrepend<TElement,Langly.DataStructures.Lists.Chain<TElement>>.Prepend
  fullName: Langly.DataStructures.Lists.Chain<TElement>.Langly.IPrepend<TElement, Langly.DataStructures.Lists.Chain<TElement>>.Prepend
  fullName.vb: Langly.DataStructures.Lists.Chain(Of TElement).Langly.IPrepend<TElement,Langly.DataStructures.Lists.Chain<TElement>>.Prepend
  nameWithType: Chain<TElement>.IPrepend<TElement, Chain<TElement>>.Prepend
  nameWithType.vb: Chain(Of TElement).Langly.IPrepend<TElement,Langly.DataStructures.Lists.Chain<TElement>>.Prepend
- uid: Langly.DataStructures.Lists.Chain`1.Langly#IReplace{TElement,TElement,Langly#DataStructures#Lists#Chain{TElement}}#Replace(`0,`0)
  name: IReplace<TElement, TElement, Chain<TElement>>.Replace(TElement, TElement)
  href: api/Langly.DataStructures.Lists.Chain-1.html#Langly_DataStructures_Lists_Chain_1_Langly_IReplace_TElement_TElement_Langly_DataStructures_Lists_Chain_TElement___Replace__0__0_
  commentId: M:Langly.DataStructures.Lists.Chain`1.Langly#IReplace{TElement,TElement,Langly#DataStructures#Lists#Chain{TElement}}#Replace(`0,`0)
  name.vb: Langly.IReplace<TElement,TElement,Langly.DataStructures.Lists.Chain<TElement>>.Replace(TElement, TElement)
  fullName: Langly.DataStructures.Lists.Chain<TElement>.Langly.IReplace<TElement, TElement, Langly.DataStructures.Lists.Chain<TElement>>.Replace(TElement, TElement)
  fullName.vb: Langly.DataStructures.Lists.Chain(Of TElement).Langly.IReplace<TElement,TElement,Langly.DataStructures.Lists.Chain<TElement>>.Replace(TElement, TElement)
  nameWithType: Chain<TElement>.IReplace<TElement, TElement, Chain<TElement>>.Replace(TElement, TElement)
  nameWithType.vb: Chain(Of TElement).Langly.IReplace<TElement,TElement,Langly.DataStructures.Lists.Chain<TElement>>.Replace(TElement, TElement)
- uid: Langly.DataStructures.Lists.Chain`1.Langly#IReplace{TElement,TElement,Langly#DataStructures#Lists#Chain{TElement}}#Replace*
  name: IReplace<TElement, TElement, Chain<TElement>>.Replace
  href: api/Langly.DataStructures.Lists.Chain-1.html#Langly_DataStructures_Lists_Chain_1_Langly_IReplace_TElement_TElement_Langly_DataStructures_Lists_Chain_TElement___Replace_
  commentId: Overload:Langly.DataStructures.Lists.Chain`1.Langly#IReplace{TElement,TElement,Langly#DataStructures#Lists#Chain{TElement}}#Replace
  isSpec: "True"
  name.vb: Langly.IReplace<TElement,TElement,Langly.DataStructures.Lists.Chain<TElement>>.Replace
  fullName: Langly.DataStructures.Lists.Chain<TElement>.Langly.IReplace<TElement, TElement, Langly.DataStructures.Lists.Chain<TElement>>.Replace
  fullName.vb: Langly.DataStructures.Lists.Chain(Of TElement).Langly.IReplace<TElement,TElement,Langly.DataStructures.Lists.Chain<TElement>>.Replace
  nameWithType: Chain<TElement>.IReplace<TElement, TElement, Chain<TElement>>.Replace
  nameWithType.vb: Chain(Of TElement).Langly.IReplace<TElement,TElement,Langly.DataStructures.Lists.Chain<TElement>>.Replace
- uid: Langly.DataStructures.Lists.Chain`1.Reverse
  name: Reverse()
  href: api/Langly.DataStructures.Lists.Chain-1.html#Langly_DataStructures_Lists_Chain_1_Reverse
  commentId: M:Langly.DataStructures.Lists.Chain`1.Reverse
  fullName: Langly.DataStructures.Lists.Chain<TElement>.Reverse()
  fullName.vb: Langly.DataStructures.Lists.Chain(Of TElement).Reverse()
  nameWithType: Chain<TElement>.Reverse()
  nameWithType.vb: Chain(Of TElement).Reverse()
- uid: Langly.DataStructures.Lists.Chain`1.Reverse*
  name: Reverse
  href: api/Langly.DataStructures.Lists.Chain-1.html#Langly_DataStructures_Lists_Chain_1_Reverse_
  commentId: Overload:Langly.DataStructures.Lists.Chain`1.Reverse
  isSpec: "True"
  fullName: Langly.DataStructures.Lists.Chain<TElement>.Reverse
  fullName.vb: Langly.DataStructures.Lists.Chain(Of TElement).Reverse
  nameWithType: Chain<TElement>.Reverse
  nameWithType.vb: Chain(Of TElement).Reverse
- uid: Langly.DataStructures.Set
  name: Set
  href: api/Langly.DataStructures.Set.html
  commentId: T:Langly.DataStructures.Set
  fullName: Langly.DataStructures.Set
  nameWithType: Set
- uid: Langly.DataStructures.Set.Compliment*
  name: Compliment
  href: api/Langly.DataStructures.Set.html#Langly_DataStructures_Set_Compliment_
  commentId: Overload:Langly.DataStructures.Set.Compliment
  isSpec: "True"
  fullName: Langly.DataStructures.Set.Compliment
  nameWithType: Set.Compliment
- uid: Langly.DataStructures.Set.Compliment``2(``1)
  name: Compliment<TElement, TSet>(TSet)
  href: api/Langly.DataStructures.Set.html#Langly_DataStructures_Set_Compliment__2___1_
  commentId: M:Langly.DataStructures.Set.Compliment``2(``1)
  name.vb: Compliment(Of TElement, TSet)(TSet)
  fullName: Langly.DataStructures.Set.Compliment<TElement, TSet>(TSet)
  fullName.vb: Langly.DataStructures.Set.Compliment(Of TElement, TSet)(TSet)
  nameWithType: Set.Compliment<TElement, TSet>(TSet)
  nameWithType.vb: Set.Compliment(Of TElement, TSet)(TSet)
- uid: Langly.DataStructures.Set.Difference*
  name: Difference
  href: api/Langly.DataStructures.Set.html#Langly_DataStructures_Set_Difference_
  commentId: Overload:Langly.DataStructures.Set.Difference
  isSpec: "True"
  fullName: Langly.DataStructures.Set.Difference
  nameWithType: Set.Difference
- uid: Langly.DataStructures.Set.Difference``3(``1,``2)
  name: Difference<TElement, TFirst, TSecond>(TFirst, TSecond)
  href: api/Langly.DataStructures.Set.html#Langly_DataStructures_Set_Difference__3___1___2_
  commentId: M:Langly.DataStructures.Set.Difference``3(``1,``2)
  name.vb: Difference(Of TElement, TFirst, TSecond)(TFirst, TSecond)
  fullName: Langly.DataStructures.Set.Difference<TElement, TFirst, TSecond>(TFirst, TSecond)
  fullName.vb: Langly.DataStructures.Set.Difference(Of TElement, TFirst, TSecond)(TFirst, TSecond)
  nameWithType: Set.Difference<TElement, TFirst, TSecond>(TFirst, TSecond)
  nameWithType.vb: Set.Difference(Of TElement, TFirst, TSecond)(TFirst, TSecond)
- uid: Langly.DataStructures.Set.Disjunction*
  name: Disjunction
  href: api/Langly.DataStructures.Set.html#Langly_DataStructures_Set_Disjunction_
  commentId: Overload:Langly.DataStructures.Set.Disjunction
  isSpec: "True"
  fullName: Langly.DataStructures.Set.Disjunction
  nameWithType: Set.Disjunction
- uid: Langly.DataStructures.Set.Disjunction``3(``1,``2)
  name: Disjunction<TElement, TFirst, TSecond>(TFirst, TSecond)
  href: api/Langly.DataStructures.Set.html#Langly_DataStructures_Set_Disjunction__3___1___2_
  commentId: M:Langly.DataStructures.Set.Disjunction``3(``1,``2)
  name.vb: Disjunction(Of TElement, TFirst, TSecond)(TFirst, TSecond)
  fullName: Langly.DataStructures.Set.Disjunction<TElement, TFirst, TSecond>(TFirst, TSecond)
  fullName.vb: Langly.DataStructures.Set.Disjunction(Of TElement, TFirst, TSecond)(TFirst, TSecond)
  nameWithType: Set.Disjunction<TElement, TFirst, TSecond>(TFirst, TSecond)
  nameWithType.vb: Set.Disjunction(Of TElement, TFirst, TSecond)(TFirst, TSecond)
- uid: Langly.DataStructures.Set.Empty*
  name: Empty
  href: api/Langly.DataStructures.Set.html#Langly_DataStructures_Set_Empty_
  commentId: Overload:Langly.DataStructures.Set.Empty
  isSpec: "True"
  fullName: Langly.DataStructures.Set.Empty
  nameWithType: Set.Empty
- uid: Langly.DataStructures.Set.Empty``1
  name: Empty<TElement>()
  href: api/Langly.DataStructures.Set.html#Langly_DataStructures_Set_Empty__1
  commentId: M:Langly.DataStructures.Set.Empty``1
  name.vb: Empty(Of TElement)()
  fullName: Langly.DataStructures.Set.Empty<TElement>()
  fullName.vb: Langly.DataStructures.Set.Empty(Of TElement)()
  nameWithType: Set.Empty<TElement>()
  nameWithType.vb: Set.Empty(Of TElement)()
- uid: Langly.DataStructures.Set.Intersection*
  name: Intersection
  href: api/Langly.DataStructures.Set.html#Langly_DataStructures_Set_Intersection_
  commentId: Overload:Langly.DataStructures.Set.Intersection
  isSpec: "True"
  fullName: Langly.DataStructures.Set.Intersection
  nameWithType: Set.Intersection
- uid: Langly.DataStructures.Set.Intersection``3(``1,``2)
  name: Intersection<TElement, TFirst, TSecond>(TFirst, TSecond)
  href: api/Langly.DataStructures.Set.html#Langly_DataStructures_Set_Intersection__3___1___2_
  commentId: M:Langly.DataStructures.Set.Intersection``3(``1,``2)
  name.vb: Intersection(Of TElement, TFirst, TSecond)(TFirst, TSecond)
  fullName: Langly.DataStructures.Set.Intersection<TElement, TFirst, TSecond>(TFirst, TSecond)
  fullName.vb: Langly.DataStructures.Set.Intersection(Of TElement, TFirst, TSecond)(TFirst, TSecond)
  nameWithType: Set.Intersection<TElement, TFirst, TSecond>(TFirst, TSecond)
  nameWithType.vb: Set.Intersection(Of TElement, TFirst, TSecond)(TFirst, TSecond)
- uid: Langly.DataStructures.Set.Of*
  name: Of
  href: api/Langly.DataStructures.Set.html#Langly_DataStructures_Set_Of_
  commentId: Overload:Langly.DataStructures.Set.Of
  isSpec: "True"
  fullName: Langly.DataStructures.Set.Of
  nameWithType: Set.Of
- uid: Langly.DataStructures.Set.Of``1(``0[])
  name: Of<TElement>(TElement[])
  href: api/Langly.DataStructures.Set.html#Langly_DataStructures_Set_Of__1___0___
  commentId: M:Langly.DataStructures.Set.Of``1(``0[])
  name.vb: Of(Of TElement)(TElement())
  fullName: Langly.DataStructures.Set.Of<TElement>(TElement[])
  fullName.vb: Langly.DataStructures.Set.Of(Of TElement)(TElement())
  nameWithType: Set.Of<TElement>(TElement[])
  nameWithType.vb: Set.Of(Of TElement)(TElement())
- uid: Langly.DataStructures.Set.Of``1(System.Predicate{``0})
  name: Of<TElement>(Predicate<TElement>)
  href: api/Langly.DataStructures.Set.html#Langly_DataStructures_Set_Of__1_System_Predicate___0__
  commentId: M:Langly.DataStructures.Set.Of``1(System.Predicate{``0})
  name.vb: Of(Of TElement)(Predicate(Of TElement))
  fullName: Langly.DataStructures.Set.Of<TElement>(System.Predicate<TElement>)
  fullName.vb: Langly.DataStructures.Set.Of(Of TElement)(System.Predicate(Of TElement))
  nameWithType: Set.Of<TElement>(Predicate<TElement>)
  nameWithType.vb: Set.Of(Of TElement)(Predicate(Of TElement))
- uid: Langly.DataStructures.Set.Range(System.Int32,System.Int32)
  name: Range(Int32, Int32)
  href: api/Langly.DataStructures.Set.html#Langly_DataStructures_Set_Range_System_Int32_System_Int32_
  commentId: M:Langly.DataStructures.Set.Range(System.Int32,System.Int32)
  fullName: Langly.DataStructures.Set.Range(System.Int32, System.Int32)
  nameWithType: Set.Range(Int32, Int32)
- uid: Langly.DataStructures.Set.Range*
  name: Range
  href: api/Langly.DataStructures.Set.html#Langly_DataStructures_Set_Range_
  commentId: Overload:Langly.DataStructures.Set.Range
  isSpec: "True"
  fullName: Langly.DataStructures.Set.Range
  nameWithType: Set.Range
- uid: Langly.DataStructures.Set.Range``1(``0,``0)
  name: Range<TElement>(TElement, TElement)
  href: api/Langly.DataStructures.Set.html#Langly_DataStructures_Set_Range__1___0___0_
  commentId: M:Langly.DataStructures.Set.Range``1(``0,``0)
  name.vb: Range(Of TElement)(TElement, TElement)
  fullName: Langly.DataStructures.Set.Range<TElement>(TElement, TElement)
  fullName.vb: Langly.DataStructures.Set.Range(Of TElement)(TElement, TElement)
  nameWithType: Set.Range<TElement>(TElement, TElement)
  nameWithType.vb: Set.Range(Of TElement)(TElement, TElement)
- uid: Langly.DataStructures.Set.Union*
  name: Union
  href: api/Langly.DataStructures.Set.html#Langly_DataStructures_Set_Union_
  commentId: Overload:Langly.DataStructures.Set.Union
  isSpec: "True"
  fullName: Langly.DataStructures.Set.Union
  nameWithType: Set.Union
- uid: Langly.DataStructures.Set.Union``3(``1,``2)
  name: Union<TElement, TFirst, TSecond>(TFirst, TSecond)
  href: api/Langly.DataStructures.Set.html#Langly_DataStructures_Set_Union__3___1___2_
  commentId: M:Langly.DataStructures.Set.Union``3(``1,``2)
  name.vb: Union(Of TElement, TFirst, TSecond)(TFirst, TSecond)
  fullName: Langly.DataStructures.Set.Union<TElement, TFirst, TSecond>(TFirst, TSecond)
  fullName.vb: Langly.DataStructures.Set.Union(Of TElement, TFirst, TSecond)(TFirst, TSecond)
  nameWithType: Set.Union<TElement, TFirst, TSecond>(TFirst, TSecond)
  nameWithType.vb: Set.Union(Of TElement, TFirst, TSecond)(TFirst, TSecond)
- uid: Langly.DataStructures.Set.Universe*
  name: Universe
  href: api/Langly.DataStructures.Set.html#Langly_DataStructures_Set_Universe_
  commentId: Overload:Langly.DataStructures.Set.Universe
  isSpec: "True"
  fullName: Langly.DataStructures.Set.Universe
  nameWithType: Set.Universe
- uid: Langly.DataStructures.Set.Universe``1
  name: Universe<TElement>()
  href: api/Langly.DataStructures.Set.html#Langly_DataStructures_Set_Universe__1
  commentId: M:Langly.DataStructures.Set.Universe``1
  name.vb: Universe(Of TElement)()
  fullName: Langly.DataStructures.Set.Universe<TElement>()
  fullName.vb: Langly.DataStructures.Set.Universe(Of TElement)()
  nameWithType: Set.Universe<TElement>()
  nameWithType.vb: Set.Universe(Of TElement)()
- uid: Langly.DataStructures.Set`1
  name: Set<TElement>
  href: api/Langly.DataStructures.Set-1.html
  commentId: T:Langly.DataStructures.Set`1
  name.vb: Set(Of TElement)
  fullName: Langly.DataStructures.Set<TElement>
  fullName.vb: Langly.DataStructures.Set(Of TElement)
  nameWithType: Set<TElement>
  nameWithType.vb: Set(Of TElement)
- uid: Langly.DataStructures.Set`1.ComplimentImpl
  name: ComplimentImpl()
  href: api/Langly.DataStructures.Set-1.html#Langly_DataStructures_Set_1_ComplimentImpl
  commentId: M:Langly.DataStructures.Set`1.ComplimentImpl
  fullName: Langly.DataStructures.Set<TElement>.ComplimentImpl()
  fullName.vb: Langly.DataStructures.Set(Of TElement).ComplimentImpl()
  nameWithType: Set<TElement>.ComplimentImpl()
  nameWithType.vb: Set(Of TElement).ComplimentImpl()
- uid: Langly.DataStructures.Set`1.ComplimentImpl*
  name: ComplimentImpl
  href: api/Langly.DataStructures.Set-1.html#Langly_DataStructures_Set_1_ComplimentImpl_
  commentId: Overload:Langly.DataStructures.Set`1.ComplimentImpl
  isSpec: "True"
  fullName: Langly.DataStructures.Set<TElement>.ComplimentImpl
  fullName.vb: Langly.DataStructures.Set(Of TElement).ComplimentImpl
  nameWithType: Set<TElement>.ComplimentImpl
  nameWithType.vb: Set(Of TElement).ComplimentImpl
- uid: Langly.DataStructures.Set`1.Contains(`0)
  name: Contains(TElement)
  href: api/Langly.DataStructures.Set-1.html#Langly_DataStructures_Set_1_Contains__0_
  commentId: M:Langly.DataStructures.Set`1.Contains(`0)
  fullName: Langly.DataStructures.Set<TElement>.Contains(TElement)
  fullName.vb: Langly.DataStructures.Set(Of TElement).Contains(TElement)
  nameWithType: Set<TElement>.Contains(TElement)
  nameWithType.vb: Set(Of TElement).Contains(TElement)
- uid: Langly.DataStructures.Set`1.Contains*
  name: Contains
  href: api/Langly.DataStructures.Set-1.html#Langly_DataStructures_Set_1_Contains_
  commentId: Overload:Langly.DataStructures.Set`1.Contains
  isSpec: "True"
  fullName: Langly.DataStructures.Set<TElement>.Contains
  fullName.vb: Langly.DataStructures.Set(Of TElement).Contains
  nameWithType: Set<TElement>.Contains
  nameWithType.vb: Set(Of TElement).Contains
- uid: Langly.DataStructures.Set`1.DifferenceImpl*
  name: DifferenceImpl
  href: api/Langly.DataStructures.Set-1.html#Langly_DataStructures_Set_1_DifferenceImpl_
  commentId: Overload:Langly.DataStructures.Set`1.DifferenceImpl
  isSpec: "True"
  fullName: Langly.DataStructures.Set<TElement>.DifferenceImpl
  fullName.vb: Langly.DataStructures.Set(Of TElement).DifferenceImpl
  nameWithType: Set<TElement>.DifferenceImpl
  nameWithType.vb: Set(Of TElement).DifferenceImpl
- uid: Langly.DataStructures.Set`1.DifferenceImpl``1(``0)
  name: DifferenceImpl<TOther>(TOther)
  href: api/Langly.DataStructures.Set-1.html#Langly_DataStructures_Set_1_DifferenceImpl__1___0_
  commentId: M:Langly.DataStructures.Set`1.DifferenceImpl``1(``0)
  name.vb: DifferenceImpl(Of TOther)(TOther)
  fullName: Langly.DataStructures.Set<TElement>.DifferenceImpl<TOther>(TOther)
  fullName.vb: Langly.DataStructures.Set(Of TElement).DifferenceImpl(Of TOther)(TOther)
  nameWithType: Set<TElement>.DifferenceImpl<TOther>(TOther)
  nameWithType.vb: Set(Of TElement).DifferenceImpl(Of TOther)(TOther)
- uid: Langly.DataStructures.Set`1.DisjunctionImpl*
  name: DisjunctionImpl
  href: api/Langly.DataStructures.Set-1.html#Langly_DataStructures_Set_1_DisjunctionImpl_
  commentId: Overload:Langly.DataStructures.Set`1.DisjunctionImpl
  isSpec: "True"
  fullName: Langly.DataStructures.Set<TElement>.DisjunctionImpl
  fullName.vb: Langly.DataStructures.Set(Of TElement).DisjunctionImpl
  nameWithType: Set<TElement>.DisjunctionImpl
  nameWithType.vb: Set(Of TElement).DisjunctionImpl
- uid: Langly.DataStructures.Set`1.DisjunctionImpl``1(``0)
  name: DisjunctionImpl<TOther>(TOther)
  href: api/Langly.DataStructures.Set-1.html#Langly_DataStructures_Set_1_DisjunctionImpl__1___0_
  commentId: M:Langly.DataStructures.Set`1.DisjunctionImpl``1(``0)
  name.vb: DisjunctionImpl(Of TOther)(TOther)
  fullName: Langly.DataStructures.Set<TElement>.DisjunctionImpl<TOther>(TOther)
  fullName.vb: Langly.DataStructures.Set(Of TElement).DisjunctionImpl(Of TOther)(TOther)
  nameWithType: Set<TElement>.DisjunctionImpl<TOther>(TOther)
  nameWithType.vb: Set(Of TElement).DisjunctionImpl(Of TOther)(TOther)
- uid: Langly.DataStructures.Set`1.Empty
  name: Empty
  href: api/Langly.DataStructures.Set-1.html#Langly_DataStructures_Set_1_Empty
  commentId: P:Langly.DataStructures.Set`1.Empty
  fullName: Langly.DataStructures.Set<TElement>.Empty
  fullName.vb: Langly.DataStructures.Set(Of TElement).Empty
  nameWithType: Set<TElement>.Empty
  nameWithType.vb: Set(Of TElement).Empty
- uid: Langly.DataStructures.Set`1.Empty*
  name: Empty
  href: api/Langly.DataStructures.Set-1.html#Langly_DataStructures_Set_1_Empty_
  commentId: Overload:Langly.DataStructures.Set`1.Empty
  isSpec: "True"
  fullName: Langly.DataStructures.Set<TElement>.Empty
  fullName.vb: Langly.DataStructures.Set(Of TElement).Empty
  nameWithType: Set<TElement>.Empty
  nameWithType.vb: Set(Of TElement).Empty
- uid: Langly.DataStructures.Set`1.IntersectionImpl*
  name: IntersectionImpl
  href: api/Langly.DataStructures.Set-1.html#Langly_DataStructures_Set_1_IntersectionImpl_
  commentId: Overload:Langly.DataStructures.Set`1.IntersectionImpl
  isSpec: "True"
  fullName: Langly.DataStructures.Set<TElement>.IntersectionImpl
  fullName.vb: Langly.DataStructures.Set(Of TElement).IntersectionImpl
  nameWithType: Set<TElement>.IntersectionImpl
  nameWithType.vb: Set(Of TElement).IntersectionImpl
- uid: Langly.DataStructures.Set`1.IntersectionImpl``1(``0)
  name: IntersectionImpl<TOther>(TOther)
  href: api/Langly.DataStructures.Set-1.html#Langly_DataStructures_Set_1_IntersectionImpl__1___0_
  commentId: M:Langly.DataStructures.Set`1.IntersectionImpl``1(``0)
  name.vb: IntersectionImpl(Of TOther)(TOther)
  fullName: Langly.DataStructures.Set<TElement>.IntersectionImpl<TOther>(TOther)
  fullName.vb: Langly.DataStructures.Set(Of TElement).IntersectionImpl(Of TOther)(TOther)
  nameWithType: Set<TElement>.IntersectionImpl<TOther>(TOther)
  nameWithType.vb: Set(Of TElement).IntersectionImpl(Of TOther)(TOther)
- uid: Langly.DataStructures.Set`1.Langly#IContains{TElement}#Contains(`0)
  name: IContains<TElement>.Contains(TElement)
  href: api/Langly.DataStructures.Set-1.html#Langly_DataStructures_Set_1_Langly_IContains_TElement__Contains__0_
  commentId: M:Langly.DataStructures.Set`1.Langly#IContains{TElement}#Contains(`0)
  name.vb: Langly.IContains<TElement>.Contains(TElement)
  fullName: Langly.DataStructures.Set<TElement>.Langly.IContains<TElement>.Contains(TElement)
  fullName.vb: Langly.DataStructures.Set(Of TElement).Langly.IContains<TElement>.Contains(TElement)
  nameWithType: Set<TElement>.IContains<TElement>.Contains(TElement)
  nameWithType.vb: Set(Of TElement).Langly.IContains<TElement>.Contains(TElement)
- uid: Langly.DataStructures.Set`1.Langly#IContains{TElement}#Contains*
  name: IContains<TElement>.Contains
  href: api/Langly.DataStructures.Set-1.html#Langly_DataStructures_Set_1_Langly_IContains_TElement__Contains_
  commentId: Overload:Langly.DataStructures.Set`1.Langly#IContains{TElement}#Contains
  isSpec: "True"
  name.vb: Langly.IContains<TElement>.Contains
  fullName: Langly.DataStructures.Set<TElement>.Langly.IContains<TElement>.Contains
  fullName.vb: Langly.DataStructures.Set(Of TElement).Langly.IContains<TElement>.Contains
  nameWithType: Set<TElement>.IContains<TElement>.Contains
  nameWithType.vb: Set(Of TElement).Langly.IContains<TElement>.Contains
- uid: Langly.DataStructures.Set`1.op_BitwiseAnd(Langly.DataStructures.Set{`0},Langly.DataStructures.Set{`0})
  name: BitwiseAnd(Set<TElement>, Set<TElement>)
  href: api/Langly.DataStructures.Set-1.html#Langly_DataStructures_Set_1_op_BitwiseAnd_Langly_DataStructures_Set__0__Langly_DataStructures_Set__0__
  commentId: M:Langly.DataStructures.Set`1.op_BitwiseAnd(Langly.DataStructures.Set{`0},Langly.DataStructures.Set{`0})
  name.vb: BitwiseAnd(Set(Of TElement), Set(Of TElement))
  fullName: Langly.DataStructures.Set<TElement>.BitwiseAnd(Langly.DataStructures.Set<TElement>, Langly.DataStructures.Set<TElement>)
  fullName.vb: Langly.DataStructures.Set(Of TElement).BitwiseAnd(Langly.DataStructures.Set(Of TElement), Langly.DataStructures.Set(Of TElement))
  nameWithType: Set<TElement>.BitwiseAnd(Set<TElement>, Set<TElement>)
  nameWithType.vb: Set(Of TElement).BitwiseAnd(Set(Of TElement), Set(Of TElement))
- uid: Langly.DataStructures.Set`1.op_BitwiseAnd*
  name: BitwiseAnd
  href: api/Langly.DataStructures.Set-1.html#Langly_DataStructures_Set_1_op_BitwiseAnd_
  commentId: Overload:Langly.DataStructures.Set`1.op_BitwiseAnd
  isSpec: "True"
  fullName: Langly.DataStructures.Set<TElement>.BitwiseAnd
  fullName.vb: Langly.DataStructures.Set(Of TElement).BitwiseAnd
  nameWithType: Set<TElement>.BitwiseAnd
  nameWithType.vb: Set(Of TElement).BitwiseAnd
- uid: Langly.DataStructures.Set`1.op_BitwiseOr(Langly.DataStructures.Set{`0},Langly.DataStructures.Set{`0})
  name: BitwiseOr(Set<TElement>, Set<TElement>)
  href: api/Langly.DataStructures.Set-1.html#Langly_DataStructures_Set_1_op_BitwiseOr_Langly_DataStructures_Set__0__Langly_DataStructures_Set__0__
  commentId: M:Langly.DataStructures.Set`1.op_BitwiseOr(Langly.DataStructures.Set{`0},Langly.DataStructures.Set{`0})
  name.vb: BitwiseOr(Set(Of TElement), Set(Of TElement))
  fullName: Langly.DataStructures.Set<TElement>.BitwiseOr(Langly.DataStructures.Set<TElement>, Langly.DataStructures.Set<TElement>)
  fullName.vb: Langly.DataStructures.Set(Of TElement).BitwiseOr(Langly.DataStructures.Set(Of TElement), Langly.DataStructures.Set(Of TElement))
  nameWithType: Set<TElement>.BitwiseOr(Set<TElement>, Set<TElement>)
  nameWithType.vb: Set(Of TElement).BitwiseOr(Set(Of TElement), Set(Of TElement))
- uid: Langly.DataStructures.Set`1.op_BitwiseOr*
  name: BitwiseOr
  href: api/Langly.DataStructures.Set-1.html#Langly_DataStructures_Set_1_op_BitwiseOr_
  commentId: Overload:Langly.DataStructures.Set`1.op_BitwiseOr
  isSpec: "True"
  fullName: Langly.DataStructures.Set<TElement>.BitwiseOr
  fullName.vb: Langly.DataStructures.Set(Of TElement).BitwiseOr
  nameWithType: Set<TElement>.BitwiseOr
  nameWithType.vb: Set(Of TElement).BitwiseOr
- uid: Langly.DataStructures.Set`1.op_ExclusiveOr(Langly.DataStructures.Set{`0},Langly.DataStructures.Set{`0})
  name: ExclusiveOr(Set<TElement>, Set<TElement>)
  href: api/Langly.DataStructures.Set-1.html#Langly_DataStructures_Set_1_op_ExclusiveOr_Langly_DataStructures_Set__0__Langly_DataStructures_Set__0__
  commentId: M:Langly.DataStructures.Set`1.op_ExclusiveOr(Langly.DataStructures.Set{`0},Langly.DataStructures.Set{`0})
  name.vb: ExclusiveOr(Set(Of TElement), Set(Of TElement))
  fullName: Langly.DataStructures.Set<TElement>.ExclusiveOr(Langly.DataStructures.Set<TElement>, Langly.DataStructures.Set<TElement>)
  fullName.vb: Langly.DataStructures.Set(Of TElement).ExclusiveOr(Langly.DataStructures.Set(Of TElement), Langly.DataStructures.Set(Of TElement))
  nameWithType: Set<TElement>.ExclusiveOr(Set<TElement>, Set<TElement>)
  nameWithType.vb: Set(Of TElement).ExclusiveOr(Set(Of TElement), Set(Of TElement))
- uid: Langly.DataStructures.Set`1.op_ExclusiveOr*
  name: ExclusiveOr
  href: api/Langly.DataStructures.Set-1.html#Langly_DataStructures_Set_1_op_ExclusiveOr_
  commentId: Overload:Langly.DataStructures.Set`1.op_ExclusiveOr
  isSpec: "True"
  fullName: Langly.DataStructures.Set<TElement>.ExclusiveOr
  fullName.vb: Langly.DataStructures.Set(Of TElement).ExclusiveOr
  nameWithType: Set<TElement>.ExclusiveOr
  nameWithType.vb: Set(Of TElement).ExclusiveOr
- uid: Langly.DataStructures.Set`1.op_LogicalNot(Langly.DataStructures.Set{`0})
  name: LogicalNot(Set<TElement>)
  href: api/Langly.DataStructures.Set-1.html#Langly_DataStructures_Set_1_op_LogicalNot_Langly_DataStructures_Set__0__
  commentId: M:Langly.DataStructures.Set`1.op_LogicalNot(Langly.DataStructures.Set{`0})
  name.vb: LogicalNot(Set(Of TElement))
  fullName: Langly.DataStructures.Set<TElement>.LogicalNot(Langly.DataStructures.Set<TElement>)
  fullName.vb: Langly.DataStructures.Set(Of TElement).LogicalNot(Langly.DataStructures.Set(Of TElement))
  nameWithType: Set<TElement>.LogicalNot(Set<TElement>)
  nameWithType.vb: Set(Of TElement).LogicalNot(Set(Of TElement))
- uid: Langly.DataStructures.Set`1.op_LogicalNot*
  name: LogicalNot
  href: api/Langly.DataStructures.Set-1.html#Langly_DataStructures_Set_1_op_LogicalNot_
  commentId: Overload:Langly.DataStructures.Set`1.op_LogicalNot
  isSpec: "True"
  fullName: Langly.DataStructures.Set<TElement>.LogicalNot
  fullName.vb: Langly.DataStructures.Set(Of TElement).LogicalNot
  nameWithType: Set<TElement>.LogicalNot
  nameWithType.vb: Set(Of TElement).LogicalNot
- uid: Langly.DataStructures.Set`1.op_Subtraction(Langly.DataStructures.Set{`0},Langly.DataStructures.Set{`0})
  name: Subtraction(Set<TElement>, Set<TElement>)
  href: api/Langly.DataStructures.Set-1.html#Langly_DataStructures_Set_1_op_Subtraction_Langly_DataStructures_Set__0__Langly_DataStructures_Set__0__
  commentId: M:Langly.DataStructures.Set`1.op_Subtraction(Langly.DataStructures.Set{`0},Langly.DataStructures.Set{`0})
  name.vb: Subtraction(Set(Of TElement), Set(Of TElement))
  fullName: Langly.DataStructures.Set<TElement>.Subtraction(Langly.DataStructures.Set<TElement>, Langly.DataStructures.Set<TElement>)
  fullName.vb: Langly.DataStructures.Set(Of TElement).Subtraction(Langly.DataStructures.Set(Of TElement), Langly.DataStructures.Set(Of TElement))
  nameWithType: Set<TElement>.Subtraction(Set<TElement>, Set<TElement>)
  nameWithType.vb: Set(Of TElement).Subtraction(Set(Of TElement), Set(Of TElement))
- uid: Langly.DataStructures.Set`1.op_Subtraction*
  name: Subtraction
  href: api/Langly.DataStructures.Set-1.html#Langly_DataStructures_Set_1_op_Subtraction_
  commentId: Overload:Langly.DataStructures.Set`1.op_Subtraction
  isSpec: "True"
  fullName: Langly.DataStructures.Set<TElement>.Subtraction
  fullName.vb: Langly.DataStructures.Set(Of TElement).Subtraction
  nameWithType: Set<TElement>.Subtraction
  nameWithType.vb: Set(Of TElement).Subtraction
- uid: Langly.DataStructures.Set`1.UnionImpl*
  name: UnionImpl
  href: api/Langly.DataStructures.Set-1.html#Langly_DataStructures_Set_1_UnionImpl_
  commentId: Overload:Langly.DataStructures.Set`1.UnionImpl
  isSpec: "True"
  fullName: Langly.DataStructures.Set<TElement>.UnionImpl
  fullName.vb: Langly.DataStructures.Set(Of TElement).UnionImpl
  nameWithType: Set<TElement>.UnionImpl
  nameWithType.vb: Set(Of TElement).UnionImpl
- uid: Langly.DataStructures.Set`1.UnionImpl``1(``0)
  name: UnionImpl<TOther>(TOther)
  href: api/Langly.DataStructures.Set-1.html#Langly_DataStructures_Set_1_UnionImpl__1___0_
  commentId: M:Langly.DataStructures.Set`1.UnionImpl``1(``0)
  name.vb: UnionImpl(Of TOther)(TOther)
  fullName: Langly.DataStructures.Set<TElement>.UnionImpl<TOther>(TOther)
  fullName.vb: Langly.DataStructures.Set(Of TElement).UnionImpl(Of TOther)(TOther)
  nameWithType: Set<TElement>.UnionImpl<TOther>(TOther)
  nameWithType.vb: Set(Of TElement).UnionImpl(Of TOther)(TOther)
- uid: Langly.DataStructures.Set`1.Universe
  name: Universe
  href: api/Langly.DataStructures.Set-1.html#Langly_DataStructures_Set_1_Universe
  commentId: P:Langly.DataStructures.Set`1.Universe
  fullName: Langly.DataStructures.Set<TElement>.Universe
  fullName.vb: Langly.DataStructures.Set(Of TElement).Universe
  nameWithType: Set<TElement>.Universe
  nameWithType.vb: Set(Of TElement).Universe
- uid: Langly.DataStructures.Set`1.Universe*
  name: Universe
  href: api/Langly.DataStructures.Set-1.html#Langly_DataStructures_Set_1_Universe_
  commentId: Overload:Langly.DataStructures.Set`1.Universe
  isSpec: "True"
  fullName: Langly.DataStructures.Set<TElement>.Universe
  fullName.vb: Langly.DataStructures.Set(Of TElement).Universe
  nameWithType: Set<TElement>.Universe
  nameWithType.vb: Set(Of TElement).Universe
- uid: Langly.DataStructures.Stack`1
  name: Stack<TElement>
  href: api/Langly.DataStructures.Stack-1.html
  commentId: T:Langly.DataStructures.Stack`1
  name.vb: Stack(Of TElement)
  fullName: Langly.DataStructures.Stack<TElement>
  fullName.vb: Langly.DataStructures.Stack(Of TElement)
  nameWithType: Stack<TElement>
  nameWithType.vb: Stack(Of TElement)
- uid: Langly.DataStructures.Stack`1.#ctor
  name: Stack()
  href: api/Langly.DataStructures.Stack-1.html#Langly_DataStructures_Stack_1__ctor
  commentId: M:Langly.DataStructures.Stack`1.#ctor
  fullName: Langly.DataStructures.Stack<TElement>.Stack()
  fullName.vb: Langly.DataStructures.Stack(Of TElement).Stack()
  nameWithType: Stack<TElement>.Stack()
  nameWithType.vb: Stack(Of TElement).Stack()
- uid: Langly.DataStructures.Stack`1.#ctor*
  name: Stack
  href: api/Langly.DataStructures.Stack-1.html#Langly_DataStructures_Stack_1__ctor_
  commentId: Overload:Langly.DataStructures.Stack`1.#ctor
  isSpec: "True"
  fullName: Langly.DataStructures.Stack<TElement>.Stack
  fullName.vb: Langly.DataStructures.Stack(Of TElement).Stack
  nameWithType: Stack<TElement>.Stack
  nameWithType.vb: Stack(Of TElement).Stack
- uid: Langly.DataStructures.Stack`1.Enumerator
  name: Stack<TElement>.Enumerator
  href: api/Langly.DataStructures.Stack-1.Enumerator.html
  commentId: T:Langly.DataStructures.Stack`1.Enumerator
  name.vb: Stack(Of TElement).Enumerator
  fullName: Langly.DataStructures.Stack<TElement>.Enumerator
  fullName.vb: Langly.DataStructures.Stack(Of TElement).Enumerator
  nameWithType: Stack<TElement>.Enumerator
  nameWithType.vb: Stack(Of TElement).Enumerator
- uid: Langly.DataStructures.Stack`1.Enumerator.#ctor(Langly.DataStructures.Stack{`0})
  name: Enumerator(Stack<TElement>)
  href: api/Langly.DataStructures.Stack-1.Enumerator.html#Langly_DataStructures_Stack_1_Enumerator__ctor_Langly_DataStructures_Stack__0__
  commentId: M:Langly.DataStructures.Stack`1.Enumerator.#ctor(Langly.DataStructures.Stack{`0})
  name.vb: Enumerator(Stack(Of TElement))
  fullName: Langly.DataStructures.Stack<TElement>.Enumerator.Enumerator(Langly.DataStructures.Stack<TElement>)
  fullName.vb: Langly.DataStructures.Stack(Of TElement).Enumerator.Enumerator(Langly.DataStructures.Stack(Of TElement))
  nameWithType: Stack<TElement>.Enumerator.Enumerator(Stack<TElement>)
  nameWithType.vb: Stack(Of TElement).Enumerator.Enumerator(Stack(Of TElement))
- uid: Langly.DataStructures.Stack`1.Enumerator.#ctor*
  name: Enumerator
  href: api/Langly.DataStructures.Stack-1.Enumerator.html#Langly_DataStructures_Stack_1_Enumerator__ctor_
  commentId: Overload:Langly.DataStructures.Stack`1.Enumerator.#ctor
  isSpec: "True"
  fullName: Langly.DataStructures.Stack<TElement>.Enumerator.Enumerator
  fullName.vb: Langly.DataStructures.Stack(Of TElement).Enumerator.Enumerator
  nameWithType: Stack<TElement>.Enumerator.Enumerator
  nameWithType.vb: Stack(Of TElement).Enumerator.Enumerator
- uid: Langly.DataStructures.Stack`1.Enumerator.Count
  name: Count
  href: api/Langly.DataStructures.Stack-1.Enumerator.html#Langly_DataStructures_Stack_1_Enumerator_Count
  commentId: P:Langly.DataStructures.Stack`1.Enumerator.Count
  fullName: Langly.DataStructures.Stack<TElement>.Enumerator.Count
  fullName.vb: Langly.DataStructures.Stack(Of TElement).Enumerator.Count
  nameWithType: Stack<TElement>.Enumerator.Count
  nameWithType.vb: Stack(Of TElement).Enumerator.Count
- uid: Langly.DataStructures.Stack`1.Enumerator.Count*
  name: Count
  href: api/Langly.DataStructures.Stack-1.Enumerator.html#Langly_DataStructures_Stack_1_Enumerator_Count_
  commentId: Overload:Langly.DataStructures.Stack`1.Enumerator.Count
  isSpec: "True"
  fullName: Langly.DataStructures.Stack<TElement>.Enumerator.Count
  fullName.vb: Langly.DataStructures.Stack(Of TElement).Enumerator.Count
  nameWithType: Stack<TElement>.Enumerator.Count
  nameWithType.vb: Stack(Of TElement).Enumerator.Count
- uid: Langly.DataStructures.Stack`1.Enumerator.Current
  name: Current
  href: api/Langly.DataStructures.Stack-1.Enumerator.html#Langly_DataStructures_Stack_1_Enumerator_Current
  commentId: P:Langly.DataStructures.Stack`1.Enumerator.Current
  fullName: Langly.DataStructures.Stack<TElement>.Enumerator.Current
  fullName.vb: Langly.DataStructures.Stack(Of TElement).Enumerator.Current
  nameWithType: Stack<TElement>.Enumerator.Current
  nameWithType.vb: Stack(Of TElement).Enumerator.Current
- uid: Langly.DataStructures.Stack`1.Enumerator.Current*
  name: Current
  href: api/Langly.DataStructures.Stack-1.Enumerator.html#Langly_DataStructures_Stack_1_Enumerator_Current_
  commentId: Overload:Langly.DataStructures.Stack`1.Enumerator.Current
  isSpec: "True"
  fullName: Langly.DataStructures.Stack<TElement>.Enumerator.Current
  fullName.vb: Langly.DataStructures.Stack(Of TElement).Enumerator.Current
  nameWithType: Stack<TElement>.Enumerator.Current
  nameWithType.vb: Stack(Of TElement).Enumerator.Current
- uid: Langly.DataStructures.Stack`1.Enumerator.MoveNext
  name: MoveNext()
  href: api/Langly.DataStructures.Stack-1.Enumerator.html#Langly_DataStructures_Stack_1_Enumerator_MoveNext
  commentId: M:Langly.DataStructures.Stack`1.Enumerator.MoveNext
  fullName: Langly.DataStructures.Stack<TElement>.Enumerator.MoveNext()
  fullName.vb: Langly.DataStructures.Stack(Of TElement).Enumerator.MoveNext()
  nameWithType: Stack<TElement>.Enumerator.MoveNext()
  nameWithType.vb: Stack(Of TElement).Enumerator.MoveNext()
- uid: Langly.DataStructures.Stack`1.Enumerator.MoveNext*
  name: MoveNext
  href: api/Langly.DataStructures.Stack-1.Enumerator.html#Langly_DataStructures_Stack_1_Enumerator_MoveNext_
  commentId: Overload:Langly.DataStructures.Stack`1.Enumerator.MoveNext
  isSpec: "True"
  fullName: Langly.DataStructures.Stack<TElement>.Enumerator.MoveNext
  fullName.vb: Langly.DataStructures.Stack(Of TElement).Enumerator.MoveNext
  nameWithType: Stack<TElement>.Enumerator.MoveNext
  nameWithType.vb: Stack(Of TElement).Enumerator.MoveNext
- uid: Langly.DataStructures.Stack`1.Enumerator.Reset
  name: Reset()
  href: api/Langly.DataStructures.Stack-1.Enumerator.html#Langly_DataStructures_Stack_1_Enumerator_Reset
  commentId: M:Langly.DataStructures.Stack`1.Enumerator.Reset
  fullName: Langly.DataStructures.Stack<TElement>.Enumerator.Reset()
  fullName.vb: Langly.DataStructures.Stack(Of TElement).Enumerator.Reset()
  nameWithType: Stack<TElement>.Enumerator.Reset()
  nameWithType.vb: Stack(Of TElement).Enumerator.Reset()
- uid: Langly.DataStructures.Stack`1.Enumerator.Reset*
  name: Reset
  href: api/Langly.DataStructures.Stack-1.Enumerator.html#Langly_DataStructures_Stack_1_Enumerator_Reset_
  commentId: Overload:Langly.DataStructures.Stack`1.Enumerator.Reset
  isSpec: "True"
  fullName: Langly.DataStructures.Stack<TElement>.Enumerator.Reset
  fullName.vb: Langly.DataStructures.Stack(Of TElement).Enumerator.Reset
  nameWithType: Stack<TElement>.Enumerator.Reset
  nameWithType.vb: Stack(Of TElement).Enumerator.Reset
- uid: Langly.DataStructures.Stack`1.GetEnumerator
  name: GetEnumerator()
  href: api/Langly.DataStructures.Stack-1.html#Langly_DataStructures_Stack_1_GetEnumerator
  commentId: M:Langly.DataStructures.Stack`1.GetEnumerator
  fullName: Langly.DataStructures.Stack<TElement>.GetEnumerator()
  fullName.vb: Langly.DataStructures.Stack(Of TElement).GetEnumerator()
  nameWithType: Stack<TElement>.GetEnumerator()
  nameWithType.vb: Stack(Of TElement).GetEnumerator()
- uid: Langly.DataStructures.Stack`1.GetEnumerator*
  name: GetEnumerator
  href: api/Langly.DataStructures.Stack-1.html#Langly_DataStructures_Stack_1_GetEnumerator_
  commentId: Overload:Langly.DataStructures.Stack`1.GetEnumerator
  isSpec: "True"
  fullName: Langly.DataStructures.Stack<TElement>.GetEnumerator
  fullName.vb: Langly.DataStructures.Stack(Of TElement).GetEnumerator
  nameWithType: Stack<TElement>.GetEnumerator
  nameWithType.vb: Stack(Of TElement).GetEnumerator
- uid: Langly.DataStructures.Stack`1.Langly#IPeek{TElement,Langly#DataStructures#Stack{TElement}}#Peek(`0@)
  name: IPeek<TElement, Stack<TElement>>.Peek(out TElement)
  href: api/Langly.DataStructures.Stack-1.html#Langly_DataStructures_Stack_1_Langly_IPeek_TElement_Langly_DataStructures_Stack_TElement___Peek__0__
  commentId: M:Langly.DataStructures.Stack`1.Langly#IPeek{TElement,Langly#DataStructures#Stack{TElement}}#Peek(`0@)
  name.vb: Langly.IPeek<TElement,Langly.DataStructures.Stack<TElement>>.Peek(ByRef TElement)
  fullName: Langly.DataStructures.Stack<TElement>.Langly.IPeek<TElement, Langly.DataStructures.Stack<TElement>>.Peek(out TElement)
  fullName.vb: Langly.DataStructures.Stack(Of TElement).Langly.IPeek<TElement,Langly.DataStructures.Stack<TElement>>.Peek(ByRef TElement)
  nameWithType: Stack<TElement>.IPeek<TElement, Stack<TElement>>.Peek(out TElement)
  nameWithType.vb: Stack(Of TElement).Langly.IPeek<TElement,Langly.DataStructures.Stack<TElement>>.Peek(ByRef TElement)
- uid: Langly.DataStructures.Stack`1.Langly#IPeek{TElement,Langly#DataStructures#Stack{TElement}}#Peek*
  name: IPeek<TElement, Stack<TElement>>.Peek
  href: api/Langly.DataStructures.Stack-1.html#Langly_DataStructures_Stack_1_Langly_IPeek_TElement_Langly_DataStructures_Stack_TElement___Peek_
  commentId: Overload:Langly.DataStructures.Stack`1.Langly#IPeek{TElement,Langly#DataStructures#Stack{TElement}}#Peek
  isSpec: "True"
  name.vb: Langly.IPeek<TElement,Langly.DataStructures.Stack<TElement>>.Peek
  fullName: Langly.DataStructures.Stack<TElement>.Langly.IPeek<TElement, Langly.DataStructures.Stack<TElement>>.Peek
  fullName.vb: Langly.DataStructures.Stack(Of TElement).Langly.IPeek<TElement,Langly.DataStructures.Stack<TElement>>.Peek
  nameWithType: Stack<TElement>.IPeek<TElement, Stack<TElement>>.Peek
  nameWithType.vb: Stack(Of TElement).Langly.IPeek<TElement,Langly.DataStructures.Stack<TElement>>.Peek
- uid: Langly.DataStructures.Stack`1.Langly#IPop{TElement,Langly#DataStructures#Stack{TElement}}#Pop(`0@)
  name: IPop<TElement, Stack<TElement>>.Pop(out TElement)
  href: api/Langly.DataStructures.Stack-1.html#Langly_DataStructures_Stack_1_Langly_IPop_TElement_Langly_DataStructures_Stack_TElement___Pop__0__
  commentId: M:Langly.DataStructures.Stack`1.Langly#IPop{TElement,Langly#DataStructures#Stack{TElement}}#Pop(`0@)
  name.vb: Langly.IPop<TElement,Langly.DataStructures.Stack<TElement>>.Pop(ByRef TElement)
  fullName: Langly.DataStructures.Stack<TElement>.Langly.IPop<TElement, Langly.DataStructures.Stack<TElement>>.Pop(out TElement)
  fullName.vb: Langly.DataStructures.Stack(Of TElement).Langly.IPop<TElement,Langly.DataStructures.Stack<TElement>>.Pop(ByRef TElement)
  nameWithType: Stack<TElement>.IPop<TElement, Stack<TElement>>.Pop(out TElement)
  nameWithType.vb: Stack(Of TElement).Langly.IPop<TElement,Langly.DataStructures.Stack<TElement>>.Pop(ByRef TElement)
- uid: Langly.DataStructures.Stack`1.Langly#IPop{TElement,Langly#DataStructures#Stack{TElement}}#Pop*
  name: IPop<TElement, Stack<TElement>>.Pop
  href: api/Langly.DataStructures.Stack-1.html#Langly_DataStructures_Stack_1_Langly_IPop_TElement_Langly_DataStructures_Stack_TElement___Pop_
  commentId: Overload:Langly.DataStructures.Stack`1.Langly#IPop{TElement,Langly#DataStructures#Stack{TElement}}#Pop
  isSpec: "True"
  name.vb: Langly.IPop<TElement,Langly.DataStructures.Stack<TElement>>.Pop
  fullName: Langly.DataStructures.Stack<TElement>.Langly.IPop<TElement, Langly.DataStructures.Stack<TElement>>.Pop
  fullName.vb: Langly.DataStructures.Stack(Of TElement).Langly.IPop<TElement,Langly.DataStructures.Stack<TElement>>.Pop
  nameWithType: Stack<TElement>.IPop<TElement, Stack<TElement>>.Pop
  nameWithType.vb: Stack(Of TElement).Langly.IPop<TElement,Langly.DataStructures.Stack<TElement>>.Pop
- uid: Langly.DataStructures.Stack`1.Langly#IPush{TElement,Langly#DataStructures#Stack{TElement}}#Push(`0)
  name: IPush<TElement, Stack<TElement>>.Push(TElement)
  href: api/Langly.DataStructures.Stack-1.html#Langly_DataStructures_Stack_1_Langly_IPush_TElement_Langly_DataStructures_Stack_TElement___Push__0_
  commentId: M:Langly.DataStructures.Stack`1.Langly#IPush{TElement,Langly#DataStructures#Stack{TElement}}#Push(`0)
  name.vb: Langly.IPush<TElement,Langly.DataStructures.Stack<TElement>>.Push(TElement)
  fullName: Langly.DataStructures.Stack<TElement>.Langly.IPush<TElement, Langly.DataStructures.Stack<TElement>>.Push(TElement)
  fullName.vb: Langly.DataStructures.Stack(Of TElement).Langly.IPush<TElement,Langly.DataStructures.Stack<TElement>>.Push(TElement)
  nameWithType: Stack<TElement>.IPush<TElement, Stack<TElement>>.Push(TElement)
  nameWithType.vb: Stack(Of TElement).Langly.IPush<TElement,Langly.DataStructures.Stack<TElement>>.Push(TElement)
- uid: Langly.DataStructures.Stack`1.Langly#IPush{TElement,Langly#DataStructures#Stack{TElement}}#Push*
  name: IPush<TElement, Stack<TElement>>.Push
  href: api/Langly.DataStructures.Stack-1.html#Langly_DataStructures_Stack_1_Langly_IPush_TElement_Langly_DataStructures_Stack_TElement___Push_
  commentId: Overload:Langly.DataStructures.Stack`1.Langly#IPush{TElement,Langly#DataStructures#Stack{TElement}}#Push
  isSpec: "True"
  name.vb: Langly.IPush<TElement,Langly.DataStructures.Stack<TElement>>.Push
  fullName: Langly.DataStructures.Stack<TElement>.Langly.IPush<TElement, Langly.DataStructures.Stack<TElement>>.Push
  fullName.vb: Langly.DataStructures.Stack(Of TElement).Langly.IPush<TElement,Langly.DataStructures.Stack<TElement>>.Push
  nameWithType: Stack<TElement>.IPush<TElement, Stack<TElement>>.Push
  nameWithType.vb: Stack(Of TElement).Langly.IPush<TElement,Langly.DataStructures.Stack<TElement>>.Push
- uid: Langly.DataStructures.Stack`1.Node
  name: Stack<TElement>.Node
  href: api/Langly.DataStructures.Stack-1.Node.html
  commentId: T:Langly.DataStructures.Stack`1.Node
  name.vb: Stack(Of TElement).Node
  fullName: Langly.DataStructures.Stack<TElement>.Node
  fullName.vb: Langly.DataStructures.Stack(Of TElement).Node
  nameWithType: Stack<TElement>.Node
  nameWithType.vb: Stack(Of TElement).Node
- uid: Langly.DataStructures.Stack`1.Node.#ctor(`0,Langly.DataStructures.Stack{`0}.Node)
  name: Node(TElement, Stack<TElement>.Node)
  href: api/Langly.DataStructures.Stack-1.Node.html#Langly_DataStructures_Stack_1_Node__ctor__0_Langly_DataStructures_Stack__0__Node_
  commentId: M:Langly.DataStructures.Stack`1.Node.#ctor(`0,Langly.DataStructures.Stack{`0}.Node)
  name.vb: Node(TElement, Stack(Of TElement).Node)
  fullName: Langly.DataStructures.Stack<TElement>.Node.Node(TElement, Langly.DataStructures.Stack<TElement>.Node)
  fullName.vb: Langly.DataStructures.Stack(Of TElement).Node.Node(TElement, Langly.DataStructures.Stack(Of TElement).Node)
  nameWithType: Stack<TElement>.Node.Node(TElement, Stack<TElement>.Node)
  nameWithType.vb: Stack(Of TElement).Node.Node(TElement, Stack(Of TElement).Node)
- uid: Langly.DataStructures.Stack`1.Node.#ctor*
  name: Node
  href: api/Langly.DataStructures.Stack-1.Node.html#Langly_DataStructures_Stack_1_Node__ctor_
  commentId: Overload:Langly.DataStructures.Stack`1.Node.#ctor
  isSpec: "True"
  fullName: Langly.DataStructures.Stack<TElement>.Node.Node
  fullName.vb: Langly.DataStructures.Stack(Of TElement).Node.Node
  nameWithType: Stack<TElement>.Node.Node
  nameWithType.vb: Stack(Of TElement).Node.Node
- uid: Langly.DataStructures.Stack`1.Node.Element
  name: Element
  href: api/Langly.DataStructures.Stack-1.Node.html#Langly_DataStructures_Stack_1_Node_Element
  commentId: F:Langly.DataStructures.Stack`1.Node.Element
  fullName: Langly.DataStructures.Stack<TElement>.Node.Element
  fullName.vb: Langly.DataStructures.Stack(Of TElement).Node.Element
  nameWithType: Stack<TElement>.Node.Element
  nameWithType.vb: Stack(Of TElement).Node.Element
- uid: Langly.DataStructures.Stack`1.Node.Equals(Langly.DataStructures.Stack{`0}.Node)
  name: Equals(Stack<TElement>.Node)
  href: api/Langly.DataStructures.Stack-1.Node.html#Langly_DataStructures_Stack_1_Node_Equals_Langly_DataStructures_Stack__0__Node_
  commentId: M:Langly.DataStructures.Stack`1.Node.Equals(Langly.DataStructures.Stack{`0}.Node)
  name.vb: Equals(Stack(Of TElement).Node)
  fullName: Langly.DataStructures.Stack<TElement>.Node.Equals(Langly.DataStructures.Stack<TElement>.Node)
  fullName.vb: Langly.DataStructures.Stack(Of TElement).Node.Equals(Langly.DataStructures.Stack(Of TElement).Node)
  nameWithType: Stack<TElement>.Node.Equals(Stack<TElement>.Node)
  nameWithType.vb: Stack(Of TElement).Node.Equals(Stack(Of TElement).Node)
- uid: Langly.DataStructures.Stack`1.Node.Equals*
  name: Equals
  href: api/Langly.DataStructures.Stack-1.Node.html#Langly_DataStructures_Stack_1_Node_Equals_
  commentId: Overload:Langly.DataStructures.Stack`1.Node.Equals
  isSpec: "True"
  fullName: Langly.DataStructures.Stack<TElement>.Node.Equals
  fullName.vb: Langly.DataStructures.Stack(Of TElement).Node.Equals
  nameWithType: Stack<TElement>.Node.Equals
  nameWithType.vb: Stack(Of TElement).Node.Equals
- uid: Langly.DataStructures.Stack`1.Node.Next
  name: Next
  href: api/Langly.DataStructures.Stack-1.Node.html#Langly_DataStructures_Stack_1_Node_Next
  commentId: F:Langly.DataStructures.Stack`1.Node.Next
  fullName: Langly.DataStructures.Stack<TElement>.Node.Next
  fullName.vb: Langly.DataStructures.Stack(Of TElement).Node.Next
  nameWithType: Stack<TElement>.Node.Next
  nameWithType.vb: Stack(Of TElement).Node.Next
- uid: Langly.DataStructures.Stack`1.Node.ToString
  name: ToString()
  href: api/Langly.DataStructures.Stack-1.Node.html#Langly_DataStructures_Stack_1_Node_ToString
  commentId: M:Langly.DataStructures.Stack`1.Node.ToString
  fullName: Langly.DataStructures.Stack<TElement>.Node.ToString()
  fullName.vb: Langly.DataStructures.Stack(Of TElement).Node.ToString()
  nameWithType: Stack<TElement>.Node.ToString()
  nameWithType.vb: Stack(Of TElement).Node.ToString()
- uid: Langly.DataStructures.Stack`1.Node.ToString*
  name: ToString
  href: api/Langly.DataStructures.Stack-1.Node.html#Langly_DataStructures_Stack_1_Node_ToString_
  commentId: Overload:Langly.DataStructures.Stack`1.Node.ToString
  isSpec: "True"
  fullName: Langly.DataStructures.Stack<TElement>.Node.ToString
  fullName.vb: Langly.DataStructures.Stack(Of TElement).Node.ToString
  nameWithType: Stack<TElement>.Node.ToString
  nameWithType.vb: Stack(Of TElement).Node.ToString
- uid: Langly.DataStructures.Views
  name: Langly.DataStructures.Views
  href: api/Langly.DataStructures.Views.html
  commentId: N:Langly.DataStructures.Views
  fullName: Langly.DataStructures.Views
  nameWithType: Langly.DataStructures.Views
- uid: Langly.DataStructures.Views.ReverseView`3
  name: ReverseView<TElement, TCollection, TEnumerator>
  href: api/Langly.DataStructures.Views.ReverseView-3.html
  commentId: T:Langly.DataStructures.Views.ReverseView`3
  name.vb: ReverseView(Of TElement, TCollection, TEnumerator)
  fullName: Langly.DataStructures.Views.ReverseView<TElement, TCollection, TEnumerator>
  fullName.vb: Langly.DataStructures.Views.ReverseView(Of TElement, TCollection, TEnumerator)
  nameWithType: ReverseView<TElement, TCollection, TEnumerator>
  nameWithType.vb: ReverseView(Of TElement, TCollection, TEnumerator)
- uid: Langly.DataStructures.Views.ReverseView`3.#ctor(`1)
  name: ReverseView(TCollection)
  href: api/Langly.DataStructures.Views.ReverseView-3.html#Langly_DataStructures_Views_ReverseView_3__ctor__1_
  commentId: M:Langly.DataStructures.Views.ReverseView`3.#ctor(`1)
  fullName: Langly.DataStructures.Views.ReverseView<TElement, TCollection, TEnumerator>.ReverseView(TCollection)
  fullName.vb: Langly.DataStructures.Views.ReverseView(Of TElement, TCollection, TEnumerator).ReverseView(TCollection)
  nameWithType: ReverseView<TElement, TCollection, TEnumerator>.ReverseView(TCollection)
  nameWithType.vb: ReverseView(Of TElement, TCollection, TEnumerator).ReverseView(TCollection)
- uid: Langly.DataStructures.Views.ReverseView`3.#ctor*
  name: ReverseView
  href: api/Langly.DataStructures.Views.ReverseView-3.html#Langly_DataStructures_Views_ReverseView_3__ctor_
  commentId: Overload:Langly.DataStructures.Views.ReverseView`3.#ctor
  isSpec: "True"
  fullName: Langly.DataStructures.Views.ReverseView<TElement, TCollection, TEnumerator>.ReverseView
  fullName.vb: Langly.DataStructures.Views.ReverseView(Of TElement, TCollection, TEnumerator).ReverseView
  nameWithType: ReverseView<TElement, TCollection, TEnumerator>.ReverseView
  nameWithType.vb: ReverseView(Of TElement, TCollection, TEnumerator).ReverseView
- uid: Langly.DataStructures.Views.ReverseView`3.Count
  name: Count
  href: api/Langly.DataStructures.Views.ReverseView-3.html#Langly_DataStructures_Views_ReverseView_3_Count
  commentId: P:Langly.DataStructures.Views.ReverseView`3.Count
  fullName: Langly.DataStructures.Views.ReverseView<TElement, TCollection, TEnumerator>.Count
  fullName.vb: Langly.DataStructures.Views.ReverseView(Of TElement, TCollection, TEnumerator).Count
  nameWithType: ReverseView<TElement, TCollection, TEnumerator>.Count
  nameWithType.vb: ReverseView(Of TElement, TCollection, TEnumerator).Count
- uid: Langly.DataStructures.Views.ReverseView`3.Count*
  name: Count
  href: api/Langly.DataStructures.Views.ReverseView-3.html#Langly_DataStructures_Views_ReverseView_3_Count_
  commentId: Overload:Langly.DataStructures.Views.ReverseView`3.Count
  isSpec: "True"
  fullName: Langly.DataStructures.Views.ReverseView<TElement, TCollection, TEnumerator>.Count
  fullName.vb: Langly.DataStructures.Views.ReverseView(Of TElement, TCollection, TEnumerator).Count
  nameWithType: ReverseView<TElement, TCollection, TEnumerator>.Count
  nameWithType.vb: ReverseView(Of TElement, TCollection, TEnumerator).Count
- uid: Langly.DataStructures.Views.ReverseView`3.Enumerator
  name: ReverseView<TElement, TCollection, TEnumerator>.Enumerator
  href: api/Langly.DataStructures.Views.ReverseView-3.Enumerator.html
  commentId: T:Langly.DataStructures.Views.ReverseView`3.Enumerator
  name.vb: ReverseView(Of TElement, TCollection, TEnumerator).Enumerator
  fullName: Langly.DataStructures.Views.ReverseView<TElement, TCollection, TEnumerator>.Enumerator
  fullName.vb: Langly.DataStructures.Views.ReverseView(Of TElement, TCollection, TEnumerator).Enumerator
  nameWithType: ReverseView<TElement, TCollection, TEnumerator>.Enumerator
  nameWithType.vb: ReverseView(Of TElement, TCollection, TEnumerator).Enumerator
- uid: Langly.DataStructures.Views.ReverseView`3.Enumerator.#ctor(`1)
  name: Enumerator(TCollection)
  href: api/Langly.DataStructures.Views.ReverseView-3.Enumerator.html#Langly_DataStructures_Views_ReverseView_3_Enumerator__ctor__1_
  commentId: M:Langly.DataStructures.Views.ReverseView`3.Enumerator.#ctor(`1)
  fullName: Langly.DataStructures.Views.ReverseView<TElement, TCollection, TEnumerator>.Enumerator.Enumerator(TCollection)
  fullName.vb: Langly.DataStructures.Views.ReverseView(Of TElement, TCollection, TEnumerator).Enumerator.Enumerator(TCollection)
  nameWithType: ReverseView<TElement, TCollection, TEnumerator>.Enumerator.Enumerator(TCollection)
  nameWithType.vb: ReverseView(Of TElement, TCollection, TEnumerator).Enumerator.Enumerator(TCollection)
- uid: Langly.DataStructures.Views.ReverseView`3.Enumerator.#ctor*
  name: Enumerator
  href: api/Langly.DataStructures.Views.ReverseView-3.Enumerator.html#Langly_DataStructures_Views_ReverseView_3_Enumerator__ctor_
  commentId: Overload:Langly.DataStructures.Views.ReverseView`3.Enumerator.#ctor
  isSpec: "True"
  fullName: Langly.DataStructures.Views.ReverseView<TElement, TCollection, TEnumerator>.Enumerator.Enumerator
  fullName.vb: Langly.DataStructures.Views.ReverseView(Of TElement, TCollection, TEnumerator).Enumerator.Enumerator
  nameWithType: ReverseView<TElement, TCollection, TEnumerator>.Enumerator.Enumerator
  nameWithType.vb: ReverseView(Of TElement, TCollection, TEnumerator).Enumerator.Enumerator
- uid: Langly.DataStructures.Views.ReverseView`3.Enumerator.Count
  name: Count
  href: api/Langly.DataStructures.Views.ReverseView-3.Enumerator.html#Langly_DataStructures_Views_ReverseView_3_Enumerator_Count
  commentId: P:Langly.DataStructures.Views.ReverseView`3.Enumerator.Count
  fullName: Langly.DataStructures.Views.ReverseView<TElement, TCollection, TEnumerator>.Enumerator.Count
  fullName.vb: Langly.DataStructures.Views.ReverseView(Of TElement, TCollection, TEnumerator).Enumerator.Count
  nameWithType: ReverseView<TElement, TCollection, TEnumerator>.Enumerator.Count
  nameWithType.vb: ReverseView(Of TElement, TCollection, TEnumerator).Enumerator.Count
- uid: Langly.DataStructures.Views.ReverseView`3.Enumerator.Count*
  name: Count
  href: api/Langly.DataStructures.Views.ReverseView-3.Enumerator.html#Langly_DataStructures_Views_ReverseView_3_Enumerator_Count_
  commentId: Overload:Langly.DataStructures.Views.ReverseView`3.Enumerator.Count
  isSpec: "True"
  fullName: Langly.DataStructures.Views.ReverseView<TElement, TCollection, TEnumerator>.Enumerator.Count
  fullName.vb: Langly.DataStructures.Views.ReverseView(Of TElement, TCollection, TEnumerator).Enumerator.Count
  nameWithType: ReverseView<TElement, TCollection, TEnumerator>.Enumerator.Count
  nameWithType.vb: ReverseView(Of TElement, TCollection, TEnumerator).Enumerator.Count
- uid: Langly.DataStructures.Views.ReverseView`3.Enumerator.Current
  name: Current
  href: api/Langly.DataStructures.Views.ReverseView-3.Enumerator.html#Langly_DataStructures_Views_ReverseView_3_Enumerator_Current
  commentId: P:Langly.DataStructures.Views.ReverseView`3.Enumerator.Current
  fullName: Langly.DataStructures.Views.ReverseView<TElement, TCollection, TEnumerator>.Enumerator.Current
  fullName.vb: Langly.DataStructures.Views.ReverseView(Of TElement, TCollection, TEnumerator).Enumerator.Current
  nameWithType: ReverseView<TElement, TCollection, TEnumerator>.Enumerator.Current
  nameWithType.vb: ReverseView(Of TElement, TCollection, TEnumerator).Enumerator.Current
- uid: Langly.DataStructures.Views.ReverseView`3.Enumerator.Current*
  name: Current
  href: api/Langly.DataStructures.Views.ReverseView-3.Enumerator.html#Langly_DataStructures_Views_ReverseView_3_Enumerator_Current_
  commentId: Overload:Langly.DataStructures.Views.ReverseView`3.Enumerator.Current
  isSpec: "True"
  fullName: Langly.DataStructures.Views.ReverseView<TElement, TCollection, TEnumerator>.Enumerator.Current
  fullName.vb: Langly.DataStructures.Views.ReverseView(Of TElement, TCollection, TEnumerator).Enumerator.Current
  nameWithType: ReverseView<TElement, TCollection, TEnumerator>.Enumerator.Current
  nameWithType.vb: ReverseView(Of TElement, TCollection, TEnumerator).Enumerator.Current
- uid: Langly.DataStructures.Views.ReverseView`3.Enumerator.MoveNext
  name: MoveNext()
  href: api/Langly.DataStructures.Views.ReverseView-3.Enumerator.html#Langly_DataStructures_Views_ReverseView_3_Enumerator_MoveNext
  commentId: M:Langly.DataStructures.Views.ReverseView`3.Enumerator.MoveNext
  fullName: Langly.DataStructures.Views.ReverseView<TElement, TCollection, TEnumerator>.Enumerator.MoveNext()
  fullName.vb: Langly.DataStructures.Views.ReverseView(Of TElement, TCollection, TEnumerator).Enumerator.MoveNext()
  nameWithType: ReverseView<TElement, TCollection, TEnumerator>.Enumerator.MoveNext()
  nameWithType.vb: ReverseView(Of TElement, TCollection, TEnumerator).Enumerator.MoveNext()
- uid: Langly.DataStructures.Views.ReverseView`3.Enumerator.MoveNext*
  name: MoveNext
  href: api/Langly.DataStructures.Views.ReverseView-3.Enumerator.html#Langly_DataStructures_Views_ReverseView_3_Enumerator_MoveNext_
  commentId: Overload:Langly.DataStructures.Views.ReverseView`3.Enumerator.MoveNext
  isSpec: "True"
  fullName: Langly.DataStructures.Views.ReverseView<TElement, TCollection, TEnumerator>.Enumerator.MoveNext
  fullName.vb: Langly.DataStructures.Views.ReverseView(Of TElement, TCollection, TEnumerator).Enumerator.MoveNext
  nameWithType: ReverseView<TElement, TCollection, TEnumerator>.Enumerator.MoveNext
  nameWithType.vb: ReverseView(Of TElement, TCollection, TEnumerator).Enumerator.MoveNext
- uid: Langly.DataStructures.Views.ReverseView`3.Enumerator.Reset
  name: Reset()
  href: api/Langly.DataStructures.Views.ReverseView-3.Enumerator.html#Langly_DataStructures_Views_ReverseView_3_Enumerator_Reset
  commentId: M:Langly.DataStructures.Views.ReverseView`3.Enumerator.Reset
  fullName: Langly.DataStructures.Views.ReverseView<TElement, TCollection, TEnumerator>.Enumerator.Reset()
  fullName.vb: Langly.DataStructures.Views.ReverseView(Of TElement, TCollection, TEnumerator).Enumerator.Reset()
  nameWithType: ReverseView<TElement, TCollection, TEnumerator>.Enumerator.Reset()
  nameWithType.vb: ReverseView(Of TElement, TCollection, TEnumerator).Enumerator.Reset()
- uid: Langly.DataStructures.Views.ReverseView`3.Enumerator.Reset*
  name: Reset
  href: api/Langly.DataStructures.Views.ReverseView-3.Enumerator.html#Langly_DataStructures_Views_ReverseView_3_Enumerator_Reset_
  commentId: Overload:Langly.DataStructures.Views.ReverseView`3.Enumerator.Reset
  isSpec: "True"
  fullName: Langly.DataStructures.Views.ReverseView<TElement, TCollection, TEnumerator>.Enumerator.Reset
  fullName.vb: Langly.DataStructures.Views.ReverseView(Of TElement, TCollection, TEnumerator).Enumerator.Reset
  nameWithType: ReverseView<TElement, TCollection, TEnumerator>.Enumerator.Reset
  nameWithType.vb: ReverseView(Of TElement, TCollection, TEnumerator).Enumerator.Reset
- uid: Langly.DataStructures.Views.ReverseView`3.GetEnumerator
  name: GetEnumerator()
  href: api/Langly.DataStructures.Views.ReverseView-3.html#Langly_DataStructures_Views_ReverseView_3_GetEnumerator
  commentId: M:Langly.DataStructures.Views.ReverseView`3.GetEnumerator
  fullName: Langly.DataStructures.Views.ReverseView<TElement, TCollection, TEnumerator>.GetEnumerator()
  fullName.vb: Langly.DataStructures.Views.ReverseView(Of TElement, TCollection, TEnumerator).GetEnumerator()
  nameWithType: ReverseView<TElement, TCollection, TEnumerator>.GetEnumerator()
  nameWithType.vb: ReverseView(Of TElement, TCollection, TEnumerator).GetEnumerator()
- uid: Langly.DataStructures.Views.ReverseView`3.GetEnumerator*
  name: GetEnumerator
  href: api/Langly.DataStructures.Views.ReverseView-3.html#Langly_DataStructures_Views_ReverseView_3_GetEnumerator_
  commentId: Overload:Langly.DataStructures.Views.ReverseView`3.GetEnumerator
  isSpec: "True"
  fullName: Langly.DataStructures.Views.ReverseView<TElement, TCollection, TEnumerator>.GetEnumerator
  fullName.vb: Langly.DataStructures.Views.ReverseView(Of TElement, TCollection, TEnumerator).GetEnumerator
  nameWithType: ReverseView<TElement, TCollection, TEnumerator>.GetEnumerator
  nameWithType.vb: ReverseView(Of TElement, TCollection, TEnumerator).GetEnumerator
- uid: Langly.DataStructures.Views.SequenceView`3
  name: SequenceView<TElement, TCollection, TEnumerator>
  href: api/Langly.DataStructures.Views.SequenceView-3.html
  commentId: T:Langly.DataStructures.Views.SequenceView`3
  name.vb: SequenceView(Of TElement, TCollection, TEnumerator)
  fullName: Langly.DataStructures.Views.SequenceView<TElement, TCollection, TEnumerator>
  fullName.vb: Langly.DataStructures.Views.SequenceView(Of TElement, TCollection, TEnumerator)
  nameWithType: SequenceView<TElement, TCollection, TEnumerator>
  nameWithType.vb: SequenceView(Of TElement, TCollection, TEnumerator)
- uid: Langly.DataStructures.Views.SequenceView`3.#ctor(`1)
  name: SequenceView(TCollection)
  href: api/Langly.DataStructures.Views.SequenceView-3.html#Langly_DataStructures_Views_SequenceView_3__ctor__1_
  commentId: M:Langly.DataStructures.Views.SequenceView`3.#ctor(`1)
  fullName: Langly.DataStructures.Views.SequenceView<TElement, TCollection, TEnumerator>.SequenceView(TCollection)
  fullName.vb: Langly.DataStructures.Views.SequenceView(Of TElement, TCollection, TEnumerator).SequenceView(TCollection)
  nameWithType: SequenceView<TElement, TCollection, TEnumerator>.SequenceView(TCollection)
  nameWithType.vb: SequenceView(Of TElement, TCollection, TEnumerator).SequenceView(TCollection)
- uid: Langly.DataStructures.Views.SequenceView`3.#ctor*
  name: SequenceView
  href: api/Langly.DataStructures.Views.SequenceView-3.html#Langly_DataStructures_Views_SequenceView_3__ctor_
  commentId: Overload:Langly.DataStructures.Views.SequenceView`3.#ctor
  isSpec: "True"
  fullName: Langly.DataStructures.Views.SequenceView<TElement, TCollection, TEnumerator>.SequenceView
  fullName.vb: Langly.DataStructures.Views.SequenceView(Of TElement, TCollection, TEnumerator).SequenceView
  nameWithType: SequenceView<TElement, TCollection, TEnumerator>.SequenceView
  nameWithType.vb: SequenceView(Of TElement, TCollection, TEnumerator).SequenceView
- uid: Langly.DataStructures.Views.SequenceView`3.Count
  name: Count
  href: api/Langly.DataStructures.Views.SequenceView-3.html#Langly_DataStructures_Views_SequenceView_3_Count
  commentId: P:Langly.DataStructures.Views.SequenceView`3.Count
  fullName: Langly.DataStructures.Views.SequenceView<TElement, TCollection, TEnumerator>.Count
  fullName.vb: Langly.DataStructures.Views.SequenceView(Of TElement, TCollection, TEnumerator).Count
  nameWithType: SequenceView<TElement, TCollection, TEnumerator>.Count
  nameWithType.vb: SequenceView(Of TElement, TCollection, TEnumerator).Count
- uid: Langly.DataStructures.Views.SequenceView`3.Count*
  name: Count
  href: api/Langly.DataStructures.Views.SequenceView-3.html#Langly_DataStructures_Views_SequenceView_3_Count_
  commentId: Overload:Langly.DataStructures.Views.SequenceView`3.Count
  isSpec: "True"
  fullName: Langly.DataStructures.Views.SequenceView<TElement, TCollection, TEnumerator>.Count
  fullName.vb: Langly.DataStructures.Views.SequenceView(Of TElement, TCollection, TEnumerator).Count
  nameWithType: SequenceView<TElement, TCollection, TEnumerator>.Count
  nameWithType.vb: SequenceView(Of TElement, TCollection, TEnumerator).Count
- uid: Langly.DataStructures.Views.SequenceView`3.GetEnumerator
  name: GetEnumerator()
  href: api/Langly.DataStructures.Views.SequenceView-3.html#Langly_DataStructures_Views_SequenceView_3_GetEnumerator
  commentId: M:Langly.DataStructures.Views.SequenceView`3.GetEnumerator
  fullName: Langly.DataStructures.Views.SequenceView<TElement, TCollection, TEnumerator>.GetEnumerator()
  fullName.vb: Langly.DataStructures.Views.SequenceView(Of TElement, TCollection, TEnumerator).GetEnumerator()
  nameWithType: SequenceView<TElement, TCollection, TEnumerator>.GetEnumerator()
  nameWithType.vb: SequenceView(Of TElement, TCollection, TEnumerator).GetEnumerator()
- uid: Langly.DataStructures.Views.SequenceView`3.GetEnumerator*
  name: GetEnumerator
  href: api/Langly.DataStructures.Views.SequenceView-3.html#Langly_DataStructures_Views_SequenceView_3_GetEnumerator_
  commentId: Overload:Langly.DataStructures.Views.SequenceView`3.GetEnumerator
  isSpec: "True"
  fullName: Langly.DataStructures.Views.SequenceView<TElement, TCollection, TEnumerator>.GetEnumerator
  fullName.vb: Langly.DataStructures.Views.SequenceView(Of TElement, TCollection, TEnumerator).GetEnumerator
  nameWithType: SequenceView<TElement, TCollection, TEnumerator>.GetEnumerator
  nameWithType.vb: SequenceView(Of TElement, TCollection, TEnumerator).GetEnumerator
- uid: Langly.Glyph
  name: Glyph
  href: api/Langly.Glyph.html
  commentId: T:Langly.Glyph
  fullName: Langly.Glyph
  nameWithType: Glyph
- uid: Langly.IAdd`2
  name: IAdd<TElement, TResult>
  href: api/Langly.IAdd-2.html
  commentId: T:Langly.IAdd`2
  name.vb: IAdd(Of TElement, TResult)
  fullName: Langly.IAdd<TElement, TResult>
  fullName.vb: Langly.IAdd(Of TElement, TResult)
  nameWithType: IAdd<TElement, TResult>
  nameWithType.vb: IAdd(Of TElement, TResult)
- uid: Langly.IAdd`2.Add(`0)
  name: Add(TElement)
  href: api/Langly.IAdd-2.html#Langly_IAdd_2_Add__0_
  commentId: M:Langly.IAdd`2.Add(`0)
  fullName: Langly.IAdd<TElement, TResult>.Add(TElement)
  fullName.vb: Langly.IAdd(Of TElement, TResult).Add(TElement)
  nameWithType: IAdd<TElement, TResult>.Add(TElement)
  nameWithType.vb: IAdd(Of TElement, TResult).Add(TElement)
- uid: Langly.IAdd`2.Add(`0[])
  name: Add(TElement[])
  href: api/Langly.IAdd-2.html#Langly_IAdd_2_Add__0___
  commentId: M:Langly.IAdd`2.Add(`0[])
  name.vb: Add(TElement())
  fullName: Langly.IAdd<TElement, TResult>.Add(TElement[])
  fullName.vb: Langly.IAdd(Of TElement, TResult).Add(TElement())
  nameWithType: IAdd<TElement, TResult>.Add(TElement[])
  nameWithType.vb: IAdd(Of TElement, TResult).Add(TElement())
- uid: Langly.IAdd`2.Add(System.Memory{`0})
  name: Add(Memory<TElement>)
  href: api/Langly.IAdd-2.html#Langly_IAdd_2_Add_System_Memory__0__
  commentId: M:Langly.IAdd`2.Add(System.Memory{`0})
  name.vb: Add(Memory(Of TElement))
  fullName: Langly.IAdd<TElement, TResult>.Add(System.Memory<TElement>)
  fullName.vb: Langly.IAdd(Of TElement, TResult).Add(System.Memory(Of TElement))
  nameWithType: IAdd<TElement, TResult>.Add(Memory<TElement>)
  nameWithType.vb: IAdd(Of TElement, TResult).Add(Memory(Of TElement))
- uid: Langly.IAdd`2.Add(System.ReadOnlyMemory{`0})
  name: Add(ReadOnlyMemory<TElement>)
  href: api/Langly.IAdd-2.html#Langly_IAdd_2_Add_System_ReadOnlyMemory__0__
  commentId: M:Langly.IAdd`2.Add(System.ReadOnlyMemory{`0})
  name.vb: Add(ReadOnlyMemory(Of TElement))
  fullName: Langly.IAdd<TElement, TResult>.Add(System.ReadOnlyMemory<TElement>)
  fullName.vb: Langly.IAdd(Of TElement, TResult).Add(System.ReadOnlyMemory(Of TElement))
  nameWithType: IAdd<TElement, TResult>.Add(ReadOnlyMemory<TElement>)
  nameWithType.vb: IAdd(Of TElement, TResult).Add(ReadOnlyMemory(Of TElement))
- uid: Langly.IAdd`2.Add(System.ReadOnlySpan{`0})
  name: Add(ReadOnlySpan<TElement>)
  href: api/Langly.IAdd-2.html#Langly_IAdd_2_Add_System_ReadOnlySpan__0__
  commentId: M:Langly.IAdd`2.Add(System.ReadOnlySpan{`0})
  name.vb: Add(ReadOnlySpan(Of TElement))
  fullName: Langly.IAdd<TElement, TResult>.Add(System.ReadOnlySpan<TElement>)
  fullName.vb: Langly.IAdd(Of TElement, TResult).Add(System.ReadOnlySpan(Of TElement))
  nameWithType: IAdd<TElement, TResult>.Add(ReadOnlySpan<TElement>)
  nameWithType.vb: IAdd(Of TElement, TResult).Add(ReadOnlySpan(Of TElement))
- uid: Langly.IAdd`2.Add(System.Span{`0})
  name: Add(Span<TElement>)
  href: api/Langly.IAdd-2.html#Langly_IAdd_2_Add_System_Span__0__
  commentId: M:Langly.IAdd`2.Add(System.Span{`0})
  name.vb: Add(Span(Of TElement))
  fullName: Langly.IAdd<TElement, TResult>.Add(System.Span<TElement>)
  fullName.vb: Langly.IAdd(Of TElement, TResult).Add(System.Span(Of TElement))
  nameWithType: IAdd<TElement, TResult>.Add(Span<TElement>)
  nameWithType.vb: IAdd(Of TElement, TResult).Add(Span(Of TElement))
- uid: Langly.IAdd`2.Add*
  name: Add
  href: api/Langly.IAdd-2.html#Langly_IAdd_2_Add_
  commentId: Overload:Langly.IAdd`2.Add
  isSpec: "True"
  fullName: Langly.IAdd<TElement, TResult>.Add
  fullName.vb: Langly.IAdd(Of TElement, TResult).Add
  nameWithType: IAdd<TElement, TResult>.Add
  nameWithType.vb: IAdd(Of TElement, TResult).Add
- uid: Langly.IAdd`2.Add``1(Langly.ISequence{`0,``0})
  name: Add<TEnumerator>(ISequence<TElement, TEnumerator>)
  href: api/Langly.IAdd-2.html#Langly_IAdd_2_Add__1_Langly_ISequence__0___0__
  commentId: M:Langly.IAdd`2.Add``1(Langly.ISequence{`0,``0})
  name.vb: Add(Of TEnumerator)(ISequence(Of TElement, TEnumerator))
  fullName: Langly.IAdd<TElement, TResult>.Add<TEnumerator>(Langly.ISequence<TElement, TEnumerator>)
  fullName.vb: Langly.IAdd(Of TElement, TResult).Add(Of TEnumerator)(Langly.ISequence(Of TElement, TEnumerator))
  nameWithType: IAdd<TElement, TResult>.Add<TEnumerator>(ISequence<TElement, TEnumerator>)
  nameWithType.vb: IAdd(Of TElement, TResult).Add(Of TEnumerator)(ISequence(Of TElement, TEnumerator))
- uid: Langly.ICapacity
  name: ICapacity
  href: api/Langly.ICapacity.html
  commentId: T:Langly.ICapacity
  fullName: Langly.ICapacity
  nameWithType: ICapacity
- uid: Langly.ICapacity.Capacity
  name: Capacity
  href: api/Langly.ICapacity.html#Langly_ICapacity_Capacity
  commentId: P:Langly.ICapacity.Capacity
  fullName: Langly.ICapacity.Capacity
  nameWithType: ICapacity.Capacity
- uid: Langly.ICapacity.Capacity*
  name: Capacity
  href: api/Langly.ICapacity.html#Langly_ICapacity_Capacity_
  commentId: Overload:Langly.ICapacity.Capacity
  isSpec: "True"
  fullName: Langly.ICapacity.Capacity
  nameWithType: ICapacity.Capacity
- uid: Langly.IClear
  name: IClear
  href: api/Langly.IClear.html
  commentId: T:Langly.IClear
  fullName: Langly.IClear
  nameWithType: IClear
- uid: Langly.IClear.Clear
  name: Clear()
  href: api/Langly.IClear.html#Langly_IClear_Clear
  commentId: M:Langly.IClear.Clear
  fullName: Langly.IClear.Clear()
  nameWithType: IClear.Clear()
- uid: Langly.IClear.Clear*
  name: Clear
  href: api/Langly.IClear.html#Langly_IClear_Clear_
  commentId: Overload:Langly.IClear.Clear
  isSpec: "True"
  fullName: Langly.IClear.Clear
  nameWithType: IClear.Clear
- uid: Langly.IConcat`2
  name: IConcat<TElement, TResult>
  href: api/Langly.IConcat-2.html
  commentId: T:Langly.IConcat`2
  name.vb: IConcat(Of TElement, TResult)
  fullName: Langly.IConcat<TElement, TResult>
  fullName.vb: Langly.IConcat(Of TElement, TResult)
  nameWithType: IConcat<TElement, TResult>
  nameWithType.vb: IConcat(Of TElement, TResult)
- uid: Langly.IContains`1
  name: IContains<TElement>
  href: api/Langly.IContains-1.html
  commentId: T:Langly.IContains`1
  name.vb: IContains(Of TElement)
  fullName: Langly.IContains<TElement>
  fullName.vb: Langly.IContains(Of TElement)
  nameWithType: IContains<TElement>
  nameWithType.vb: IContains(Of TElement)
- uid: Langly.IContains`1.Contains(`0)
  name: Contains(TElement)
  href: api/Langly.IContains-1.html#Langly_IContains_1_Contains__0_
  commentId: M:Langly.IContains`1.Contains(`0)
  fullName: Langly.IContains<TElement>.Contains(TElement)
  fullName.vb: Langly.IContains(Of TElement).Contains(TElement)
  nameWithType: IContains<TElement>.Contains(TElement)
  nameWithType.vb: IContains(Of TElement).Contains(TElement)
- uid: Langly.IContains`1.Contains*
  name: Contains
  href: api/Langly.IContains-1.html#Langly_IContains_1_Contains_
  commentId: Overload:Langly.IContains`1.Contains
  isSpec: "True"
  fullName: Langly.IContains<TElement>.Contains
  fullName.vb: Langly.IContains(Of TElement).Contains
  nameWithType: IContains<TElement>.Contains
  nameWithType.vb: IContains(Of TElement).Contains
- uid: Langly.IControlled
  name: IControlled
  href: api/Langly.IControlled.html
  commentId: T:Langly.IControlled
  fullName: Langly.IControlled
  nameWithType: IControlled
- uid: Langly.IControlled.Disposed
  name: Disposed
  href: api/Langly.IControlled.html#Langly_IControlled_Disposed
  commentId: P:Langly.IControlled.Disposed
  fullName: Langly.IControlled.Disposed
  nameWithType: IControlled.Disposed
- uid: Langly.IControlled.Disposed*
  name: Disposed
  href: api/Langly.IControlled.html#Langly_IControlled_Disposed_
  commentId: Overload:Langly.IControlled.Disposed
  isSpec: "True"
  fullName: Langly.IControlled.Disposed
  nameWithType: IControlled.Disposed
- uid: Langly.IControlled.DisposeManaged
  name: DisposeManaged()
  href: api/Langly.IControlled.html#Langly_IControlled_DisposeManaged
  commentId: M:Langly.IControlled.DisposeManaged
  fullName: Langly.IControlled.DisposeManaged()
  nameWithType: IControlled.DisposeManaged()
- uid: Langly.IControlled.DisposeManaged*
  name: DisposeManaged
  href: api/Langly.IControlled.html#Langly_IControlled_DisposeManaged_
  commentId: Overload:Langly.IControlled.DisposeManaged
  isSpec: "True"
  fullName: Langly.IControlled.DisposeManaged
  nameWithType: IControlled.DisposeManaged
- uid: Langly.IControlled.DisposeUnmanaged
  name: DisposeUnmanaged()
  href: api/Langly.IControlled.html#Langly_IControlled_DisposeUnmanaged
  commentId: M:Langly.IControlled.DisposeUnmanaged
  fullName: Langly.IControlled.DisposeUnmanaged()
  nameWithType: IControlled.DisposeUnmanaged()
- uid: Langly.IControlled.DisposeUnmanaged*
  name: DisposeUnmanaged
  href: api/Langly.IControlled.html#Langly_IControlled_DisposeUnmanaged_
  commentId: Overload:Langly.IControlled.DisposeUnmanaged
  isSpec: "True"
  fullName: Langly.IControlled.DisposeUnmanaged
  nameWithType: IControlled.DisposeUnmanaged
- uid: Langly.IControlled.NullLargeFields
  name: NullLargeFields()
  href: api/Langly.IControlled.html#Langly_IControlled_NullLargeFields
  commentId: M:Langly.IControlled.NullLargeFields
  fullName: Langly.IControlled.NullLargeFields()
  nameWithType: IControlled.NullLargeFields()
- uid: Langly.IControlled.NullLargeFields*
  name: NullLargeFields
  href: api/Langly.IControlled.html#Langly_IControlled_NullLargeFields_
  commentId: Overload:Langly.IControlled.NullLargeFields
  isSpec: "True"
  fullName: Langly.IControlled.NullLargeFields
  nameWithType: IControlled.NullLargeFields
- uid: Langly.IControlled.System#IAsyncDisposable#DisposeAsync
  name: IAsyncDisposable.DisposeAsync()
  href: api/Langly.IControlled.html#Langly_IControlled_System_IAsyncDisposable_DisposeAsync
  commentId: M:Langly.IControlled.System#IAsyncDisposable#DisposeAsync
  name.vb: System.IAsyncDisposable.DisposeAsync()
  fullName: Langly.IControlled.System.IAsyncDisposable.DisposeAsync()
  nameWithType: IControlled.IAsyncDisposable.DisposeAsync()
  nameWithType.vb: IControlled.System.IAsyncDisposable.DisposeAsync()
- uid: Langly.IControlled.System#IAsyncDisposable#DisposeAsync*
  name: IAsyncDisposable.DisposeAsync
  href: api/Langly.IControlled.html#Langly_IControlled_System_IAsyncDisposable_DisposeAsync_
  commentId: Overload:Langly.IControlled.System#IAsyncDisposable#DisposeAsync
  isSpec: "True"
  name.vb: System.IAsyncDisposable.DisposeAsync
  fullName: Langly.IControlled.System.IAsyncDisposable.DisposeAsync
  nameWithType: IControlled.IAsyncDisposable.DisposeAsync
  nameWithType.vb: IControlled.System.IAsyncDisposable.DisposeAsync
- uid: Langly.IControlled.System#IDisposable#Dispose
  name: IDisposable.Dispose()
  href: api/Langly.IControlled.html#Langly_IControlled_System_IDisposable_Dispose
  commentId: M:Langly.IControlled.System#IDisposable#Dispose
  name.vb: System.IDisposable.Dispose()
  fullName: Langly.IControlled.System.IDisposable.Dispose()
  nameWithType: IControlled.IDisposable.Dispose()
  nameWithType.vb: IControlled.System.IDisposable.Dispose()
- uid: Langly.IControlled.System#IDisposable#Dispose*
  name: IDisposable.Dispose
  href: api/Langly.IControlled.html#Langly_IControlled_System_IDisposable_Dispose_
  commentId: Overload:Langly.IControlled.System#IDisposable#Dispose
  isSpec: "True"
  name.vb: System.IDisposable.Dispose
  fullName: Langly.IControlled.System.IDisposable.Dispose
  nameWithType: IControlled.IDisposable.Dispose
  nameWithType.vb: IControlled.System.IDisposable.Dispose
- uid: Langly.ICount
  name: ICount
  href: api/Langly.ICount.html
  commentId: T:Langly.ICount
  fullName: Langly.ICount
  nameWithType: ICount
- uid: Langly.ICount.Count
  name: Count
  href: api/Langly.ICount.html#Langly_ICount_Count
  commentId: P:Langly.ICount.Count
  fullName: Langly.ICount.Count
  nameWithType: ICount.Count
- uid: Langly.ICount.Count*
  name: Count
  href: api/Langly.ICount.html#Langly_ICount_Count_
  commentId: Overload:Langly.ICount.Count
  isSpec: "True"
  fullName: Langly.ICount.Count
  nameWithType: ICount.Count
- uid: Langly.IEnumerator`1
  name: IEnumerator<TElement>
  href: api/Langly.IEnumerator-1.html
  commentId: T:Langly.IEnumerator`1
  name.vb: IEnumerator(Of TElement)
  fullName: Langly.IEnumerator<TElement>
  fullName.vb: Langly.IEnumerator(Of TElement)
  nameWithType: IEnumerator<TElement>
  nameWithType.vb: IEnumerator(Of TElement)
- uid: Langly.IEnumerator`1.Langly#ISequence{TElement,Langly#IEnumerator{TElement}}#GetEnumerator
  name: ISequence<TElement, IEnumerator<TElement>>.GetEnumerator()
  href: api/Langly.IEnumerator-1.html#Langly_IEnumerator_1_Langly_ISequence_TElement_Langly_IEnumerator_TElement___GetEnumerator
  commentId: M:Langly.IEnumerator`1.Langly#ISequence{TElement,Langly#IEnumerator{TElement}}#GetEnumerator
  name.vb: Langly.ISequence<TElement,Langly.IEnumerator<TElement>>.GetEnumerator()
  fullName: Langly.IEnumerator<TElement>.Langly.ISequence<TElement, Langly.IEnumerator<TElement>>.GetEnumerator()
  fullName.vb: Langly.IEnumerator(Of TElement).Langly.ISequence<TElement,Langly.IEnumerator<TElement>>.GetEnumerator()
  nameWithType: IEnumerator<TElement>.ISequence<TElement, IEnumerator<TElement>>.GetEnumerator()
  nameWithType.vb: IEnumerator(Of TElement).Langly.ISequence<TElement,Langly.IEnumerator<TElement>>.GetEnumerator()
- uid: Langly.IEnumerator`1.Langly#ISequence{TElement,Langly#IEnumerator{TElement}}#GetEnumerator*
  name: ISequence<TElement, IEnumerator<TElement>>.GetEnumerator
  href: api/Langly.IEnumerator-1.html#Langly_IEnumerator_1_Langly_ISequence_TElement_Langly_IEnumerator_TElement___GetEnumerator_
  commentId: Overload:Langly.IEnumerator`1.Langly#ISequence{TElement,Langly#IEnumerator{TElement}}#GetEnumerator
  isSpec: "True"
  name.vb: Langly.ISequence<TElement,Langly.IEnumerator<TElement>>.GetEnumerator
  fullName: Langly.IEnumerator<TElement>.Langly.ISequence<TElement, Langly.IEnumerator<TElement>>.GetEnumerator
  fullName.vb: Langly.IEnumerator(Of TElement).Langly.ISequence<TElement,Langly.IEnumerator<TElement>>.GetEnumerator
  nameWithType: IEnumerator<TElement>.ISequence<TElement, IEnumerator<TElement>>.GetEnumerator
  nameWithType.vb: IEnumerator(Of TElement).Langly.ISequence<TElement,Langly.IEnumerator<TElement>>.GetEnumerator
- uid: Langly.IEnumerator`1.System#Collections#Generic#IEnumerable{TElement}#GetEnumerator
  name: IEnumerable<TElement>.GetEnumerator()
  href: api/Langly.IEnumerator-1.html#Langly_IEnumerator_1_System_Collections_Generic_IEnumerable_TElement__GetEnumerator
  commentId: M:Langly.IEnumerator`1.System#Collections#Generic#IEnumerable{TElement}#GetEnumerator
  name.vb: System.Collections.Generic.IEnumerable<TElement>.GetEnumerator()
  fullName: Langly.IEnumerator<TElement>.System.Collections.Generic.IEnumerable<TElement>.GetEnumerator()
  fullName.vb: Langly.IEnumerator(Of TElement).System.Collections.Generic.IEnumerable<TElement>.GetEnumerator()
  nameWithType: IEnumerator<TElement>.IEnumerable<TElement>.GetEnumerator()
  nameWithType.vb: IEnumerator(Of TElement).System.Collections.Generic.IEnumerable<TElement>.GetEnumerator()
- uid: Langly.IEnumerator`1.System#Collections#Generic#IEnumerable{TElement}#GetEnumerator*
  name: IEnumerable<TElement>.GetEnumerator
  href: api/Langly.IEnumerator-1.html#Langly_IEnumerator_1_System_Collections_Generic_IEnumerable_TElement__GetEnumerator_
  commentId: Overload:Langly.IEnumerator`1.System#Collections#Generic#IEnumerable{TElement}#GetEnumerator
  isSpec: "True"
  name.vb: System.Collections.Generic.IEnumerable<TElement>.GetEnumerator
  fullName: Langly.IEnumerator<TElement>.System.Collections.Generic.IEnumerable<TElement>.GetEnumerator
  fullName.vb: Langly.IEnumerator(Of TElement).System.Collections.Generic.IEnumerable<TElement>.GetEnumerator
  nameWithType: IEnumerator<TElement>.IEnumerable<TElement>.GetEnumerator
  nameWithType.vb: IEnumerator(Of TElement).System.Collections.Generic.IEnumerable<TElement>.GetEnumerator
- uid: Langly.IEnumerator`1.System#Collections#IEnumerable#GetEnumerator
  name: IEnumerable.GetEnumerator()
  href: api/Langly.IEnumerator-1.html#Langly_IEnumerator_1_System_Collections_IEnumerable_GetEnumerator
  commentId: M:Langly.IEnumerator`1.System#Collections#IEnumerable#GetEnumerator
  name.vb: System.Collections.IEnumerable.GetEnumerator()
  fullName: Langly.IEnumerator<TElement>.System.Collections.IEnumerable.GetEnumerator()
  fullName.vb: Langly.IEnumerator(Of TElement).System.Collections.IEnumerable.GetEnumerator()
  nameWithType: IEnumerator<TElement>.IEnumerable.GetEnumerator()
  nameWithType.vb: IEnumerator(Of TElement).System.Collections.IEnumerable.GetEnumerator()
- uid: Langly.IEnumerator`1.System#Collections#IEnumerable#GetEnumerator*
  name: IEnumerable.GetEnumerator
  href: api/Langly.IEnumerator-1.html#Langly_IEnumerator_1_System_Collections_IEnumerable_GetEnumerator_
  commentId: Overload:Langly.IEnumerator`1.System#Collections#IEnumerable#GetEnumerator
  isSpec: "True"
  name.vb: System.Collections.IEnumerable.GetEnumerator
  fullName: Langly.IEnumerator<TElement>.System.Collections.IEnumerable.GetEnumerator
  fullName.vb: Langly.IEnumerator(Of TElement).System.Collections.IEnumerable.GetEnumerator
  nameWithType: IEnumerator<TElement>.IEnumerable.GetEnumerator
  nameWithType.vb: IEnumerator(Of TElement).System.Collections.IEnumerable.GetEnumerator
- uid: Langly.IEnumerator`1.System#Collections#IEnumerator#Current
  name: IEnumerator.Current
  href: api/Langly.IEnumerator-1.html#Langly_IEnumerator_1_System_Collections_IEnumerator_Current
  commentId: P:Langly.IEnumerator`1.System#Collections#IEnumerator#Current
  name.vb: System.Collections.IEnumerator.Current
  fullName: Langly.IEnumerator<TElement>.System.Collections.IEnumerator.Current
  fullName.vb: Langly.IEnumerator(Of TElement).System.Collections.IEnumerator.Current
  nameWithType: IEnumerator<TElement>.IEnumerator.Current
  nameWithType.vb: IEnumerator(Of TElement).System.Collections.IEnumerator.Current
- uid: Langly.IEnumerator`1.System#Collections#IEnumerator#Current*
  name: IEnumerator.Current
  href: api/Langly.IEnumerator-1.html#Langly_IEnumerator_1_System_Collections_IEnumerator_Current_
  commentId: Overload:Langly.IEnumerator`1.System#Collections#IEnumerator#Current
  isSpec: "True"
  name.vb: System.Collections.IEnumerator.Current
  fullName: Langly.IEnumerator<TElement>.System.Collections.IEnumerator.Current
  fullName.vb: Langly.IEnumerator(Of TElement).System.Collections.IEnumerator.Current
  nameWithType: IEnumerator<TElement>.IEnumerator.Current
  nameWithType.vb: IEnumerator(Of TElement).System.Collections.IEnumerator.Current
- uid: Langly.IEnumerator`1.System#IDisposable#Dispose
  name: IDisposable.Dispose()
  href: api/Langly.IEnumerator-1.html#Langly_IEnumerator_1_System_IDisposable_Dispose
  commentId: M:Langly.IEnumerator`1.System#IDisposable#Dispose
  name.vb: System.IDisposable.Dispose()
  fullName: Langly.IEnumerator<TElement>.System.IDisposable.Dispose()
  fullName.vb: Langly.IEnumerator(Of TElement).System.IDisposable.Dispose()
  nameWithType: IEnumerator<TElement>.IDisposable.Dispose()
  nameWithType.vb: IEnumerator(Of TElement).System.IDisposable.Dispose()
- uid: Langly.IEnumerator`1.System#IDisposable#Dispose*
  name: IDisposable.Dispose
  href: api/Langly.IEnumerator-1.html#Langly_IEnumerator_1_System_IDisposable_Dispose_
  commentId: Overload:Langly.IEnumerator`1.System#IDisposable#Dispose
  isSpec: "True"
  name.vb: System.IDisposable.Dispose
  fullName: Langly.IEnumerator<TElement>.System.IDisposable.Dispose
  fullName.vb: Langly.IEnumerator(Of TElement).System.IDisposable.Dispose
  nameWithType: IEnumerator<TElement>.IDisposable.Dispose
  nameWithType.vb: IEnumerator(Of TElement).System.IDisposable.Dispose
- uid: Langly.IEnumeratorBidi`1
  name: IEnumeratorBidi<TElement>
  href: api/Langly.IEnumeratorBidi-1.html
  commentId: T:Langly.IEnumeratorBidi`1
  name.vb: IEnumeratorBidi(Of TElement)
  fullName: Langly.IEnumeratorBidi<TElement>
  fullName.vb: Langly.IEnumeratorBidi(Of TElement)
  nameWithType: IEnumeratorBidi<TElement>
  nameWithType.vb: IEnumeratorBidi(Of TElement)
- uid: Langly.IEnumeratorBidi`1.MovePrevious
  name: MovePrevious()
  href: api/Langly.IEnumeratorBidi-1.html#Langly_IEnumeratorBidi_1_MovePrevious
  commentId: M:Langly.IEnumeratorBidi`1.MovePrevious
  fullName: Langly.IEnumeratorBidi<TElement>.MovePrevious()
  fullName.vb: Langly.IEnumeratorBidi(Of TElement).MovePrevious()
  nameWithType: IEnumeratorBidi<TElement>.MovePrevious()
  nameWithType.vb: IEnumeratorBidi(Of TElement).MovePrevious()
- uid: Langly.IEnumeratorBidi`1.MovePrevious*
  name: MovePrevious
  href: api/Langly.IEnumeratorBidi-1.html#Langly_IEnumeratorBidi_1_MovePrevious_
  commentId: Overload:Langly.IEnumeratorBidi`1.MovePrevious
  isSpec: "True"
  fullName: Langly.IEnumeratorBidi<TElement>.MovePrevious
  fullName.vb: Langly.IEnumeratorBidi(Of TElement).MovePrevious
  nameWithType: IEnumeratorBidi<TElement>.MovePrevious
  nameWithType.vb: IEnumeratorBidi(Of TElement).MovePrevious
- uid: Langly.IEnumeratorBidi`1.ResetBeginning
  name: ResetBeginning()
  href: api/Langly.IEnumeratorBidi-1.html#Langly_IEnumeratorBidi_1_ResetBeginning
  commentId: M:Langly.IEnumeratorBidi`1.ResetBeginning
  fullName: Langly.IEnumeratorBidi<TElement>.ResetBeginning()
  fullName.vb: Langly.IEnumeratorBidi(Of TElement).ResetBeginning()
  nameWithType: IEnumeratorBidi<TElement>.ResetBeginning()
  nameWithType.vb: IEnumeratorBidi(Of TElement).ResetBeginning()
- uid: Langly.IEnumeratorBidi`1.ResetBeginning*
  name: ResetBeginning
  href: api/Langly.IEnumeratorBidi-1.html#Langly_IEnumeratorBidi_1_ResetBeginning_
  commentId: Overload:Langly.IEnumeratorBidi`1.ResetBeginning
  isSpec: "True"
  fullName: Langly.IEnumeratorBidi<TElement>.ResetBeginning
  fullName.vb: Langly.IEnumeratorBidi(Of TElement).ResetBeginning
  nameWithType: IEnumeratorBidi<TElement>.ResetBeginning
  nameWithType.vb: IEnumeratorBidi(Of TElement).ResetBeginning
- uid: Langly.IEnumeratorBidi`1.ResetEnding
  name: ResetEnding()
  href: api/Langly.IEnumeratorBidi-1.html#Langly_IEnumeratorBidi_1_ResetEnding
  commentId: M:Langly.IEnumeratorBidi`1.ResetEnding
  fullName: Langly.IEnumeratorBidi<TElement>.ResetEnding()
  fullName.vb: Langly.IEnumeratorBidi(Of TElement).ResetEnding()
  nameWithType: IEnumeratorBidi<TElement>.ResetEnding()
  nameWithType.vb: IEnumeratorBidi(Of TElement).ResetEnding()
- uid: Langly.IEnumeratorBidi`1.ResetEnding*
  name: ResetEnding
  href: api/Langly.IEnumeratorBidi-1.html#Langly_IEnumeratorBidi_1_ResetEnding_
  commentId: Overload:Langly.IEnumeratorBidi`1.ResetEnding
  isSpec: "True"
  fullName: Langly.IEnumeratorBidi<TElement>.ResetEnding
  fullName.vb: Langly.IEnumeratorBidi(Of TElement).ResetEnding
  nameWithType: IEnumeratorBidi<TElement>.ResetEnding
  nameWithType.vb: IEnumeratorBidi(Of TElement).ResetEnding
- uid: Langly.IEnumeratorBidi`1.System#Collections#IEnumerator#Reset
  name: IEnumerator.Reset()
  href: api/Langly.IEnumeratorBidi-1.html#Langly_IEnumeratorBidi_1_System_Collections_IEnumerator_Reset
  commentId: M:Langly.IEnumeratorBidi`1.System#Collections#IEnumerator#Reset
  name.vb: System.Collections.IEnumerator.Reset()
  fullName: Langly.IEnumeratorBidi<TElement>.System.Collections.IEnumerator.Reset()
  fullName.vb: Langly.IEnumeratorBidi(Of TElement).System.Collections.IEnumerator.Reset()
  nameWithType: IEnumeratorBidi<TElement>.IEnumerator.Reset()
  nameWithType.vb: IEnumeratorBidi(Of TElement).System.Collections.IEnumerator.Reset()
- uid: Langly.IEnumeratorBidi`1.System#Collections#IEnumerator#Reset*
  name: IEnumerator.Reset
  href: api/Langly.IEnumeratorBidi-1.html#Langly_IEnumeratorBidi_1_System_Collections_IEnumerator_Reset_
  commentId: Overload:Langly.IEnumeratorBidi`1.System#Collections#IEnumerator#Reset
  isSpec: "True"
  name.vb: System.Collections.IEnumerator.Reset
  fullName: Langly.IEnumeratorBidi<TElement>.System.Collections.IEnumerator.Reset
  fullName.vb: Langly.IEnumeratorBidi(Of TElement).System.Collections.IEnumerator.Reset
  nameWithType: IEnumeratorBidi<TElement>.IEnumerator.Reset
  nameWithType.vb: IEnumeratorBidi(Of TElement).System.Collections.IEnumerator.Reset
- uid: Langly.IEquals`1
  name: IEquals<TElement>
  href: api/Langly.IEquals-1.html
  commentId: T:Langly.IEquals`1
  name.vb: IEquals(Of TElement)
  fullName: Langly.IEquals<TElement>
  fullName.vb: Langly.IEquals(Of TElement)
  nameWithType: IEquals<TElement>
  nameWithType.vb: IEquals(Of TElement)
- uid: Langly.IIndex`1
  name: IIndex<TElement>
  href: api/Langly.IIndex-1.html
  commentId: T:Langly.IIndex`1
  name.vb: IIndex(Of TElement)
  fullName: Langly.IIndex<TElement>
  fullName.vb: Langly.IIndex(Of TElement)
  nameWithType: IIndex<TElement>
  nameWithType.vb: IIndex(Of TElement)
- uid: Langly.IIndex`1.Map(System.Func{`0,`0})
  name: Map(Func<TElement, TElement>)
  href: api/Langly.IIndex-1.html#Langly_IIndex_1_Map_System_Func__0__0__
  commentId: M:Langly.IIndex`1.Map(System.Func{`0,`0})
  name.vb: Map(Func(Of TElement, TElement))
  fullName: Langly.IIndex<TElement>.Map(System.Func<TElement, TElement>)
  fullName.vb: Langly.IIndex(Of TElement).Map(System.Func(Of TElement, TElement))
  nameWithType: IIndex<TElement>.Map(Func<TElement, TElement>)
  nameWithType.vb: IIndex(Of TElement).Map(Func(Of TElement, TElement))
- uid: Langly.IIndex`1.Map*
  name: Map
  href: api/Langly.IIndex-1.html#Langly_IIndex_1_Map_
  commentId: Overload:Langly.IIndex`1.Map
  isSpec: "True"
  fullName: Langly.IIndex<TElement>.Map
  fullName.vb: Langly.IIndex(Of TElement).Map
  nameWithType: IIndex<TElement>.Map
  nameWithType.vb: IIndex(Of TElement).Map
- uid: Langly.IIndex`2
  name: IIndex<TIndex, TElement>
  href: api/Langly.IIndex-2.html
  commentId: T:Langly.IIndex`2
  name.vb: IIndex(Of TIndex, TElement)
  fullName: Langly.IIndex<TIndex, TElement>
  fullName.vb: Langly.IIndex(Of TIndex, TElement)
  nameWithType: IIndex<TIndex, TElement>
  nameWithType.vb: IIndex(Of TIndex, TElement)
- uid: Langly.IIndex`2.Item(`0)
  name: Item[TIndex]
  href: api/Langly.IIndex-2.html#Langly_IIndex_2_Item__0_
  commentId: P:Langly.IIndex`2.Item(`0)
  name.vb: Item(TIndex)
  fullName: Langly.IIndex<TIndex, TElement>.Item[TIndex]
  fullName.vb: Langly.IIndex(Of TIndex, TElement).Item(TIndex)
  nameWithType: IIndex<TIndex, TElement>.Item[TIndex]
  nameWithType.vb: IIndex(Of TIndex, TElement).Item(TIndex)
- uid: Langly.IIndex`2.Item*
  name: Item
  href: api/Langly.IIndex-2.html#Langly_IIndex_2_Item_
  commentId: Overload:Langly.IIndex`2.Item
  isSpec: "True"
  fullName: Langly.IIndex<TIndex, TElement>.Item
  fullName.vb: Langly.IIndex(Of TIndex, TElement).Item
  nameWithType: IIndex<TIndex, TElement>.Item
  nameWithType.vb: IIndex(Of TIndex, TElement).Item
- uid: Langly.IIndex`2.Langly#IIndexReadOnly{TIndex,TElement}#Item(`0)
  name: IIndexReadOnly<TIndex, TElement>.Item[TIndex]
  href: api/Langly.IIndex-2.html#Langly_IIndex_2_Langly_IIndexReadOnly_TIndex_TElement__Item__0_
  commentId: P:Langly.IIndex`2.Langly#IIndexReadOnly{TIndex,TElement}#Item(`0)
  name.vb: Langly.IIndexReadOnly<TIndex,TElement>.Item(TIndex)
  fullName: Langly.IIndex<TIndex, TElement>.Langly.IIndexReadOnly<TIndex, TElement>.Item[TIndex]
  fullName.vb: Langly.IIndex(Of TIndex, TElement).Langly.IIndexReadOnly<TIndex,TElement>.Item(TIndex)
  nameWithType: IIndex<TIndex, TElement>.IIndexReadOnly<TIndex, TElement>.Item[TIndex]
  nameWithType.vb: IIndex(Of TIndex, TElement).Langly.IIndexReadOnly<TIndex,TElement>.Item(TIndex)
- uid: Langly.IIndex`2.Langly#IIndexReadOnly{TIndex,TElement}#Item*
  name: IIndexReadOnly<TIndex, TElement>.Item
  href: api/Langly.IIndex-2.html#Langly_IIndex_2_Langly_IIndexReadOnly_TIndex_TElement__Item_
  commentId: Overload:Langly.IIndex`2.Langly#IIndexReadOnly{TIndex,TElement}#Item
  isSpec: "True"
  name.vb: Langly.IIndexReadOnly<TIndex,TElement>.Item
  fullName: Langly.IIndex<TIndex, TElement>.Langly.IIndexReadOnly<TIndex, TElement>.Item
  fullName.vb: Langly.IIndex(Of TIndex, TElement).Langly.IIndexReadOnly<TIndex,TElement>.Item
  nameWithType: IIndex<TIndex, TElement>.IIndexReadOnly<TIndex, TElement>.Item
  nameWithType.vb: IIndex(Of TIndex, TElement).Langly.IIndexReadOnly<TIndex,TElement>.Item
- uid: Langly.IIndexReadOnly`1
  name: IIndexReadOnly<TElement>
  href: api/Langly.IIndexReadOnly-1.html
  commentId: T:Langly.IIndexReadOnly`1
  name.vb: IIndexReadOnly(Of TElement)
  fullName: Langly.IIndexReadOnly<TElement>
  fullName.vb: Langly.IIndexReadOnly(Of TElement)
  nameWithType: IIndexReadOnly<TElement>
  nameWithType.vb: IIndexReadOnly(Of TElement)
- uid: Langly.IIndexReadOnly`2
  name: IIndexReadOnly<TIndex, TElement>
  href: api/Langly.IIndexReadOnly-2.html
  commentId: T:Langly.IIndexReadOnly`2
  name.vb: IIndexReadOnly(Of TIndex, TElement)
  fullName: Langly.IIndexReadOnly<TIndex, TElement>
  fullName.vb: Langly.IIndexReadOnly(Of TIndex, TElement)
  nameWithType: IIndexReadOnly<TIndex, TElement>
  nameWithType.vb: IIndexReadOnly(Of TIndex, TElement)
- uid: Langly.IIndexReadOnly`2.Item(`0)
  name: Item[TIndex]
  href: api/Langly.IIndexReadOnly-2.html#Langly_IIndexReadOnly_2_Item__0_
  commentId: P:Langly.IIndexReadOnly`2.Item(`0)
  name.vb: Item(TIndex)
  fullName: Langly.IIndexReadOnly<TIndex, TElement>.Item[TIndex]
  fullName.vb: Langly.IIndexReadOnly(Of TIndex, TElement).Item(TIndex)
  nameWithType: IIndexReadOnly<TIndex, TElement>.Item[TIndex]
  nameWithType.vb: IIndexReadOnly(Of TIndex, TElement).Item(TIndex)
- uid: Langly.IIndexReadOnly`2.Item*
  name: Item
  href: api/Langly.IIndexReadOnly-2.html#Langly_IIndexReadOnly_2_Item_
  commentId: Overload:Langly.IIndexReadOnly`2.Item
  isSpec: "True"
  fullName: Langly.IIndexReadOnly<TIndex, TElement>.Item
  fullName.vb: Langly.IIndexReadOnly(Of TIndex, TElement).Item
  nameWithType: IIndexReadOnly<TIndex, TElement>.Item
  nameWithType.vb: IIndexReadOnly(Of TIndex, TElement).Item
- uid: Langly.IIndexRef`1
  name: IIndexRef<TElement>
  href: api/Langly.IIndexRef-1.html
  commentId: T:Langly.IIndexRef`1
  name.vb: IIndexRef(Of TElement)
  fullName: Langly.IIndexRef<TElement>
  fullName.vb: Langly.IIndexRef(Of TElement)
  nameWithType: IIndexRef<TElement>
  nameWithType.vb: IIndexRef(Of TElement)
- uid: Langly.IIndexRef`1.Map(System.Func{`0,`0})
  name: Map(Func<TElement, TElement>)
  href: api/Langly.IIndexRef-1.html#Langly_IIndexRef_1_Map_System_Func__0__0__
  commentId: M:Langly.IIndexRef`1.Map(System.Func{`0,`0})
  name.vb: Map(Func(Of TElement, TElement))
  fullName: Langly.IIndexRef<TElement>.Map(System.Func<TElement, TElement>)
  fullName.vb: Langly.IIndexRef(Of TElement).Map(System.Func(Of TElement, TElement))
  nameWithType: IIndexRef<TElement>.Map(Func<TElement, TElement>)
  nameWithType.vb: IIndexRef(Of TElement).Map(Func(Of TElement, TElement))
- uid: Langly.IIndexRef`1.Map*
  name: Map
  href: api/Langly.IIndexRef-1.html#Langly_IIndexRef_1_Map_
  commentId: Overload:Langly.IIndexRef`1.Map
  isSpec: "True"
  fullName: Langly.IIndexRef<TElement>.Map
  fullName.vb: Langly.IIndexRef(Of TElement).Map
  nameWithType: IIndexRef<TElement>.Map
  nameWithType.vb: IIndexRef(Of TElement).Map
- uid: Langly.IIndexRef`2
  name: IIndexRef<TIndex, TElement>
  href: api/Langly.IIndexRef-2.html
  commentId: T:Langly.IIndexRef`2
  name.vb: IIndexRef(Of TIndex, TElement)
  fullName: Langly.IIndexRef<TIndex, TElement>
  fullName.vb: Langly.IIndexRef(Of TIndex, TElement)
  nameWithType: IIndexRef<TIndex, TElement>
  nameWithType.vb: IIndexRef(Of TIndex, TElement)
- uid: Langly.IIndexRef`2.Item(`0)
  name: Item[TIndex]
  href: api/Langly.IIndexRef-2.html#Langly_IIndexRef_2_Item__0_
  commentId: P:Langly.IIndexRef`2.Item(`0)
  name.vb: Item(TIndex)
  fullName: Langly.IIndexRef<TIndex, TElement>.Item[TIndex]
  fullName.vb: Langly.IIndexRef(Of TIndex, TElement).Item(TIndex)
  nameWithType: IIndexRef<TIndex, TElement>.Item[TIndex]
  nameWithType.vb: IIndexRef(Of TIndex, TElement).Item(TIndex)
- uid: Langly.IIndexRef`2.Item*
  name: Item
  href: api/Langly.IIndexRef-2.html#Langly_IIndexRef_2_Item_
  commentId: Overload:Langly.IIndexRef`2.Item
  isSpec: "True"
  fullName: Langly.IIndexRef<TIndex, TElement>.Item
  fullName.vb: Langly.IIndexRef(Of TIndex, TElement).Item
  nameWithType: IIndexRef<TIndex, TElement>.Item
  nameWithType.vb: IIndexRef(Of TIndex, TElement).Item
- uid: Langly.IIndexRefReadOnly`1
  name: IIndexRefReadOnly<TElement>
  href: api/Langly.IIndexRefReadOnly-1.html
  commentId: T:Langly.IIndexRefReadOnly`1
  name.vb: IIndexRefReadOnly(Of TElement)
  fullName: Langly.IIndexRefReadOnly<TElement>
  fullName.vb: Langly.IIndexRefReadOnly(Of TElement)
  nameWithType: IIndexRefReadOnly<TElement>
  nameWithType.vb: IIndexRefReadOnly(Of TElement)
- uid: Langly.IIndexRefReadOnly`2
  name: IIndexRefReadOnly<TIndex, TElement>
  href: api/Langly.IIndexRefReadOnly-2.html
  commentId: T:Langly.IIndexRefReadOnly`2
  name.vb: IIndexRefReadOnly(Of TIndex, TElement)
  fullName: Langly.IIndexRefReadOnly<TIndex, TElement>
  fullName.vb: Langly.IIndexRefReadOnly(Of TIndex, TElement)
  nameWithType: IIndexRefReadOnly<TIndex, TElement>
  nameWithType.vb: IIndexRefReadOnly(Of TIndex, TElement)
- uid: Langly.IIndexRefReadOnly`2.Item(`0)
  name: Item[TIndex]
  href: api/Langly.IIndexRefReadOnly-2.html#Langly_IIndexRefReadOnly_2_Item__0_
  commentId: P:Langly.IIndexRefReadOnly`2.Item(`0)
  name.vb: Item(TIndex)
  fullName: Langly.IIndexRefReadOnly<TIndex, TElement>.Item[TIndex]
  fullName.vb: Langly.IIndexRefReadOnly(Of TIndex, TElement).Item(TIndex)
  nameWithType: IIndexRefReadOnly<TIndex, TElement>.Item[TIndex]
  nameWithType.vb: IIndexRefReadOnly(Of TIndex, TElement).Item(TIndex)
- uid: Langly.IIndexRefReadOnly`2.Item*
  name: Item
  href: api/Langly.IIndexRefReadOnly-2.html#Langly_IIndexRefReadOnly_2_Item_
  commentId: Overload:Langly.IIndexRefReadOnly`2.Item
  isSpec: "True"
  fullName: Langly.IIndexRefReadOnly<TIndex, TElement>.Item
  fullName.vb: Langly.IIndexRefReadOnly(Of TIndex, TElement).Item
  nameWithType: IIndexRefReadOnly<TIndex, TElement>.Item
  nameWithType.vb: IIndexRefReadOnly(Of TIndex, TElement).Item
- uid: Langly.IInsert`2
  name: IInsert<TElement, TResult>
  href: api/Langly.IInsert-2.html
  commentId: T:Langly.IInsert`2
  name.vb: IInsert(Of TElement, TResult)
  fullName: Langly.IInsert<TElement, TResult>
  fullName.vb: Langly.IInsert(Of TElement, TResult)
  nameWithType: IInsert<TElement, TResult>
  nameWithType.vb: IInsert(Of TElement, TResult)
- uid: Langly.IInsert`2.Langly#IInsert{nint,TElement,TResult}#Insert(nint,System.ReadOnlySpan{`0})
  name: IInsert<nint, TElement, TResult>.Insert(nint, ReadOnlySpan<TElement>)
  href: api/Langly.IInsert-2.html#Langly_IInsert_2_Langly_IInsert_nint_TElement_TResult__Insert_nint_System_ReadOnlySpan__0__
  commentId: M:Langly.IInsert`2.Langly#IInsert{nint,TElement,TResult}#Insert(nint,System.ReadOnlySpan{`0})
  name.vb: Langly.IInsert<nint,TElement,TResult>.Insert(nint, ReadOnlySpan(Of TElement))
  fullName: Langly.IInsert<TElement, TResult>.Langly.IInsert<nint, TElement, TResult>.Insert(nint, System.ReadOnlySpan<TElement>)
  fullName.vb: Langly.IInsert(Of TElement, TResult).Langly.IInsert<nint,TElement,TResult>.Insert(nint, System.ReadOnlySpan(Of TElement))
  nameWithType: IInsert<TElement, TResult>.IInsert<nint, TElement, TResult>.Insert(nint, ReadOnlySpan<TElement>)
  nameWithType.vb: IInsert(Of TElement, TResult).Langly.IInsert<nint,TElement,TResult>.Insert(nint, ReadOnlySpan(Of TElement))
- uid: Langly.IInsert`2.Langly#IInsert{nint,TElement,TResult}#Insert*
  name: IInsert<nint, TElement, TResult>.Insert
  href: api/Langly.IInsert-2.html#Langly_IInsert_2_Langly_IInsert_nint_TElement_TResult__Insert_
  commentId: Overload:Langly.IInsert`2.Langly#IInsert{nint,TElement,TResult}#Insert
  isSpec: "True"
  name.vb: Langly.IInsert<nint,TElement,TResult>.Insert
  fullName: Langly.IInsert<TElement, TResult>.Langly.IInsert<nint, TElement, TResult>.Insert
  fullName.vb: Langly.IInsert(Of TElement, TResult).Langly.IInsert<nint,TElement,TResult>.Insert
  nameWithType: IInsert<TElement, TResult>.IInsert<nint, TElement, TResult>.Insert
  nameWithType.vb: IInsert(Of TElement, TResult).Langly.IInsert<nint,TElement,TResult>.Insert
- uid: Langly.IInsert`2.Langly#IInsert{nint,TElement,TResult}#Insert``1(nint,Langly.ISequence{`0,``0})
  name: IInsert<nint, TElement, TResult>.Insert<TEnumerator>(nint, ISequence<TElement, TEnumerator>)
  href: api/Langly.IInsert-2.html#Langly_IInsert_2_Langly_IInsert_nint_TElement_TResult__Insert__1_nint_Langly_ISequence__0___0__
  commentId: M:Langly.IInsert`2.Langly#IInsert{nint,TElement,TResult}#Insert``1(nint,Langly.ISequence{`0,``0})
  name.vb: Langly.IInsert<nint,TElement,TResult>.Insert(Of TEnumerator)(nint, ISequence(Of TElement, TEnumerator))
  fullName: Langly.IInsert<TElement, TResult>.Langly.IInsert<nint, TElement, TResult>.Insert<TEnumerator>(nint, Langly.ISequence<TElement, TEnumerator>)
  fullName.vb: Langly.IInsert(Of TElement, TResult).Langly.IInsert<nint,TElement,TResult>.Insert(Of TEnumerator)(nint, Langly.ISequence(Of TElement, TEnumerator))
  nameWithType: IInsert<TElement, TResult>.IInsert<nint, TElement, TResult>.Insert<TEnumerator>(nint, ISequence<TElement, TEnumerator>)
  nameWithType.vb: IInsert(Of TElement, TResult).Langly.IInsert<nint,TElement,TResult>.Insert(Of TEnumerator)(nint, ISequence(Of TElement, TEnumerator))
- uid: Langly.IInsert`3
  name: IInsert<TIndex, TElement, TResult>
  href: api/Langly.IInsert-3.html
  commentId: T:Langly.IInsert`3
  name.vb: IInsert(Of TIndex, TElement, TResult)
  fullName: Langly.IInsert<TIndex, TElement, TResult>
  fullName.vb: Langly.IInsert(Of TIndex, TElement, TResult)
  nameWithType: IInsert<TIndex, TElement, TResult>
  nameWithType.vb: IInsert(Of TIndex, TElement, TResult)
- uid: Langly.IInsert`3.Insert(`0,`1)
  name: Insert(TIndex, TElement)
  href: api/Langly.IInsert-3.html#Langly_IInsert_3_Insert__0__1_
  commentId: M:Langly.IInsert`3.Insert(`0,`1)
  fullName: Langly.IInsert<TIndex, TElement, TResult>.Insert(TIndex, TElement)
  fullName.vb: Langly.IInsert(Of TIndex, TElement, TResult).Insert(TIndex, TElement)
  nameWithType: IInsert<TIndex, TElement, TResult>.Insert(TIndex, TElement)
  nameWithType.vb: IInsert(Of TIndex, TElement, TResult).Insert(TIndex, TElement)
- uid: Langly.IInsert`3.Insert(`0,`1[])
  name: Insert(TIndex, TElement[])
  href: api/Langly.IInsert-3.html#Langly_IInsert_3_Insert__0__1___
  commentId: M:Langly.IInsert`3.Insert(`0,`1[])
  name.vb: Insert(TIndex, TElement())
  fullName: Langly.IInsert<TIndex, TElement, TResult>.Insert(TIndex, TElement[])
  fullName.vb: Langly.IInsert(Of TIndex, TElement, TResult).Insert(TIndex, TElement())
  nameWithType: IInsert<TIndex, TElement, TResult>.Insert(TIndex, TElement[])
  nameWithType.vb: IInsert(Of TIndex, TElement, TResult).Insert(TIndex, TElement())
- uid: Langly.IInsert`3.Insert(`0,System.Memory{`1})
  name: Insert(TIndex, Memory<TElement>)
  href: api/Langly.IInsert-3.html#Langly_IInsert_3_Insert__0_System_Memory__1__
  commentId: M:Langly.IInsert`3.Insert(`0,System.Memory{`1})
  name.vb: Insert(TIndex, Memory(Of TElement))
  fullName: Langly.IInsert<TIndex, TElement, TResult>.Insert(TIndex, System.Memory<TElement>)
  fullName.vb: Langly.IInsert(Of TIndex, TElement, TResult).Insert(TIndex, System.Memory(Of TElement))
  nameWithType: IInsert<TIndex, TElement, TResult>.Insert(TIndex, Memory<TElement>)
  nameWithType.vb: IInsert(Of TIndex, TElement, TResult).Insert(TIndex, Memory(Of TElement))
- uid: Langly.IInsert`3.Insert(`0,System.ReadOnlyMemory{`1})
  name: Insert(TIndex, ReadOnlyMemory<TElement>)
  href: api/Langly.IInsert-3.html#Langly_IInsert_3_Insert__0_System_ReadOnlyMemory__1__
  commentId: M:Langly.IInsert`3.Insert(`0,System.ReadOnlyMemory{`1})
  name.vb: Insert(TIndex, ReadOnlyMemory(Of TElement))
  fullName: Langly.IInsert<TIndex, TElement, TResult>.Insert(TIndex, System.ReadOnlyMemory<TElement>)
  fullName.vb: Langly.IInsert(Of TIndex, TElement, TResult).Insert(TIndex, System.ReadOnlyMemory(Of TElement))
  nameWithType: IInsert<TIndex, TElement, TResult>.Insert(TIndex, ReadOnlyMemory<TElement>)
  nameWithType.vb: IInsert(Of TIndex, TElement, TResult).Insert(TIndex, ReadOnlyMemory(Of TElement))
- uid: Langly.IInsert`3.Insert(`0,System.ReadOnlySpan{`1})
  name: Insert(TIndex, ReadOnlySpan<TElement>)
  href: api/Langly.IInsert-3.html#Langly_IInsert_3_Insert__0_System_ReadOnlySpan__1__
  commentId: M:Langly.IInsert`3.Insert(`0,System.ReadOnlySpan{`1})
  name.vb: Insert(TIndex, ReadOnlySpan(Of TElement))
  fullName: Langly.IInsert<TIndex, TElement, TResult>.Insert(TIndex, System.ReadOnlySpan<TElement>)
  fullName.vb: Langly.IInsert(Of TIndex, TElement, TResult).Insert(TIndex, System.ReadOnlySpan(Of TElement))
  nameWithType: IInsert<TIndex, TElement, TResult>.Insert(TIndex, ReadOnlySpan<TElement>)
  nameWithType.vb: IInsert(Of TIndex, TElement, TResult).Insert(TIndex, ReadOnlySpan(Of TElement))
- uid: Langly.IInsert`3.Insert(`0,System.Span{`1})
  name: Insert(TIndex, Span<TElement>)
  href: api/Langly.IInsert-3.html#Langly_IInsert_3_Insert__0_System_Span__1__
  commentId: M:Langly.IInsert`3.Insert(`0,System.Span{`1})
  name.vb: Insert(TIndex, Span(Of TElement))
  fullName: Langly.IInsert<TIndex, TElement, TResult>.Insert(TIndex, System.Span<TElement>)
  fullName.vb: Langly.IInsert(Of TIndex, TElement, TResult).Insert(TIndex, System.Span(Of TElement))
  nameWithType: IInsert<TIndex, TElement, TResult>.Insert(TIndex, Span<TElement>)
  nameWithType.vb: IInsert(Of TIndex, TElement, TResult).Insert(TIndex, Span(Of TElement))
- uid: Langly.IInsert`3.Insert*
  name: Insert
  href: api/Langly.IInsert-3.html#Langly_IInsert_3_Insert_
  commentId: Overload:Langly.IInsert`3.Insert
  isSpec: "True"
  fullName: Langly.IInsert<TIndex, TElement, TResult>.Insert
  fullName.vb: Langly.IInsert(Of TIndex, TElement, TResult).Insert
  nameWithType: IInsert<TIndex, TElement, TResult>.Insert
  nameWithType.vb: IInsert(Of TIndex, TElement, TResult).Insert
- uid: Langly.IInsert`3.Insert``1(`0,Langly.ISequence{`1,``0})
  name: Insert<TEnumerator>(TIndex, ISequence<TElement, TEnumerator>)
  href: api/Langly.IInsert-3.html#Langly_IInsert_3_Insert__1__0_Langly_ISequence__1___0__
  commentId: M:Langly.IInsert`3.Insert``1(`0,Langly.ISequence{`1,``0})
  name.vb: Insert(Of TEnumerator)(TIndex, ISequence(Of TElement, TEnumerator))
  fullName: Langly.IInsert<TIndex, TElement, TResult>.Insert<TEnumerator>(TIndex, Langly.ISequence<TElement, TEnumerator>)
  fullName.vb: Langly.IInsert(Of TIndex, TElement, TResult).Insert(Of TEnumerator)(TIndex, Langly.ISequence(Of TElement, TEnumerator))
  nameWithType: IInsert<TIndex, TElement, TResult>.Insert<TEnumerator>(TIndex, ISequence<TElement, TEnumerator>)
  nameWithType.vb: IInsert(Of TIndex, TElement, TResult).Insert(Of TEnumerator)(TIndex, ISequence(Of TElement, TEnumerator))
- uid: Langly.IPeek`2
  name: IPeek<TElement, TResult>
  href: api/Langly.IPeek-2.html
  commentId: T:Langly.IPeek`2
  name.vb: IPeek(Of TElement, TResult)
  fullName: Langly.IPeek<TElement, TResult>
  fullName.vb: Langly.IPeek(Of TElement, TResult)
  nameWithType: IPeek<TElement, TResult>
  nameWithType.vb: IPeek(Of TElement, TResult)
- uid: Langly.IPeek`2.Peek(`0@)
  name: Peek(out TElement)
  href: api/Langly.IPeek-2.html#Langly_IPeek_2_Peek__0__
  commentId: M:Langly.IPeek`2.Peek(`0@)
  name.vb: Peek(ByRef TElement)
  fullName: Langly.IPeek<TElement, TResult>.Peek(out TElement)
  fullName.vb: Langly.IPeek(Of TElement, TResult).Peek(ByRef TElement)
  nameWithType: IPeek<TElement, TResult>.Peek(out TElement)
  nameWithType.vb: IPeek(Of TElement, TResult).Peek(ByRef TElement)
- uid: Langly.IPeek`2.Peek*
  name: Peek
  href: api/Langly.IPeek-2.html#Langly_IPeek_2_Peek_
  commentId: Overload:Langly.IPeek`2.Peek
  isSpec: "True"
  fullName: Langly.IPeek<TElement, TResult>.Peek
  fullName.vb: Langly.IPeek(Of TElement, TResult).Peek
  nameWithType: IPeek<TElement, TResult>.Peek
  nameWithType.vb: IPeek(Of TElement, TResult).Peek
- uid: Langly.IPop`2
  name: IPop<TElement, TResult>
  href: api/Langly.IPop-2.html
  commentId: T:Langly.IPop`2
  name.vb: IPop(Of TElement, TResult)
  fullName: Langly.IPop<TElement, TResult>
  fullName.vb: Langly.IPop(Of TElement, TResult)
  nameWithType: IPop<TElement, TResult>
  nameWithType.vb: IPop(Of TElement, TResult)
- uid: Langly.IPop`2.Pop(`0@)
  name: Pop(out TElement)
  href: api/Langly.IPop-2.html#Langly_IPop_2_Pop__0__
  commentId: M:Langly.IPop`2.Pop(`0@)
  name.vb: Pop(ByRef TElement)
  fullName: Langly.IPop<TElement, TResult>.Pop(out TElement)
  fullName.vb: Langly.IPop(Of TElement, TResult).Pop(ByRef TElement)
  nameWithType: IPop<TElement, TResult>.Pop(out TElement)
  nameWithType.vb: IPop(Of TElement, TResult).Pop(ByRef TElement)
- uid: Langly.IPop`2.Pop(nint,`0[]@)
  name: Pop(nint, out TElement[])
  href: api/Langly.IPop-2.html#Langly_IPop_2_Pop_nint__0____
  commentId: M:Langly.IPop`2.Pop(nint,`0[]@)
  name.vb: Pop(nint, ByRef TElement())
  fullName: Langly.IPop<TElement, TResult>.Pop(nint, out TElement[])
  fullName.vb: Langly.IPop(Of TElement, TResult).Pop(nint, ByRef TElement())
  nameWithType: IPop<TElement, TResult>.Pop(nint, out TElement[])
  nameWithType.vb: IPop(Of TElement, TResult).Pop(nint, ByRef TElement())
- uid: Langly.IPop`2.Pop*
  name: Pop
  href: api/Langly.IPop-2.html#Langly_IPop_2_Pop_
  commentId: Overload:Langly.IPop`2.Pop
  isSpec: "True"
  fullName: Langly.IPop<TElement, TResult>.Pop
  fullName.vb: Langly.IPop(Of TElement, TResult).Pop
  nameWithType: IPop<TElement, TResult>.Pop
  nameWithType.vb: IPop(Of TElement, TResult).Pop
- uid: Langly.IPostpend`2
  name: IPostpend<TElement, TResult>
  href: api/Langly.IPostpend-2.html
  commentId: T:Langly.IPostpend`2
  name.vb: IPostpend(Of TElement, TResult)
  fullName: Langly.IPostpend<TElement, TResult>
  fullName.vb: Langly.IPostpend(Of TElement, TResult)
  nameWithType: IPostpend<TElement, TResult>
  nameWithType.vb: IPostpend(Of TElement, TResult)
- uid: Langly.IPostpend`2.Postpend(`0)
  name: Postpend(TElement)
  href: api/Langly.IPostpend-2.html#Langly_IPostpend_2_Postpend__0_
  commentId: M:Langly.IPostpend`2.Postpend(`0)
  fullName: Langly.IPostpend<TElement, TResult>.Postpend(TElement)
  fullName.vb: Langly.IPostpend(Of TElement, TResult).Postpend(TElement)
  nameWithType: IPostpend<TElement, TResult>.Postpend(TElement)
  nameWithType.vb: IPostpend(Of TElement, TResult).Postpend(TElement)
- uid: Langly.IPostpend`2.Postpend(`0[])
  name: Postpend(TElement[])
  href: api/Langly.IPostpend-2.html#Langly_IPostpend_2_Postpend__0___
  commentId: M:Langly.IPostpend`2.Postpend(`0[])
  name.vb: Postpend(TElement())
  fullName: Langly.IPostpend<TElement, TResult>.Postpend(TElement[])
  fullName.vb: Langly.IPostpend(Of TElement, TResult).Postpend(TElement())
  nameWithType: IPostpend<TElement, TResult>.Postpend(TElement[])
  nameWithType.vb: IPostpend(Of TElement, TResult).Postpend(TElement())
- uid: Langly.IPostpend`2.Postpend(System.Memory{`0})
  name: Postpend(Memory<TElement>)
  href: api/Langly.IPostpend-2.html#Langly_IPostpend_2_Postpend_System_Memory__0__
  commentId: M:Langly.IPostpend`2.Postpend(System.Memory{`0})
  name.vb: Postpend(Memory(Of TElement))
  fullName: Langly.IPostpend<TElement, TResult>.Postpend(System.Memory<TElement>)
  fullName.vb: Langly.IPostpend(Of TElement, TResult).Postpend(System.Memory(Of TElement))
  nameWithType: IPostpend<TElement, TResult>.Postpend(Memory<TElement>)
  nameWithType.vb: IPostpend(Of TElement, TResult).Postpend(Memory(Of TElement))
- uid: Langly.IPostpend`2.Postpend(System.ReadOnlyMemory{`0})
  name: Postpend(ReadOnlyMemory<TElement>)
  href: api/Langly.IPostpend-2.html#Langly_IPostpend_2_Postpend_System_ReadOnlyMemory__0__
  commentId: M:Langly.IPostpend`2.Postpend(System.ReadOnlyMemory{`0})
  name.vb: Postpend(ReadOnlyMemory(Of TElement))
  fullName: Langly.IPostpend<TElement, TResult>.Postpend(System.ReadOnlyMemory<TElement>)
  fullName.vb: Langly.IPostpend(Of TElement, TResult).Postpend(System.ReadOnlyMemory(Of TElement))
  nameWithType: IPostpend<TElement, TResult>.Postpend(ReadOnlyMemory<TElement>)
  nameWithType.vb: IPostpend(Of TElement, TResult).Postpend(ReadOnlyMemory(Of TElement))
- uid: Langly.IPostpend`2.Postpend(System.ReadOnlySpan{`0})
  name: Postpend(ReadOnlySpan<TElement>)
  href: api/Langly.IPostpend-2.html#Langly_IPostpend_2_Postpend_System_ReadOnlySpan__0__
  commentId: M:Langly.IPostpend`2.Postpend(System.ReadOnlySpan{`0})
  name.vb: Postpend(ReadOnlySpan(Of TElement))
  fullName: Langly.IPostpend<TElement, TResult>.Postpend(System.ReadOnlySpan<TElement>)
  fullName.vb: Langly.IPostpend(Of TElement, TResult).Postpend(System.ReadOnlySpan(Of TElement))
  nameWithType: IPostpend<TElement, TResult>.Postpend(ReadOnlySpan<TElement>)
  nameWithType.vb: IPostpend(Of TElement, TResult).Postpend(ReadOnlySpan(Of TElement))
- uid: Langly.IPostpend`2.Postpend(System.Span{`0})
  name: Postpend(Span<TElement>)
  href: api/Langly.IPostpend-2.html#Langly_IPostpend_2_Postpend_System_Span__0__
  commentId: M:Langly.IPostpend`2.Postpend(System.Span{`0})
  name.vb: Postpend(Span(Of TElement))
  fullName: Langly.IPostpend<TElement, TResult>.Postpend(System.Span<TElement>)
  fullName.vb: Langly.IPostpend(Of TElement, TResult).Postpend(System.Span(Of TElement))
  nameWithType: IPostpend<TElement, TResult>.Postpend(Span<TElement>)
  nameWithType.vb: IPostpend(Of TElement, TResult).Postpend(Span(Of TElement))
- uid: Langly.IPostpend`2.Postpend*
  name: Postpend
  href: api/Langly.IPostpend-2.html#Langly_IPostpend_2_Postpend_
  commentId: Overload:Langly.IPostpend`2.Postpend
  isSpec: "True"
  fullName: Langly.IPostpend<TElement, TResult>.Postpend
  fullName.vb: Langly.IPostpend(Of TElement, TResult).Postpend
  nameWithType: IPostpend<TElement, TResult>.Postpend
  nameWithType.vb: IPostpend(Of TElement, TResult).Postpend
- uid: Langly.IPrepend`2
  name: IPrepend<TElement, TResult>
  href: api/Langly.IPrepend-2.html
  commentId: T:Langly.IPrepend`2
  name.vb: IPrepend(Of TElement, TResult)
  fullName: Langly.IPrepend<TElement, TResult>
  fullName.vb: Langly.IPrepend(Of TElement, TResult)
  nameWithType: IPrepend<TElement, TResult>
  nameWithType.vb: IPrepend(Of TElement, TResult)
- uid: Langly.IPrepend`2.Prepend(`0)
  name: Prepend(TElement)
  href: api/Langly.IPrepend-2.html#Langly_IPrepend_2_Prepend__0_
  commentId: M:Langly.IPrepend`2.Prepend(`0)
  fullName: Langly.IPrepend<TElement, TResult>.Prepend(TElement)
  fullName.vb: Langly.IPrepend(Of TElement, TResult).Prepend(TElement)
  nameWithType: IPrepend<TElement, TResult>.Prepend(TElement)
  nameWithType.vb: IPrepend(Of TElement, TResult).Prepend(TElement)
- uid: Langly.IPrepend`2.Prepend(`0[])
  name: Prepend(TElement[])
  href: api/Langly.IPrepend-2.html#Langly_IPrepend_2_Prepend__0___
  commentId: M:Langly.IPrepend`2.Prepend(`0[])
  name.vb: Prepend(TElement())
  fullName: Langly.IPrepend<TElement, TResult>.Prepend(TElement[])
  fullName.vb: Langly.IPrepend(Of TElement, TResult).Prepend(TElement())
  nameWithType: IPrepend<TElement, TResult>.Prepend(TElement[])
  nameWithType.vb: IPrepend(Of TElement, TResult).Prepend(TElement())
- uid: Langly.IPrepend`2.Prepend(System.Memory{`0})
  name: Prepend(Memory<TElement>)
  href: api/Langly.IPrepend-2.html#Langly_IPrepend_2_Prepend_System_Memory__0__
  commentId: M:Langly.IPrepend`2.Prepend(System.Memory{`0})
  name.vb: Prepend(Memory(Of TElement))
  fullName: Langly.IPrepend<TElement, TResult>.Prepend(System.Memory<TElement>)
  fullName.vb: Langly.IPrepend(Of TElement, TResult).Prepend(System.Memory(Of TElement))
  nameWithType: IPrepend<TElement, TResult>.Prepend(Memory<TElement>)
  nameWithType.vb: IPrepend(Of TElement, TResult).Prepend(Memory(Of TElement))
- uid: Langly.IPrepend`2.Prepend(System.ReadOnlyMemory{`0})
  name: Prepend(ReadOnlyMemory<TElement>)
  href: api/Langly.IPrepend-2.html#Langly_IPrepend_2_Prepend_System_ReadOnlyMemory__0__
  commentId: M:Langly.IPrepend`2.Prepend(System.ReadOnlyMemory{`0})
  name.vb: Prepend(ReadOnlyMemory(Of TElement))
  fullName: Langly.IPrepend<TElement, TResult>.Prepend(System.ReadOnlyMemory<TElement>)
  fullName.vb: Langly.IPrepend(Of TElement, TResult).Prepend(System.ReadOnlyMemory(Of TElement))
  nameWithType: IPrepend<TElement, TResult>.Prepend(ReadOnlyMemory<TElement>)
  nameWithType.vb: IPrepend(Of TElement, TResult).Prepend(ReadOnlyMemory(Of TElement))
- uid: Langly.IPrepend`2.Prepend(System.ReadOnlySpan{`0})
  name: Prepend(ReadOnlySpan<TElement>)
  href: api/Langly.IPrepend-2.html#Langly_IPrepend_2_Prepend_System_ReadOnlySpan__0__
  commentId: M:Langly.IPrepend`2.Prepend(System.ReadOnlySpan{`0})
  name.vb: Prepend(ReadOnlySpan(Of TElement))
  fullName: Langly.IPrepend<TElement, TResult>.Prepend(System.ReadOnlySpan<TElement>)
  fullName.vb: Langly.IPrepend(Of TElement, TResult).Prepend(System.ReadOnlySpan(Of TElement))
  nameWithType: IPrepend<TElement, TResult>.Prepend(ReadOnlySpan<TElement>)
  nameWithType.vb: IPrepend(Of TElement, TResult).Prepend(ReadOnlySpan(Of TElement))
- uid: Langly.IPrepend`2.Prepend(System.Span{`0})
  name: Prepend(Span<TElement>)
  href: api/Langly.IPrepend-2.html#Langly_IPrepend_2_Prepend_System_Span__0__
  commentId: M:Langly.IPrepend`2.Prepend(System.Span{`0})
  name.vb: Prepend(Span(Of TElement))
  fullName: Langly.IPrepend<TElement, TResult>.Prepend(System.Span<TElement>)
  fullName.vb: Langly.IPrepend(Of TElement, TResult).Prepend(System.Span(Of TElement))
  nameWithType: IPrepend<TElement, TResult>.Prepend(Span<TElement>)
  nameWithType.vb: IPrepend(Of TElement, TResult).Prepend(Span(Of TElement))
- uid: Langly.IPrepend`2.Prepend*
  name: Prepend
  href: api/Langly.IPrepend-2.html#Langly_IPrepend_2_Prepend_
  commentId: Overload:Langly.IPrepend`2.Prepend
  isSpec: "True"
  fullName: Langly.IPrepend<TElement, TResult>.Prepend
  fullName.vb: Langly.IPrepend(Of TElement, TResult).Prepend
  nameWithType: IPrepend<TElement, TResult>.Prepend
  nameWithType.vb: IPrepend(Of TElement, TResult).Prepend
- uid: Langly.IPush`2
  name: IPush<TElement, TResult>
  href: api/Langly.IPush-2.html
  commentId: T:Langly.IPush`2
  name.vb: IPush(Of TElement, TResult)
  fullName: Langly.IPush<TElement, TResult>
  fullName.vb: Langly.IPush(Of TElement, TResult)
  nameWithType: IPush<TElement, TResult>
  nameWithType.vb: IPush(Of TElement, TResult)
- uid: Langly.IPush`2.Push(`0)
  name: Push(TElement)
  href: api/Langly.IPush-2.html#Langly_IPush_2_Push__0_
  commentId: M:Langly.IPush`2.Push(`0)
  fullName: Langly.IPush<TElement, TResult>.Push(TElement)
  fullName.vb: Langly.IPush(Of TElement, TResult).Push(TElement)
  nameWithType: IPush<TElement, TResult>.Push(TElement)
  nameWithType.vb: IPush(Of TElement, TResult).Push(TElement)
- uid: Langly.IPush`2.Push(`0[])
  name: Push(TElement[])
  href: api/Langly.IPush-2.html#Langly_IPush_2_Push__0___
  commentId: M:Langly.IPush`2.Push(`0[])
  name.vb: Push(TElement())
  fullName: Langly.IPush<TElement, TResult>.Push(TElement[])
  fullName.vb: Langly.IPush(Of TElement, TResult).Push(TElement())
  nameWithType: IPush<TElement, TResult>.Push(TElement[])
  nameWithType.vb: IPush(Of TElement, TResult).Push(TElement())
- uid: Langly.IPush`2.Push(System.Memory{`0})
  name: Push(Memory<TElement>)
  href: api/Langly.IPush-2.html#Langly_IPush_2_Push_System_Memory__0__
  commentId: M:Langly.IPush`2.Push(System.Memory{`0})
  name.vb: Push(Memory(Of TElement))
  fullName: Langly.IPush<TElement, TResult>.Push(System.Memory<TElement>)
  fullName.vb: Langly.IPush(Of TElement, TResult).Push(System.Memory(Of TElement))
  nameWithType: IPush<TElement, TResult>.Push(Memory<TElement>)
  nameWithType.vb: IPush(Of TElement, TResult).Push(Memory(Of TElement))
- uid: Langly.IPush`2.Push(System.ReadOnlyMemory{`0})
  name: Push(ReadOnlyMemory<TElement>)
  href: api/Langly.IPush-2.html#Langly_IPush_2_Push_System_ReadOnlyMemory__0__
  commentId: M:Langly.IPush`2.Push(System.ReadOnlyMemory{`0})
  name.vb: Push(ReadOnlyMemory(Of TElement))
  fullName: Langly.IPush<TElement, TResult>.Push(System.ReadOnlyMemory<TElement>)
  fullName.vb: Langly.IPush(Of TElement, TResult).Push(System.ReadOnlyMemory(Of TElement))
  nameWithType: IPush<TElement, TResult>.Push(ReadOnlyMemory<TElement>)
  nameWithType.vb: IPush(Of TElement, TResult).Push(ReadOnlyMemory(Of TElement))
- uid: Langly.IPush`2.Push(System.ReadOnlySpan{`0})
  name: Push(ReadOnlySpan<TElement>)
  href: api/Langly.IPush-2.html#Langly_IPush_2_Push_System_ReadOnlySpan__0__
  commentId: M:Langly.IPush`2.Push(System.ReadOnlySpan{`0})
  name.vb: Push(ReadOnlySpan(Of TElement))
  fullName: Langly.IPush<TElement, TResult>.Push(System.ReadOnlySpan<TElement>)
  fullName.vb: Langly.IPush(Of TElement, TResult).Push(System.ReadOnlySpan(Of TElement))
  nameWithType: IPush<TElement, TResult>.Push(ReadOnlySpan<TElement>)
  nameWithType.vb: IPush(Of TElement, TResult).Push(ReadOnlySpan(Of TElement))
- uid: Langly.IPush`2.Push(System.Span{`0})
  name: Push(Span<TElement>)
  href: api/Langly.IPush-2.html#Langly_IPush_2_Push_System_Span__0__
  commentId: M:Langly.IPush`2.Push(System.Span{`0})
  name.vb: Push(Span(Of TElement))
  fullName: Langly.IPush<TElement, TResult>.Push(System.Span<TElement>)
  fullName.vb: Langly.IPush(Of TElement, TResult).Push(System.Span(Of TElement))
  nameWithType: IPush<TElement, TResult>.Push(Span<TElement>)
  nameWithType.vb: IPush(Of TElement, TResult).Push(Span(Of TElement))
- uid: Langly.IPush`2.Push*
  name: Push
  href: api/Langly.IPush-2.html#Langly_IPush_2_Push_
  commentId: Overload:Langly.IPush`2.Push
  isSpec: "True"
  fullName: Langly.IPush<TElement, TResult>.Push
  fullName.vb: Langly.IPush(Of TElement, TResult).Push
  nameWithType: IPush<TElement, TResult>.Push
  nameWithType.vb: IPush(Of TElement, TResult).Push
- uid: Langly.IPush`2.Push``1(Langly.ISequence{`0,``0})
  name: Push<TEnumerator>(ISequence<TElement, TEnumerator>)
  href: api/Langly.IPush-2.html#Langly_IPush_2_Push__1_Langly_ISequence__0___0__
  commentId: M:Langly.IPush`2.Push``1(Langly.ISequence{`0,``0})
  name.vb: Push(Of TEnumerator)(ISequence(Of TElement, TEnumerator))
  fullName: Langly.IPush<TElement, TResult>.Push<TEnumerator>(Langly.ISequence<TElement, TEnumerator>)
  fullName.vb: Langly.IPush(Of TElement, TResult).Push(Of TEnumerator)(Langly.ISequence(Of TElement, TEnumerator))
  nameWithType: IPush<TElement, TResult>.Push<TEnumerator>(ISequence<TElement, TEnumerator>)
  nameWithType.vb: IPush(Of TElement, TResult).Push(Of TEnumerator)(ISequence(Of TElement, TEnumerator))
- uid: Langly.IReplace`2
  name: IReplace<TElement, TResult>
  href: api/Langly.IReplace-2.html
  commentId: T:Langly.IReplace`2
  name.vb: IReplace(Of TElement, TResult)
  fullName: Langly.IReplace<TElement, TResult>
  fullName.vb: Langly.IReplace(Of TElement, TResult)
  nameWithType: IReplace<TElement, TResult>
  nameWithType.vb: IReplace(Of TElement, TResult)
- uid: Langly.IReplace`3
  name: IReplace<TSearch, TReplace, TResult>
  href: api/Langly.IReplace-3.html
  commentId: T:Langly.IReplace`3
  name.vb: IReplace(Of TSearch, TReplace, TResult)
  fullName: Langly.IReplace<TSearch, TReplace, TResult>
  fullName.vb: Langly.IReplace(Of TSearch, TReplace, TResult)
  nameWithType: IReplace<TSearch, TReplace, TResult>
  nameWithType.vb: IReplace(Of TSearch, TReplace, TResult)
- uid: Langly.IReplace`3.Replace(`0,`1)
  name: Replace(TSearch, TReplace)
  href: api/Langly.IReplace-3.html#Langly_IReplace_3_Replace__0__1_
  commentId: M:Langly.IReplace`3.Replace(`0,`1)
  fullName: Langly.IReplace<TSearch, TReplace, TResult>.Replace(TSearch, TReplace)
  fullName.vb: Langly.IReplace(Of TSearch, TReplace, TResult).Replace(TSearch, TReplace)
  nameWithType: IReplace<TSearch, TReplace, TResult>.Replace(TSearch, TReplace)
  nameWithType.vb: IReplace(Of TSearch, TReplace, TResult).Replace(TSearch, TReplace)
- uid: Langly.IReplace`3.Replace*
  name: Replace
  href: api/Langly.IReplace-3.html#Langly_IReplace_3_Replace_
  commentId: Overload:Langly.IReplace`3.Replace
  isSpec: "True"
  fullName: Langly.IReplace<TSearch, TReplace, TResult>.Replace
  fullName.vb: Langly.IReplace(Of TSearch, TReplace, TResult).Replace
  nameWithType: IReplace<TSearch, TReplace, TResult>.Replace
  nameWithType.vb: IReplace(Of TSearch, TReplace, TResult).Replace
- uid: Langly.IResizable
  name: IResizable
  href: api/Langly.IResizable.html
  commentId: T:Langly.IResizable
  fullName: Langly.IResizable
  nameWithType: IResizable
- uid: Langly.IResizable.Capacity
  name: Capacity
  href: api/Langly.IResizable.html#Langly_IResizable_Capacity
  commentId: P:Langly.IResizable.Capacity
  fullName: Langly.IResizable.Capacity
  nameWithType: IResizable.Capacity
- uid: Langly.IResizable.Capacity*
  name: Capacity
  href: api/Langly.IResizable.html#Langly_IResizable_Capacity_
  commentId: Overload:Langly.IResizable.Capacity
  isSpec: "True"
  fullName: Langly.IResizable.Capacity
  nameWithType: IResizable.Capacity
- uid: Langly.IResizable.Grow
  name: Grow()
  href: api/Langly.IResizable.html#Langly_IResizable_Grow
  commentId: M:Langly.IResizable.Grow
  fullName: Langly.IResizable.Grow()
  nameWithType: IResizable.Grow()
- uid: Langly.IResizable.Grow*
  name: Grow
  href: api/Langly.IResizable.html#Langly_IResizable_Grow_
  commentId: Overload:Langly.IResizable.Grow
  isSpec: "True"
  fullName: Langly.IResizable.Grow
  nameWithType: IResizable.Grow
- uid: Langly.IResizable.Langly#ICapacity#Capacity
  name: ICapacity.Capacity
  href: api/Langly.IResizable.html#Langly_IResizable_Langly_ICapacity_Capacity
  commentId: P:Langly.IResizable.Langly#ICapacity#Capacity
  name.vb: Langly.ICapacity.Capacity
  fullName: Langly.IResizable.Langly.ICapacity.Capacity
  nameWithType: IResizable.ICapacity.Capacity
  nameWithType.vb: IResizable.Langly.ICapacity.Capacity
- uid: Langly.IResizable.Langly#ICapacity#Capacity*
  name: ICapacity.Capacity
  href: api/Langly.IResizable.html#Langly_IResizable_Langly_ICapacity_Capacity_
  commentId: Overload:Langly.IResizable.Langly#ICapacity#Capacity
  isSpec: "True"
  name.vb: Langly.ICapacity.Capacity
  fullName: Langly.IResizable.Langly.ICapacity.Capacity
  nameWithType: IResizable.ICapacity.Capacity
  nameWithType.vb: IResizable.Langly.ICapacity.Capacity
- uid: Langly.IResizable.Resize(nint)
  name: Resize(nint)
  href: api/Langly.IResizable.html#Langly_IResizable_Resize_nint_
  commentId: M:Langly.IResizable.Resize(nint)
  fullName: Langly.IResizable.Resize(nint)
  nameWithType: IResizable.Resize(nint)
- uid: Langly.IResizable.Resize*
  name: Resize
  href: api/Langly.IResizable.html#Langly_IResizable_Resize_
  commentId: Overload:Langly.IResizable.Resize
  isSpec: "True"
  fullName: Langly.IResizable.Resize
  nameWithType: IResizable.Resize
- uid: Langly.IResizable.Shrink
  name: Shrink()
  href: api/Langly.IResizable.html#Langly_IResizable_Shrink
  commentId: M:Langly.IResizable.Shrink
  fullName: Langly.IResizable.Shrink()
  nameWithType: IResizable.Shrink()
- uid: Langly.IResizable.Shrink*
  name: Shrink
  href: api/Langly.IResizable.html#Langly_IResizable_Shrink_
  commentId: Overload:Langly.IResizable.Shrink
  isSpec: "True"
  fullName: Langly.IResizable.Shrink
  nameWithType: IResizable.Shrink
- uid: Langly.ISequence`2
  name: ISequence<TMember, TEnumerator>
  href: api/Langly.ISequence-2.html
  commentId: T:Langly.ISequence`2
  name.vb: ISequence(Of TMember, TEnumerator)
  fullName: Langly.ISequence<TMember, TEnumerator>
  fullName.vb: Langly.ISequence(Of TMember, TEnumerator)
  nameWithType: ISequence<TMember, TEnumerator>
  nameWithType.vb: ISequence(Of TMember, TEnumerator)
- uid: Langly.ISequence`2.Fold(System.Func{`0,`0,`0},`0)
  name: Fold(Func<TMember, TMember, TMember>, TMember)
  href: api/Langly.ISequence-2.html#Langly_ISequence_2_Fold_System_Func__0__0__0___0_
  commentId: M:Langly.ISequence`2.Fold(System.Func{`0,`0,`0},`0)
  name.vb: Fold(Func(Of TMember, TMember, TMember), TMember)
  fullName: Langly.ISequence<TMember, TEnumerator>.Fold(System.Func<TMember, TMember, TMember>, TMember)
  fullName.vb: Langly.ISequence(Of TMember, TEnumerator).Fold(System.Func(Of TMember, TMember, TMember), TMember)
  nameWithType: ISequence<TMember, TEnumerator>.Fold(Func<TMember, TMember, TMember>, TMember)
  nameWithType.vb: ISequence(Of TMember, TEnumerator).Fold(Func(Of TMember, TMember, TMember), TMember)
- uid: Langly.ISequence`2.Fold*
  name: Fold
  href: api/Langly.ISequence-2.html#Langly_ISequence_2_Fold_
  commentId: Overload:Langly.ISequence`2.Fold
  isSpec: "True"
  fullName: Langly.ISequence<TMember, TEnumerator>.Fold
  fullName.vb: Langly.ISequence(Of TMember, TEnumerator).Fold
  nameWithType: ISequence<TMember, TEnumerator>.Fold
  nameWithType.vb: ISequence(Of TMember, TEnumerator).Fold
- uid: Langly.ISequence`2.GetEnumerator
  name: GetEnumerator()
  href: api/Langly.ISequence-2.html#Langly_ISequence_2_GetEnumerator
  commentId: M:Langly.ISequence`2.GetEnumerator
  fullName: Langly.ISequence<TMember, TEnumerator>.GetEnumerator()
  fullName.vb: Langly.ISequence(Of TMember, TEnumerator).GetEnumerator()
  nameWithType: ISequence<TMember, TEnumerator>.GetEnumerator()
  nameWithType.vb: ISequence(Of TMember, TEnumerator).GetEnumerator()
- uid: Langly.ISequence`2.GetEnumerator*
  name: GetEnumerator
  href: api/Langly.ISequence-2.html#Langly_ISequence_2_GetEnumerator_
  commentId: Overload:Langly.ISequence`2.GetEnumerator
  isSpec: "True"
  fullName: Langly.ISequence<TMember, TEnumerator>.GetEnumerator
  fullName.vb: Langly.ISequence(Of TMember, TEnumerator).GetEnumerator
  nameWithType: ISequence<TMember, TEnumerator>.GetEnumerator
  nameWithType.vb: ISequence(Of TMember, TEnumerator).GetEnumerator
- uid: Langly.ISequence`2.Langly#IContains{TMember}#Contains(`0)
  name: IContains<TMember>.Contains(TMember)
  href: api/Langly.ISequence-2.html#Langly_ISequence_2_Langly_IContains_TMember__Contains__0_
  commentId: M:Langly.ISequence`2.Langly#IContains{TMember}#Contains(`0)
  name.vb: Langly.IContains<TMember>.Contains(TMember)
  fullName: Langly.ISequence<TMember, TEnumerator>.Langly.IContains<TMember>.Contains(TMember)
  fullName.vb: Langly.ISequence(Of TMember, TEnumerator).Langly.IContains<TMember>.Contains(TMember)
  nameWithType: ISequence<TMember, TEnumerator>.IContains<TMember>.Contains(TMember)
  nameWithType.vb: ISequence(Of TMember, TEnumerator).Langly.IContains<TMember>.Contains(TMember)
- uid: Langly.ISequence`2.Langly#IContains{TMember}#Contains*
  name: IContains<TMember>.Contains
  href: api/Langly.ISequence-2.html#Langly_ISequence_2_Langly_IContains_TMember__Contains_
  commentId: Overload:Langly.ISequence`2.Langly#IContains{TMember}#Contains
  isSpec: "True"
  name.vb: Langly.IContains<TMember>.Contains
  fullName: Langly.ISequence<TMember, TEnumerator>.Langly.IContains<TMember>.Contains
  fullName.vb: Langly.ISequence(Of TMember, TEnumerator).Langly.IContains<TMember>.Contains
  nameWithType: ISequence<TMember, TEnumerator>.IContains<TMember>.Contains
  nameWithType.vb: ISequence(Of TMember, TEnumerator).Langly.IContains<TMember>.Contains
- uid: Langly.ISequence`2.Occurrences(`0)
  name: Occurrences(TMember)
  href: api/Langly.ISequence-2.html#Langly_ISequence_2_Occurrences__0_
  commentId: M:Langly.ISequence`2.Occurrences(`0)
  fullName: Langly.ISequence<TMember, TEnumerator>.Occurrences(TMember)
  fullName.vb: Langly.ISequence(Of TMember, TEnumerator).Occurrences(TMember)
  nameWithType: ISequence<TMember, TEnumerator>.Occurrences(TMember)
  nameWithType.vb: ISequence(Of TMember, TEnumerator).Occurrences(TMember)
- uid: Langly.ISequence`2.Occurrences(Langly.IEquals{`0})
  name: Occurrences(IEquals<TMember>)
  href: api/Langly.ISequence-2.html#Langly_ISequence_2_Occurrences_Langly_IEquals__0__
  commentId: M:Langly.ISequence`2.Occurrences(Langly.IEquals{`0})
  name.vb: Occurrences(IEquals(Of TMember))
  fullName: Langly.ISequence<TMember, TEnumerator>.Occurrences(Langly.IEquals<TMember>)
  fullName.vb: Langly.ISequence(Of TMember, TEnumerator).Occurrences(Langly.IEquals(Of TMember))
  nameWithType: ISequence<TMember, TEnumerator>.Occurrences(IEquals<TMember>)
  nameWithType.vb: ISequence(Of TMember, TEnumerator).Occurrences(IEquals(Of TMember))
- uid: Langly.ISequence`2.Occurrences(System.Predicate{`0})
  name: Occurrences(Predicate<TMember>)
  href: api/Langly.ISequence-2.html#Langly_ISequence_2_Occurrences_System_Predicate__0__
  commentId: M:Langly.ISequence`2.Occurrences(System.Predicate{`0})
  name.vb: Occurrences(Predicate(Of TMember))
  fullName: Langly.ISequence<TMember, TEnumerator>.Occurrences(System.Predicate<TMember>)
  fullName.vb: Langly.ISequence(Of TMember, TEnumerator).Occurrences(System.Predicate(Of TMember))
  nameWithType: ISequence<TMember, TEnumerator>.Occurrences(Predicate<TMember>)
  nameWithType.vb: ISequence(Of TMember, TEnumerator).Occurrences(Predicate(Of TMember))
- uid: Langly.ISequence`2.Occurrences*
  name: Occurrences
  href: api/Langly.ISequence-2.html#Langly_ISequence_2_Occurrences_
  commentId: Overload:Langly.ISequence`2.Occurrences
  isSpec: "True"
  fullName: Langly.ISequence<TMember, TEnumerator>.Occurrences
  fullName.vb: Langly.ISequence(Of TMember, TEnumerator).Occurrences
  nameWithType: ISequence<TMember, TEnumerator>.Occurrences
  nameWithType.vb: ISequence(Of TMember, TEnumerator).Occurrences
- uid: Langly.ISequence`2.System#Collections#Generic#IEnumerable{TMember}#GetEnumerator
  name: IEnumerable<TMember>.GetEnumerator()
  href: api/Langly.ISequence-2.html#Langly_ISequence_2_System_Collections_Generic_IEnumerable_TMember__GetEnumerator
  commentId: M:Langly.ISequence`2.System#Collections#Generic#IEnumerable{TMember}#GetEnumerator
  name.vb: System.Collections.Generic.IEnumerable<TMember>.GetEnumerator()
  fullName: Langly.ISequence<TMember, TEnumerator>.System.Collections.Generic.IEnumerable<TMember>.GetEnumerator()
  fullName.vb: Langly.ISequence(Of TMember, TEnumerator).System.Collections.Generic.IEnumerable<TMember>.GetEnumerator()
  nameWithType: ISequence<TMember, TEnumerator>.IEnumerable<TMember>.GetEnumerator()
  nameWithType.vb: ISequence(Of TMember, TEnumerator).System.Collections.Generic.IEnumerable<TMember>.GetEnumerator()
- uid: Langly.ISequence`2.System#Collections#Generic#IEnumerable{TMember}#GetEnumerator*
  name: IEnumerable<TMember>.GetEnumerator
  href: api/Langly.ISequence-2.html#Langly_ISequence_2_System_Collections_Generic_IEnumerable_TMember__GetEnumerator_
  commentId: Overload:Langly.ISequence`2.System#Collections#Generic#IEnumerable{TMember}#GetEnumerator
  isSpec: "True"
  name.vb: System.Collections.Generic.IEnumerable<TMember>.GetEnumerator
  fullName: Langly.ISequence<TMember, TEnumerator>.System.Collections.Generic.IEnumerable<TMember>.GetEnumerator
  fullName.vb: Langly.ISequence(Of TMember, TEnumerator).System.Collections.Generic.IEnumerable<TMember>.GetEnumerator
  nameWithType: ISequence<TMember, TEnumerator>.IEnumerable<TMember>.GetEnumerator
  nameWithType.vb: ISequence(Of TMember, TEnumerator).System.Collections.Generic.IEnumerable<TMember>.GetEnumerator
- uid: Langly.ISequence`2.System#Collections#IEnumerable#GetEnumerator
  name: IEnumerable.GetEnumerator()
  href: api/Langly.ISequence-2.html#Langly_ISequence_2_System_Collections_IEnumerable_GetEnumerator
  commentId: M:Langly.ISequence`2.System#Collections#IEnumerable#GetEnumerator
  name.vb: System.Collections.IEnumerable.GetEnumerator()
  fullName: Langly.ISequence<TMember, TEnumerator>.System.Collections.IEnumerable.GetEnumerator()
  fullName.vb: Langly.ISequence(Of TMember, TEnumerator).System.Collections.IEnumerable.GetEnumerator()
  nameWithType: ISequence<TMember, TEnumerator>.IEnumerable.GetEnumerator()
  nameWithType.vb: ISequence(Of TMember, TEnumerator).System.Collections.IEnumerable.GetEnumerator()
- uid: Langly.ISequence`2.System#Collections#IEnumerable#GetEnumerator*
  name: IEnumerable.GetEnumerator
  href: api/Langly.ISequence-2.html#Langly_ISequence_2_System_Collections_IEnumerable_GetEnumerator_
  commentId: Overload:Langly.ISequence`2.System#Collections#IEnumerable#GetEnumerator
  isSpec: "True"
  name.vb: System.Collections.IEnumerable.GetEnumerator
  fullName: Langly.ISequence<TMember, TEnumerator>.System.Collections.IEnumerable.GetEnumerator
  fullName.vb: Langly.ISequence(Of TMember, TEnumerator).System.Collections.IEnumerable.GetEnumerator
  nameWithType: ISequence<TMember, TEnumerator>.IEnumerable.GetEnumerator
  nameWithType.vb: ISequence(Of TMember, TEnumerator).System.Collections.IEnumerable.GetEnumerator
- uid: Langly.ISequenceBidi`2
  name: ISequenceBidi<TMember, TEnumerator>
  href: api/Langly.ISequenceBidi-2.html
  commentId: T:Langly.ISequenceBidi`2
  name.vb: ISequenceBidi(Of TMember, TEnumerator)
  fullName: Langly.ISequenceBidi<TMember, TEnumerator>
  fullName.vb: Langly.ISequenceBidi(Of TMember, TEnumerator)
  nameWithType: ISequenceBidi<TMember, TEnumerator>
  nameWithType.vb: ISequenceBidi(Of TMember, TEnumerator)
- uid: Langly.ISequenceBidi`2.Reverse
  name: Reverse()
  href: api/Langly.ISequenceBidi-2.html#Langly_ISequenceBidi_2_Reverse
  commentId: M:Langly.ISequenceBidi`2.Reverse
  fullName: Langly.ISequenceBidi<TMember, TEnumerator>.Reverse()
  fullName.vb: Langly.ISequenceBidi(Of TMember, TEnumerator).Reverse()
  nameWithType: ISequenceBidi<TMember, TEnumerator>.Reverse()
  nameWithType.vb: ISequenceBidi(Of TMember, TEnumerator).Reverse()
- uid: Langly.ISequenceBidi`2.Reverse*
  name: Reverse
  href: api/Langly.ISequenceBidi-2.html#Langly_ISequenceBidi_2_Reverse_
  commentId: Overload:Langly.ISequenceBidi`2.Reverse
  isSpec: "True"
  fullName: Langly.ISequenceBidi<TMember, TEnumerator>.Reverse
  fullName.vb: Langly.ISequenceBidi(Of TMember, TEnumerator).Reverse
  nameWithType: ISequenceBidi<TMember, TEnumerator>.Reverse
  nameWithType.vb: ISequenceBidi(Of TMember, TEnumerator).Reverse
- uid: Langly.IShift
  name: IShift
  href: api/Langly.IShift.html
  commentId: T:Langly.IShift
  fullName: Langly.IShift
  nameWithType: IShift
- uid: Langly.IShift.ShiftLeft
  name: ShiftLeft()
  href: api/Langly.IShift.html#Langly_IShift_ShiftLeft
  commentId: M:Langly.IShift.ShiftLeft
  fullName: Langly.IShift.ShiftLeft()
  nameWithType: IShift.ShiftLeft()
- uid: Langly.IShift.ShiftLeft(nint)
  name: ShiftLeft(nint)
  href: api/Langly.IShift.html#Langly_IShift_ShiftLeft_nint_
  commentId: M:Langly.IShift.ShiftLeft(nint)
  fullName: Langly.IShift.ShiftLeft(nint)
  nameWithType: IShift.ShiftLeft(nint)
- uid: Langly.IShift.ShiftLeft*
  name: ShiftLeft
  href: api/Langly.IShift.html#Langly_IShift_ShiftLeft_
  commentId: Overload:Langly.IShift.ShiftLeft
  isSpec: "True"
  fullName: Langly.IShift.ShiftLeft
  nameWithType: IShift.ShiftLeft
- uid: Langly.IShift.ShiftRight
  name: ShiftRight()
  href: api/Langly.IShift.html#Langly_IShift_ShiftRight
  commentId: M:Langly.IShift.ShiftRight
  fullName: Langly.IShift.ShiftRight()
  nameWithType: IShift.ShiftRight()
- uid: Langly.IShift.ShiftRight(nint)
  name: ShiftRight(nint)
  href: api/Langly.IShift.html#Langly_IShift_ShiftRight_nint_
  commentId: M:Langly.IShift.ShiftRight(nint)
  fullName: Langly.IShift.ShiftRight(nint)
  nameWithType: IShift.ShiftRight(nint)
- uid: Langly.IShift.ShiftRight*
  name: ShiftRight
  href: api/Langly.IShift.html#Langly_IShift_ShiftRight_
  commentId: Overload:Langly.IShift.ShiftRight
  isSpec: "True"
  fullName: Langly.IShift.ShiftRight
  nameWithType: IShift.ShiftRight
- uid: Langly.ISlice`1
  name: ISlice<TSlice>
  href: api/Langly.ISlice-1.html
  commentId: T:Langly.ISlice`1
  name.vb: ISlice(Of TSlice)
  fullName: Langly.ISlice<TSlice>
  fullName.vb: Langly.ISlice(Of TSlice)
  nameWithType: ISlice<TSlice>
  nameWithType.vb: ISlice(Of TSlice)
- uid: Langly.ISlice`1.Item(System.Range)
  name: Item[Range]
  href: api/Langly.ISlice-1.html#Langly_ISlice_1_Item_System_Range_
  commentId: P:Langly.ISlice`1.Item(System.Range)
  name.vb: Item(Range)
  fullName: Langly.ISlice<TSlice>.Item[System.Range]
  fullName.vb: Langly.ISlice(Of TSlice).Item(System.Range)
  nameWithType: ISlice<TSlice>.Item[Range]
  nameWithType.vb: ISlice(Of TSlice).Item(Range)
- uid: Langly.ISlice`1.Item*
  name: Item
  href: api/Langly.ISlice-1.html#Langly_ISlice_1_Item_
  commentId: Overload:Langly.ISlice`1.Item
  isSpec: "True"
  fullName: Langly.ISlice<TSlice>.Item
  fullName.vb: Langly.ISlice(Of TSlice).Item
  nameWithType: ISlice<TSlice>.Item
  nameWithType.vb: ISlice(Of TSlice).Item
- uid: Langly.ISlice`1.Slice
  name: Slice()
  href: api/Langly.ISlice-1.html#Langly_ISlice_1_Slice
  commentId: M:Langly.ISlice`1.Slice
  fullName: Langly.ISlice<TSlice>.Slice()
  fullName.vb: Langly.ISlice(Of TSlice).Slice()
  nameWithType: ISlice<TSlice>.Slice()
  nameWithType.vb: ISlice(Of TSlice).Slice()
- uid: Langly.ISlice`1.Slice(nint)
  name: Slice(nint)
  href: api/Langly.ISlice-1.html#Langly_ISlice_1_Slice_nint_
  commentId: M:Langly.ISlice`1.Slice(nint)
  fullName: Langly.ISlice<TSlice>.Slice(nint)
  fullName.vb: Langly.ISlice(Of TSlice).Slice(nint)
  nameWithType: ISlice<TSlice>.Slice(nint)
  nameWithType.vb: ISlice(Of TSlice).Slice(nint)
- uid: Langly.ISlice`1.Slice(nint,nint)
  name: Slice(nint, nint)
  href: api/Langly.ISlice-1.html#Langly_ISlice_1_Slice_nint_nint_
  commentId: M:Langly.ISlice`1.Slice(nint,nint)
  fullName: Langly.ISlice<TSlice>.Slice(nint, nint)
  fullName.vb: Langly.ISlice(Of TSlice).Slice(nint, nint)
  nameWithType: ISlice<TSlice>.Slice(nint, nint)
  nameWithType.vb: ISlice(Of TSlice).Slice(nint, nint)
- uid: Langly.ISlice`1.Slice*
  name: Slice
  href: api/Langly.ISlice-1.html#Langly_ISlice_1_Slice_
  commentId: Overload:Langly.ISlice`1.Slice
  isSpec: "True"
  fullName: Langly.ISlice<TSlice>.Slice
  fullName.vb: Langly.ISlice(Of TSlice).Slice
  nameWithType: ISlice<TSlice>.Slice
  nameWithType.vb: ISlice(Of TSlice).Slice
- uid: Langly.NumericExtensions
  name: NumericExtensions
  href: api/Langly.NumericExtensions.html
  commentId: T:Langly.NumericExtensions
  fullName: Langly.NumericExtensions
  nameWithType: NumericExtensions
- uid: Langly.NumericExtensions.Max*
  name: Max
  href: api/Langly.NumericExtensions.html#Langly_NumericExtensions_Max_
  commentId: Overload:Langly.NumericExtensions.Max
  isSpec: "True"
  fullName: Langly.NumericExtensions.Max
  nameWithType: NumericExtensions.Max
- uid: Langly.NumericExtensions.Max``1(Langly.ISequence{nint,``0})
  name: Max<TEnumerator>(ISequence<nint, TEnumerator>)
  href: api/Langly.NumericExtensions.html#Langly_NumericExtensions_Max__1_Langly_ISequence_nint___0__
  commentId: M:Langly.NumericExtensions.Max``1(Langly.ISequence{nint,``0})
  name.vb: Max(Of TEnumerator)(ISequence(Of nint, TEnumerator))
  fullName: Langly.NumericExtensions.Max<TEnumerator>(Langly.ISequence<nint, TEnumerator>)
  fullName.vb: Langly.NumericExtensions.Max(Of TEnumerator)(Langly.ISequence(Of nint, TEnumerator))
  nameWithType: NumericExtensions.Max<TEnumerator>(ISequence<nint, TEnumerator>)
  nameWithType.vb: NumericExtensions.Max(Of TEnumerator)(ISequence(Of nint, TEnumerator))
- uid: Langly.NumericExtensions.Max``1(Langly.ISequence{nuint,``0})
  name: Max<TEnumerator>(ISequence<nuint, TEnumerator>)
  href: api/Langly.NumericExtensions.html#Langly_NumericExtensions_Max__1_Langly_ISequence_nuint___0__
  commentId: M:Langly.NumericExtensions.Max``1(Langly.ISequence{nuint,``0})
  name.vb: Max(Of TEnumerator)(ISequence(Of nuint, TEnumerator))
  fullName: Langly.NumericExtensions.Max<TEnumerator>(Langly.ISequence<nuint, TEnumerator>)
  fullName.vb: Langly.NumericExtensions.Max(Of TEnumerator)(Langly.ISequence(Of nuint, TEnumerator))
  nameWithType: NumericExtensions.Max<TEnumerator>(ISequence<nuint, TEnumerator>)
  nameWithType.vb: NumericExtensions.Max(Of TEnumerator)(ISequence(Of nuint, TEnumerator))
- uid: Langly.NumericExtensions.Max``1(Langly.ISequence{System.Byte,``0})
  name: Max<TEnumerator>(ISequence<Byte, TEnumerator>)
  href: api/Langly.NumericExtensions.html#Langly_NumericExtensions_Max__1_Langly_ISequence_System_Byte___0__
  commentId: M:Langly.NumericExtensions.Max``1(Langly.ISequence{System.Byte,``0})
  name.vb: Max(Of TEnumerator)(ISequence(Of Byte, TEnumerator))
  fullName: Langly.NumericExtensions.Max<TEnumerator>(Langly.ISequence<System.Byte, TEnumerator>)
  fullName.vb: Langly.NumericExtensions.Max(Of TEnumerator)(Langly.ISequence(Of System.Byte, TEnumerator))
  nameWithType: NumericExtensions.Max<TEnumerator>(ISequence<Byte, TEnumerator>)
  nameWithType.vb: NumericExtensions.Max(Of TEnumerator)(ISequence(Of Byte, TEnumerator))
- uid: Langly.NumericExtensions.Max``1(Langly.ISequence{System.Decimal,``0})
  name: Max<TEnumerator>(ISequence<Decimal, TEnumerator>)
  href: api/Langly.NumericExtensions.html#Langly_NumericExtensions_Max__1_Langly_ISequence_System_Decimal___0__
  commentId: M:Langly.NumericExtensions.Max``1(Langly.ISequence{System.Decimal,``0})
  name.vb: Max(Of TEnumerator)(ISequence(Of Decimal, TEnumerator))
  fullName: Langly.NumericExtensions.Max<TEnumerator>(Langly.ISequence<System.Decimal, TEnumerator>)
  fullName.vb: Langly.NumericExtensions.Max(Of TEnumerator)(Langly.ISequence(Of System.Decimal, TEnumerator))
  nameWithType: NumericExtensions.Max<TEnumerator>(ISequence<Decimal, TEnumerator>)
  nameWithType.vb: NumericExtensions.Max(Of TEnumerator)(ISequence(Of Decimal, TEnumerator))
- uid: Langly.NumericExtensions.Max``1(Langly.ISequence{System.Double,``0})
  name: Max<TEnumerator>(ISequence<Double, TEnumerator>)
  href: api/Langly.NumericExtensions.html#Langly_NumericExtensions_Max__1_Langly_ISequence_System_Double___0__
  commentId: M:Langly.NumericExtensions.Max``1(Langly.ISequence{System.Double,``0})
  name.vb: Max(Of TEnumerator)(ISequence(Of Double, TEnumerator))
  fullName: Langly.NumericExtensions.Max<TEnumerator>(Langly.ISequence<System.Double, TEnumerator>)
  fullName.vb: Langly.NumericExtensions.Max(Of TEnumerator)(Langly.ISequence(Of System.Double, TEnumerator))
  nameWithType: NumericExtensions.Max<TEnumerator>(ISequence<Double, TEnumerator>)
  nameWithType.vb: NumericExtensions.Max(Of TEnumerator)(ISequence(Of Double, TEnumerator))
- uid: Langly.NumericExtensions.Max``1(Langly.ISequence{System.Int16,``0})
  name: Max<TEnumerator>(ISequence<Int16, TEnumerator>)
  href: api/Langly.NumericExtensions.html#Langly_NumericExtensions_Max__1_Langly_ISequence_System_Int16___0__
  commentId: M:Langly.NumericExtensions.Max``1(Langly.ISequence{System.Int16,``0})
  name.vb: Max(Of TEnumerator)(ISequence(Of Int16, TEnumerator))
  fullName: Langly.NumericExtensions.Max<TEnumerator>(Langly.ISequence<System.Int16, TEnumerator>)
  fullName.vb: Langly.NumericExtensions.Max(Of TEnumerator)(Langly.ISequence(Of System.Int16, TEnumerator))
  nameWithType: NumericExtensions.Max<TEnumerator>(ISequence<Int16, TEnumerator>)
  nameWithType.vb: NumericExtensions.Max(Of TEnumerator)(ISequence(Of Int16, TEnumerator))
- uid: Langly.NumericExtensions.Max``1(Langly.ISequence{System.Int32,``0})
  name: Max<TEnumerator>(ISequence<Int32, TEnumerator>)
  href: api/Langly.NumericExtensions.html#Langly_NumericExtensions_Max__1_Langly_ISequence_System_Int32___0__
  commentId: M:Langly.NumericExtensions.Max``1(Langly.ISequence{System.Int32,``0})
  name.vb: Max(Of TEnumerator)(ISequence(Of Int32, TEnumerator))
  fullName: Langly.NumericExtensions.Max<TEnumerator>(Langly.ISequence<System.Int32, TEnumerator>)
  fullName.vb: Langly.NumericExtensions.Max(Of TEnumerator)(Langly.ISequence(Of System.Int32, TEnumerator))
  nameWithType: NumericExtensions.Max<TEnumerator>(ISequence<Int32, TEnumerator>)
  nameWithType.vb: NumericExtensions.Max(Of TEnumerator)(ISequence(Of Int32, TEnumerator))
- uid: Langly.NumericExtensions.Max``1(Langly.ISequence{System.Int64,``0})
  name: Max<TEnumerator>(ISequence<Int64, TEnumerator>)
  href: api/Langly.NumericExtensions.html#Langly_NumericExtensions_Max__1_Langly_ISequence_System_Int64___0__
  commentId: M:Langly.NumericExtensions.Max``1(Langly.ISequence{System.Int64,``0})
  name.vb: Max(Of TEnumerator)(ISequence(Of Int64, TEnumerator))
  fullName: Langly.NumericExtensions.Max<TEnumerator>(Langly.ISequence<System.Int64, TEnumerator>)
  fullName.vb: Langly.NumericExtensions.Max(Of TEnumerator)(Langly.ISequence(Of System.Int64, TEnumerator))
  nameWithType: NumericExtensions.Max<TEnumerator>(ISequence<Int64, TEnumerator>)
  nameWithType.vb: NumericExtensions.Max(Of TEnumerator)(ISequence(Of Int64, TEnumerator))
- uid: Langly.NumericExtensions.Max``1(Langly.ISequence{System.SByte,``0})
  name: Max<TEnumerator>(ISequence<SByte, TEnumerator>)
  href: api/Langly.NumericExtensions.html#Langly_NumericExtensions_Max__1_Langly_ISequence_System_SByte___0__
  commentId: M:Langly.NumericExtensions.Max``1(Langly.ISequence{System.SByte,``0})
  name.vb: Max(Of TEnumerator)(ISequence(Of SByte, TEnumerator))
  fullName: Langly.NumericExtensions.Max<TEnumerator>(Langly.ISequence<System.SByte, TEnumerator>)
  fullName.vb: Langly.NumericExtensions.Max(Of TEnumerator)(Langly.ISequence(Of System.SByte, TEnumerator))
  nameWithType: NumericExtensions.Max<TEnumerator>(ISequence<SByte, TEnumerator>)
  nameWithType.vb: NumericExtensions.Max(Of TEnumerator)(ISequence(Of SByte, TEnumerator))
- uid: Langly.NumericExtensions.Max``1(Langly.ISequence{System.Single,``0})
  name: Max<TEnumerator>(ISequence<Single, TEnumerator>)
  href: api/Langly.NumericExtensions.html#Langly_NumericExtensions_Max__1_Langly_ISequence_System_Single___0__
  commentId: M:Langly.NumericExtensions.Max``1(Langly.ISequence{System.Single,``0})
  name.vb: Max(Of TEnumerator)(ISequence(Of Single, TEnumerator))
  fullName: Langly.NumericExtensions.Max<TEnumerator>(Langly.ISequence<System.Single, TEnumerator>)
  fullName.vb: Langly.NumericExtensions.Max(Of TEnumerator)(Langly.ISequence(Of System.Single, TEnumerator))
  nameWithType: NumericExtensions.Max<TEnumerator>(ISequence<Single, TEnumerator>)
  nameWithType.vb: NumericExtensions.Max(Of TEnumerator)(ISequence(Of Single, TEnumerator))
- uid: Langly.NumericExtensions.Max``1(Langly.ISequence{System.UInt16,``0})
  name: Max<TEnumerator>(ISequence<UInt16, TEnumerator>)
  href: api/Langly.NumericExtensions.html#Langly_NumericExtensions_Max__1_Langly_ISequence_System_UInt16___0__
  commentId: M:Langly.NumericExtensions.Max``1(Langly.ISequence{System.UInt16,``0})
  name.vb: Max(Of TEnumerator)(ISequence(Of UInt16, TEnumerator))
  fullName: Langly.NumericExtensions.Max<TEnumerator>(Langly.ISequence<System.UInt16, TEnumerator>)
  fullName.vb: Langly.NumericExtensions.Max(Of TEnumerator)(Langly.ISequence(Of System.UInt16, TEnumerator))
  nameWithType: NumericExtensions.Max<TEnumerator>(ISequence<UInt16, TEnumerator>)
  nameWithType.vb: NumericExtensions.Max(Of TEnumerator)(ISequence(Of UInt16, TEnumerator))
- uid: Langly.NumericExtensions.Max``1(Langly.ISequence{System.UInt32,``0})
  name: Max<TEnumerator>(ISequence<UInt32, TEnumerator>)
  href: api/Langly.NumericExtensions.html#Langly_NumericExtensions_Max__1_Langly_ISequence_System_UInt32___0__
  commentId: M:Langly.NumericExtensions.Max``1(Langly.ISequence{System.UInt32,``0})
  name.vb: Max(Of TEnumerator)(ISequence(Of UInt32, TEnumerator))
  fullName: Langly.NumericExtensions.Max<TEnumerator>(Langly.ISequence<System.UInt32, TEnumerator>)
  fullName.vb: Langly.NumericExtensions.Max(Of TEnumerator)(Langly.ISequence(Of System.UInt32, TEnumerator))
  nameWithType: NumericExtensions.Max<TEnumerator>(ISequence<UInt32, TEnumerator>)
  nameWithType.vb: NumericExtensions.Max(Of TEnumerator)(ISequence(Of UInt32, TEnumerator))
- uid: Langly.NumericExtensions.Max``1(Langly.ISequence{System.UInt64,``0})
  name: Max<TEnumerator>(ISequence<UInt64, TEnumerator>)
  href: api/Langly.NumericExtensions.html#Langly_NumericExtensions_Max__1_Langly_ISequence_System_UInt64___0__
  commentId: M:Langly.NumericExtensions.Max``1(Langly.ISequence{System.UInt64,``0})
  name.vb: Max(Of TEnumerator)(ISequence(Of UInt64, TEnumerator))
  fullName: Langly.NumericExtensions.Max<TEnumerator>(Langly.ISequence<System.UInt64, TEnumerator>)
  fullName.vb: Langly.NumericExtensions.Max(Of TEnumerator)(Langly.ISequence(Of System.UInt64, TEnumerator))
  nameWithType: NumericExtensions.Max<TEnumerator>(ISequence<UInt64, TEnumerator>)
  nameWithType.vb: NumericExtensions.Max(Of TEnumerator)(ISequence(Of UInt64, TEnumerator))
- uid: Langly.NumericExtensions.Sum*
  name: Sum
  href: api/Langly.NumericExtensions.html#Langly_NumericExtensions_Sum_
  commentId: Overload:Langly.NumericExtensions.Sum
  isSpec: "True"
  fullName: Langly.NumericExtensions.Sum
  nameWithType: NumericExtensions.Sum
- uid: Langly.NumericExtensions.Sum``1(Langly.ISequence{nint,``0})
  name: Sum<TEnumerator>(ISequence<nint, TEnumerator>)
  href: api/Langly.NumericExtensions.html#Langly_NumericExtensions_Sum__1_Langly_ISequence_nint___0__
  commentId: M:Langly.NumericExtensions.Sum``1(Langly.ISequence{nint,``0})
  name.vb: Sum(Of TEnumerator)(ISequence(Of nint, TEnumerator))
  fullName: Langly.NumericExtensions.Sum<TEnumerator>(Langly.ISequence<nint, TEnumerator>)
  fullName.vb: Langly.NumericExtensions.Sum(Of TEnumerator)(Langly.ISequence(Of nint, TEnumerator))
  nameWithType: NumericExtensions.Sum<TEnumerator>(ISequence<nint, TEnumerator>)
  nameWithType.vb: NumericExtensions.Sum(Of TEnumerator)(ISequence(Of nint, TEnumerator))
- uid: Langly.NumericExtensions.Sum``1(Langly.ISequence{nuint,``0})
  name: Sum<TEnumerator>(ISequence<nuint, TEnumerator>)
  href: api/Langly.NumericExtensions.html#Langly_NumericExtensions_Sum__1_Langly_ISequence_nuint___0__
  commentId: M:Langly.NumericExtensions.Sum``1(Langly.ISequence{nuint,``0})
  name.vb: Sum(Of TEnumerator)(ISequence(Of nuint, TEnumerator))
  fullName: Langly.NumericExtensions.Sum<TEnumerator>(Langly.ISequence<nuint, TEnumerator>)
  fullName.vb: Langly.NumericExtensions.Sum(Of TEnumerator)(Langly.ISequence(Of nuint, TEnumerator))
  nameWithType: NumericExtensions.Sum<TEnumerator>(ISequence<nuint, TEnumerator>)
  nameWithType.vb: NumericExtensions.Sum(Of TEnumerator)(ISequence(Of nuint, TEnumerator))
- uid: Langly.NumericExtensions.Sum``1(Langly.ISequence{System.Byte,``0})
  name: Sum<TEnumerator>(ISequence<Byte, TEnumerator>)
  href: api/Langly.NumericExtensions.html#Langly_NumericExtensions_Sum__1_Langly_ISequence_System_Byte___0__
  commentId: M:Langly.NumericExtensions.Sum``1(Langly.ISequence{System.Byte,``0})
  name.vb: Sum(Of TEnumerator)(ISequence(Of Byte, TEnumerator))
  fullName: Langly.NumericExtensions.Sum<TEnumerator>(Langly.ISequence<System.Byte, TEnumerator>)
  fullName.vb: Langly.NumericExtensions.Sum(Of TEnumerator)(Langly.ISequence(Of System.Byte, TEnumerator))
  nameWithType: NumericExtensions.Sum<TEnumerator>(ISequence<Byte, TEnumerator>)
  nameWithType.vb: NumericExtensions.Sum(Of TEnumerator)(ISequence(Of Byte, TEnumerator))
- uid: Langly.NumericExtensions.Sum``1(Langly.ISequence{System.Decimal,``0})
  name: Sum<TEnumerator>(ISequence<Decimal, TEnumerator>)
  href: api/Langly.NumericExtensions.html#Langly_NumericExtensions_Sum__1_Langly_ISequence_System_Decimal___0__
  commentId: M:Langly.NumericExtensions.Sum``1(Langly.ISequence{System.Decimal,``0})
  name.vb: Sum(Of TEnumerator)(ISequence(Of Decimal, TEnumerator))
  fullName: Langly.NumericExtensions.Sum<TEnumerator>(Langly.ISequence<System.Decimal, TEnumerator>)
  fullName.vb: Langly.NumericExtensions.Sum(Of TEnumerator)(Langly.ISequence(Of System.Decimal, TEnumerator))
  nameWithType: NumericExtensions.Sum<TEnumerator>(ISequence<Decimal, TEnumerator>)
  nameWithType.vb: NumericExtensions.Sum(Of TEnumerator)(ISequence(Of Decimal, TEnumerator))
- uid: Langly.NumericExtensions.Sum``1(Langly.ISequence{System.Double,``0})
  name: Sum<TEnumerator>(ISequence<Double, TEnumerator>)
  href: api/Langly.NumericExtensions.html#Langly_NumericExtensions_Sum__1_Langly_ISequence_System_Double___0__
  commentId: M:Langly.NumericExtensions.Sum``1(Langly.ISequence{System.Double,``0})
  name.vb: Sum(Of TEnumerator)(ISequence(Of Double, TEnumerator))
  fullName: Langly.NumericExtensions.Sum<TEnumerator>(Langly.ISequence<System.Double, TEnumerator>)
  fullName.vb: Langly.NumericExtensions.Sum(Of TEnumerator)(Langly.ISequence(Of System.Double, TEnumerator))
  nameWithType: NumericExtensions.Sum<TEnumerator>(ISequence<Double, TEnumerator>)
  nameWithType.vb: NumericExtensions.Sum(Of TEnumerator)(ISequence(Of Double, TEnumerator))
- uid: Langly.NumericExtensions.Sum``1(Langly.ISequence{System.Int16,``0})
  name: Sum<TEnumerator>(ISequence<Int16, TEnumerator>)
  href: api/Langly.NumericExtensions.html#Langly_NumericExtensions_Sum__1_Langly_ISequence_System_Int16___0__
  commentId: M:Langly.NumericExtensions.Sum``1(Langly.ISequence{System.Int16,``0})
  name.vb: Sum(Of TEnumerator)(ISequence(Of Int16, TEnumerator))
  fullName: Langly.NumericExtensions.Sum<TEnumerator>(Langly.ISequence<System.Int16, TEnumerator>)
  fullName.vb: Langly.NumericExtensions.Sum(Of TEnumerator)(Langly.ISequence(Of System.Int16, TEnumerator))
  nameWithType: NumericExtensions.Sum<TEnumerator>(ISequence<Int16, TEnumerator>)
  nameWithType.vb: NumericExtensions.Sum(Of TEnumerator)(ISequence(Of Int16, TEnumerator))
- uid: Langly.NumericExtensions.Sum``1(Langly.ISequence{System.Int32,``0})
  name: Sum<TEnumerator>(ISequence<Int32, TEnumerator>)
  href: api/Langly.NumericExtensions.html#Langly_NumericExtensions_Sum__1_Langly_ISequence_System_Int32___0__
  commentId: M:Langly.NumericExtensions.Sum``1(Langly.ISequence{System.Int32,``0})
  name.vb: Sum(Of TEnumerator)(ISequence(Of Int32, TEnumerator))
  fullName: Langly.NumericExtensions.Sum<TEnumerator>(Langly.ISequence<System.Int32, TEnumerator>)
  fullName.vb: Langly.NumericExtensions.Sum(Of TEnumerator)(Langly.ISequence(Of System.Int32, TEnumerator))
  nameWithType: NumericExtensions.Sum<TEnumerator>(ISequence<Int32, TEnumerator>)
  nameWithType.vb: NumericExtensions.Sum(Of TEnumerator)(ISequence(Of Int32, TEnumerator))
- uid: Langly.NumericExtensions.Sum``1(Langly.ISequence{System.Int64,``0})
  name: Sum<TEnumerator>(ISequence<Int64, TEnumerator>)
  href: api/Langly.NumericExtensions.html#Langly_NumericExtensions_Sum__1_Langly_ISequence_System_Int64___0__
  commentId: M:Langly.NumericExtensions.Sum``1(Langly.ISequence{System.Int64,``0})
  name.vb: Sum(Of TEnumerator)(ISequence(Of Int64, TEnumerator))
  fullName: Langly.NumericExtensions.Sum<TEnumerator>(Langly.ISequence<System.Int64, TEnumerator>)
  fullName.vb: Langly.NumericExtensions.Sum(Of TEnumerator)(Langly.ISequence(Of System.Int64, TEnumerator))
  nameWithType: NumericExtensions.Sum<TEnumerator>(ISequence<Int64, TEnumerator>)
  nameWithType.vb: NumericExtensions.Sum(Of TEnumerator)(ISequence(Of Int64, TEnumerator))
- uid: Langly.NumericExtensions.Sum``1(Langly.ISequence{System.SByte,``0})
  name: Sum<TEnumerator>(ISequence<SByte, TEnumerator>)
  href: api/Langly.NumericExtensions.html#Langly_NumericExtensions_Sum__1_Langly_ISequence_System_SByte___0__
  commentId: M:Langly.NumericExtensions.Sum``1(Langly.ISequence{System.SByte,``0})
  name.vb: Sum(Of TEnumerator)(ISequence(Of SByte, TEnumerator))
  fullName: Langly.NumericExtensions.Sum<TEnumerator>(Langly.ISequence<System.SByte, TEnumerator>)
  fullName.vb: Langly.NumericExtensions.Sum(Of TEnumerator)(Langly.ISequence(Of System.SByte, TEnumerator))
  nameWithType: NumericExtensions.Sum<TEnumerator>(ISequence<SByte, TEnumerator>)
  nameWithType.vb: NumericExtensions.Sum(Of TEnumerator)(ISequence(Of SByte, TEnumerator))
- uid: Langly.NumericExtensions.Sum``1(Langly.ISequence{System.Single,``0})
  name: Sum<TEnumerator>(ISequence<Single, TEnumerator>)
  href: api/Langly.NumericExtensions.html#Langly_NumericExtensions_Sum__1_Langly_ISequence_System_Single___0__
  commentId: M:Langly.NumericExtensions.Sum``1(Langly.ISequence{System.Single,``0})
  name.vb: Sum(Of TEnumerator)(ISequence(Of Single, TEnumerator))
  fullName: Langly.NumericExtensions.Sum<TEnumerator>(Langly.ISequence<System.Single, TEnumerator>)
  fullName.vb: Langly.NumericExtensions.Sum(Of TEnumerator)(Langly.ISequence(Of System.Single, TEnumerator))
  nameWithType: NumericExtensions.Sum<TEnumerator>(ISequence<Single, TEnumerator>)
  nameWithType.vb: NumericExtensions.Sum(Of TEnumerator)(ISequence(Of Single, TEnumerator))
- uid: Langly.NumericExtensions.Sum``1(Langly.ISequence{System.UInt16,``0})
  name: Sum<TEnumerator>(ISequence<UInt16, TEnumerator>)
  href: api/Langly.NumericExtensions.html#Langly_NumericExtensions_Sum__1_Langly_ISequence_System_UInt16___0__
  commentId: M:Langly.NumericExtensions.Sum``1(Langly.ISequence{System.UInt16,``0})
  name.vb: Sum(Of TEnumerator)(ISequence(Of UInt16, TEnumerator))
  fullName: Langly.NumericExtensions.Sum<TEnumerator>(Langly.ISequence<System.UInt16, TEnumerator>)
  fullName.vb: Langly.NumericExtensions.Sum(Of TEnumerator)(Langly.ISequence(Of System.UInt16, TEnumerator))
  nameWithType: NumericExtensions.Sum<TEnumerator>(ISequence<UInt16, TEnumerator>)
  nameWithType.vb: NumericExtensions.Sum(Of TEnumerator)(ISequence(Of UInt16, TEnumerator))
- uid: Langly.NumericExtensions.Sum``1(Langly.ISequence{System.UInt32,``0})
  name: Sum<TEnumerator>(ISequence<UInt32, TEnumerator>)
  href: api/Langly.NumericExtensions.html#Langly_NumericExtensions_Sum__1_Langly_ISequence_System_UInt32___0__
  commentId: M:Langly.NumericExtensions.Sum``1(Langly.ISequence{System.UInt32,``0})
  name.vb: Sum(Of TEnumerator)(ISequence(Of UInt32, TEnumerator))
  fullName: Langly.NumericExtensions.Sum<TEnumerator>(Langly.ISequence<System.UInt32, TEnumerator>)
  fullName.vb: Langly.NumericExtensions.Sum(Of TEnumerator)(Langly.ISequence(Of System.UInt32, TEnumerator))
  nameWithType: NumericExtensions.Sum<TEnumerator>(ISequence<UInt32, TEnumerator>)
  nameWithType.vb: NumericExtensions.Sum(Of TEnumerator)(ISequence(Of UInt32, TEnumerator))
- uid: Langly.NumericExtensions.Sum``1(Langly.ISequence{System.UInt64,``0})
  name: Sum<TEnumerator>(ISequence<UInt64, TEnumerator>)
  href: api/Langly.NumericExtensions.html#Langly_NumericExtensions_Sum__1_Langly_ISequence_System_UInt64___0__
  commentId: M:Langly.NumericExtensions.Sum``1(Langly.ISequence{System.UInt64,``0})
  name.vb: Sum(Of TEnumerator)(ISequence(Of UInt64, TEnumerator))
  fullName: Langly.NumericExtensions.Sum<TEnumerator>(Langly.ISequence<System.UInt64, TEnumerator>)
  fullName.vb: Langly.NumericExtensions.Sum(Of TEnumerator)(Langly.ISequence(Of System.UInt64, TEnumerator))
  nameWithType: NumericExtensions.Sum<TEnumerator>(ISequence<UInt64, TEnumerator>)
  nameWithType.vb: NumericExtensions.Sum(Of TEnumerator)(ISequence(Of UInt64, TEnumerator))
- uid: Langly.Object
  name: Object
  href: api/Langly.Object.html
  commentId: T:Langly.Object
  fullName: Langly.Object
  nameWithType: Object
- uid: Langly.Object.Equals(Langly.Object)
  name: Equals(Object)
  href: api/Langly.Object.html#Langly_Object_Equals_Langly_Object_
  commentId: M:Langly.Object.Equals(Langly.Object)
  fullName: Langly.Object.Equals(Langly.Object)
  nameWithType: Object.Equals(Object)
- uid: Langly.Object.Equals(Langly.Object,Langly.Object)
  name: Equals(Object, Object)
  href: api/Langly.Object.html#Langly_Object_Equals_Langly_Object_Langly_Object_
  commentId: M:Langly.Object.Equals(Langly.Object,Langly.Object)
  fullName: Langly.Object.Equals(Langly.Object, Langly.Object)
  nameWithType: Object.Equals(Object, Object)
- uid: Langly.Object.Equals(System.Object)
  name: Equals(Object)
  href: api/Langly.Object.html#Langly_Object_Equals_System_Object_
  commentId: M:Langly.Object.Equals(System.Object)
  fullName: Langly.Object.Equals(System.Object)
  nameWithType: Object.Equals(Object)
- uid: Langly.Object.Equals*
  name: Equals
  href: api/Langly.Object.html#Langly_Object_Equals_
  commentId: Overload:Langly.Object.Equals
  isSpec: "True"
  fullName: Langly.Object.Equals
  nameWithType: Object.Equals
- uid: Langly.Object.GetHashCode
  name: GetHashCode()
  href: api/Langly.Object.html#Langly_Object_GetHashCode
  commentId: M:Langly.Object.GetHashCode
  fullName: Langly.Object.GetHashCode()
  nameWithType: Object.GetHashCode()
- uid: Langly.Object.GetHashCode*
  name: GetHashCode
  href: api/Langly.Object.html#Langly_Object_GetHashCode_
  commentId: Overload:Langly.Object.GetHashCode
  isSpec: "True"
  fullName: Langly.Object.GetHashCode
  nameWithType: Object.GetHashCode
- uid: Langly.Object.op_Equality(Langly.Object,Langly.Object)
  name: Equality(Object, Object)
  href: api/Langly.Object.html#Langly_Object_op_Equality_Langly_Object_Langly_Object_
  commentId: M:Langly.Object.op_Equality(Langly.Object,Langly.Object)
  fullName: Langly.Object.Equality(Langly.Object, Langly.Object)
  nameWithType: Object.Equality(Object, Object)
- uid: Langly.Object.op_Equality*
  name: Equality
  href: api/Langly.Object.html#Langly_Object_op_Equality_
  commentId: Overload:Langly.Object.op_Equality
  isSpec: "True"
  fullName: Langly.Object.Equality
  nameWithType: Object.Equality
- uid: Langly.Object.op_Inequality(Langly.Object,Langly.Object)
  name: Inequality(Object, Object)
  href: api/Langly.Object.html#Langly_Object_op_Inequality_Langly_Object_Langly_Object_
  commentId: M:Langly.Object.op_Inequality(Langly.Object,Langly.Object)
  fullName: Langly.Object.Inequality(Langly.Object, Langly.Object)
  nameWithType: Object.Inequality(Object, Object)
- uid: Langly.Object.op_Inequality*
  name: Inequality
  href: api/Langly.Object.html#Langly_Object_op_Inequality_
  commentId: Overload:Langly.Object.op_Inequality
  isSpec: "True"
  fullName: Langly.Object.Inequality
  nameWithType: Object.Inequality
- uid: Langly.Object.ToString
  name: ToString()
  href: api/Langly.Object.html#Langly_Object_ToString
  commentId: M:Langly.Object.ToString
  fullName: Langly.Object.ToString()
  nameWithType: Object.ToString()
- uid: Langly.Object.ToString*
  name: ToString
  href: api/Langly.Object.html#Langly_Object_ToString_
  commentId: Overload:Langly.Object.ToString
  isSpec: "True"
  fullName: Langly.Object.ToString
  nameWithType: Object.ToString
- uid: Langly.Record`1
  name: Record<TSelf>
  href: api/Langly.Record-1.html
  commentId: T:Langly.Record`1
  name.vb: Record(Of TSelf)
  fullName: Langly.Record<TSelf>
  fullName.vb: Langly.Record(Of TSelf)
  nameWithType: Record<TSelf>
  nameWithType.vb: Record(Of TSelf)
- uid: Langly.Record`1.Equals(`0)
  name: Equals(TSelf)
  href: api/Langly.Record-1.html#Langly_Record_1_Equals__0_
  commentId: M:Langly.Record`1.Equals(`0)
  fullName: Langly.Record<TSelf>.Equals(TSelf)
  fullName.vb: Langly.Record(Of TSelf).Equals(TSelf)
  nameWithType: Record<TSelf>.Equals(TSelf)
  nameWithType.vb: Record(Of TSelf).Equals(TSelf)
- uid: Langly.Record`1.Equals(Langly.IEquals{`0})
  name: Equals(IEquals<TSelf>)
  href: api/Langly.Record-1.html#Langly_Record_1_Equals_Langly_IEquals__0__
  commentId: M:Langly.Record`1.Equals(Langly.IEquals{`0})
  name.vb: Equals(IEquals(Of TSelf))
  fullName: Langly.Record<TSelf>.Equals(Langly.IEquals<TSelf>)
  fullName.vb: Langly.Record(Of TSelf).Equals(Langly.IEquals(Of TSelf))
  nameWithType: Record<TSelf>.Equals(IEquals<TSelf>)
  nameWithType.vb: Record(Of TSelf).Equals(IEquals(Of TSelf))
- uid: Langly.Record`1.Equals*
  name: Equals
  href: api/Langly.Record-1.html#Langly_Record_1_Equals_
  commentId: Overload:Langly.Record`1.Equals
  isSpec: "True"
  fullName: Langly.Record<TSelf>.Equals
  fullName.vb: Langly.Record(Of TSelf).Equals
  nameWithType: Record<TSelf>.Equals
  nameWithType.vb: Record(Of TSelf).Equals
- uid: Langly.Record`1.op_Equality(Langly.IEquals{Langly.Record{`0}},Langly.Record{`0})
  name: Equality(IEquals<Record<TSelf>>, Record<TSelf>)
  href: api/Langly.Record-1.html#Langly_Record_1_op_Equality_Langly_IEquals_Langly_Record__0___Langly_Record__0__
  commentId: M:Langly.Record`1.op_Equality(Langly.IEquals{Langly.Record{`0}},Langly.Record{`0})
  name.vb: Equality(IEquals(Of Record(Of TSelf)), Record(Of TSelf))
  fullName: Langly.Record<TSelf>.Equality(Langly.IEquals<Langly.Record<TSelf>>, Langly.Record<TSelf>)
  fullName.vb: Langly.Record(Of TSelf).Equality(Langly.IEquals(Of Langly.Record(Of TSelf)), Langly.Record(Of TSelf))
  nameWithType: Record<TSelf>.Equality(IEquals<Record<TSelf>>, Record<TSelf>)
  nameWithType.vb: Record(Of TSelf).Equality(IEquals(Of Record(Of TSelf)), Record(Of TSelf))
- uid: Langly.Record`1.op_Equality(Langly.Record{`0},Langly.IEquals{Langly.Record{`0}})
  name: Equality(Record<TSelf>, IEquals<Record<TSelf>>)
  href: api/Langly.Record-1.html#Langly_Record_1_op_Equality_Langly_Record__0__Langly_IEquals_Langly_Record__0___
  commentId: M:Langly.Record`1.op_Equality(Langly.Record{`0},Langly.IEquals{Langly.Record{`0}})
  name.vb: Equality(Record(Of TSelf), IEquals(Of Record(Of TSelf)))
  fullName: Langly.Record<TSelf>.Equality(Langly.Record<TSelf>, Langly.IEquals<Langly.Record<TSelf>>)
  fullName.vb: Langly.Record(Of TSelf).Equality(Langly.Record(Of TSelf), Langly.IEquals(Of Langly.Record(Of TSelf)))
  nameWithType: Record<TSelf>.Equality(Record<TSelf>, IEquals<Record<TSelf>>)
  nameWithType.vb: Record(Of TSelf).Equality(Record(Of TSelf), IEquals(Of Record(Of TSelf)))
- uid: Langly.Record`1.op_Equality(Langly.Record{`0},Langly.Record{`0})
  name: Equality(Record<TSelf>, Record<TSelf>)
  href: api/Langly.Record-1.html#Langly_Record_1_op_Equality_Langly_Record__0__Langly_Record__0__
  commentId: M:Langly.Record`1.op_Equality(Langly.Record{`0},Langly.Record{`0})
  name.vb: Equality(Record(Of TSelf), Record(Of TSelf))
  fullName: Langly.Record<TSelf>.Equality(Langly.Record<TSelf>, Langly.Record<TSelf>)
  fullName.vb: Langly.Record(Of TSelf).Equality(Langly.Record(Of TSelf), Langly.Record(Of TSelf))
  nameWithType: Record<TSelf>.Equality(Record<TSelf>, Record<TSelf>)
  nameWithType.vb: Record(Of TSelf).Equality(Record(Of TSelf), Record(Of TSelf))
- uid: Langly.Record`1.op_Equality*
  name: Equality
  href: api/Langly.Record-1.html#Langly_Record_1_op_Equality_
  commentId: Overload:Langly.Record`1.op_Equality
  isSpec: "True"
  fullName: Langly.Record<TSelf>.Equality
  fullName.vb: Langly.Record(Of TSelf).Equality
  nameWithType: Record<TSelf>.Equality
  nameWithType.vb: Record(Of TSelf).Equality
- uid: Langly.Record`1.op_Inequality(Langly.IEquals{Langly.Record{`0}},Langly.Record{`0})
  name: Inequality(IEquals<Record<TSelf>>, Record<TSelf>)
  href: api/Langly.Record-1.html#Langly_Record_1_op_Inequality_Langly_IEquals_Langly_Record__0___Langly_Record__0__
  commentId: M:Langly.Record`1.op_Inequality(Langly.IEquals{Langly.Record{`0}},Langly.Record{`0})
  name.vb: Inequality(IEquals(Of Record(Of TSelf)), Record(Of TSelf))
  fullName: Langly.Record<TSelf>.Inequality(Langly.IEquals<Langly.Record<TSelf>>, Langly.Record<TSelf>)
  fullName.vb: Langly.Record(Of TSelf).Inequality(Langly.IEquals(Of Langly.Record(Of TSelf)), Langly.Record(Of TSelf))
  nameWithType: Record<TSelf>.Inequality(IEquals<Record<TSelf>>, Record<TSelf>)
  nameWithType.vb: Record(Of TSelf).Inequality(IEquals(Of Record(Of TSelf)), Record(Of TSelf))
- uid: Langly.Record`1.op_Inequality(Langly.Record{`0},Langly.IEquals{Langly.Record{`0}})
  name: Inequality(Record<TSelf>, IEquals<Record<TSelf>>)
  href: api/Langly.Record-1.html#Langly_Record_1_op_Inequality_Langly_Record__0__Langly_IEquals_Langly_Record__0___
  commentId: M:Langly.Record`1.op_Inequality(Langly.Record{`0},Langly.IEquals{Langly.Record{`0}})
  name.vb: Inequality(Record(Of TSelf), IEquals(Of Record(Of TSelf)))
  fullName: Langly.Record<TSelf>.Inequality(Langly.Record<TSelf>, Langly.IEquals<Langly.Record<TSelf>>)
  fullName.vb: Langly.Record(Of TSelf).Inequality(Langly.Record(Of TSelf), Langly.IEquals(Of Langly.Record(Of TSelf)))
  nameWithType: Record<TSelf>.Inequality(Record<TSelf>, IEquals<Record<TSelf>>)
  nameWithType.vb: Record(Of TSelf).Inequality(Record(Of TSelf), IEquals(Of Record(Of TSelf)))
- uid: Langly.Record`1.op_Inequality(Langly.Record{`0},Langly.Record{`0})
  name: Inequality(Record<TSelf>, Record<TSelf>)
  href: api/Langly.Record-1.html#Langly_Record_1_op_Inequality_Langly_Record__0__Langly_Record__0__
  commentId: M:Langly.Record`1.op_Inequality(Langly.Record{`0},Langly.Record{`0})
  name.vb: Inequality(Record(Of TSelf), Record(Of TSelf))
  fullName: Langly.Record<TSelf>.Inequality(Langly.Record<TSelf>, Langly.Record<TSelf>)
  fullName.vb: Langly.Record(Of TSelf).Inequality(Langly.Record(Of TSelf), Langly.Record(Of TSelf))
  nameWithType: Record<TSelf>.Inequality(Record<TSelf>, Record<TSelf>)
  nameWithType.vb: Record(Of TSelf).Inequality(Record(Of TSelf), Record(Of TSelf))
- uid: Langly.Record`1.op_Inequality*
  name: Inequality
  href: api/Langly.Record-1.html#Langly_Record_1_op_Inequality_
  commentId: Overload:Langly.Record`1.op_Inequality
  isSpec: "True"
  fullName: Langly.Record<TSelf>.Inequality
  fullName.vb: Langly.Record(Of TSelf).Inequality
  nameWithType: Record<TSelf>.Inequality
  nameWithType.vb: Record(Of TSelf).Inequality
- uid: Langly.Record`1.ToString
  name: ToString()
  href: api/Langly.Record-1.html#Langly_Record_1_ToString
  commentId: M:Langly.Record`1.ToString
  fullName: Langly.Record<TSelf>.ToString()
  fullName.vb: Langly.Record(Of TSelf).ToString()
  nameWithType: Record<TSelf>.ToString()
  nameWithType.vb: Record(Of TSelf).ToString()
- uid: Langly.Record`1.ToString*
  name: ToString
  href: api/Langly.Record-1.html#Langly_Record_1_ToString_
  commentId: Overload:Langly.Record`1.ToString
  isSpec: "True"
  fullName: Langly.Record<TSelf>.ToString
  fullName.vb: Langly.Record(Of TSelf).ToString
  nameWithType: Record<TSelf>.ToString
  nameWithType.vb: Record(Of TSelf).ToString
- uid: Langly.Text
  name: Text
  href: api/Langly.Text.html
  commentId: T:Langly.Text
  fullName: Langly.Text
  nameWithType: Text
- uid: Langly.Text.Enumerator
  name: Text.Enumerator
  href: api/Langly.Text.Enumerator.html
  commentId: T:Langly.Text.Enumerator
  fullName: Langly.Text.Enumerator
  nameWithType: Text.Enumerator
- uid: Langly.Text.Enumerator.Count
  name: Count
  href: api/Langly.Text.Enumerator.html#Langly_Text_Enumerator_Count
  commentId: P:Langly.Text.Enumerator.Count
  fullName: Langly.Text.Enumerator.Count
  nameWithType: Text.Enumerator.Count
- uid: Langly.Text.Enumerator.Count*
  name: Count
  href: api/Langly.Text.Enumerator.html#Langly_Text_Enumerator_Count_
  commentId: Overload:Langly.Text.Enumerator.Count
  isSpec: "True"
  fullName: Langly.Text.Enumerator.Count
  nameWithType: Text.Enumerator.Count
- uid: Langly.Text.Enumerator.Current
  name: Current
  href: api/Langly.Text.Enumerator.html#Langly_Text_Enumerator_Current
  commentId: P:Langly.Text.Enumerator.Current
  fullName: Langly.Text.Enumerator.Current
  nameWithType: Text.Enumerator.Current
- uid: Langly.Text.Enumerator.Current*
  name: Current
  href: api/Langly.Text.Enumerator.html#Langly_Text_Enumerator_Current_
  commentId: Overload:Langly.Text.Enumerator.Current
  isSpec: "True"
  fullName: Langly.Text.Enumerator.Current
  nameWithType: Text.Enumerator.Current
- uid: Langly.Text.Enumerator.MoveNext
  name: MoveNext()
  href: api/Langly.Text.Enumerator.html#Langly_Text_Enumerator_MoveNext
  commentId: M:Langly.Text.Enumerator.MoveNext
  fullName: Langly.Text.Enumerator.MoveNext()
  nameWithType: Text.Enumerator.MoveNext()
- uid: Langly.Text.Enumerator.MoveNext*
  name: MoveNext
  href: api/Langly.Text.Enumerator.html#Langly_Text_Enumerator_MoveNext_
  commentId: Overload:Langly.Text.Enumerator.MoveNext
  isSpec: "True"
  fullName: Langly.Text.Enumerator.MoveNext
  nameWithType: Text.Enumerator.MoveNext
- uid: Langly.Text.Enumerator.MovePrevious
  name: MovePrevious()
  href: api/Langly.Text.Enumerator.html#Langly_Text_Enumerator_MovePrevious
  commentId: M:Langly.Text.Enumerator.MovePrevious
  fullName: Langly.Text.Enumerator.MovePrevious()
  nameWithType: Text.Enumerator.MovePrevious()
- uid: Langly.Text.Enumerator.MovePrevious*
  name: MovePrevious
  href: api/Langly.Text.Enumerator.html#Langly_Text_Enumerator_MovePrevious_
  commentId: Overload:Langly.Text.Enumerator.MovePrevious
  isSpec: "True"
  fullName: Langly.Text.Enumerator.MovePrevious
  nameWithType: Text.Enumerator.MovePrevious
- uid: Langly.Text.Enumerator.ResetBeginning
  name: ResetBeginning()
  href: api/Langly.Text.Enumerator.html#Langly_Text_Enumerator_ResetBeginning
  commentId: M:Langly.Text.Enumerator.ResetBeginning
  fullName: Langly.Text.Enumerator.ResetBeginning()
  nameWithType: Text.Enumerator.ResetBeginning()
- uid: Langly.Text.Enumerator.ResetBeginning*
  name: ResetBeginning
  href: api/Langly.Text.Enumerator.html#Langly_Text_Enumerator_ResetBeginning_
  commentId: Overload:Langly.Text.Enumerator.ResetBeginning
  isSpec: "True"
  fullName: Langly.Text.Enumerator.ResetBeginning
  nameWithType: Text.Enumerator.ResetBeginning
- uid: Langly.Text.Enumerator.ResetEnding
  name: ResetEnding()
  href: api/Langly.Text.Enumerator.html#Langly_Text_Enumerator_ResetEnding
  commentId: M:Langly.Text.Enumerator.ResetEnding
  fullName: Langly.Text.Enumerator.ResetEnding()
  nameWithType: Text.Enumerator.ResetEnding()
- uid: Langly.Text.Enumerator.ResetEnding*
  name: ResetEnding
  href: api/Langly.Text.Enumerator.html#Langly_Text_Enumerator_ResetEnding_
  commentId: Overload:Langly.Text.Enumerator.ResetEnding
  isSpec: "True"
  fullName: Langly.Text.Enumerator.ResetEnding
  nameWithType: Text.Enumerator.ResetEnding
- uid: Langly.Text.GetEnumerator
  name: GetEnumerator()
  href: api/Langly.Text.html#Langly_Text_GetEnumerator
  commentId: M:Langly.Text.GetEnumerator
  fullName: Langly.Text.GetEnumerator()
  nameWithType: Text.GetEnumerator()
- uid: Langly.Text.GetEnumerator*
  name: GetEnumerator
  href: api/Langly.Text.html#Langly_Text_GetEnumerator_
  commentId: Overload:Langly.Text.GetEnumerator
  isSpec: "True"
  fullName: Langly.Text.GetEnumerator
  nameWithType: Text.GetEnumerator
- uid: Langly.Text.Reverse
  name: Reverse()
  href: api/Langly.Text.html#Langly_Text_Reverse
  commentId: M:Langly.Text.Reverse
  fullName: Langly.Text.Reverse()
  nameWithType: Text.Reverse()
- uid: Langly.Text.Reverse*
  name: Reverse
  href: api/Langly.Text.html#Langly_Text_Reverse_
  commentId: Overload:Langly.Text.Reverse
  isSpec: "True"
  fullName: Langly.Text.Reverse
  nameWithType: Text.Reverse
