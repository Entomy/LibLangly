### YamlMime:XRefMap
sorted: true
references:
- uid: Langly
  name: Langly
  href: api/Langly.html
  commentId: N:Langly
  fullName: Langly
  nameWithType: Langly
- uid: Langly.CoreExtensions
  name: CoreExtensions
  href: api/Langly.CoreExtensions.html
  commentId: T:Langly.CoreExtensions
  fullName: Langly.CoreExtensions
  nameWithType: CoreExtensions
- uid: Langly.DataStructures
  name: Langly.DataStructures
  href: api/Langly.DataStructures.html
  commentId: N:Langly.DataStructures
  fullName: Langly.DataStructures
  nameWithType: Langly.DataStructures
- uid: Langly.DataStructures.Association`2
  name: Association<TIndex, TElement>
  href: api/Langly.DataStructures.Association-2.html
  commentId: T:Langly.DataStructures.Association`2
  name.vb: Association(Of TIndex, TElement)
  fullName: Langly.DataStructures.Association<TIndex, TElement>
  fullName.vb: Langly.DataStructures.Association(Of TIndex, TElement)
  nameWithType: Association<TIndex, TElement>
  nameWithType.vb: Association(Of TIndex, TElement)
- uid: Langly.DataStructures.Association`2.#ctor(`0,`1)
  name: Association(TIndex, TElement)
  href: api/Langly.DataStructures.Association-2.html#Langly_DataStructures_Association_2__ctor__0__1_
  commentId: M:Langly.DataStructures.Association`2.#ctor(`0,`1)
  fullName: Langly.DataStructures.Association<TIndex, TElement>.Association(TIndex, TElement)
  fullName.vb: Langly.DataStructures.Association(Of TIndex, TElement).Association(TIndex, TElement)
  nameWithType: Association<TIndex, TElement>.Association(TIndex, TElement)
  nameWithType.vb: Association(Of TIndex, TElement).Association(TIndex, TElement)
- uid: Langly.DataStructures.Association`2.#ctor*
  name: Association
  href: api/Langly.DataStructures.Association-2.html#Langly_DataStructures_Association_2__ctor_
  commentId: Overload:Langly.DataStructures.Association`2.#ctor
  isSpec: "True"
  fullName: Langly.DataStructures.Association<TIndex, TElement>.Association
  fullName.vb: Langly.DataStructures.Association(Of TIndex, TElement).Association
  nameWithType: Association<TIndex, TElement>.Association
  nameWithType.vb: Association(Of TIndex, TElement).Association
- uid: Langly.DataStructures.Association`2.Element
  name: Element
  href: api/Langly.DataStructures.Association-2.html#Langly_DataStructures_Association_2_Element
  commentId: F:Langly.DataStructures.Association`2.Element
  fullName: Langly.DataStructures.Association<TIndex, TElement>.Element
  fullName.vb: Langly.DataStructures.Association(Of TIndex, TElement).Element
  nameWithType: Association<TIndex, TElement>.Element
  nameWithType.vb: Association(Of TIndex, TElement).Element
- uid: Langly.DataStructures.Association`2.Equals(Langly.DataStructures.Association{`0,`1})
  name: Equals(Association<TIndex, TElement>)
  href: api/Langly.DataStructures.Association-2.html#Langly_DataStructures_Association_2_Equals_Langly_DataStructures_Association__0__1__
  commentId: M:Langly.DataStructures.Association`2.Equals(Langly.DataStructures.Association{`0,`1})
  name.vb: Equals(Association(Of TIndex, TElement))
  fullName: Langly.DataStructures.Association<TIndex, TElement>.Equals(Langly.DataStructures.Association<TIndex, TElement>)
  fullName.vb: Langly.DataStructures.Association(Of TIndex, TElement).Equals(Langly.DataStructures.Association(Of TIndex, TElement))
  nameWithType: Association<TIndex, TElement>.Equals(Association<TIndex, TElement>)
  nameWithType.vb: Association(Of TIndex, TElement).Equals(Association(Of TIndex, TElement))
- uid: Langly.DataStructures.Association`2.Equals*
  name: Equals
  href: api/Langly.DataStructures.Association-2.html#Langly_DataStructures_Association_2_Equals_
  commentId: Overload:Langly.DataStructures.Association`2.Equals
  isSpec: "True"
  fullName: Langly.DataStructures.Association<TIndex, TElement>.Equals
  fullName.vb: Langly.DataStructures.Association(Of TIndex, TElement).Equals
  nameWithType: Association<TIndex, TElement>.Equals
  nameWithType.vb: Association(Of TIndex, TElement).Equals
- uid: Langly.DataStructures.Association`2.GetHashCode
  name: GetHashCode()
  href: api/Langly.DataStructures.Association-2.html#Langly_DataStructures_Association_2_GetHashCode
  commentId: M:Langly.DataStructures.Association`2.GetHashCode
  fullName: Langly.DataStructures.Association<TIndex, TElement>.GetHashCode()
  fullName.vb: Langly.DataStructures.Association(Of TIndex, TElement).GetHashCode()
  nameWithType: Association<TIndex, TElement>.GetHashCode()
  nameWithType.vb: Association(Of TIndex, TElement).GetHashCode()
- uid: Langly.DataStructures.Association`2.GetHashCode*
  name: GetHashCode
  href: api/Langly.DataStructures.Association-2.html#Langly_DataStructures_Association_2_GetHashCode_
  commentId: Overload:Langly.DataStructures.Association`2.GetHashCode
  isSpec: "True"
  fullName: Langly.DataStructures.Association<TIndex, TElement>.GetHashCode
  fullName.vb: Langly.DataStructures.Association(Of TIndex, TElement).GetHashCode
  nameWithType: Association<TIndex, TElement>.GetHashCode
  nameWithType.vb: Association(Of TIndex, TElement).GetHashCode
- uid: Langly.DataStructures.Association`2.Index
  name: Index
  href: api/Langly.DataStructures.Association-2.html#Langly_DataStructures_Association_2_Index
  commentId: F:Langly.DataStructures.Association`2.Index
  fullName: Langly.DataStructures.Association<TIndex, TElement>.Index
  fullName.vb: Langly.DataStructures.Association(Of TIndex, TElement).Index
  nameWithType: Association<TIndex, TElement>.Index
  nameWithType.vb: Association(Of TIndex, TElement).Index
- uid: Langly.DataStructures.Association`2.ToString
  name: ToString()
  href: api/Langly.DataStructures.Association-2.html#Langly_DataStructures_Association_2_ToString
  commentId: M:Langly.DataStructures.Association`2.ToString
  fullName: Langly.DataStructures.Association<TIndex, TElement>.ToString()
  fullName.vb: Langly.DataStructures.Association(Of TIndex, TElement).ToString()
  nameWithType: Association<TIndex, TElement>.ToString()
  nameWithType.vb: Association(Of TIndex, TElement).ToString()
- uid: Langly.DataStructures.Association`2.ToString*
  name: ToString
  href: api/Langly.DataStructures.Association-2.html#Langly_DataStructures_Association_2_ToString_
  commentId: Overload:Langly.DataStructures.Association`2.ToString
  isSpec: "True"
  fullName: Langly.DataStructures.Association<TIndex, TElement>.ToString
  fullName.vb: Langly.DataStructures.Association(Of TIndex, TElement).ToString
  nameWithType: Association<TIndex, TElement>.ToString
  nameWithType.vb: Association(Of TIndex, TElement).ToString
- uid: Langly.DataStructures.DataStructure`3
  name: DataStructure<TElement, TSelf, TEnumerator>
  href: api/Langly.DataStructures.DataStructure-3.html
  commentId: T:Langly.DataStructures.DataStructure`3
  name.vb: DataStructure(Of TElement, TSelf, TEnumerator)
  fullName: Langly.DataStructures.DataStructure<TElement, TSelf, TEnumerator>
  fullName.vb: Langly.DataStructures.DataStructure(Of TElement, TSelf, TEnumerator)
  nameWithType: DataStructure<TElement, TSelf, TEnumerator>
  nameWithType.vb: DataStructure(Of TElement, TSelf, TEnumerator)
- uid: Langly.DataStructures.DataStructure`3.GetEnumerator
  name: GetEnumerator()
  href: api/Langly.DataStructures.DataStructure-3.html#Langly_DataStructures_DataStructure_3_GetEnumerator
  commentId: M:Langly.DataStructures.DataStructure`3.GetEnumerator
  fullName: Langly.DataStructures.DataStructure<TElement, TSelf, TEnumerator>.GetEnumerator()
  fullName.vb: Langly.DataStructures.DataStructure(Of TElement, TSelf, TEnumerator).GetEnumerator()
  nameWithType: DataStructure<TElement, TSelf, TEnumerator>.GetEnumerator()
  nameWithType.vb: DataStructure(Of TElement, TSelf, TEnumerator).GetEnumerator()
- uid: Langly.DataStructures.DataStructure`3.GetEnumerator*
  name: GetEnumerator
  href: api/Langly.DataStructures.DataStructure-3.html#Langly_DataStructures_DataStructure_3_GetEnumerator_
  commentId: Overload:Langly.DataStructures.DataStructure`3.GetEnumerator
  isSpec: "True"
  fullName: Langly.DataStructures.DataStructure<TElement, TSelf, TEnumerator>.GetEnumerator
  fullName.vb: Langly.DataStructures.DataStructure(Of TElement, TSelf, TEnumerator).GetEnumerator
  nameWithType: DataStructure<TElement, TSelf, TEnumerator>.GetEnumerator
  nameWithType.vb: DataStructure(Of TElement, TSelf, TEnumerator).GetEnumerator
- uid: Langly.DataStructures.DataStructure`4
  name: DataStructure<TIndex, TElement, TSelf, TEnumerator>
  href: api/Langly.DataStructures.DataStructure-4.html
  commentId: T:Langly.DataStructures.DataStructure`4
  name.vb: DataStructure(Of TIndex, TElement, TSelf, TEnumerator)
  fullName: Langly.DataStructures.DataStructure<TIndex, TElement, TSelf, TEnumerator>
  fullName.vb: Langly.DataStructures.DataStructure(Of TIndex, TElement, TSelf, TEnumerator)
  nameWithType: DataStructure<TIndex, TElement, TSelf, TEnumerator>
  nameWithType.vb: DataStructure(Of TIndex, TElement, TSelf, TEnumerator)
- uid: Langly.DataStructures.DataStructure`4.GetEnumerator
  name: GetEnumerator()
  href: api/Langly.DataStructures.DataStructure-4.html#Langly_DataStructures_DataStructure_4_GetEnumerator
  commentId: M:Langly.DataStructures.DataStructure`4.GetEnumerator
  fullName: Langly.DataStructures.DataStructure<TIndex, TElement, TSelf, TEnumerator>.GetEnumerator()
  fullName.vb: Langly.DataStructures.DataStructure(Of TIndex, TElement, TSelf, TEnumerator).GetEnumerator()
  nameWithType: DataStructure<TIndex, TElement, TSelf, TEnumerator>.GetEnumerator()
  nameWithType.vb: DataStructure(Of TIndex, TElement, TSelf, TEnumerator).GetEnumerator()
- uid: Langly.DataStructures.DataStructure`4.GetEnumerator*
  name: GetEnumerator
  href: api/Langly.DataStructures.DataStructure-4.html#Langly_DataStructures_DataStructure_4_GetEnumerator_
  commentId: Overload:Langly.DataStructures.DataStructure`4.GetEnumerator
  isSpec: "True"
  fullName: Langly.DataStructures.DataStructure<TIndex, TElement, TSelf, TEnumerator>.GetEnumerator
  fullName.vb: Langly.DataStructures.DataStructure(Of TIndex, TElement, TSelf, TEnumerator).GetEnumerator
  nameWithType: DataStructure<TIndex, TElement, TSelf, TEnumerator>.GetEnumerator
  nameWithType.vb: DataStructure(Of TIndex, TElement, TSelf, TEnumerator).GetEnumerator
- uid: Langly.IEnumerator`1
  name: IEnumerator<TElement>
  href: api/Langly.IEnumerator-1.html
  commentId: T:Langly.IEnumerator`1
  name.vb: IEnumerator(Of TElement)
  fullName: Langly.IEnumerator<TElement>
  fullName.vb: Langly.IEnumerator(Of TElement)
  nameWithType: IEnumerator<TElement>
  nameWithType.vb: IEnumerator(Of TElement)
- uid: Langly.IEnumerator`1.System#Collections#IEnumerator#Current
  name: IEnumerator.Current
  href: api/Langly.IEnumerator-1.html#Langly_IEnumerator_1_System_Collections_IEnumerator_Current
  commentId: P:Langly.IEnumerator`1.System#Collections#IEnumerator#Current
  name.vb: System.Collections.IEnumerator.Current
  fullName: Langly.IEnumerator<TElement>.System.Collections.IEnumerator.Current
  fullName.vb: Langly.IEnumerator(Of TElement).System.Collections.IEnumerator.Current
  nameWithType: IEnumerator<TElement>.IEnumerator.Current
  nameWithType.vb: IEnumerator(Of TElement).System.Collections.IEnumerator.Current
- uid: Langly.IEnumerator`1.System#Collections#IEnumerator#Current*
  name: IEnumerator.Current
  href: api/Langly.IEnumerator-1.html#Langly_IEnumerator_1_System_Collections_IEnumerator_Current_
  commentId: Overload:Langly.IEnumerator`1.System#Collections#IEnumerator#Current
  isSpec: "True"
  name.vb: System.Collections.IEnumerator.Current
  fullName: Langly.IEnumerator<TElement>.System.Collections.IEnumerator.Current
  fullName.vb: Langly.IEnumerator(Of TElement).System.Collections.IEnumerator.Current
  nameWithType: IEnumerator<TElement>.IEnumerator.Current
  nameWithType.vb: IEnumerator(Of TElement).System.Collections.IEnumerator.Current
- uid: Langly.IEnumerator`1.System#IDisposable#Dispose
  name: IDisposable.Dispose()
  href: api/Langly.IEnumerator-1.html#Langly_IEnumerator_1_System_IDisposable_Dispose
  commentId: M:Langly.IEnumerator`1.System#IDisposable#Dispose
  name.vb: System.IDisposable.Dispose()
  fullName: Langly.IEnumerator<TElement>.System.IDisposable.Dispose()
  fullName.vb: Langly.IEnumerator(Of TElement).System.IDisposable.Dispose()
  nameWithType: IEnumerator<TElement>.IDisposable.Dispose()
  nameWithType.vb: IEnumerator(Of TElement).System.IDisposable.Dispose()
- uid: Langly.IEnumerator`1.System#IDisposable#Dispose*
  name: IDisposable.Dispose
  href: api/Langly.IEnumerator-1.html#Langly_IEnumerator_1_System_IDisposable_Dispose_
  commentId: Overload:Langly.IEnumerator`1.System#IDisposable#Dispose
  isSpec: "True"
  name.vb: System.IDisposable.Dispose
  fullName: Langly.IEnumerator<TElement>.System.IDisposable.Dispose
  fullName.vb: Langly.IEnumerator(Of TElement).System.IDisposable.Dispose
  nameWithType: IEnumerator<TElement>.IDisposable.Dispose
  nameWithType.vb: IEnumerator(Of TElement).System.IDisposable.Dispose
- uid: Langly.IEquals`1
  name: IEquals<TElement>
  href: api/Langly.IEquals-1.html
  commentId: T:Langly.IEquals`1
  name.vb: IEquals(Of TElement)
  fullName: Langly.IEquals<TElement>
  fullName.vb: Langly.IEquals(Of TElement)
  nameWithType: IEquals<TElement>
  nameWithType.vb: IEquals(Of TElement)
- uid: Langly.ISequence`2
  name: ISequence<TElement, TEnumerator>
  href: api/Langly.ISequence-2.html
  commentId: T:Langly.ISequence`2
  name.vb: ISequence(Of TElement, TEnumerator)
  fullName: Langly.ISequence<TElement, TEnumerator>
  fullName.vb: Langly.ISequence(Of TElement, TEnumerator)
  nameWithType: ISequence<TElement, TEnumerator>
  nameWithType.vb: ISequence(Of TElement, TEnumerator)
- uid: Langly.ISequence`2.GetEnumerator
  name: GetEnumerator()
  href: api/Langly.ISequence-2.html#Langly_ISequence_2_GetEnumerator
  commentId: M:Langly.ISequence`2.GetEnumerator
  fullName: Langly.ISequence<TElement, TEnumerator>.GetEnumerator()
  fullName.vb: Langly.ISequence(Of TElement, TEnumerator).GetEnumerator()
  nameWithType: ISequence<TElement, TEnumerator>.GetEnumerator()
  nameWithType.vb: ISequence(Of TElement, TEnumerator).GetEnumerator()
- uid: Langly.ISequence`2.GetEnumerator*
  name: GetEnumerator
  href: api/Langly.ISequence-2.html#Langly_ISequence_2_GetEnumerator_
  commentId: Overload:Langly.ISequence`2.GetEnumerator
  isSpec: "True"
  fullName: Langly.ISequence<TElement, TEnumerator>.GetEnumerator
  fullName.vb: Langly.ISequence(Of TElement, TEnumerator).GetEnumerator
  nameWithType: ISequence<TElement, TEnumerator>.GetEnumerator
  nameWithType.vb: ISequence(Of TElement, TEnumerator).GetEnumerator
- uid: Langly.ISequence`2.System#Collections#Generic#IEnumerable{TElement}#GetEnumerator
  name: IEnumerable<TElement>.GetEnumerator()
  href: api/Langly.ISequence-2.html#Langly_ISequence_2_System_Collections_Generic_IEnumerable_TElement__GetEnumerator
  commentId: M:Langly.ISequence`2.System#Collections#Generic#IEnumerable{TElement}#GetEnumerator
  name.vb: System.Collections.Generic.IEnumerable<TElement>.GetEnumerator()
  fullName: Langly.ISequence<TElement, TEnumerator>.System.Collections.Generic.IEnumerable<TElement>.GetEnumerator()
  fullName.vb: Langly.ISequence(Of TElement, TEnumerator).System.Collections.Generic.IEnumerable<TElement>.GetEnumerator()
  nameWithType: ISequence<TElement, TEnumerator>.IEnumerable<TElement>.GetEnumerator()
  nameWithType.vb: ISequence(Of TElement, TEnumerator).System.Collections.Generic.IEnumerable<TElement>.GetEnumerator()
- uid: Langly.ISequence`2.System#Collections#Generic#IEnumerable{TElement}#GetEnumerator*
  name: IEnumerable<TElement>.GetEnumerator
  href: api/Langly.ISequence-2.html#Langly_ISequence_2_System_Collections_Generic_IEnumerable_TElement__GetEnumerator_
  commentId: Overload:Langly.ISequence`2.System#Collections#Generic#IEnumerable{TElement}#GetEnumerator
  isSpec: "True"
  name.vb: System.Collections.Generic.IEnumerable<TElement>.GetEnumerator
  fullName: Langly.ISequence<TElement, TEnumerator>.System.Collections.Generic.IEnumerable<TElement>.GetEnumerator
  fullName.vb: Langly.ISequence(Of TElement, TEnumerator).System.Collections.Generic.IEnumerable<TElement>.GetEnumerator
  nameWithType: ISequence<TElement, TEnumerator>.IEnumerable<TElement>.GetEnumerator
  nameWithType.vb: ISequence(Of TElement, TEnumerator).System.Collections.Generic.IEnumerable<TElement>.GetEnumerator
- uid: Langly.ISequence`2.System#Collections#IEnumerable#GetEnumerator
  name: IEnumerable.GetEnumerator()
  href: api/Langly.ISequence-2.html#Langly_ISequence_2_System_Collections_IEnumerable_GetEnumerator
  commentId: M:Langly.ISequence`2.System#Collections#IEnumerable#GetEnumerator
  name.vb: System.Collections.IEnumerable.GetEnumerator()
  fullName: Langly.ISequence<TElement, TEnumerator>.System.Collections.IEnumerable.GetEnumerator()
  fullName.vb: Langly.ISequence(Of TElement, TEnumerator).System.Collections.IEnumerable.GetEnumerator()
  nameWithType: ISequence<TElement, TEnumerator>.IEnumerable.GetEnumerator()
  nameWithType.vb: ISequence(Of TElement, TEnumerator).System.Collections.IEnumerable.GetEnumerator()
- uid: Langly.ISequence`2.System#Collections#IEnumerable#GetEnumerator*
  name: IEnumerable.GetEnumerator
  href: api/Langly.ISequence-2.html#Langly_ISequence_2_System_Collections_IEnumerable_GetEnumerator_
  commentId: Overload:Langly.ISequence`2.System#Collections#IEnumerable#GetEnumerator
  isSpec: "True"
  name.vb: System.Collections.IEnumerable.GetEnumerator
  fullName: Langly.ISequence<TElement, TEnumerator>.System.Collections.IEnumerable.GetEnumerator
  fullName.vb: Langly.ISequence(Of TElement, TEnumerator).System.Collections.IEnumerable.GetEnumerator
  nameWithType: ISequence<TElement, TEnumerator>.IEnumerable.GetEnumerator
  nameWithType.vb: ISequence(Of TElement, TEnumerator).System.Collections.IEnumerable.GetEnumerator
- uid: Langly.Object
  name: Object
  href: api/Langly.Object.html
  commentId: T:Langly.Object
  fullName: Langly.Object
  nameWithType: Object
- uid: Langly.Object.Equals(Langly.Object)
  name: Equals(Object)
  href: api/Langly.Object.html#Langly_Object_Equals_Langly_Object_
  commentId: M:Langly.Object.Equals(Langly.Object)
  fullName: Langly.Object.Equals(Langly.Object)
  nameWithType: Object.Equals(Object)
- uid: Langly.Object.Equals(Langly.Object,Langly.Object)
  name: Equals(Object, Object)
  href: api/Langly.Object.html#Langly_Object_Equals_Langly_Object_Langly_Object_
  commentId: M:Langly.Object.Equals(Langly.Object,Langly.Object)
  fullName: Langly.Object.Equals(Langly.Object, Langly.Object)
  nameWithType: Object.Equals(Object, Object)
- uid: Langly.Object.Equals(System.Object)
  name: Equals(Object)
  href: api/Langly.Object.html#Langly_Object_Equals_System_Object_
  commentId: M:Langly.Object.Equals(System.Object)
  fullName: Langly.Object.Equals(System.Object)
  nameWithType: Object.Equals(Object)
- uid: Langly.Object.Equals*
  name: Equals
  href: api/Langly.Object.html#Langly_Object_Equals_
  commentId: Overload:Langly.Object.Equals
  isSpec: "True"
  fullName: Langly.Object.Equals
  nameWithType: Object.Equals
- uid: Langly.Object.GetHashCode
  name: GetHashCode()
  href: api/Langly.Object.html#Langly_Object_GetHashCode
  commentId: M:Langly.Object.GetHashCode
  fullName: Langly.Object.GetHashCode()
  nameWithType: Object.GetHashCode()
- uid: Langly.Object.GetHashCode*
  name: GetHashCode
  href: api/Langly.Object.html#Langly_Object_GetHashCode_
  commentId: Overload:Langly.Object.GetHashCode
  isSpec: "True"
  fullName: Langly.Object.GetHashCode
  nameWithType: Object.GetHashCode
- uid: Langly.Object.op_Equality(Langly.Object,Langly.Object)
  name: Equality(Object, Object)
  href: api/Langly.Object.html#Langly_Object_op_Equality_Langly_Object_Langly_Object_
  commentId: M:Langly.Object.op_Equality(Langly.Object,Langly.Object)
  fullName: Langly.Object.Equality(Langly.Object, Langly.Object)
  nameWithType: Object.Equality(Object, Object)
- uid: Langly.Object.op_Equality*
  name: Equality
  href: api/Langly.Object.html#Langly_Object_op_Equality_
  commentId: Overload:Langly.Object.op_Equality
  isSpec: "True"
  fullName: Langly.Object.Equality
  nameWithType: Object.Equality
- uid: Langly.Object.op_Inequality(Langly.Object,Langly.Object)
  name: Inequality(Object, Object)
  href: api/Langly.Object.html#Langly_Object_op_Inequality_Langly_Object_Langly_Object_
  commentId: M:Langly.Object.op_Inequality(Langly.Object,Langly.Object)
  fullName: Langly.Object.Inequality(Langly.Object, Langly.Object)
  nameWithType: Object.Inequality(Object, Object)
- uid: Langly.Object.op_Inequality*
  name: Inequality
  href: api/Langly.Object.html#Langly_Object_op_Inequality_
  commentId: Overload:Langly.Object.op_Inequality
  isSpec: "True"
  fullName: Langly.Object.Inequality
  nameWithType: Object.Inequality
- uid: Langly.Object.ToString
  name: ToString()
  href: api/Langly.Object.html#Langly_Object_ToString
  commentId: M:Langly.Object.ToString
  fullName: Langly.Object.ToString()
  nameWithType: Object.ToString()
- uid: Langly.Object.ToString*
  name: ToString
  href: api/Langly.Object.html#Langly_Object_ToString_
  commentId: Overload:Langly.Object.ToString
  isSpec: "True"
  fullName: Langly.Object.ToString
  nameWithType: Object.ToString
- uid: Langly.Record`1
  name: Record<TSelf>
  href: api/Langly.Record-1.html
  commentId: T:Langly.Record`1
  name.vb: Record(Of TSelf)
  fullName: Langly.Record<TSelf>
  fullName.vb: Langly.Record(Of TSelf)
  nameWithType: Record<TSelf>
  nameWithType.vb: Record(Of TSelf)
- uid: Langly.Record`1.Equals(`0)
  name: Equals(TSelf)
  href: api/Langly.Record-1.html#Langly_Record_1_Equals__0_
  commentId: M:Langly.Record`1.Equals(`0)
  fullName: Langly.Record<TSelf>.Equals(TSelf)
  fullName.vb: Langly.Record(Of TSelf).Equals(TSelf)
  nameWithType: Record<TSelf>.Equals(TSelf)
  nameWithType.vb: Record(Of TSelf).Equals(TSelf)
- uid: Langly.Record`1.Equals(Langly.IEquals{`0})
  name: Equals(IEquals<TSelf>)
  href: api/Langly.Record-1.html#Langly_Record_1_Equals_Langly_IEquals__0__
  commentId: M:Langly.Record`1.Equals(Langly.IEquals{`0})
  name.vb: Equals(IEquals(Of TSelf))
  fullName: Langly.Record<TSelf>.Equals(Langly.IEquals<TSelf>)
  fullName.vb: Langly.Record(Of TSelf).Equals(Langly.IEquals(Of TSelf))
  nameWithType: Record<TSelf>.Equals(IEquals<TSelf>)
  nameWithType.vb: Record(Of TSelf).Equals(IEquals(Of TSelf))
- uid: Langly.Record`1.Equals*
  name: Equals
  href: api/Langly.Record-1.html#Langly_Record_1_Equals_
  commentId: Overload:Langly.Record`1.Equals
  isSpec: "True"
  fullName: Langly.Record<TSelf>.Equals
  fullName.vb: Langly.Record(Of TSelf).Equals
  nameWithType: Record<TSelf>.Equals
  nameWithType.vb: Record(Of TSelf).Equals
- uid: Langly.Record`1.op_Equality(Langly.IEquals{Langly.Record{`0}},Langly.Record{`0})
  name: Equality(IEquals<Record<TSelf>>, Record<TSelf>)
  href: api/Langly.Record-1.html#Langly_Record_1_op_Equality_Langly_IEquals_Langly_Record__0___Langly_Record__0__
  commentId: M:Langly.Record`1.op_Equality(Langly.IEquals{Langly.Record{`0}},Langly.Record{`0})
  name.vb: Equality(IEquals(Of Record(Of TSelf)), Record(Of TSelf))
  fullName: Langly.Record<TSelf>.Equality(Langly.IEquals<Langly.Record<TSelf>>, Langly.Record<TSelf>)
  fullName.vb: Langly.Record(Of TSelf).Equality(Langly.IEquals(Of Langly.Record(Of TSelf)), Langly.Record(Of TSelf))
  nameWithType: Record<TSelf>.Equality(IEquals<Record<TSelf>>, Record<TSelf>)
  nameWithType.vb: Record(Of TSelf).Equality(IEquals(Of Record(Of TSelf)), Record(Of TSelf))
- uid: Langly.Record`1.op_Equality(Langly.Record{`0},Langly.IEquals{Langly.Record{`0}})
  name: Equality(Record<TSelf>, IEquals<Record<TSelf>>)
  href: api/Langly.Record-1.html#Langly_Record_1_op_Equality_Langly_Record__0__Langly_IEquals_Langly_Record__0___
  commentId: M:Langly.Record`1.op_Equality(Langly.Record{`0},Langly.IEquals{Langly.Record{`0}})
  name.vb: Equality(Record(Of TSelf), IEquals(Of Record(Of TSelf)))
  fullName: Langly.Record<TSelf>.Equality(Langly.Record<TSelf>, Langly.IEquals<Langly.Record<TSelf>>)
  fullName.vb: Langly.Record(Of TSelf).Equality(Langly.Record(Of TSelf), Langly.IEquals(Of Langly.Record(Of TSelf)))
  nameWithType: Record<TSelf>.Equality(Record<TSelf>, IEquals<Record<TSelf>>)
  nameWithType.vb: Record(Of TSelf).Equality(Record(Of TSelf), IEquals(Of Record(Of TSelf)))
- uid: Langly.Record`1.op_Equality(Langly.Record{`0},Langly.Record{`0})
  name: Equality(Record<TSelf>, Record<TSelf>)
  href: api/Langly.Record-1.html#Langly_Record_1_op_Equality_Langly_Record__0__Langly_Record__0__
  commentId: M:Langly.Record`1.op_Equality(Langly.Record{`0},Langly.Record{`0})
  name.vb: Equality(Record(Of TSelf), Record(Of TSelf))
  fullName: Langly.Record<TSelf>.Equality(Langly.Record<TSelf>, Langly.Record<TSelf>)
  fullName.vb: Langly.Record(Of TSelf).Equality(Langly.Record(Of TSelf), Langly.Record(Of TSelf))
  nameWithType: Record<TSelf>.Equality(Record<TSelf>, Record<TSelf>)
  nameWithType.vb: Record(Of TSelf).Equality(Record(Of TSelf), Record(Of TSelf))
- uid: Langly.Record`1.op_Equality*
  name: Equality
  href: api/Langly.Record-1.html#Langly_Record_1_op_Equality_
  commentId: Overload:Langly.Record`1.op_Equality
  isSpec: "True"
  fullName: Langly.Record<TSelf>.Equality
  fullName.vb: Langly.Record(Of TSelf).Equality
  nameWithType: Record<TSelf>.Equality
  nameWithType.vb: Record(Of TSelf).Equality
- uid: Langly.Record`1.op_Inequality(Langly.IEquals{Langly.Record{`0}},Langly.Record{`0})
  name: Inequality(IEquals<Record<TSelf>>, Record<TSelf>)
  href: api/Langly.Record-1.html#Langly_Record_1_op_Inequality_Langly_IEquals_Langly_Record__0___Langly_Record__0__
  commentId: M:Langly.Record`1.op_Inequality(Langly.IEquals{Langly.Record{`0}},Langly.Record{`0})
  name.vb: Inequality(IEquals(Of Record(Of TSelf)), Record(Of TSelf))
  fullName: Langly.Record<TSelf>.Inequality(Langly.IEquals<Langly.Record<TSelf>>, Langly.Record<TSelf>)
  fullName.vb: Langly.Record(Of TSelf).Inequality(Langly.IEquals(Of Langly.Record(Of TSelf)), Langly.Record(Of TSelf))
  nameWithType: Record<TSelf>.Inequality(IEquals<Record<TSelf>>, Record<TSelf>)
  nameWithType.vb: Record(Of TSelf).Inequality(IEquals(Of Record(Of TSelf)), Record(Of TSelf))
- uid: Langly.Record`1.op_Inequality(Langly.Record{`0},Langly.IEquals{Langly.Record{`0}})
  name: Inequality(Record<TSelf>, IEquals<Record<TSelf>>)
  href: api/Langly.Record-1.html#Langly_Record_1_op_Inequality_Langly_Record__0__Langly_IEquals_Langly_Record__0___
  commentId: M:Langly.Record`1.op_Inequality(Langly.Record{`0},Langly.IEquals{Langly.Record{`0}})
  name.vb: Inequality(Record(Of TSelf), IEquals(Of Record(Of TSelf)))
  fullName: Langly.Record<TSelf>.Inequality(Langly.Record<TSelf>, Langly.IEquals<Langly.Record<TSelf>>)
  fullName.vb: Langly.Record(Of TSelf).Inequality(Langly.Record(Of TSelf), Langly.IEquals(Of Langly.Record(Of TSelf)))
  nameWithType: Record<TSelf>.Inequality(Record<TSelf>, IEquals<Record<TSelf>>)
  nameWithType.vb: Record(Of TSelf).Inequality(Record(Of TSelf), IEquals(Of Record(Of TSelf)))
- uid: Langly.Record`1.op_Inequality(Langly.Record{`0},Langly.Record{`0})
  name: Inequality(Record<TSelf>, Record<TSelf>)
  href: api/Langly.Record-1.html#Langly_Record_1_op_Inequality_Langly_Record__0__Langly_Record__0__
  commentId: M:Langly.Record`1.op_Inequality(Langly.Record{`0},Langly.Record{`0})
  name.vb: Inequality(Record(Of TSelf), Record(Of TSelf))
  fullName: Langly.Record<TSelf>.Inequality(Langly.Record<TSelf>, Langly.Record<TSelf>)
  fullName.vb: Langly.Record(Of TSelf).Inequality(Langly.Record(Of TSelf), Langly.Record(Of TSelf))
  nameWithType: Record<TSelf>.Inequality(Record<TSelf>, Record<TSelf>)
  nameWithType.vb: Record(Of TSelf).Inequality(Record(Of TSelf), Record(Of TSelf))
- uid: Langly.Record`1.op_Inequality*
  name: Inequality
  href: api/Langly.Record-1.html#Langly_Record_1_op_Inequality_
  commentId: Overload:Langly.Record`1.op_Inequality
  isSpec: "True"
  fullName: Langly.Record<TSelf>.Inequality
  fullName.vb: Langly.Record(Of TSelf).Inequality
  nameWithType: Record<TSelf>.Inequality
  nameWithType.vb: Record(Of TSelf).Inequality
- uid: Langly.Record`1.ToString
  name: ToString()
  href: api/Langly.Record-1.html#Langly_Record_1_ToString
  commentId: M:Langly.Record`1.ToString
  fullName: Langly.Record<TSelf>.ToString()
  fullName.vb: Langly.Record(Of TSelf).ToString()
  nameWithType: Record<TSelf>.ToString()
  nameWithType.vb: Record(Of TSelf).ToString()
- uid: Langly.Record`1.ToString*
  name: ToString
  href: api/Langly.Record-1.html#Langly_Record_1_ToString_
  commentId: Overload:Langly.Record`1.ToString
  isSpec: "True"
  fullName: Langly.Record<TSelf>.ToString
  fullName.vb: Langly.Record(Of TSelf).ToString
  nameWithType: Record<TSelf>.ToString
  nameWithType.vb: Record(Of TSelf).ToString
