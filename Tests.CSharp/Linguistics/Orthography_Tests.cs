using System;
using Xunit;
using static Langly.Linguistics.Language;
using static Langly.Linguistics.Script;

namespace Langly.Linguistics {
	public class OrthographyTests {
		[Theory]
		[InlineData('a', 'A', 'a')]
		[InlineData('A', 'A', 'a')]
		[InlineData('i', 'İ', 'i')]
		[InlineData('İ', 'İ', 'i')]
		[InlineData('ı', 'I', 'ı')]
		[InlineData('I', 'I', 'ı')]
		public void Casing_AzerbaijaniLatin(Char value, Char uppercase, Char lowercase) {
			Assert.Equal(uppercase, Azerbaijani[Latin].ToUpper(value));
			Assert.Equal(lowercase, Azerbaijani[Latin].ToLower(value));
		}

		[Theory]
		[InlineData('a', 'A', 'a')]
		[InlineData('A', 'A', 'a')]
		[InlineData('i', 'I', 'i')]
		[InlineData('I', 'I', 'i')]
		public void Casing_EnglishLatin(Char value, Char uppercase, Char lowercase) {
			Assert.Equal(uppercase, English[Latin].ToUpper(value));
			Assert.Equal(lowercase, English[Latin].ToLower(value));
		}

		[Theory]
		[InlineData('a', 'A', 'a')]
		[InlineData('A', 'A', 'a')]
		[InlineData('i', 'İ', 'i')]
		[InlineData('İ', 'İ', 'i')]
		[InlineData('ı', 'I', 'ı')]
		[InlineData('I', 'I', 'ı')]
		public void Casing_TurkishLatin(Char value, Char uppercase, Char lowercase) {
			Assert.Equal(uppercase, Turkish[Latin].ToUpper(value));
			Assert.Equal(lowercase, Turkish[Latin].ToLower(value));
		}

		[Theory]
		[InlineData('a', true)]
		[InlineData('b', true)]
		[InlineData('c', true)]
		[InlineData('ç', true)]
		[InlineData('d', true)]
		[InlineData('e', true)]
		[InlineData('ə', true)]
		[InlineData('f', true)]
		[InlineData('g', true)]
		[InlineData('ğ', true)]
		[InlineData('h', true)]
		[InlineData('x', true)]
		[InlineData('ı', true)]
		[InlineData('i', true)]
		[InlineData('j', true)]
		[InlineData('k', true)]
		[InlineData('q', true)]
		[InlineData('l', true)]
		[InlineData('m', true)]
		[InlineData('n', true)]
		[InlineData('o', true)]
		[InlineData('ö', true)]
		[InlineData('p', true)]
		[InlineData('r', true)]
		[InlineData('s', true)]
		[InlineData('ş', true)]
		[InlineData('t', true)]
		[InlineData('u', true)]
		[InlineData('ü', true)]
		[InlineData('v', true)]
		[InlineData('y', true)]
		[InlineData('z', true)]
		[InlineData('A', true)]
		[InlineData('B', true)]
		[InlineData('C', true)]
		[InlineData('Ç', true)]
		[InlineData('D', true)]
		[InlineData('E', true)]
		[InlineData('Ə', true)]
		[InlineData('F', true)]
		[InlineData('G', true)]
		[InlineData('Ğ', true)]
		[InlineData('H', true)]
		[InlineData('X', true)]
		[InlineData('I', true)]
		[InlineData('İ', true)]
		[InlineData('J', true)]
		[InlineData('K', true)]
		[InlineData('Q', true)]
		[InlineData('L', true)]
		[InlineData('M', true)]
		[InlineData('N', true)]
		[InlineData('O', true)]
		[InlineData('Ö', true)]
		[InlineData('P', true)]
		[InlineData('R', true)]
		[InlineData('S', true)]
		[InlineData('Ş', true)]
		[InlineData('T', true)]
		[InlineData('U', true)]
		[InlineData('Ü', true)]
		[InlineData('V', true)]
		[InlineData('Y', true)]
		[InlineData('Z', true)]
		[InlineData('0', true)]
		[InlineData('1', true)]
		[InlineData('2', true)]
		[InlineData('3', true)]
		[InlineData('4', true)]
		[InlineData('5', true)]
		[InlineData('6', true)]
		[InlineData('7', true)]
		[InlineData('8', true)]
		[InlineData('9', true)]
		[InlineData('@', false)]
		[InlineData('[', false)]
		[InlineData('/', false)]
		[InlineData(':', false)]
		[InlineData('з', false)]
		[InlineData('ж', false)]
		public void Contains_AzerbaijaniLatin(Char value, Boolean expected) => Assert.Equal(expected, Azerbaijani[Latin].Contains(value));

		[Theory]
		[InlineData('a', true)]
		[InlineData('b', true)]
		[InlineData('c', true)]
		[InlineData('d', true)]
		[InlineData('e', true)]
		[InlineData('f', true)]
		[InlineData('g', true)]
		[InlineData('h', true)]
		[InlineData('i', true)]
		[InlineData('j', true)]
		[InlineData('k', true)]
		[InlineData('l', true)]
		[InlineData('m', true)]
		[InlineData('n', true)]
		[InlineData('o', true)]
		[InlineData('p', true)]
		[InlineData('q', true)]
		[InlineData('r', true)]
		[InlineData('s', true)]
		[InlineData('t', true)]
		[InlineData('u', true)]
		[InlineData('v', true)]
		[InlineData('w', true)]
		[InlineData('x', true)]
		[InlineData('y', true)]
		[InlineData('z', true)]
		[InlineData('A', true)]
		[InlineData('Z', true)]
		[InlineData('0', true)]
		[InlineData('1', true)]
		[InlineData('2', true)]
		[InlineData('3', true)]
		[InlineData('4', true)]
		[InlineData('5', true)]
		[InlineData('6', true)]
		[InlineData('7', true)]
		[InlineData('8', true)]
		[InlineData('9', true)]
		[InlineData('@', false)]
		[InlineData('[', false)]
		[InlineData('/', false)]
		[InlineData(':', false)]
		[InlineData('з', false)]
		[InlineData('ж', false)]
		public void Contains_EnglishLatin(Char value, Boolean expected) => Assert.Equal(expected, English[Latin].Contains(value));

		[Theory]
		[InlineData('а', true)]
		[InlineData('б', true)]
		[InlineData('в', true)]
		[InlineData('г', true)]
		[InlineData('д', true)]
		[InlineData('е', true)]
		[InlineData('ё', true)]
		[InlineData('ж', true)]
		[InlineData('з', true)]
		[InlineData('и', true)]
		[InlineData('й', true)]
		[InlineData('к', true)]
		[InlineData('л', true)]
		[InlineData('м', true)]
		[InlineData('н', true)]
		[InlineData('о', true)]
		[InlineData('п', true)]
		[InlineData('р', true)]
		[InlineData('с', true)]
		[InlineData('т', true)]
		[InlineData('у', true)]
		[InlineData('ф', true)]
		[InlineData('х', true)]
		[InlineData('ц', true)]
		[InlineData('ч', true)]
		[InlineData('ш', true)]
		[InlineData('щ', true)]
		[InlineData('ъ', true)]
		[InlineData('ы', true)]
		[InlineData('ь', true)]
		[InlineData('э', true)]
		[InlineData('ю', true)]
		[InlineData('я', true)]
		[InlineData('А', true)]
		[InlineData('Б', true)]
		[InlineData('В', true)]
		[InlineData('Г', true)]
		[InlineData('Д', true)]
		[InlineData('Е', true)]
		[InlineData('Ё', true)]
		[InlineData('Ж', true)]
		[InlineData('З', true)]
		[InlineData('И', true)]
		[InlineData('Й', true)]
		[InlineData('К', true)]
		[InlineData('Л', true)]
		[InlineData('М', true)]
		[InlineData('Н', true)]
		[InlineData('О', true)]
		[InlineData('П', true)]
		[InlineData('Р', true)]
		[InlineData('С', true)]
		[InlineData('Т', true)]
		[InlineData('У', true)]
		[InlineData('Ф', true)]
		[InlineData('Х', true)]
		[InlineData('Ц', true)]
		[InlineData('Ч', true)]
		[InlineData('Ш', true)]
		[InlineData('Щ', true)]
		[InlineData('Ъ', true)]
		[InlineData('Ы', true)]
		[InlineData('Ь', true)]
		[InlineData('Э', true)]
		[InlineData('Ю', true)]
		[InlineData('Я', true)]
		[InlineData('0', true)]
		[InlineData('1', true)]
		[InlineData('2', true)]
		[InlineData('3', true)]
		[InlineData('4', true)]
		[InlineData('5', true)]
		[InlineData('6', true)]
		[InlineData('7', true)]
		[InlineData('8', true)]
		[InlineData('9', true)]
		public void Contains_RussianCyrillic(Char value, Boolean expected) => Assert.Equal(expected, Russian[Cyrillic].Contains(value));

		[Theory]
		[InlineData('a', true)]
		[InlineData('b', true)]
		[InlineData('c', true)]
		[InlineData('ç', true)]
		[InlineData('d', true)]
		[InlineData('e', true)]
		[InlineData('f', true)]
		[InlineData('g', true)]
		[InlineData('ğ', true)]
		[InlineData('h', true)]
		[InlineData('ı', true)]
		[InlineData('i', true)]
		[InlineData('j', true)]
		[InlineData('k', true)]
		[InlineData('l', true)]
		[InlineData('m', true)]
		[InlineData('n', true)]
		[InlineData('o', true)]
		[InlineData('ö', true)]
		[InlineData('p', true)]
		[InlineData('r', true)]
		[InlineData('s', true)]
		[InlineData('ş', true)]
		[InlineData('t', true)]
		[InlineData('u', true)]
		[InlineData('ü', true)]
		[InlineData('v', true)]
		[InlineData('y', true)]
		[InlineData('z', true)]
		[InlineData('q', false)] // Used in nativized-loanwords, but are not considered proper letters
		[InlineData('w', false)] // Used in nativized-loanwords, but are not considered proper letters
		[InlineData('x', false)] // Used in nativized-loanwords, but are not considered proper letters
		[InlineData('A', true)]
		[InlineData('B', true)]
		[InlineData('C', true)]
		[InlineData('Ç', true)]
		[InlineData('D', true)]
		[InlineData('E', true)]
		[InlineData('F', true)]
		[InlineData('G', true)]
		[InlineData('Ğ', true)]
		[InlineData('H', true)]
		[InlineData('I', true)]
		[InlineData('İ', true)]
		[InlineData('J', true)]
		[InlineData('K', true)]
		[InlineData('L', true)]
		[InlineData('M', true)]
		[InlineData('N', true)]
		[InlineData('O', true)]
		[InlineData('Ö', true)]
		[InlineData('P', true)]
		[InlineData('R', true)]
		[InlineData('S', true)]
		[InlineData('Ş', true)]
		[InlineData('T', true)]
		[InlineData('U', true)]
		[InlineData('Ü', true)]
		[InlineData('V', true)]
		[InlineData('Y', true)]
		[InlineData('Z', true)]
		[InlineData('Q', false)] // Used in nativized-loanwords, but are not considered proper letters
		[InlineData('W', false)] // Used in nativized-loanwords, but are not considered proper letters
		[InlineData('X', false)] // Used in nativized-loanwords, but are not considered proper letters
		[InlineData('0', true)]
		[InlineData('1', true)]
		[InlineData('2', true)]
		[InlineData('3', true)]
		[InlineData('4', true)]
		[InlineData('5', true)]
		[InlineData('6', true)]
		[InlineData('7', true)]
		[InlineData('8', true)]
		[InlineData('9', true)]
		[InlineData('@', false)]
		[InlineData('[', false)]
		[InlineData('/', false)]
		[InlineData(':', false)]
		[InlineData('з', false)]
		[InlineData('ж', false)]
		public void Contains_TurkishLatin(Char value, Boolean expected) => Assert.Equal(expected, Turkish[Latin].Contains(value));
	}
}
